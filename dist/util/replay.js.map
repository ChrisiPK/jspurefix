{"version":3,"file":"replay.js","sourceRoot":"","sources":["../../src/util/replay.ts"],"names":[],"mappings":";;;AACA,4CAAyC;AAEzC,kDAAmD;AAEnD,MAAa,YAAY;IACvB,YAA6B,MAAoB;QAApB,WAAM,GAAN,MAAM,CAAc;IACjD,CAAC;IAED,aAAa,CAAE,UAAkB;QAC/B,OAAO,IAAI,OAAO,CAAY,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;YAC/C,IAAI;gBACF,MAAM,GAAG,GAAc,EAAE,CAAA;gBACzB,MAAM,SAAS,GAAiB,IAAI,sBAAY,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,sBAAU,CAAC,UAAU,CAAC,CAAC,CAAA;gBAC5F,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC,OAAe,EAAE,CAAU,EAAE,EAAE;oBAE3D,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,CAAA;gBACrB,CAAC,CAAC,CAAA;gBACF,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;oBAChC,MAAM,CAAC,GAAG,CAAC,CAAA;gBACb,CAAC,CAAC,CAAA;gBACF,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE;oBACnC,MAAM,CAAC,CAAC,CAAC,CAAA;gBACX,CAAC,CAAC,CAAA;aACH;YAAC,OAAO,CAAC,EAAE;gBACV,MAAM,CAAC,CAAC,CAAC,CAAA;aACV;QACH,CAAC,CAAC,CAAA;IACJ,CAAC;CACF;AAxBD,oCAwBC","sourcesContent":["import { MsgView } from '../buffer'\nimport { FileDuplex } from '../transport'\nimport { IJsFixConfig } from '../config'\nimport { MsgTransport } from '../transport/factory'\n\nexport class FileReplayer {\n  constructor (public readonly config: IJsFixConfig) {\n  }\n\n  replayFixFile (replayFile: string): Promise<MsgView[]> {\n    return new Promise<MsgView[]>((accept, reject) => {\n      try {\n        const arr: MsgView[] = []\n        const transport: MsgTransport = new MsgTransport(1, this.config, new FileDuplex(replayFile))\n        transport.receiver.on('msg', (msgType: string, m: MsgView) => {\n          // note must clone if a view is to be saved after this call\n          arr.push(m.clone())\n        })\n        transport.receiver.on('end', () => {\n          accept(arr)\n        })\n        transport.receiver.on('error', (e) => {\n          reject(e)\n        })\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n}\n"]}