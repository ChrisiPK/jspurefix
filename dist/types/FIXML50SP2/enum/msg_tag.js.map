{"version":3,"file":"msg_tag.js","sourceRoot":"","sources":["../../../../src/types/FIXML50SP2/enum/msg_tag.ts"],"names":[],"mappings":"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","sourcesContent":["export enum MsgTag {\n/*\n***************************************************************\n* Account mnemonic as agreed between buy and sell sides, e.g. *\n* broker and institution or investor/intermediary and fund    *\n* manager.                                                    *\n***************************************************************\n*/\n  Account = 1,\n/*\n*************************************************\n* Unique identifier of advertisement message.   *\n* (Prior to FIX 4.1 this field was of type int) *\n*************************************************\n*/\n  AdvId = 2,\n/*\n*****************************************************\n* Reference identifier used with CANCEL and REPLACE *\n* transaction types.                                *\n* (Prior to FIX 4.1 this field was of type int)     *\n*****************************************************\n*/\n  AdvRefID = 3,\n/*\n*************************************\n* Broker's side of advertised trade *\n*************************************\n*/\n  AdvSide = 4,\n/*\n*****************************************************\n* Identifies advertisement message transaction type *\n*****************************************************\n*/\n  AdvTransType = 5,\n/*\n***************************************************************\n* Calculated average price of all fills on this order.        *\n* For Fixed Income trades AvgPx is always expressed as        *\n* percent-of-par, regardless of the PriceType (423) of LastPx *\n* (31). I.e., AvgPx will contain an average of percent-of-par *\n* values (see LastParPx (669)) for issues traded in Yield,    *\n* Spread or Discount.                                         *\n***************************************************************\n*/\n  AvgPx = 6,\n/*\n***************************************************************\n* Unique identifier for Order as assigned by the buy-side     *\n* (institution, broker, intermediary etc.) (identified by     *\n* SenderCompID (49) or OnBehalfOfCompID (5) as appropriate).  *\n* Uniqueness must be guaranteed within a single trading day.  *\n* Firms, particularly those which electronically submit       *\n* multi-day orders, trade globally or throughout market close *\n* periods, should ensure uniqueness across days, for example  *\n* by embedding a date within the ClOrdID field.               *\n***************************************************************\n*/\n  ClOrdID = 11,\n/*\n***************************************************************\n* Commission. Note if CommType (13) is percentage, Commission *\n* of 5% should be represented as .05.                         *\n***************************************************************\n*/\n  Commission = 12,\n/*\n***********************************************************\n* Specifies the basis or unit used to calculate the total *\n* commission based on the rate.                           *\n***********************************************************\n*/\n  CommType = 13,\n/*\n**************************************************\n* Total quantity (e.g. number of shares) filled. *\n* (Prior to FIX 4.2 this field was of type int)  *\n**************************************************\n*/\n  CumQty = 14,\n/*\n****************************************************************\n* Identifies currency used for price. Absence of this field is *\n* interpreted as the default for the security. It is           *\n* recommended that systems provide the currency value whenever *\n* possible. See \"Appendix 6-A: Valid Currency Codes\" for       *\n* information on obtaining valid values.                       *\n****************************************************************\n*/\n  Currency = 15,\n/*\n****************************************************************\n* Unique identifier of execution message as assigned by        *\n* sell-side (broker, exchange, ECN) (will be 0 (zero) for      *\n* ExecType (150)=I (Order Status)).                            *\n* Uniqueness must be guaranteed within a single trading day or *\n* the life of a multi-day order. Firms which accept multi-day  *\n* orders should consider embedding a date within the ExecID    *\n* field to assure uniqueness across days.                      *\n* (Prior to FIX 4.1 this field was of type int).               *\n****************************************************************\n*/\n  ExecID = 17,\n/*\n****************************************************************\n* Instructions for order handling on exchange trading floor.   *\n* If more than one instruction is applicable to an order, this *\n* field can contain multiple instructions separated by space.  *\n* *** SOME VALUES HAVE BEEN REPLACED - See \"Replaced Features  *\n* and Supported Approach\" *** (see Volume : \"Glossary\" for     *\n* value definitions)                                           *\n****************************************************************\n*/\n  ExecInst = 18,\n/*\n****************************************************************\n* Reference identifier used with Trade, Trade Cancel and Trade *\n* Correct execution types.                                     *\n* (Prior to FIX 4.1 this field was of type int)                *\n****************************************************************\n*/\n  ExecRefID = 19,\n/*\n***********************************************************\n* Instructions for order handling on Broker trading floor *\n***********************************************************\n*/\n  HandlInst = 21,\n/*\n***********************************************************\n* Identifies class or source of the SecurityID(48) value. *\n***********************************************************\n*/\n  SecurityIDSource = 22,\n/*\n*************************************************\n* Unique identifier of IOI message.             *\n* (Prior to FIX 4.1 this field was of type int) *\n*************************************************\n*/\n  IOIID = 23,\n/*\n**********************************\n* Relative quality of indication *\n**********************************\n*/\n  IOIQltyInd = 25,\n/*\n******************************************************\n* Reference identifier used with CANCEL and REPLACE, *\n* transaction types.                                 *\n* (Prior to FIX 4.1 this field was of type int)      *\n******************************************************\n*/\n  IOIRefID = 26,\n/*\n****************************************************************\n* Quantity (e.g. number of shares) in numeric form or relative *\n* size.                                                        *\n****************************************************************\n*/\n  IOIQty = 27,\n/*\n*******************************************\n* Identifies IOI message transaction type *\n*******************************************\n*/\n  IOITransType = 28,\n/*\n**************************************\n* Broker capacity in order execution *\n**************************************\n*/\n  LastCapacity = 29,\n/*\n**************************************************************\n* Market of execution for last fill, or an indication of the *\n* market where an order was routed                           *\n* Valid values:                                              *\n* See \"Appendix 6-C\"                                         *\n**************************************************************\n*/\n  LastMkt = 30,\n/*\n******************************\n* Price of this (last) fill. *\n******************************\n*/\n  LastPx = 31,\n/*\n***********************************************************\n* Quantity (e.g. shares) bought/sold on this (last) fill. *\n* (Prior to FIX 4.2 this field was of type int)           *\n***********************************************************\n*/\n  LastQty = 32,\n/*\n************************************\n* Integer message sequence number. *\n************************************\n*/\n  MsgSeqNum = 34,\n/*\n***************************************************************\n* Defines message type ALWAYS THIRD FIELD IN MESSAGE. (Always *\n* unencrypted)                                                *\n* Note: A \"U\" as the first character in the MsgType field     *\n* (i.e. U, U2, etc) indicates that the message format is      *\n* privately defined between the sender and receiver.          *\n* *** Note the use of lower case letters ***                  *\n***************************************************************\n*/\n  MsgType = 35,\n/*\n**************************************************************\n* Unique identifier for Order as assigned by sell-side       *\n* (broker, exchange, ECN). Uniqueness must be guaranteed     *\n* within a single trading day. Firms which accept multi-day  *\n* orders should consider embedding a date within the OrderID *\n* field to assure uniqueness across days.                    *\n**************************************************************\n*/\n  OrderID = 37,\n/*\n**************************************************************\n* Quantity ordered. This represents the number of shares for *\n* equities or par, face or nominal value for FI instruments. *\n* (Prior to FIX 4.2 this field was of type int)              *\n**************************************************************\n*/\n  OrderQty = 38,\n/*\n************************************************************\n* Identifies current status of order. *** SOME VALUES HAVE *\n* BEEN REPLACED - See \"Replaced Features and Supported     *\n* Approach\" *** (see Volume : \"Glossary\" for value         *\n* definitions)                                             *\n************************************************************\n*/\n  OrdStatus = 39,\n/*\n*************************************************************\n* Order type. *** SOME VALUES ARE NO LONGER USED - See      *\n* \"Deprecated (Phased-out) Features and Supported Approach\" *\n* *** (see Volume : \"Glossary\" for value definitions)       *\n*************************************************************\n*/\n  OrdType = 40,\n/*\n****************************************************************\n* ClOrdID (11) of the previous order (NOT the initial order of *\n* the day) as assigned by the institution, used to identify    *\n* the previous order in cancel and cancel/replace requests.    *\n****************************************************************\n*/\n  OrigClOrdID = 41,\n/*\n********************************************************\n* Time of message origination (always expressed in UTC *\n* (Universal Time Coordinated, also known as \"GMT\"))   *\n********************************************************\n*/\n  OrigTime = 42,\n/*\n**********************************************************\n* Indicates possible retransmission of message with this *\n* sequence number                                        *\n**********************************************************\n*/\n  PossDupFlag = 43,\n/*\n***********************************************\n* Price per unit of quantity (e.g. per share) *\n***********************************************\n*/\n  Price = 44,\n/*\n*************************************\n* Reference message sequence number *\n*************************************\n*/\n  RefSeqNum = 45,\n/*\n**************************************************************\n* Security identifier value of SecurityIDSource (22) type    *\n* (e.g. CUSIP, SEDOL, ISIN, etc). Requires SecurityIDSource. *\n**************************************************************\n*/\n  SecurityID = 48,\n/*\n*********************************************************\n* Assigned value used to identify firm sending message. *\n*********************************************************\n*/\n  SenderCompID = 49,\n/*\n***************************************************************\n* Assigned value used to identify specific message originator *\n* (desk, trader, etc.)                                        *\n***************************************************************\n*/\n  SenderSubID = 50,\n/*\n*********************************************************\n* Time of message transmission (always expressed in UTC *\n* (Universal Time Coordinated, also known as \"GMT\")     *\n*********************************************************\n*/\n  SendingTime = 52,\n/*\n**************************************************\n* Overall/total quantity (e.g. number of shares) *\n* (Prior to FIX 4.2 this field was of type int)  *\n**************************************************\n*/\n  Quantity = 53,\n/*\n****************************************************\n* Side of order (see Volume : \"Glossary\" for value *\n* definitions)                                     *\n****************************************************\n*/\n  Side = 54,\n/*\n***************************************************************\n* Ticker symbol. Common, \"human understood\" representation of *\n* the security. SecurityID (48) value can be specified if no  *\n* symbol exists (e.g. non-exchange traded Collective          *\n* Investment Vehicles)                                        *\n* Use \"[N/A]\" for products which do not have a symbol.        *\n***************************************************************\n*/\n  Symbol = 55,\n/*\n***************************************************\n* Assigned value used to identify receiving firm. *\n***************************************************\n*/\n  TargetCompID = 56,\n/*\n***************************************************************\n* Assigned value used to identify specific individual or unit *\n* intended to receive message. \"ADMIN\" reserved for           *\n* administrative messages not intended for a specific user.   *\n***************************************************************\n*/\n  TargetSubID = 57,\n/*\n***************************************************************\n* Free format text string                                     *\n* (Note: this field does not have a specified maximum length) *\n***************************************************************\n*/\n  Text = 58,\n/*\n****************************************************************\n* Specifies how long the order remains in effect. Absence of   *\n* this field is interpreted as DAY. NOTE not applicable to CIV *\n* Orders. (see Volume : \"Glossary\" for value definitions)      *\n****************************************************************\n*/\n  TimeInForce = 59,\n/*\n**************************************************************\n* Timestamp when the business transaction represented by the *\n* message occurred.                                          *\n**************************************************************\n*/\n  TransactTime = 60,\n/*\n****************\n* Urgency flag *\n****************\n*/\n  Urgency = 61,\n/*\n***************************************************************\n* Indicates expiration time of indication message (always     *\n* expressed in UTC (Universal Time Coordinated, also known as *\n* \"GMT\")                                                      *\n***************************************************************\n*/\n  ValidUntilTime = 62,\n/*\n****************************************************************\n* Indicates order settlement period. If present, SettlDate     *\n* (64) overrides this field. If both SettlType (63) and        *\n* SettDate (64) are omitted, the default for SettlType (63) is *\n* 0 (Regular)                                                  *\n* Regular is defined as the default settlement period for the  *\n* particular security on the exchange of execution.            *\n* In Fixed Income the contents of this field may influence the *\n* instrument definition if the SecurityID (48) is ambiguous.   *\n* In the US an active Treasury offering may be re-opened, and  *\n* for a time one CUSIP will apply to both the current and      *\n* \"when-issued\" securities. Supplying a value of \"7\" clarifies *\n* the instrument description; any other value or the absence   *\n* of this field should cause the respondent to default to the  *\n* active issue.                                                *\n* Additionally the following patterns may be uses as well as   *\n* enum values                                                  *\n* Dx = FX tenor expression for \"days\", e.g. \"D5\", where \"x\" is *\n* any integer > 0                                              *\n* Mx = FX tenor expression for \"months\", e.g. \"M3\", where \"x\"  *\n* is any integer > 0                                           *\n* Wx = FX tenor expression for \"weeks\", e.g. \"W13\", where \"x\"  *\n* is any integer > 0                                           *\n* Yx = FX tenor expression for \"years\", e.g. \"Y1\", where \"x\"   *\n* is any integer > 0                                           *\n* Noted that for FX the tenors expressed using Dx, Mx, Wx, and *\n* Yx values do not denote business days, but calendar days.    *\n****************************************************************\n*/\n  SettlType = 63,\n/*\n***************************************************************\n* Specific date of trade settlement (SettlementDate) in       *\n* YYYYMMDD format.                                            *\n* If present, this field overrides SettlType (63). This field *\n* is required if the value of SettlType (63) is 6 (Future) or *\n* 8 (Sellers Option). This field must be omitted if the value *\n* of SettlType (63) is 7 (When and If Issued)                 *\n* (expressed in local time at place of settlement)            *\n***************************************************************\n*/\n  SettlDate = 64,\n/*\n**************************************************************\n* Additional information about the security (e.g. preferred, *\n* warrants, etc.). Note also see SecurityType (167).         *\n* As defined in the NYSE Stock and bond Symbol Directory and *\n* in the AMEX Fitch Directory.                               *\n**************************************************************\n*/\n  SymbolSfx = 65,\n/*\n****************************************************************\n* Unique identifier for list as assigned by institution, used  *\n* to associate multiple individual orders. Uniqueness must be  *\n* guaranteed within a single trading day. Firms which generate *\n* multi-day orders should consider embedding a date within the *\n* ListID field to assure uniqueness across days.               *\n****************************************************************\n*/\n  ListID = 66,\n/*\n***************************************************************\n* Sequence of individual order within list (i.e. ListSeqNo of *\n* TotNoOrders (68), 2 of 25, 3 of 25, . . . )                 *\n***************************************************************\n*/\n  ListSeqNo = 67,\n/*\n***************************************************************\n* Total number of list order entries across all messages.     *\n* Should be the sum of all NoOrders (73) in each message that *\n* has repeating list order entries related to the same ListID *\n* (66). Used to support fragmentation.                        *\n* (Prior to FIX 4.2 this field was named \"ListNoOrds\")        *\n***************************************************************\n*/\n  TotNoOrders = 68,\n/*\n*********************************************************\n* Free format text message containing list handling and *\n* execution instructions.                               *\n*********************************************************\n*/\n  ListExecInst = 69,\n/*\n*************************************************\n* Unique identifier for allocation message.     *\n* (Prior to FIX 4.1 this field was of type int) *\n*************************************************\n*/\n  AllocID = 70,\n/*\n***************************************************************\n* Identifies allocation transaction type *** SOME VALUES HAVE *\n* BEEN REPLACED - See \"Replaced Features and Supported        *\n* Approach\" ***                                               *\n***************************************************************\n*/\n  AllocTransType = 71,\n/*\n**************************************************************\n* Reference identifier to be used with AllocTransType (71) = *\n* Replace or Cancel.                                         *\n* (Prior to FIX 4.1 this field was of type int)              *\n**************************************************************\n*/\n  RefAllocID = 72,\n/*\n***************************************************************\n* Indicates number of decimal places to be used for average   *\n* pricing. Absence of this field indicates that default       *\n* precision arranged by the broker/institution is to be used. *\n***************************************************************\n*/\n  AvgPxPrecision = 74,\n/*\n**************************************************************\n* Indicates date of trading day. Absence of this field       *\n* indicates current day (expressed in local time at place of *\n* trade).                                                    *\n**************************************************************\n*/\n  TradeDate = 75,\n/*\n***************************************************************\n* Indicates whether the resulting position after a trade      *\n* should be an opening position or closing position. Used for *\n* omnibus accounting - where accounts are held on a gross     *\n* basis instead of being netted together.                     *\n***************************************************************\n*/\n  PositionEffect = 77,\n/*\n************************\n* Sub-account mnemonic *\n************************\n*/\n  AllocAccount = 79,\n/*\n****************************************************\n* Quantity to be allocated to specific sub-account *\n* (Prior to FIX 4.2 this field was of type int)    *\n****************************************************\n*/\n  AllocQty = 80,\n/*\n*************************************************************\n* Processing code for sub-account. Absence of this field in *\n* AllocAccount (79) / AllocPrice (366) /AllocQty (80) /     *\n* ProcessCode instance indicates regular trade.             *\n*************************************************************\n*/\n  ProcessCode = 81,\n/*\n******************************************\n* Total number of reports within series. *\n******************************************\n*/\n  NoRpts = 82,\n/*\n**************************************************************\n* Sequence number of message within report series. Used to   *\n* carry reporting sequence number of the fill as represented *\n* on the Trade Report Side.                                  *\n**************************************************************\n*/\n  RptSeq = 83,\n/*\n*************************************************\n* Total quantity canceled for this order.       *\n* (Prior to FIX 4.2 this field was of type int) *\n*************************************************\n*/\n  CxlQty = 84,\n/*\n************************************\n* Identifies status of allocation. *\n************************************\n*/\n  AllocStatus = 87,\n/*\n************************************\n* Identifies reason for rejection. *\n************************************\n*/\n  AllocRejCode = 88,\n/*\n***********************\n* Email message type. *\n***********************\n*/\n  EmailType = 94,\n/*\n**************************************\n* Number of bytes in raw data field. *\n**************************************\n*/\n  RawDataLength = 95,\n/*\n*************************************************************\n* Unformatted raw data, can include bitmaps, word processor *\n* documents, etc.                                           *\n*************************************************************\n*/\n  RawData = 96,\n/*\n****************************************************************\n* Indicates that message may contain information that has been *\n* sent under another sequence number.                          *\n****************************************************************\n*/\n  PossResend = 97,\n/*\n***********************************************\n* Price per unit of quantity (e.g. per share) *\n***********************************************\n*/\n  StopPx = 99,\n/*\n**************************************************************\n* Execution destination as defined by institution when order *\n* is entered.                                                *\n* Valid values:                                              *\n* See \"Appendix 6-C\"                                         *\n**************************************************************\n*/\n  ExDestination = 100,\n/*\n*************************************************\n* Code to identify reason for cancel rejection. *\n*************************************************\n*/\n  CxlRejReason = 102,\n/*\n****************************************************************\n* Code to identify reason for order rejection. Note: Values 3, *\n* 4, and 5 will be used when rejecting an order due to         *\n* pre-allocation information errors.                           *\n****************************************************************\n*/\n  OrdRejReason = 103,\n/*\n***************************************************************\n* Code to qualify IOI use. (see Volume : \"Glossary\" for value *\n* definitions)                                                *\n***************************************************************\n*/\n  IOIQualifier = 104,\n/*\n***********************************************************\n* Name of security issuer (e.g. International Business    *\n* Machines, GNMA).                                        *\n* see also Volume 7: \"PRODUCT: FIXED INCOME - Euro Issuer *\n* Values\"                                                 *\n***********************************************************\n*/\n  Issuer = 106,\n/*\n****************************************************************\n* Can be used to provide an optional textual description for a *\n* financial instrument.                                        *\n****************************************************************\n*/\n  SecurityDesc = 107,\n/*\n*************************************************\n* Minimum quantity of an order to be executed.  *\n* (Prior to FIX 4.2 this field was of type int) *\n*************************************************\n*/\n  MinQty = 110,\n/*\n***************************************************************\n* The quantity to be displayed . Required for reserve orders. *\n* On orders specifies the qty to be displayed, on execution   *\n* reports the currently displayed quantity.                   *\n***************************************************************\n*/\n  MaxFloor = 111,\n/*\n******************************************************\n* Identifies party of trade responsible for exchange *\n* reporting.                                         *\n******************************************************\n*/\n  ReportToExch = 113,\n/*\n**********************************************************\n* Indicates whether the broker is to locate the stock in *\n* conjunction with a short sell order.                   *\n**********************************************************\n*/\n  LocateReqd = 114,\n/*\n****************************************************************\n* Assigned value used to identify firm originating message if  *\n* the message was delivered by a third party i.e. the third    *\n* party firm identifier would be delivered in the SenderCompID *\n* field and the firm originating the message in this field.    *\n****************************************************************\n*/\n  OnBehalfOfCompID = 115,\n/*\n***************************************************************\n* Assigned value used to identify specific message originator *\n* (i.e. trader) if the message was delivered by a third party *\n***************************************************************\n*/\n  OnBehalfOfSubID = 116,\n/*\n*******************************\n* Unique identifier for quote *\n*******************************\n*/\n  QuoteID = 117,\n/*\n***************************************************************\n* Total amount due as the result of the transaction (e.g. for *\n* Buy order - principal + commission + fees) reported in      *\n* currency of execution.                                      *\n***************************************************************\n*/\n  NetMoney = 118,\n/*\n***************************************************************\n* Total amount due expressed in settlement currency (includes *\n* the effect of the forex transaction)                        *\n***************************************************************\n*/\n  SettlCurrAmt = 119,\n/*\n*********************************************\n* Currency code of settlement denomination. *\n*********************************************\n*/\n  SettlCurrency = 120,\n/*\n*********************************************************\n* Indicates request for forex accommodation trade to be *\n* executed along with security transaction.             *\n*********************************************************\n*/\n  ForexReq = 121,\n/*\n**************************************************************\n* Original time of message transmission (always expressed in *\n* UTC (Universal Time Coordinated, also known as \"GMT\") when *\n* transmitting orders as the result of a resend request.     *\n**************************************************************\n*/\n  OrigSendingTime = 122,\n/*\n***************************************************************\n* Time/Date of order expiration (always expressed in UTC      *\n* (Universal Time Coordinated, also known as \"GMT\")           *\n*                                                             *\n* The meaning of expiration is specific to the context where  *\n* the field is used.                                          *\n*                                                             *\n* For orders, this is the expiration time of a Good Til Date  *\n* TimeInForce.                                                *\n*                                                             *\n* For Quotes - this is the expiration of the quote.           *\n*                                                             *\n* Expiration time is provided across the quote message dialog *\n* to control the length of time of the overall quoting        *\n* process.                                                    *\n*                                                             *\n* For collateral requests, this is the time by which          *\n* collateral must be assigned.                                *\n*                                                             *\n* For collateral assignments, this is the time by which a     *\n* response to the assignment is expected.                     *\n*                                                             *\n* For credit/risk limit checks, this is the time when the     *\n* reserved credit limit will expire for the requested         *\n* transaction.                                                *\n***************************************************************\n*/\n  ExpireTime = 126,\n/*\n***********************************\n* Reason for execution rejection. *\n***********************************\n*/\n  DKReason = 127,\n/*\n****************************************************************\n* Assigned value used to identify the firm targeted to receive *\n* the message if the message is delivered by a third party     *\n* i.e. the third party firm identifier would be delivered in   *\n* the TargetCompID (56) field and the ultimate receiver firm   *\n* ID in this field.                                            *\n****************************************************************\n*/\n  DeliverToCompID = 128,\n/*\n**************************************************************\n* Assigned value used to identify specific message recipient *\n* (i.e. trader) if the message is delivered by a third party *\n**************************************************************\n*/\n  DeliverToSubID = 129,\n/*\n****************************************************************\n* Indicates that IOI is the result of an existing agency order *\n* or a facilitation position resulting from an agency order,   *\n* not from principal trading or order solicitation activity.   *\n****************************************************************\n*/\n  IOINaturalFlag = 130,\n/*\n***********************************************\n* Unique identifier for a QuoteRequest(35=R). *\n***********************************************\n*/\n  QuoteReqID = 131,\n/*\n******************\n* Bid price/rate *\n******************\n*/\n  BidPx = 132,\n/*\n********************\n* Offer price/rate *\n********************\n*/\n  OfferPx = 133,\n/*\n*************************************************\n* Quantity of bid                               *\n* (Prior to FIX 4.2 this field was of type int) *\n*************************************************\n*/\n  BidSize = 134,\n/*\n*************************************************\n* Quantity of offer                             *\n* (Prior to FIX 4.2 this field was of type int) *\n*************************************************\n*/\n  OfferSize = 135,\n/*\n***************************\n* Miscellaneous fee value *\n***************************\n*/\n  MiscFeeAmt = 137,\n/*\n*********************************\n* Currency of miscellaneous fee *\n*********************************\n*/\n  MiscFeeCurr = 138,\n/*\n****************************************\n* Indicates type of miscellaneous fee. *\n****************************************\n*/\n  MiscFeeType = 139,\n/*\n***************************************\n* Previous closing price of security. *\n***************************************\n*/\n  PrevClosePx = 140,\n/*\n****************************************************************\n* Assigned value used to identify specific message             *\n* originator's location (i.e. geographic location and/or desk, *\n* trader)                                                      *\n****************************************************************\n*/\n  SenderLocationID = 142,\n/*\n***********************************************************\n* Assigned value used to identify specific message        *\n* destination's location (i.e. geographic location and/or *\n* desk, trader)                                           *\n***********************************************************\n*/\n  TargetLocationID = 143,\n/*\n****************************************************************\n* Assigned value used to identify specific message             *\n* originator's location (i.e. geographic location and/or desk, *\n* trader) if the message was delivered by a third party        *\n****************************************************************\n*/\n  OnBehalfOfLocationID = 144,\n/*\n****************************************************************\n* Assigned value used to identify specific message recipient's *\n* location (i.e. geographic location and/or desk, trader) if   *\n* the message was delivered by a third party                   *\n****************************************************************\n*/\n  DeliverToLocationID = 145,\n/*\n***********************************\n* The subject of an Email message *\n***********************************\n*/\n  Subject = 147,\n/*\n**********************************\n* The headline of a News message *\n**********************************\n*/\n  Headline = 148,\n/*\n****************************************************************\n* A URI (Uniform Resource Identifier) or URL (Uniform Resource *\n* Locator) link to additional information (i.e.                *\n* http://www.XYZ.com/research.html)                            *\n* See \"Appendix 6-B FIX Fields Based Upon Other Standards\"     *\n****************************************************************\n*/\n  URLLink = 149,\n/*\n**************************************************************\n* Describes the specific ExecutionRpt (e.g. Pending Cancel)  *\n* while OrdStatus(39) will always identify the current order *\n* status (e.g. Partially Filled).                            *\n**************************************************************\n*/\n  ExecType = 150,\n/*\n****************************************************************\n* Quantity open for further execution. If the OrdStatus (39)   *\n* is Canceled, DoneForTheDay, Expired, Calculated, or Rejected *\n* (in which case the order is no longer active) then LeavesQty *\n* could be 0, otherwise LeavesQty = OrderQty (38) - CumQty     *\n* (14).                                                        *\n* (Prior to FIX 4.2 this field was of type int)                *\n****************************************************************\n*/\n  LeavesQty = 151,\n/*\n**************************************************************\n* Specifies the approximate order quantity desired in total  *\n* monetary units vs. as tradeable units (e.g. number of      *\n* shares). The broker or fund manager (for CIV orders) would *\n* be responsible for converting and calculating a tradeable  *\n* unit (e.g. share) quantity (OrderQty (38)) based upon this *\n* amount to be used for the actual order and subsequent      *\n* messages.                                                  *\n**************************************************************\n*/\n  CashOrderQty = 152,\n/*\n************************************************************\n* AvgPx (6) for a specific AllocAccount (79)               *\n* For Fixed Income this is always expressed as \"percent of *\n* par\" price type.                                         *\n************************************************************\n*/\n  AllocAvgPx = 153,\n/*\n*************************************************\n* NetMoney (8) for a specific AllocAccount (79) *\n*************************************************\n*/\n  AllocNetMoney = 154,\n/*\n***************************************************************\n* Foreign exchange rate used to compute SettlCurrAmt (9) from *\n* Currency (5) to SettlCurrency (20)                          *\n***************************************************************\n*/\n  SettlCurrFxRate = 155,\n/*\n************************************************************\n* Specifies whether or not SettlCurrFxRate (155) should be *\n* multiplied or divided.                                   *\n************************************************************\n*/\n  SettlCurrFxRateCalc = 156,\n/*\n**************************************************************\n* Number of Days of Interest for convertible bonds and fixed *\n* income. Note value may be negative.                        *\n**************************************************************\n*/\n  NumDaysInterest = 157,\n/*\n****************************************************************\n* The amount the buyer compensates the seller for the portion  *\n* of the next coupon interest payment the seller has earned    *\n* but will not receive from the issuer because the issuer will *\n* send the next coupon payment to the buyer. Accrued Interest  *\n* Rate is the annualized Accrued Interest amount divided by    *\n* the purchase price of the bond.                              *\n****************************************************************\n*/\n  AccruedInterestRate = 158,\n/*\n**************************************************************\n* Amount of Accrued Interest for convertible bonds and fixed *\n* income                                                     *\n**************************************************************\n*/\n  AccruedInterestAmt = 159,\n/*\n****************************************************************\n* Indicates mode used for Settlement Instructions message. *** *\n* SOME VALUES HAVE BEEN REPLACED - See \"Replaced Features and  *\n* Supported Approach\" ***                                      *\n****************************************************************\n*/\n  SettlInstMode = 160,\n/*\n*************************************************************\n* Free format text related to a specific AllocAccount (79). *\n*************************************************************\n*/\n  AllocText = 161,\n/*\n*************************************************\n* Unique identifier for Settlement Instruction. *\n*************************************************\n*/\n  SettlInstID = 162,\n/*\n****************************************************\n* Settlement Instructions message transaction type *\n****************************************************\n*/\n  SettlInstTransType = 163,\n/*\n***********************************************************\n* Unique identifier for an email thread (new and chain of *\n* replies)                                                *\n***********************************************************\n*/\n  EmailThreadID = 164,\n/*\n***********************************************\n* Indicates source of Settlement Instructions *\n***********************************************\n*/\n  SettlInstSource = 165,\n/*\n****************************************************************\n* Indicates type of security. Security type enumerations are   *\n* grouped by Product(460) field value. NOTE: Additional values *\n* may be used by mutual agreement of the counterparties.       *\n****************************************************************\n*/\n  SecurityType = 167,\n/*\n**************************************************************\n* Time the details within the message should take effect     *\n* (always expressed in UTC (Universal Time Coordinated, also *\n* known as \"GMT\")                                            *\n**************************************************************\n*/\n  EffectiveTime = 168,\n/*\n*****************************************************\n* Identifies the Standing Instruction database used *\n*****************************************************\n*/\n  StandInstDbType = 169,\n/*\n**************************************************************\n* Name of the Standing Instruction database represented with *\n* StandInstDbType (169) (i.e. the Global Custodian's name).  *\n**************************************************************\n*/\n  StandInstDbName = 170,\n/*\n****************************************************************\n* Unique identifier used on the Standing Instructions database *\n* for the Standing Instructions to be referenced.              *\n****************************************************************\n*/\n  StandInstDbID = 171,\n/*\n*********************************\n* Identifies type of settlement *\n*********************************\n*/\n  SettlDeliveryType = 172,\n/*\n**********************\n* Bid F/X spot rate. *\n**********************\n*/\n  BidSpotRate = 188,\n/*\n****************************************************************\n* Bid F/X forward points added to spot rate. May be a negative *\n* value.                                                       *\n****************************************************************\n*/\n  BidForwardPoints = 189,\n/*\n************************\n* Offer F/X spot rate. *\n************************\n*/\n  OfferSpotRate = 190,\n/*\n*********************************************************\n* Offer F/X forward points added to spot rate. May be a *\n* negative value.                                       *\n*********************************************************\n*/\n  OfferForwardPoints = 191,\n/*\n*********************************************************\n* OrderQty (38) of the future part of a F/X swap order. *\n*********************************************************\n*/\n  OrderQty2 = 192,\n/*\n*********************************************************\n* SettDate (64) of the future part of a F/X swap order. *\n*********************************************************\n*/\n  SettlDate2 = 193,\n/*\n******************\n* F/X spot rate. *\n******************\n*/\n  LastSpotRate = 194,\n/*\n***********************************************************\n* F/X forward points added to LastSpotRate (94). May be a *\n* negative value. Expressed in decimal form. For example, *\n* 61.99 points is expressed and sent as 0.006199          *\n***********************************************************\n*/\n  LastForwardPoints = 195,\n/*\n***************************************************************\n* Can be used to link two different Allocation messages (each *\n* with unique AllocID (70)) together, i.e. for F/X \"Netting\"  *\n* or \"Swaps\". Should be unique.                               *\n***************************************************************\n*/\n  AllocLinkID = 196,\n/*\n**************************************************************\n* Identifies the type of Allocation linkage when AllocLinkID *\n* (96) is used.                                              *\n**************************************************************\n*/\n  AllocLinkType = 197,\n/*\n****************************************************************\n* Assigned by the party which accepts the order. Can be used   *\n* to provide the OrderID (37) used by an exchange or executing *\n* system.                                                      *\n****************************************************************\n*/\n  SecondaryOrderID = 198,\n/*\n****************************************************************\n* Can be used with standardized derivatives vs. the            *\n* MaturityDate (54) field.  Month and Year of the maturity     *\n* (used for standardized futures and options).                 *\n* Format:                                                      *\n* YYYYMM (e.g. 199903)                                         *\n* YYYYMMDD (e.g. 20030323)                                     *\n* YYYYMMwN (e.g. 200303w) for week                             *\n* A specific date or can be appended to the MaturityMonthYear. *\n* For instance, if multiple standard products exist that       *\n* mature in the same Year and Month, but actually mature at a  *\n* different time, a value can be appended, such as \"w\" or \"w2\" *\n* to indicate week  as opposed to week 2 expiration. Likewise, *\n* the date (0-3) can be appended to indicate a specific        *\n* expiration (maturity date).                                  *\n****************************************************************\n*/\n  MaturityMonthYear = 200,\n/*\n*********************************************************\n* Indicates whether an option contract is a put or call *\n*********************************************************\n*/\n  PutOrCall = 201,\n/*\n*******************************\n* Strike Price for an Option. *\n*******************************\n*/\n  StrikePrice = 202,\n/*\n*************************************************\n* Used for derivative products, such as options *\n*************************************************\n*/\n  CoveredOrUncovered = 203,\n/*\n***************************************************************\n* Provided to support versioning of option contracts as a     *\n* result of corporate actions or events. Use of this field is *\n* defined by counterparty agreement or market conventions.    *\n***************************************************************\n*/\n  OptAttribute = 206,\n/*\n********************************************\n* Market used to help identify a security. *\n* Valid values:                            *\n* See \"Appendix 6-C\"                       *\n********************************************\n*/\n  SecurityExchange = 207,\n/*\n**************************************************************\n* Indicates whether or not details should be communicated to *\n* BrokerOfCredit (i.e. step-in broker).                      *\n**************************************************************\n*/\n  NotifyBrokerOfCredit = 208,\n/*\n***************************************************************\n* Indicates how the receiver (i.e. third party) of Allocation *\n* message should handle/process the account details.          *\n***************************************************************\n*/\n  AllocHandlInst = 209,\n/*\n***************************************************************\n* Maximum quantity (e.g. number of shares) within an order to *\n* be shown to other customers (i.e. sent via an IOI).         *\n* (Prior to FIX 4.2 this field was of type int)               *\n***************************************************************\n*/\n  MaxShow = 210,\n/*\n**************************************************************\n* Amount (signed) added to the peg for a pegged order in the *\n* context of the PegOffsetType (836)                         *\n* (Prior to FIX 4.4 this field was of type PriceOffset)      *\n**************************************************************\n*/\n  PegOffsetValue = 211,\n/*\n**************************************************************\n* Reference identifier for the SettlInstID (162) with Cancel *\n* and Replace SettlInstTransType (163) transaction types.    *\n**************************************************************\n*/\n  SettlInstRefID = 214,\n/*\n****************************************************\n* Indicates the type of RoutingID (217) specified. *\n****************************************************\n*/\n  RoutingType = 216,\n/*\n******************************************************\n* Assigned value used to identify a specific routing *\n* destination.                                       *\n******************************************************\n*/\n  RoutingID = 217,\n/*\n****************************************************************\n* For Fixed Income. Either Swap Spread or Spread to Benchmark  *\n* depending upon the order type.                               *\n* Spread to Benchmark: Basis points relative to a benchmark.   *\n* To be expressed as \"count of basis points\" (vs. an absolute  *\n* value). E.g. High Grade Corporate Bonds may express price as *\n* basis points relative to benchmark (the BenchmarkCurveName   *\n* (22) field). Note: Basis points can be negative.             *\n* Swap Spread: Target spread for a swap.                       *\n****************************************************************\n*/\n  Spread = 218,\n/*\n***************************************************************\n* Identifies currency used for benchmark curve. See \"Appendix *\n* 6-A: Valid Currency Codes\" for information on obtaining     *\n* valid values.                                               *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)      *\n***************************************************************\n*/\n  BenchmarkCurveCurrency = 220,\n/*\n**********************************************************\n* Name of benchmark curve.                               *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\n**********************************************************\n*/\n  BenchmarkCurveName = 221,\n/*\n****************************************************************\n* Point on benchmark curve. Free form values: e.g. \"Y\", \"7Y\",  *\n* \"INTERPOLATED\".                                              *\n* Sample values:                                               *\n* M = combination of a number between 1-12 and a \"M\" for month *\n* Y = combination of number between 1-100 and a \"Y\" for year}  *\n* 10Y-OLD = see above, then add \"-OLD\" when appropriate        *\n* INTERPOLATED = the point is mathematically derived           *\n* 2/2031 5 3/8 = the point is stated via a combination of      *\n* maturity month / year and coupon                             *\n* See Fixed Income-specific documentation at                   *\n* http://www.fixtradingcommunity.org for additional values.    *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\n****************************************************************\n*/\n  BenchmarkCurvePoint = 222,\n/*\n****************************************************************\n* The rate of interest that, when multiplied by the principal, *\n* par value, or face value of a bond, provides the currency    *\n* amount of the periodic interest payment. The coupon is       *\n* always cited, along with maturity, in any quotation of a     *\n* bond's price.                                                *\n****************************************************************\n*/\n  CouponRate = 223,\n/*\n**************************************************************\n* Date interest is to be paid. Used in identifying Corporate *\n* Bond issues.                                               *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)     *\n* (prior to FIX 4.4 field was of type UTCDate)               *\n**************************************************************\n*/\n  CouponPaymentDate = 224,\n/*\n****************************************************************\n* The date on which a bond or stock offering is issued. It may *\n* or may not be the same as the effective date (\"Dated Date\")  *\n* or the date on which interest begins to accrue (\"Interest    *\n* Accrual Date\")                                               *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\n* (prior to FIX 4.4 field was of type UTCDate)                 *\n****************************************************************\n*/\n  IssueDate = 225,\n/*\n**************************************************************\n* Number of business days before repurchase of a repo. (Note *\n* tag # was reserved in FIX 4.1, added in FIX 4.3)           *\n**************************************************************\n*/\n  RepurchaseTerm = 226,\n/*\n**************************************************************\n* Percent of par at which a Repo will be repaid. Represented *\n* as a percent, e.g. .9525 represents 95-/4 percent of par.  *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)     *\n**************************************************************\n*/\n  RepurchaseRate = 227,\n/*\n***************************************************************\n* For Fixed Income: Amorization Factor for deriving Current   *\n* face from Original face for ABS or MBS securities, note the *\n* fraction may be greater than, equal to or less than . In    *\n* TIPS securities this is the Inflation index.                *\n* Qty * Factor * Price = Gross Trade Amount                   *\n* For Derivatives: Contract Value Factor by which price must  *\n* be adjusted to determine the true nominal value of one      *\n* futures/options contract.                                   *\n* (Qty * Price) * Factor = Nominal Value                      *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)      *\n***************************************************************\n*/\n  Factor = 228,\n/*\n***********************************************************\n* Used with Fixed Income for Muncipal New Issue Market.   *\n* Agreement in principal between counter-parties prior to *\n* actual trade date.                                      *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\n* (prior to FIX 4.4 field was of type UTCDate)            *\n***********************************************************\n*/\n  TradeOriginationDate = 229,\n/*\n***************************************************************\n* The date when a distribution of interest is deducted from a *\n* securities assets or set aside for payment to bondholders.  *\n* On the ex-date, the securities price drops by the amount of *\n* the distribution (plus or minus any market activity).       *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)      *\n* (prior to FIX 4.4 field was of type UTCDate)                *\n***************************************************************\n*/\n  ExDate = 230,\n/*\n************************************************************\n* Specifies the ratio or multiply factor to convert from   *\n* \"nominal\" units (e.g. contracts) to total units (e.g.    *\n* shares) (e.g. 1.0, 100, 1000, etc). Applicable For Fixed *\n* Income, Convertible Bonds, Derivatives, etc.             *\n************************************************************\n*/\n  ContractMultiplier = 231,\n/*\n**********************************************************\n* For Fixed Income.                                      *\n* Type of Stipulation.                                   *\n* Other types may be used by mutual agreement of the     *\n* counterparties.                                        *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\n**********************************************************\n*/\n  StipulationType = 233,\n/*\n****************************************************************\n* For Fixed Income. Value of stipulation.                      *\n* The expression can be an absolute single value or a          *\n* combination of values and logical operators:                 *\n* < value                                                      *\n* > value                                                      *\n* <= value                                                     *\n* >= value                                                     *\n* value                                                        *\n* value - value2                                               *\n* value OR value2                                              *\n* value AND value2                                             *\n* YES                                                          *\n* NO                                                           *\n* Bargain conditions recognized by the London Stock Exchange - *\n* to be used when StipulationType is \"BGNCON\".                 *\n* CD = Special cum Dividend                                    *\n* XD = Special ex Dividend                                     *\n* CC = Special cum Coupon                                      *\n* XC = Special ex Coupon                                       *\n* CB = Special cum Bonus                                       *\n* XB = Special ex Bonus                                        *\n* CR = Special cum Rights                                      *\n* XR = Special ex Rights                                       *\n* CP = Special cum Capital Repayments                          *\n* XP = Special ex Capital Repayments                           *\n* CS = Cash Settlement                                         *\n* SP = Special Price                                           *\n* TR = Report for European Equity Market Securities in         *\n* accordance with Chapter 8 of the Rules.                      *\n* GD = Guaranteed Delivery                                     *\n* Values for StipulationType = \"PXSOURCE\":                     *\n* BB GENERIC                                                   *\n* BB FAIRVALUE                                                 *\n* BROKERTEC                                                    *\n* ESPEED                                                       *\n* GOVPX                                                        *\n* HILLIARD FARBER                                              *\n* ICAP                                                         *\n* TRADEWEB                                                     *\n* TULLETT LIBERTY                                              *\n* If a particular side of the market is wanted append /BID     *\n* /OFFER or /MID.                                              *\n* plus appropriate combinations of the above and other         *\n* expressions by mutual agreement of the counterparties.       *\n* Examples: \">=60\", \".25\", \"ORANGE OR CONTRACOSTA\", etc.       *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\n****************************************************************\n*/\n  StipulationValue = 234,\n/*\n****************************************************************\n* Type of yield. (Note tag # was reserved in FIX 4.1, added in *\n* FIX 4.3)                                                     *\n****************************************************************\n*/\n  YieldType = 235,\n/*\n**********************************************************\n* Yield percentage.                                      *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\n**********************************************************\n*/\n  Yield = 236,\n/*\n**************************************************************\n* The price at which the securities are distributed to the   *\n* different members of an underwriting group for the primary *\n* market in Municipals, total gross underwriter's spread.    *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)     *\n**************************************************************\n*/\n  TotalTakedown = 237,\n/*\n***************************************************************\n* Provides the reduction in price for the secondary market in *\n* Muncipals.                                                  *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)      *\n***************************************************************\n*/\n  Concession = 238,\n/*\n**************************************************************\n* Identifies the collateral used in the transaction.         *\n* Valid values: see SecurityType (167) field (Note tag # was *\n* reserved in FIX 4.1, added in FIX 4.3)                     *\n**************************************************************\n*/\n  RepoCollateralSecurityType = 239,\n/*\n*************************************************************\n* Return of investor's principal in a security. Bond        *\n* redemption can occur before maturity date.(Note tag # was *\n* reserved in FIX 4.1, added in FIX 4.3) (prior to FIX 4.4  *\n* field was of type UTCDate)                                *\n*************************************************************\n*/\n  RedemptionDate = 240,\n/*\n**********************************************************\n* Underlying security's CouponPaymentDate.               *\n* See CouponPaymentDate (224) field for description      *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\n* (prior to FIX 4.4 field was of type UTCDate)           *\n**********************************************************\n*/\n  UnderlyingCouponPaymentDate = 241,\n/*\n**********************************************************\n* Underlying security's IssueDate.                       *\n* See IssueDate (225) field for description              *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\n* (prior to FIX 4.4 field was of type UTCDate)           *\n**********************************************************\n*/\n  UnderlyingIssueDate = 242,\n/*\n****************************************************************\n* Underlying security's RepoCollateralSecurityType. See        *\n* RepoCollateralSecurityType (239) field for description.(Note *\n* tag # was reserved in FIX 4.1, added in FIX 4.3)             *\n****************************************************************\n*/\n  UnderlyingRepoCollateralSecurityType = 243,\n/*\n***************************************************************\n* Underlying security's RepurchaseTerm. See RepurchaseTerm    *\n* (226) field for description (Note tag # was reserved in FIX *\n* 4.1, added in FIX 4.3)                                      *\n***************************************************************\n*/\n  UnderlyingRepurchaseTerm = 244,\n/*\n***************************************************************\n* Underlying security's RepurchaseRate. See RepurchaseRate    *\n* (227) field for description (Note tag # was reserved in FIX *\n* 4.1, added in FIX 4.3)                                      *\n***************************************************************\n*/\n  UnderlyingRepurchaseRate = 245,\n/*\n**********************************************************\n* Underlying security's Factor.                          *\n* See Factor (228) field for description                 *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\n**********************************************************\n*/\n  UnderlyingFactor = 246,\n/*\n***************************************************************\n* Underlying security's RedemptionDate. See RedemptionDate    *\n* (240) field for description (Note tag # was reserved in FIX *\n* 4.1, added in FIX 4.3) (prior to FIX 4.4 field was of type  *\n* UTCDate)                                                    *\n***************************************************************\n*/\n  UnderlyingRedemptionDate = 247,\n/*\n**********************************************************\n* Multileg instrument's individual leg security's        *\n* CouponPaymentDate.                                     *\n* See CouponPaymentDate (224) field for description      *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\n* (prior to FIX 4.4 field was of type UTCDate)           *\n**********************************************************\n*/\n  LegCouponPaymentDate = 248,\n/*\n**************************************************************\n* Multileg instrument's individual leg security's IssueDate. *\n* See IssueDate (225) field for description                  *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)     *\n* (prior to FIX 4.4 field was of type UTCDate)               *\n**************************************************************\n*/\n  LegIssueDate = 249,\n/*\n***************************************************************\n* Multileg instrument's individual leg security's             *\n* RepoCollateralSecurityType. See RepoCollateralSecurityType  *\n* (239) field for description (Note tag # was reserved in FIX *\n* 4.1, added in FIX 4.3)                                      *\n***************************************************************\n*/\n  LegRepoCollateralSecurityType = 250,\n/*\n*************************************************************\n* Multileg instrument's individual leg security's           *\n* RepurchaseTerm. See RepurchaseTerm (226) field for        *\n* description (Note tag # was reserved in FIX 4.1, added in *\n* FIX 4.3)                                                  *\n*************************************************************\n*/\n  LegRepurchaseTerm = 251,\n/*\n*************************************************************\n* Multileg instrument's individual leg security's           *\n* RepurchaseRate. See RepurchaseRate (227) field for        *\n* description (Note tag # was reserved in FIX 4.1, added in *\n* FIX 4.3)                                                  *\n*************************************************************\n*/\n  LegRepurchaseRate = 252,\n/*\n***********************************************************\n* Multileg instrument's individual leg security's Factor. *\n* See Factor (228) field for description                  *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)  *\n***********************************************************\n*/\n  LegFactor = 253,\n/*\n*************************************************************\n* Multileg instrument's individual leg security's           *\n* RedemptionDate. See RedemptionDate (240) field for        *\n* description (Note tag # was reserved in FIX 4.1, added in *\n* FIX 4.3) (prior to FIX 4.4 field was of type UTCDate)     *\n*************************************************************\n*/\n  LegRedemptionDate = 254,\n/*\n****************************************************************\n* An evaluation of a company's ability to repay obligations or *\n* its likelihood of not defaulting. These evaluation are       *\n* provided by Credit Rating Agencies, i.e. S&P, Moody's.       *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\n****************************************************************\n*/\n  CreditRating = 255,\n/*\n**********************************************************\n* Underlying security's CreditRating.                    *\n* See CreditRating (255) field for description           *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\n**********************************************************\n*/\n  UnderlyingCreditRating = 256,\n/*\n**********************************************************\n* Multileg instrument's individual leg security's        *\n* CreditRating.                                          *\n* See CreditRating (255) field for description           *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\n**********************************************************\n*/\n  LegCreditRating = 257,\n/*\n**************************************************************\n* Driver and part of trade in the event that the Security    *\n* Master file was wrong at the point of entry(Note tag # was *\n* reserved in FIX 4.1, added in FIX 4.3)                     *\n**************************************************************\n*/\n  TradedFlatSwitch = 258,\n/*\n****************************************************************\n* BasisFeatureDate allows requesting firms within fixed income *\n* the ability to request an alternative yield-to-worst,        *\n* -maturity, -extended or other call. This flows through the   *\n* confirm process.                                             *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3)       *\n* (prior to FIX 4.4 field was of type UTCDate)                 *\n****************************************************************\n*/\n  BasisFeatureDate = 259,\n/*\n**********************************************************\n* Price for BasisFeatureDate.                            *\n* See BasisFeatureDate (259)                             *\n* (Note tag # was reserved in FIX 4.1, added in FIX 4.3) *\n**********************************************************\n*/\n  BasisFeaturePrice = 260,\n/*\n*********************************************\n* Unique identifier for Market Data Request *\n*********************************************\n*/\n  MDReqID = 262,\n/*\n*****************************\n* Subscription Request Type *\n*****************************\n*/\n  SubscriptionRequestType = 263,\n/*\n***********************************************************\n* Depth of market for Book Snapshot / Incremental updates *\n* 0 - full book depth                                     *\n* 1 - top of book                                         *\n* 2 and above - book depth (number of levels)             *\n***********************************************************\n*/\n  MarketDepth = 264,\n/*\n*********************************************\n* Specifies the type of Market Data update. *\n*********************************************\n*/\n  MDUpdateType = 265,\n/*\n***************************************************************\n* Specifies whether or not book entries should be aggregated. *\n* (Not specified) = broker option                             *\n***************************************************************\n*/\n  AggregatedBook = 266,\n/*\n******************************\n* Type of market data entry. *\n******************************\n*/\n  MDEntryType = 269,\n/*\n***********************************\n* Price of the Market Data Entry. *\n***********************************\n*/\n  MDEntryPx = 270,\n/*\n************************************************************\n* Quantity or volume represented by the Market Data Entry. *\n************************************************************\n*/\n  MDEntrySize = 271,\n/*\n************************************************\n* Date of Market Data Entry.                   *\n* (prior to FIX 4.4 field was of type UTCDate) *\n************************************************\n*/\n  MDEntryDate = 272,\n/*\n******************************\n* Time of Market Data Entry. *\n******************************\n*/\n  MDEntryTime = 273,\n/*\n****************************\n* Direction of the \"tick\". *\n****************************\n*/\n  TickDirection = 274,\n/*\n*********************************\n* Market posting quote / trade. *\n* Valid values:                 *\n* See \"Appendix 6-C\"            *\n*********************************\n*/\n  MDMkt = 275,\n/*\n**********************************************************\n* Space-delimited list of conditions describing a quote. *\n**********************************************************\n*/\n  QuoteCondition = 276,\n/*\n******************************\n* Type of market data entry. *\n******************************\n*/\n  TradeCondition = 277,\n/*\n****************************************\n* Unique Market Data Entry identifier. *\n****************************************\n*/\n  MDEntryID = 278,\n/*\n**************************************\n* Type of Market Data update action. *\n**************************************\n*/\n  MDUpdateAction = 279,\n/*\n*****************************************\n* Refers to a previous MDEntryID (278). *\n*****************************************\n*/\n  MDEntryRefID = 280,\n/*\n******************************************************\n* Reason for the rejection of a Market Data request. *\n******************************************************\n*/\n  MDReqRejReason = 281,\n/*\n*************************************\n* Originator of a Market Data Entry *\n*************************************\n*/\n  MDEntryOriginator = 282,\n/*\n***********************************************\n* Identification of a Market Maker's location *\n***********************************************\n*/\n  LocationID = 283,\n/*\n*******************************************\n* Identification of a Market Maker's desk *\n*******************************************\n*/\n  DeskID = 284,\n/*\n************************\n* Reason for deletion. *\n************************\n*/\n  DeleteReason = 285,\n/*\n***************************************************************\n* Flag that identifies a market data entry. (Prior to FIX 4.3 *\n* this field was of type char)                                *\n***************************************************************\n*/\n  OpenCloseSettlFlag = 286,\n/*\n****************************************************************\n* Specifies the number of days that may elapse before delivery *\n* of the security                                              *\n****************************************************************\n*/\n  SellerDays = 287,\n/*\n***************************\n* Buying party in a trade *\n***************************\n*/\n  MDEntryBuyer = 288,\n/*\n****************************\n* Selling party in a trade *\n****************************\n*/\n  MDEntrySeller = 289,\n/*\n****************************************************************\n* Display position of a bid or offer, numbered from most       *\n* competitive to least competitive, per market side, beginning *\n* with .                                                       *\n****************************************************************\n*/\n  MDEntryPositionNo = 290,\n/*\n********************************************************\n* Identifies a firm's or a security's financial status *\n********************************************************\n*/\n  FinancialStatus = 291,\n/*\n********************************************\n* Identifies the type of Corporate Action. *\n********************************************\n*/\n  CorporateAction = 292,\n/*\n*********************\n* Default Bid Size. *\n*********************\n*/\n  DefBidSize = 293,\n/*\n***********************\n* Default Offer Size. *\n***********************\n*/\n  DefOfferSize = 294,\n/*\n*******************************************************\n* Identifies the status of the quote acknowledgement. *\n*******************************************************\n*/\n  QuoteStatus = 297,\n/*\n****************************************\n* Identifies the type of quote cancel. *\n****************************************\n*/\n  QuoteCancelType = 298,\n/*\n**************************************************************\n* Unique identifier for a quote. The QuoteEntryID stays with *\n* the quote as a static identifier even if the quote is      *\n* updated.                                                   *\n**************************************************************\n*/\n  QuoteEntryID = 299,\n/*\n******************************\n* Reason Quote was rejected: *\n******************************\n*/\n  QuoteRejectReason = 300,\n/*\n****************************************************************\n* Level of Response requested from receiver of quote messages. *\n* A default value should be bilaterally agreed.                *\n****************************************************************\n*/\n  QuoteResponseLevel = 301,\n/*\n********************************\n* Unique id for the Quote Set. *\n********************************\n*/\n  QuoteSetID = 302,\n/*\n*******************************************************\n* Indicates the type of Quote Request being generated *\n*******************************************************\n*/\n  QuoteRequestType = 303,\n/*\n*********************************************\n* Total number of quotes for the quote set. *\n*********************************************\n*/\n  TotNoQuoteEntries = 304,\n/*\n*************************************************\n* Underlying security's SecurityIDSource.       *\n* Valid values: see SecurityIDSource (22) field *\n*************************************************\n*/\n  UnderlyingSecurityIDSource = 305,\n/*\n*****************************************\n* Underlying security's Issuer.         *\n* See Issuer (06) field for description *\n*****************************************\n*/\n  UnderlyingIssuer = 306,\n/*\n*******************************************\n* Description of the Underlying security. *\n* See SecurityDesc(107).                  *\n*******************************************\n*/\n  UnderlyingSecurityDesc = 307,\n/*\n**********************************************************\n* Underlying security's SecurityExchange. Can be used to *\n* identify the underlying security.                      *\n* Valid values: see SecurityExchange (207)               *\n**********************************************************\n*/\n  UnderlyingSecurityExchange = 308,\n/*\n*********************************************\n* Underlying security's SecurityID.         *\n* See SecurityID (48) field for description *\n*********************************************\n*/\n  UnderlyingSecurityID = 309,\n/*\n***************************************************************\n* Underlying security's SecurityType.                         *\n* Valid values: see SecurityType (167) field                  *\n* (see below for details concerning this fields use in        *\n* conjunction with SecurityType=REPO)                         *\n* The following applies when used in conjunction with         *\n* SecurityType=REPO                                           *\n* Represents the general or specific type of security that    *\n* underlies a financing agreement                             *\n* Valid values for SecurityType=REPO:                         *\n* If bonds of a particular issuer or country are wanted in an *\n* Order or are in the basket of an Execution and the          *\n* SecurityType is not granular enough, include the            *\n* UnderlyingIssuer (306), UnderlyingCountryOfIssue (592),     *\n* UnderlyingProgram, UnderlyingRegType and/or <               *\n* UnderlyingStipulations > block e.g.:                        *\n***************************************************************\n*/\n  UnderlyingSecurityType = 310,\n/*\n*****************************************\n* Underlying security's Symbol.         *\n* See Symbol (55) field for description *\n*****************************************\n*/\n  UnderlyingSymbol = 311,\n/*\n********************************************\n* Underlying security's SymbolSfx.         *\n* See SymbolSfx (65) field for description *\n********************************************\n*/\n  UnderlyingSymbolSfx = 312,\n/*\n*************************************************************\n* Underlying security's MaturityMonthYear. Can be used with *\n* standardized derivatives vs. the UnderlyingMaturityDate   *\n* (542) field.                                              *\n* See MaturityMonthYear (200) field for description         *\n*************************************************************\n*/\n  UnderlyingMaturityMonthYear = 313,\n/*\n*****************************************************\n* Put or call indicator of the underlying security. *\n* See PutOrCall(201).                               *\n*****************************************************\n*/\n  UnderlyingPutOrCall = 315,\n/*\n***********************************************\n* Underlying security's StrikePrice.          *\n* See StrikePrice (202) field for description *\n***********************************************\n*/\n  UnderlyingStrikePrice = 316,\n/*\n************************************************\n* Underlying security's OptAttribute.          *\n* See OptAttribute (206) field for description *\n************************************************\n*/\n  UnderlyingOptAttribute = 317,\n/*\n***********************************************************\n* Underlying security's Currency.                         *\n* See Currency (5) field for description and valid values *\n***********************************************************\n*/\n  UnderlyingCurrency = 318,\n/*\n***********************************************\n* Unique ID of a Security Definition Request. *\n***********************************************\n*/\n  SecurityReqID = 320,\n/*\n****************************************\n* Type of Security Definition Request. *\n****************************************\n*/\n  SecurityRequestType = 321,\n/*\n***********************************************\n* Unique ID of a Security Definition message. *\n***********************************************\n*/\n  SecurityResponseID = 322,\n/*\n*************************************************\n* Type of Security Definition message response. *\n*************************************************\n*/\n  SecurityResponseType = 323,\n/*\n*************************************************************\n* Unique ID of a Security Status Request or a Security Mass *\n* Status Request message.                                   *\n*************************************************************\n*/\n  SecurityStatusReqID = 324,\n/*\n**************************************************************\n* Indicates whether or not message is being sent as a result *\n* of a subscription request or not.                          *\n**************************************************************\n*/\n  UnsolicitedIndicator = 325,\n/*\n****************************************************************\n* Identifies the trading status applicable to the transaction. *\n****************************************************************\n*/\n  SecurityTradingStatus = 326,\n/*\n*************************************************************\n* Denotes the reason for the Opening Delay or Trading Halt. *\n*************************************************************\n*/\n  HaltReason = 327,\n/*\n*************************************************************\n* Indicates whether or not the halt was due to Common Stock *\n* trading being halted.                                     *\n*************************************************************\n*/\n  InViewOfCommon = 328,\n/*\n************************************************************\n* Indicates whether or not the halt was due to the Related *\n* Security being halted.                                   *\n************************************************************\n*/\n  DueToRelated = 329,\n/*\n********************\n* Quantity bought. *\n********************\n*/\n  BuyVolume = 330,\n/*\n******************\n* Quantity sold. *\n******************\n*/\n  SellVolume = 331,\n/*\n***************************************************************\n* Represents an indication of the high end of the price range *\n* for a security prior to the open or reopen                  *\n***************************************************************\n*/\n  HighPx = 332,\n/*\n**************************************************************\n* Represents an indication of the low end of the price range *\n* for a security prior to the open or reopen                 *\n**************************************************************\n*/\n  LowPx = 333,\n/*\n**************************************\n* Identifies the type of adjustment. *\n**************************************\n*/\n  Adjustment = 334,\n/*\n**************************************************\n* Unique ID of a Trading Session Status message. *\n**************************************************\n*/\n  TradSesReqID = 335,\n/*\n***************************************************************\n* Identifier for a trading session.                           *\n* A trading session spans an extended period of time that can *\n* also be expressed informally in terms of the trading day.   *\n* Usage is determined by market or counterparties.            *\n* To specify good for session where session spans more than   *\n* one calendar day, use TimeInForce = 0 (Day) in conjunction  *\n* with TradingSessionID(336).                                 *\n* Bilaterally agreed values of data type \"String\" that start  *\n* with a character can be used for backward compatibility.    *\n***************************************************************\n*/\n  TradingSessionID = 336,\n/*\n******************************************************\n* Identifies the trader (e.g. \"badge number\") of the *\n* ContraBroker.                                      *\n******************************************************\n*/\n  ContraTrader = 337,\n/*\n*********************\n* Method of trading *\n*********************\n*/\n  TradSesMethod = 338,\n/*\n************************\n* Trading Session Mode *\n************************\n*/\n  TradSesMode = 339,\n/*\n*********************************\n* State of the trading session. *\n*********************************\n*/\n  TradSesStatus = 340,\n/*\n****************************************\n* Starting time of the trading session *\n****************************************\n*/\n  TradSesStartTime = 341,\n/*\n**********************************************\n* Time of the opening of the trading session *\n**********************************************\n*/\n  TradSesOpenTime = 342,\n/*\n*************************************************\n* Time of the pre-closed of the trading session *\n*************************************************\n*/\n  TradSesPreCloseTime = 343,\n/*\n***************************************\n* Closing time of the trading session *\n***************************************\n*/\n  TradSesCloseTime = 344,\n/*\n***********************************\n* End time of the trading session *\n***********************************\n*/\n  TradSesEndTime = 345,\n/*\n***********************************\n* Number of orders in the market. *\n***********************************\n*/\n  NumberOfOrders = 346,\n/*\n*****************************************************\n* Type of message encoding (non-ASCII (non-English) *\n* characters) used in a message's \"Encoded\" fields. *\n*****************************************************\n*/\n  MessageEncoding = 347,\n/*\n***************************************************************\n* Byte length of encoded (non-ASCII characters) EncodedIssuer *\n* (349) field.                                                *\n***************************************************************\n*/\n  EncodedIssuerLen = 348,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the Issuer  *\n* field in the encoded format specified via the                *\n* MessageEncoding (347) field. If used, the ASCII (English)    *\n* representation should also be specified in the Issuer field. *\n****************************************************************\n*/\n  EncodedIssuer = 349,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedSecurityDesc (351) field.              *\n*************************************************\n*/\n  EncodedSecurityDescLen = 350,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* SecurityDesc (107) field in the encoded format specified via *\n* the MessageEncoding (347) field. If used, the ASCII          *\n* (English) representation should also be specified in the     *\n* SecurityDesc field.                                          *\n****************************************************************\n*/\n  EncodedSecurityDesc = 351,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedListExecInst (353) field.              *\n*************************************************\n*/\n  EncodedListExecInstLen = 352,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* ListExecInst (69) field in the encoded format specified via *\n* the MessageEncoding (347) field. If used, the ASCII         *\n* (English) representation should also be specified in the    *\n* ListExecInst field.                                         *\n***************************************************************\n*/\n  EncodedListExecInst = 353,\n/*\n*************************************************************\n* Byte length of encoded (non-ASCII characters) EncodedText *\n* (355) field.                                              *\n*************************************************************\n*/\n  EncodedTextLen = 354,\n/*\n*************************************************************\n* Encoded (non-ASCII characters) representation of the Text *\n* (58) field in the encoded format specified via the        *\n* MessageEncoding (347) field. If used, the ASCII (English) *\n* representation should also be specified in the Text(58)   *\n* field.                                                    *\n*************************************************************\n*/\n  EncodedText = 355,\n/*\n****************************************************************\n* Byte length of encoded (non-ASCII characters) EncodedSubject *\n* (357) field.                                                 *\n****************************************************************\n*/\n  EncodedSubjectLen = 356,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the Subject *\n* (147) field in the encoded format specified via the          *\n* MessageEncoding (347) field. If used, the ASCII (English)    *\n* representation should also be specified in the Subject       *\n* field.                                                       *\n****************************************************************\n*/\n  EncodedSubject = 357,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedHeadline (359) field.                  *\n*************************************************\n*/\n  EncodedHeadlineLen = 358,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* Headline (148) field in the encoded format specified via the *\n* MessageEncoding (347) field. If used, the ASCII (English)    *\n* representation should also be specified in the Headline      *\n* field.                                                       *\n****************************************************************\n*/\n  EncodedHeadline = 359,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedAllocText (361) field.                 *\n*************************************************\n*/\n  EncodedAllocTextLen = 360,\n/*\n*************************************************************\n* Encoded (non-ASCII characters) representation of the      *\n* AllocText (161) field in the encoded format specified via *\n* the MessageEncoding (347) field. If used, the ASCII       *\n* (English) representation should also be specified in the  *\n* AllocText field.                                          *\n*************************************************************\n*/\n  EncodedAllocText = 361,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedUnderlyingIssuer (363) field.          *\n*************************************************\n*/\n  EncodedUnderlyingIssuerLen = 362,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* UnderlyingIssuer (306) field in the encoded format specified *\n* via the MessageEncoding (347) field. If used, the ASCII      *\n* (English) representation should also be specified in the     *\n* UnderlyingIssuer field.                                      *\n****************************************************************\n*/\n  EncodedUnderlyingIssuer = 363,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedUnderlyingSecurityDesc (365) field.    *\n*************************************************\n*/\n  EncodedUnderlyingSecurityDescLen = 364,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* UnderlyingSecurityDesc (307) field in the encoded format    *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the UnderlyingSecurityeDesc field.                          *\n***************************************************************\n*/\n  EncodedUnderlyingSecurityDesc = 365,\n/*\n****************************************************************\n* Executed price for an AllocAccount (79) entry used when      *\n* using \"executed price\" vs. \"average price\" allocations (e.g. *\n* Japan).                                                      *\n****************************************************************\n*/\n  AllocPrice = 366,\n/*\n**************************************************************\n* Indicates expiration time of this particular QuoteSet      *\n* (always expressed in UTC (Universal Time Coordinated, also *\n* known as \"GMT\")                                            *\n**************************************************************\n*/\n  QuoteSetValidUntilTime = 367,\n/*\n************************************\n* Reason Quote Entry was rejected: *\n************************************\n*/\n  QuoteEntryRejectReason = 368,\n/*\n*****************************************************\n* The tag number of the FIX field being referenced. *\n*****************************************************\n*/\n  RefTagID = 371,\n/*\n*********************************************************\n* The MsgType (35) of the FIX message being referenced. *\n*********************************************************\n*/\n  RefMsgType = 372,\n/*\n********************************************\n* Identifies the Bid Request message type. *\n********************************************\n*/\n  BidRequestTransType = 374,\n/*\n********************************************************\n* Identifies contra broker. Standard NASD market-maker *\n* mnemonic is preferred.                               *\n********************************************************\n*/\n  ContraBroker = 375,\n/*\n********************************************************\n* ID used to represent this transaction for compliance *\n* purposes (e.g. OATS reporting).                      *\n********************************************************\n*/\n  ComplianceID = 376,\n/*\n*****************************************************\n* Indicates whether or not the order was solicited. *\n*****************************************************\n*/\n  SolicitedFlag = 377,\n/*\n****************************************************************\n* The reason for restatement when an ExecutionReport(35=8) or  *\n* TradeCaptureReport(35=AE) message is sent with ExecType(150) *\n* = D (Restated) or used when communicating an unsolicited     *\n* cancel.                                                      *\n****************************************************************\n*/\n  ExecRestatementReason = 378,\n/*\n*************************************************************\n* The value of the business-level \"ID\" field on the message *\n* being referenced.                                         *\n*************************************************************\n*/\n  BusinessRejectRefID = 379,\n/*\n*********************************************************\n* Code to identify reason for a Business Message Reject *\n* message.                                              *\n*********************************************************\n*/\n  BusinessRejectReason = 380,\n/*\n****************************************************************\n* Total amount traded (i.e. quantity * price) expressed in     *\n* units of currency. For FX Futures this is used to express    *\n* the notional value of a fill when quantity fields are        *\n* expressed in terms of contract size (i.e. quantity * price * *\n* contract size).                                              *\n****************************************************************\n*/\n  GrossTradeAmt = 381,\n/*\n***********************************\n* Total volume (quantity) traded. *\n***********************************\n*/\n  TotalVolumeTraded = 387,\n/*\n***************************************************************\n* Code to identify the price a DiscretionOffsetValue (389) is *\n* related to and should be mathematically added to.           *\n***************************************************************\n*/\n  DiscretionInst = 388,\n/*\n*************************************************************\n* Amount (signed) added to the \"related to\" price specified *\n* via DiscretionInst (388), in the context of               *\n* DiscretionOffsetType (842)                                *\n* (Prior to FIX 4.4 this field was of type PriceOffset)     *\n*************************************************************\n*/\n  DiscretionOffsetValue = 389,\n/*\n***************************************************************\n* For bid lists, unique identifier for BidResponse(35=I) as   *\n* assigned by sell-side (broker, exchange, ECN). Uniqueness   *\n* must be guaranteed within a single trading day.             *\n*                                                             *\n* For quotes, unique identifier for the bid side of the quote *\n* assigned by the quote issuer.                               *\n***************************************************************\n*/\n  BidID = 390,\n/*\n**************************************************************\n* Unique identifier for a Bid Request as assigned by         *\n* institution. Uniqueness must be guaranteed within a single *\n* trading day.                                               *\n**************************************************************\n*/\n  ClientBidID = 391,\n/*\n************************************\n* Descriptive name for list order. *\n************************************\n*/\n  ListName = 392,\n/*\n**************************************************************\n* Total number of securities.                                *\n* (Prior to FIX 4.4 this field was named TotalNumSecurities) *\n**************************************************************\n*/\n  TotNoRelatedSym = 393,\n/*\n*********************************************\n* Code to identify the type of Bid Request. *\n*********************************************\n*/\n  BidType = 394,\n/*\n****************************\n* Total number of tickets. *\n****************************\n*/\n  NumTickets = 395,\n/*\n***********************\n* Amounts in currency *\n***********************\n*/\n  SideValue1 = 396,\n/*\n***********************\n* Amounts in currency *\n***********************\n*/\n  SideValue2 = 397,\n/*\n*****************************************************\n* Code to identify the type of BidDescriptor (400). *\n*****************************************************\n*/\n  BidDescriptorType = 399,\n/*\n************************************************************\n* BidDescriptor value. Usage depends upon BidDescriptorTyp *\n* (399).                                                   *\n* If BidDescriptorType = 1                                 *\n* Industrials etc - Free text                              *\n* If BidDescriptorType = 2                                 *\n* \"FR\" etc - ISO Country Codes                             *\n* If BidDescriptorType = 3                                 *\n* FT00, FT250, STOX - Free text                            *\n************************************************************\n*/\n  BidDescriptor = 400,\n/*\n****************************************************************\n* Code to identify which \"SideValue\" the value refers to.      *\n* SideValue1 and SideValue2 are used as opposed to Buy or Sell *\n* so that the basket can be quoted either way as Buy or Sell.  *\n****************************************************************\n*/\n  SideValueInd = 401,\n/*\n************************************************************\n* Liquidity indicator or lower limit if TotalNumSecurities *\n* (393) > 1. Represented as a percentage.                  *\n************************************************************\n*/\n  LiquidityPctLow = 402,\n/*\n**************************************************************\n* Upper liquidity indicator if TotalNumSecurities (393) > 1. *\n* Represented as a percentage.                               *\n**************************************************************\n*/\n  LiquidityPctHigh = 403,\n/*\n************************************************************\n* Value between LiquidityPctLow (402) and LiquidityPctHigh *\n* (403) in Currency                                        *\n************************************************************\n*/\n  LiquidityValue = 404,\n/*\n************************************************************\n* Eg Used in EFP trades 2% (EFP - Exchange for Physical ). *\n* Represented as a percentage.                             *\n************************************************************\n*/\n  EFPTrackingError = 405,\n/*\n**********************\n* Used in EFP trades *\n**********************\n*/\n  FairValue = 406,\n/*\n****************************************************\n* Used in EFP trades. Represented as a percentage. *\n****************************************************\n*/\n  OutsideIndexPct = 407,\n/*\n**********************\n* Used in EFP trades *\n**********************\n*/\n  ValueOfFutures = 408,\n/*\n*****************************************************\n* Code to identify the type of liquidity indicator. *\n*****************************************************\n*/\n  LiquidityIndType = 409,\n/*\n**********************************************************\n* Overall weighted average liquidity expressed as a % of *\n* average daily volume. Represented as a percentage.     *\n**********************************************************\n*/\n  WtAverageLiquidity = 410,\n/*\n******************************************************\n* Indicates whether or not to exchange for phsyical. *\n******************************************************\n*/\n  ExchangeForPhysical = 411,\n/*\n*******************************\n* Value of stocks in Currency *\n*******************************\n*/\n  OutMainCntryUIndex = 412,\n/*\n***************************************************************\n* Percentage of program that crosses in Currency. Represented *\n* as a percentage.                                            *\n***************************************************************\n*/\n  CrossPercent = 413,\n/*\n***************************************************************\n* Code to identify the desired frequency of progress reports. *\n***************************************************************\n*/\n  ProgRptReqs = 414,\n/*\n**********************************************************\n* Time in minutes between each ListStatus report sent by *\n* SellSide. Zero means don't send status.                *\n**********************************************************\n*/\n  ProgPeriodInterval = 415,\n/*\n****************************************************************\n* Code to represent whether value is net (inclusive of tax) or *\n* gross.                                                       *\n****************************************************************\n*/\n  IncTaxInd = 416,\n/*\n*****************************************************\n* Indicates the total number of bidders on the list *\n*****************************************************\n*/\n  NumBidders = 417,\n/*\n*******************************************************\n* Code to represent the type of trade.                *\n* (Prior to FIX 4.4 this field was named \"TradeType\") *\n*******************************************************\n*/\n  BidTradeType = 418,\n/*\n*******************************************\n* Code to represent the basis price type. *\n*******************************************\n*/\n  BasisPxType = 419,\n/*\n*****************************\n* ISO Country Code in field *\n*****************************\n*/\n  Country = 421,\n/*\n***************************************************************\n* Total number of strike price entries across all messages.   *\n* Should be the sum of all NoStrikes (428) in each message    *\n* that has repeating strike price entries related to the same *\n* ListID (66). Used to support fragmentation.                 *\n***************************************************************\n*/\n  TotNoStrikes = 422,\n/*\n*************************************\n* Code to represent the price type. *\n*************************************\n*/\n  PriceType = 423,\n/*\n****************************************************************\n* For GT orders, the OrderQty (38) less all quantity (adjusted *\n* for stock splits) that traded on previous days. DayOrderQty  *\n* (424) = OrderQty - (CumQty (14) - DayCumQty (425))           *\n****************************************************************\n*/\n  DayOrderQty = 424,\n/*\n*************************************************\n* Quantity on a GT order that has traded today. *\n*************************************************\n*/\n  DayCumQty = 425,\n/*\n****************************************************************\n* The average price for quantity on a GT order that has traded *\n* today.                                                       *\n****************************************************************\n*/\n  DayAvgPx = 426,\n/*\n********************************************************\n* Code to identify whether to book out executions on a *\n* part-filled GT order on the day of execution or to   *\n* accumulate.                                          *\n********************************************************\n*/\n  GTBookingInst = 427,\n/*\n**************************************\n* Code to represent the status type. *\n**************************************\n*/\n  ListStatusType = 429,\n/*\n****************************************************************\n* Code to represent whether value is net (inclusive of tax) or *\n* gross.                                                       *\n****************************************************************\n*/\n  NetGrossInd = 430,\n/*\n*************************************************\n* Code to represent the status of a list order. *\n*************************************************\n*/\n  ListOrderStatus = 431,\n/*\n****************************************************************\n* Date of order expiration (last day the order can trade),     *\n* always expressed in terms of the local market date. The time *\n* at which the order expires is determined by the local        *\n* market's business practices                                  *\n****************************************************************\n*/\n  ExpireDate = 432,\n/*\n*********************************************\n* Identifies the type of ListExecInst (69). *\n*********************************************\n*/\n  ListExecInstType = 433,\n/*\n*************************************************************\n* Identifies the type of request that a Cancel Reject is in *\n* response to.                                              *\n*************************************************************\n*/\n  CxlRejResponseTo = 434,\n/*\n**********************************************\n* Underlying security's CouponRate.          *\n* See CouponRate (223) field for description *\n**********************************************\n*/\n  UnderlyingCouponRate = 435,\n/*\n******************************************************\n* Underlying security's ContractMultiplier.          *\n* See ContractMultiplier (231) field for description *\n******************************************************\n*/\n  UnderlyingContractMultiplier = 436,\n/*\n************************************************\n* Quantity traded with the ContraBroker (375). *\n************************************************\n*/\n  ContraTradeQty = 437,\n/*\n****************************************************************\n* Identifes the time of the trade with the ContraBroker (375). *\n* (always expressed in UTC (Universal Time Coordinated, also   *\n* known as \"GMT\")                                              *\n****************************************************************\n*/\n  ContraTradeTime = 438,\n/*\n*********************************************************\n* Number of Securites between LiquidityPctLow (402) and *\n* LiquidityPctHigh (403) in Currency.                   *\n*********************************************************\n*/\n  LiquidityNumSecurities = 441,\n/*\n***************************************************************\n* Used to indicate how the multi-legged security (e.g. option *\n* strategies, spreads, etc.) is being reported.               *\n***************************************************************\n*/\n  MultiLegReportingType = 442,\n/*\n***************************************************************\n* The time at which current market prices are used to         *\n* determine the value of a basket.                            *\n* In negotiation workflows where a spread-to-benchmark price  *\n* is negotiated, this is the pre-determined time at which the *\n* benchmark is to be spotted.                                 *\n***************************************************************\n*/\n  StrikeTime = 443,\n/*\n***************************************************\n* Free format text string related to List Status. *\n***************************************************\n*/\n  ListStatusText = 444,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedListStatusText (446) field.            *\n*************************************************\n*/\n  EncodedListStatusTextLen = 445,\n/*\n**************************************************************\n* Encoded (non-ASCII characters) representation of the       *\n* ListStatusText (444) field in the encoded format specified *\n* via the MessageEncoding (347) field. If used, the ASCII    *\n* (English) representation should also be specified in the   *\n* ListStatusText field.                                      *\n**************************************************************\n*/\n  EncodedListStatusText = 446,\n/*\n*************************************************************\n* Identifies class or source of the PartyID (448) value.    *\n* Required if PartyID is specified. Note: applicable values *\n* depend upon PartyRole (452) specified.                    *\n* See \"Appendix 6-G - Use of <Parties> Component Block\"     *\n*************************************************************\n*/\n  PartyIDSource = 447,\n/*\n****************************************************************\n* Party identifier/code. See PartyIDSource (447) and PartyRole *\n* (452).                                                       *\n* See \"Appendix 6-G - Use of <Parties> Component Block\"        *\n****************************************************************\n*/\n  PartyID = 448,\n/*\n****************************************************************\n* Net change from previous day's closing price vs. last traded *\n* price.                                                       *\n****************************************************************\n*/\n  NetChgPrevDay = 451,\n/*\n***************************************************************\n* Identifies the type or role of the PartyID (448) specified. *\n* See \"Appendix 6-G - Use of <Parties> Component Block\"       *\n* (see Volume : \"Glossary\" for value definitions)             *\n***************************************************************\n*/\n  PartyRole = 452,\n/*\n************************************************************\n* Alternate Security identifier value for this security of *\n* SecurityAltIDSource (456) type (e.g. CUSIP, SEDOL, ISIN, *\n* etc). Requires SecurityAltIDSource.                      *\n************************************************************\n*/\n  SecurityAltID = 455,\n/*\n****************************************************************\n* Identifies class or source of the SecurityAltID (455) value. *\n* Required if SecurityAltID is specified.                      *\n* Valid values:                                                *\n* Same valid values as the SecurityIDSource (22) field         *\n****************************************************************\n*/\n  SecurityAltIDSource = 456,\n/*\n**************************************************************\n* Alternate Security identifier value for this underlying    *\n* security of UnderlyingSecurityAltIDSource (459) type (e.g. *\n* CUSIP, SEDOL, ISIN, etc). Requires                         *\n* UnderlyingSecurityAltIDSource.                             *\n**************************************************************\n*/\n  UnderlyingSecurityAltID = 458,\n/*\n*************************************************************\n* Identifies class or source of the UnderlyingSecurityAltID *\n* (458) value. Required if UnderlyingSecurityAltID is       *\n* specified.                                                *\n* Valid values:                                             *\n* Same valid values as the SecurityIDSource (22) field      *\n*************************************************************\n*/\n  UnderlyingSecurityAltIDSource = 459,\n/*\n************************************************************\n* Indicates the type of product the security is associated *\n* with. See also the CFICode (461) and SecurityType (167)  *\n* fields.                                                  *\n************************************************************\n*/\n  Product = 460,\n/*\n***************************************************************\n* Indicates the type of security using ISO 10962 standard,    *\n* Classification of Financial Instruments (CFI code) values.  *\n* ISO 10962 is maintained by ANNA (Association of National    *\n* Numbering Agencies) acting as Registration Authority. See   *\n* \"Appendix 6-B FIX Fields Based Upon Other Standards\". See   *\n* also the Product (460) and SecurityType (167) fields. It is *\n* recommended that CFICode be used instead of SecurityType    *\n* (167) for non-Fixed Income instruments.                     *\n* A subset of possible values applicable to FIX usage are     *\n* identified in \"Appendix 6-D CFICode Usage - ISO 10962       *\n* Classification of Financial Instruments (CFI code)\"         *\n***************************************************************\n*/\n  CFICode = 461,\n/*\n****************************************\n* Underlying security's Product.       *\n* Valid values: see Product(460) field *\n****************************************\n*/\n  UnderlyingProduct = 462,\n/*\n*****************************************\n* Underlying security's CFICode.        *\n* Valid values: see CFICode (461) field *\n*****************************************\n*/\n  UnderlyingCFICode = 463,\n/*\n***********************************************************\n* Common reference passed to a post-trade booking process *\n* (e.g. industry matching utility).                       *\n***********************************************************\n*/\n  BookingRefID = 466,\n/*\n************************************************************\n* Unique identifier for a specific NoAllocs (78) repeating *\n* group instance (e.g. for an AllocAccount).               *\n************************************************************\n*/\n  IndividualAllocID = 467,\n/*\n****************************************************************\n* Specifies which direction to round For CIV - indicates       *\n* whether or not the quantity of shares/units is to be rounded *\n* and in which direction where CashOrdQty (152) or (for CIV    *\n* only) OrderPercent (516) are specified on an order.          *\n* The default is for rounding to be at the discretion of the   *\n* executing broker or fund manager.                            *\n* e.g. for an order specifying CashOrdQty or OrderPercent if   *\n* the calculated number of shares/units was 325.76 and         *\n* RoundingModulus (469) was 0 - \"round down\" would give 320    *\n* units, 1 - \"round up\" would give 330 units and \"round to     *\n* nearest\" would give 320 units.                               *\n****************************************************************\n*/\n  RoundingDirection = 468,\n/*\n****************************************************************\n* For CIV - a float value indicating the value to which        *\n* rounding is required.                                        *\n* i.e. 0 means round to a multiple of 0 units/shares; 0.5      *\n* means round to a multiple of 0.5 units/shares.               *\n* The default, if RoundingDirection (468) is specified without *\n* RoundingModulus, is to round to a whole unit/share.          *\n****************************************************************\n*/\n  RoundingModulus = 469,\n/*\n***************************************************************\n* ISO Country code of instrument issue (e.g. the country      *\n* portion typically used in ISIN). Can be used in conjunction *\n* with non-ISIN SecurityID (48) (e.g. CUSIP for Municipal     *\n* Bonds without ISIN) to provide uniqueness.                  *\n***************************************************************\n*/\n  CountryOfIssue = 470,\n/*\n***************************************************\n* A two-character state or province abbreviation. *\n***************************************************\n*/\n  StateOrProvinceOfIssue = 471,\n/*\n*********************************************\n* Identifies the locale or region of issue. *\n*********************************************\n*/\n  LocaleOfIssue = 472,\n/*\n*************************************************************\n* Set of Correspondence address details, possibly including *\n* phone, fax, etc.                                          *\n*************************************************************\n*/\n  MailingDtls = 474,\n/*\n************************************************************\n* The ISO 366 Country code (2 character) identifying which *\n* country the beneficial investor is resident for tax      *\n* purposes.                                                *\n************************************************************\n*/\n  InvestorCountryOfResidence = 475,\n/*\n**********************************************************\n* \"Settlement Payment Reference\" - A free format Payment *\n* reference to assist with reconciliation, e.g. a Client *\n* and/or Order ID number.                                *\n**********************************************************\n*/\n  PaymentRef = 476,\n/*\n****************************************************************\n* A code identifying the payment method for a (fractional)     *\n* distribution.                                                *\n* 13 through 998 are reserved for future use                   *\n* Values above 1000 are available for use by private agreement *\n* among counterparties                                         *\n****************************************************************\n*/\n  DistribPaymentMethod = 477,\n/*\n************************************************************\n* Specifies currency to be used for Cash Distributions see *\n* \"Appendix 6-A Valid Currency Codes\".                     *\n************************************************************\n*/\n  CashDistribCurr = 478,\n/*\n*************************************************************\n* Specifies currency to be use for Commission (12) if the   *\n* Commission currency is different from the Deal Currency - *\n* see \"Appendix 6-A; Valid Currency Codes\".                 *\n*************************************************************\n*/\n  CommCurrency = 479,\n/*\n******************************************************\n* For CIV - A one character code identifying whether *\n* Cancellation rights/Cooling off period applies.    *\n******************************************************\n*/\n  CancellationRights = 480,\n/*\n*************************************************************\n* A one character code identifying Money laundering status. *\n*************************************************************\n*/\n  MoneyLaunderingStatus = 481,\n/*\n***************************************************\n* Free format text to specify mailing instruction *\n* requirements, e.g. \"no third party mailings\".   *\n***************************************************\n*/\n  MailingInst = 482,\n/*\n***************************************************************\n* For CIV A date and time stamp to indicate the time a CIV    *\n* order was booked by the fund manager.                       *\n* For derivatives a date and time stamp to indicate when this *\n* order was booked with the agent prior to submission to the  *\n* VMU. Indicates the time at which the order was finalized    *\n* between the buyer and seller prior to submission.           *\n***************************************************************\n*/\n  TransBkdTime = 483,\n/*\n****************************************************************\n* For CIV - Identifies how the execution price LastPx (31) was *\n* calculated from the fund unit/share price(s) calculated at   *\n* the fund valuation point.                                    *\n****************************************************************\n*/\n  ExecPriceType = 484,\n/*\n****************************************************************\n* For CIV the amount or percentage by which the fund           *\n* unit/share price was adjusted, as indicated by ExecPriceType *\n* (484)                                                        *\n****************************************************************\n*/\n  ExecPriceAdjustment = 485,\n/*\n********************************************************\n* The date of birth applicable to the individual, e.g. *\n* required to open some types of tax-exempt account.   *\n********************************************************\n*/\n  DateOfBirth = 486,\n/*\n****************************************************\n* Identifies Trade Report message transaction type *\n* (Prior to FIX 4.4 this field was of type char)   *\n****************************************************\n*/\n  TradeReportTransType = 487,\n/*\n****************************************************************\n* The name of the payment card holder as specified on the card *\n* being used for payment.                                      *\n****************************************************************\n*/\n  CardHolderName = 488,\n/*\n***********************************************************\n* The number of the payment card as specified on the card *\n* being used for payment.                                 *\n***********************************************************\n*/\n  CardNumber = 489,\n/*\n****************************************************************\n* The expiry date of the payment card as specified on the card *\n* being used for payment.                                      *\n****************************************************************\n*/\n  CardExpDate = 490,\n/*\n************************************************************\n* The issue number of the payment card as specified on the *\n* card being used for payment. This is only applicable to  *\n* certain types of card.                                   *\n************************************************************\n*/\n  CardIssNum = 491,\n/*\n****************************************************************\n* A code identifying the Settlement payment method. 16 through *\n* 998 are reserved for future use                              *\n* Values above 1000 are available for use by private agreement *\n* among counterparties                                         *\n****************************************************************\n*/\n  PaymentMethod = 492,\n/*\n**************************************************************\n* For CIV - a fund manager-defined code identifying which of *\n* the fund manager's account types is required.              *\n**************************************************************\n*/\n  RegistAcctType = 493,\n/*\n****************************************************************\n* Free format text defining the designation to be associated   *\n* with a holding on the register. Used to identify assets of a *\n* specific underlying investor using a common registration,    *\n* e.g. a broker's nominee or street name.                      *\n****************************************************************\n*/\n  Designation = 494,\n/*\n****************************************************************\n* For CIV - a code identifying the type of tax exempt account  *\n* in which purchased shares/units are to be held.              *\n* 30 - 998 are reserved for future use by recognized taxation  *\n* authorities                                                  *\n* 999=Other                                                    *\n* values above 1000 are available for use by private agreement *\n* among counterparties                                         *\n****************************************************************\n*/\n  TaxAdvantageType = 495,\n/*\n****************************************************************\n* Text indicating reason(s) why a Registration Instruction has *\n* been rejected.                                               *\n****************************************************************\n*/\n  RegistRejReasonText = 496,\n/*\n***********************************************************\n* A one character code identifying whether the Fund based *\n* renewal commission is to be waived.                     *\n***********************************************************\n*/\n  FundRenewWaiv = 497,\n/*\n******************************************************\n* Name of local agent bank if for cash distributions *\n******************************************************\n*/\n  CashDistribAgentName = 498,\n/*\n***************************************************************\n* BIC (Bank Identification Code--Swift managed) code of agent *\n* bank for cash distributions                                 *\n***************************************************************\n*/\n  CashDistribAgentCode = 499,\n/*\n***************************************************\n* Account number at agent bank for distributions. *\n***************************************************\n*/\n  CashDistribAgentAcctNumber = 500,\n/*\n***************************************************************\n* Free format Payment reference to assist with reconciliation *\n* of distributions.                                           *\n***************************************************************\n*/\n  CashDistribPayRef = 501,\n/*\n****************************************************\n* Name of account at agent bank for distributions. *\n****************************************************\n*/\n  CashDistribAgentAcctName = 502,\n/*\n*************************************************************\n* The start date of the card as specified on the card being *\n* used for payment.                                         *\n*************************************************************\n*/\n  CardStartDate = 503,\n/*\n**********************************************************\n* The date written on a cheque or date payment should be *\n* submitted to the relevant clearing system.             *\n**********************************************************\n*/\n  PaymentDate = 504,\n/*\n****************************************************************\n* Identifies sender of a payment, e.g. the payment remitter or *\n* a customer reference number.                                 *\n****************************************************************\n*/\n  PaymentRemitterID = 505,\n/*\n**************************************************************\n* Registration status as returned by the broker or (for CIV) *\n* the fund manager:                                          *\n**************************************************************\n*/\n  RegistStatus = 506,\n/*\n**************************************************************\n* Reason(s) why Registration Instructions has been rejected. *\n* The reason may be further amplified in the                 *\n* RegistRejReasonCode field.                                 *\n* Possible values of reason code include:                    *\n**************************************************************\n*/\n  RegistRejReasonCode = 507,\n/*\n**************************************************************\n* Reference identifier for the RegistID (53) with Cancel and *\n* Replace RegistTransType (54) transaction types.            *\n**************************************************************\n*/\n  RegistRefID = 508,\n/*\n**********************************************************\n* Set of Registration name and address details, possibly *\n* including phone, fax etc.                              *\n**********************************************************\n*/\n  RegistDtls = 509,\n/*\n***********************************************************\n* Email address relating to Registration name and address *\n* details                                                 *\n***********************************************************\n*/\n  RegistEmail = 511,\n/*\n**************************************************************\n* The amount of each distribution to go to this beneficiary, *\n* expressed as a percentage                                  *\n**************************************************************\n*/\n  DistribPercentage = 512,\n/*\n****************************************************************\n* Unique identifier of the registration details as assigned by *\n* institution or intermediary.                                 *\n****************************************************************\n*/\n  RegistID = 513,\n/*\n*********************************************************\n* Identifies Registration Instructions transaction type *\n*********************************************************\n*/\n  RegistTransType = 514,\n/*\n***************************************************************\n* For CIV - a date and time stamp to indicate the fund        *\n* valuation point with respect to which a order was priced by *\n* the fund manager.                                           *\n***************************************************************\n*/\n  ExecValuationPoint = 515,\n/*\n**************************************************************\n* For CIV specifies the approximate order quantity desired.  *\n* For a CIV Sale it specifies percentage of investor's total *\n* holding to be sold. For a CIV switch/exchange it specifies *\n* percentage of investor's cash realised from sales to be    *\n* re-invested. The executing broker, intermediary or fund    *\n* manager is responsible for converting and calculating      *\n* OrderQty (38) in shares/units for subsequent messages.     *\n**************************************************************\n*/\n  OrderPercent = 516,\n/*\n**************************************************\n* The relationship between Registration parties. *\n**************************************************\n*/\n  OwnershipType = 517,\n/*\n**************************************************************\n* Type of ContAmtValue (520).                                *\n* NOTE That Commission Amount / % in Contract Amounts is the *\n* commission actually charged, rather than the commission    *\n* instructions given in Fields 2/3.                          *\n**************************************************************\n*/\n  ContAmtType = 519,\n/*\n********************************************************\n* Value of Contract Amount, e.g. a financial amount or *\n* percentage as indicated by ContAmtType (519).        *\n********************************************************\n*/\n  ContAmtValue = 520,\n/*\n****************************************************************\n* Specifies currency for the Contract amount if different from *\n* the Deal Currency - see \"Appendix 6-A; Valid Currency        *\n* Codes\".                                                      *\n****************************************************************\n*/\n  ContAmtCurr = 521,\n/*\n*********************************\n* Identifies the type of owner. *\n*********************************\n*/\n  OwnerType = 522,\n/*\n****************************************************************\n* Sub-identifier (e.g. Clearing Account for PartyRole          *\n* (452)=Clearing Firm, Locate ID # for                         *\n* PartyRole=Locate/Lending Firm, etc). Not required when using *\n* PartyID (448), PartyIDSource (447), and PartyRole.           *\n****************************************************************\n*/\n  PartySubID = 523,\n/*\n**************************************************\n* PartyID value within a nested repeating group. *\n* Same values as PartyID (448)                   *\n**************************************************\n*/\n  NestedPartyID = 524,\n/*\n********************************************************\n* PartyIDSource value within a nested repeating group. *\n* Same values as PartyIDSource (447)                   *\n********************************************************\n*/\n  NestedPartyIDSource = 525,\n/*\n************************************************************\n* Assigned by the party which originates the order. Can be *\n* used to provide the ClOrdID (11) used by an exchange or  *\n* executing system.                                        *\n************************************************************\n*/\n  SecondaryClOrdID = 526,\n/*\n***************************************************************\n* Assigned by the party which accepts the order. Can be used  *\n* to provide the ExecID (17) used by an exchange or executing *\n* system.                                                     *\n***************************************************************\n*/\n  SecondaryExecID = 527,\n/*\n***************************************************************\n* Designates the capacity of the firm placing the order.      *\n* (as of FIX 4.3, this field replaced Rule80A (tag 47) --used *\n* in conjunction with OrderRestrictions (529) field)          *\n* (see Volume : \"Glossary\" for value definitions)             *\n***************************************************************\n*/\n  OrderCapacity = 528,\n/*\n***********************************************************\n* Restrictions associated with an order. If more than one *\n* restriction is applicable to an order, this field can   *\n* contain multiple instructions separated by space.       *\n***********************************************************\n*/\n  OrderRestrictions = 529,\n/*\n*************************************************\n* Specifies scope of Order Mass Cancel Request. *\n*************************************************\n*/\n  MassCancelRequestType = 530,\n/*\n*************************************************************\n* Specifies the action taken by counterparty order handling *\n* system as a result of the Order Mass Cancel Request       *\n*************************************************************\n*/\n  MassCancelResponse = 531,\n/*\n*************************************************\n* Reason Order Mass Cancel Request was rejected *\n*************************************************\n*/\n  MassCancelRejectReason = 532,\n/*\n*************************************************\n* Total number of orders affected by either the *\n* OrderMassActionRequest(MsgType=CA) or         *\n* OrderMassCancelRequest(MsgType=Q).            *\n*************************************************\n*/\n  TotalAffectedOrders = 533,\n/*\n*************************************************************\n* OrderID(37) of an order affected by a mass cancel or mass *\n* action request.                                           *\n*************************************************************\n*/\n  AffectedOrderID = 535,\n/*\n***************************************************************\n* SecondaryOrderID(198) of an order affected by a mass cancel *\n* or mass action request.                                     *\n***************************************************************\n*/\n  AffectedSecondaryOrderID = 536,\n/*\n****************************************************************\n* Identifies the type of quote.                                *\n* An indicative quote is used to inform a counterparty of a    *\n* market. An indicative quote does not result directly in a    *\n* trade.                                                       *\n* A tradeable quote is submitted to a market and will result   *\n* directly in a trade against other orders and quotes in a     *\n* market.                                                      *\n* A restricted tradeable quote is submitted to a market and    *\n* within a certain restriction (possibly based upon price or   *\n* quantity) will automatically trade against orders. Order     *\n* that do not comply with restrictions are sent to the quote   *\n* issuer who can choose to accept or decline the order.        *\n* A counter quote is used in the negotiation model. See Volume *\n* 7 - Product: Fixed Income for example usage.                 *\n****************************************************************\n*/\n  QuoteType = 537,\n/*\n****************************************************\n* PartyRole value within a nested repeating group. *\n* Same values as PartyRole (452)                   *\n****************************************************\n*/\n  NestedPartyRole = 538,\n/*\n**************************************************************\n* Total Amount of Accrued Interest for convertible bonds and *\n* fixed income                                               *\n**************************************************************\n*/\n  TotalAccruedInterestAmt = 540,\n/*\n*********************\n* Date of maturity. *\n*********************\n*/\n  MaturityDate = 541,\n/*\n************************************************\n* Underlying security's maturity date.         *\n* See MaturityDate (541) field for description *\n************************************************\n*/\n  UnderlyingMaturityDate = 542,\n/*\n****************************************************************\n* Values may include BIC for the depository or custodian who   *\n* maintain ownership records, the ISO country code for the     *\n* location of the record, or the value \"ZZ\" to specify         *\n* physical ownership of the security (e.g. stock certificate). *\n****************************************************************\n*/\n  InstrRegistry = 543,\n/*\n****************************************************************\n* Identifies whether an order is a margin order or a           *\n* non-margin order. This is primarily used when sending orders *\n* to Japanese exchanges to indicate sell margin or buy to      *\n* cover. The same tag could be assigned also by buy-side to    *\n* indicate the intent to sell or buy margin and the sell-side  *\n* to accept or reject (base on some validation criteria) the   *\n* margin request.                                              *\n****************************************************************\n*/\n  CashMargin = 544,\n/*\n*****************************************************\n* PartySubID value within a nested repeating group. *\n* Same values as PartySubID (523)                   *\n*****************************************************\n*/\n  NestedPartySubID = 545,\n/*\n**************************************************\n* Specifies the market scope of the market data. *\n**************************************************\n*/\n  Scope = 546,\n/*\n************************************************************\n* Defines how a server handles distribution of a truncated *\n* book. Defaults to broker option.                         *\n************************************************************\n*/\n  MDImplicitDelete = 547,\n/*\n****************************************************************\n* Identifier for a cross order. Must be unique during a given  *\n* trading day. Recommend that firms use the order date as part *\n* of the CrossID for Good Till Cancel (GT) orders.             *\n****************************************************************\n*/\n  CrossID = 548,\n/*\n*********************************************\n* Type of cross being submitted to a market *\n*********************************************\n*/\n  CrossType = 549,\n/*\n**************************************************************\n* Indicates if one side or the other of a cross order should *\n* be prioritized.                                            *\n* The definition of prioritization is left to the market. In *\n* some markets prioritization means which side of the cross  *\n* order is applied to the market first. In other markets -   *\n* prioritization may mean that the prioritized side is fully *\n* executed (sometimes referred to as the side being          *\n* protected).                                                *\n**************************************************************\n*/\n  CrossPrioritization = 550,\n/*\n***************************************************************\n* CrossID of the previous cross order (NOT the initial cross  *\n* order of the day) as assigned by the institution, used to   *\n* identify the previous cross order in Cross Cancel and Cross *\n* Cancel/Replace Requests.                                    *\n***************************************************************\n*/\n  OrigCrossID = 551,\n/*\n***********************\n* Userid or username. *\n***********************\n*/\n  Username = 553,\n/*\n***************************\n* Password or passphrase. *\n***************************\n*/\n  Password = 554,\n/*\n********************************************************\n* Currency associated with a particular Leg's quantity *\n********************************************************\n*/\n  LegCurrency = 556,\n/*\n****************************************************************\n* Used to support fragmentation. Indicates total number of     *\n* security types when multiple Security Type messages are used *\n* to return results.                                           *\n****************************************************************\n*/\n  TotNoSecurityTypes = 557,\n/*\n*********************************************************\n* Identifies the type/criteria of Security List Request *\n*********************************************************\n*/\n  SecurityListRequestType = 559,\n/*\n******************************************************\n* The results returned to a Security Request message *\n******************************************************\n*/\n  SecurityRequestResult = 560,\n/*\n**************************************\n* The trading lot size of a security *\n**************************************\n*/\n  RoundLot = 561,\n/*\n*************************************************************\n* The minimum order quantity (as expressed by               *\n* TradeVolType(1786)) that can be submitted for a security. *\n*************************************************************\n*/\n  MinTradeVol = 562,\n/*\n************************************************************\n* Indicates the method of execution reporting requested by *\n* issuer of the order.                                     *\n************************************************************\n*/\n  MultiLegRptTypeReq = 563,\n/*\n*************************************************\n* PositionEffect for leg of a multileg          *\n* See PositionEffect (77) field for description *\n*************************************************\n*/\n  LegPositionEffect = 564,\n/*\n******************************************************\n* CoveredOrUncovered for leg of a multileg           *\n* See CoveredOrUncovered (203) field for description *\n******************************************************\n*/\n  LegCoveredOrUncovered = 565,\n/*\n****************************************\n* Price for leg of a multileg          *\n* See Price (44) field for description *\n****************************************\n*/\n  LegPrice = 566,\n/*\n*************************************************************\n* Indicates the reason a Trading Session Status Request was *\n* rejected.                                                 *\n*************************************************************\n*/\n  TradSesStatusRejReason = 567,\n/*\n***********************************\n* Trade Capture Report Request ID *\n***********************************\n*/\n  TradeRequestID = 568,\n/*\n*********************************\n* Type of Trade Capture Report. *\n*********************************\n*/\n  TradeRequestType = 569,\n/*\n********************************************************\n* Indicates if the trade capture report was previously *\n* reported to the counterparty or market.              *\n********************************************************\n*/\n  PreviouslyReported = 570,\n/*\n*********************************************\n* Unique identifier of trade capture report *\n*********************************************\n*/\n  TradeReportID = 571,\n/*\n*****************************************************\n* Reference identifier used with CANCEL and REPLACE *\n* transaction types.                                *\n*****************************************************\n*/\n  TradeReportRefID = 572,\n/*\n********************************************************\n* The status of this trade with respect to matching or *\n* comparison.                                          *\n********************************************************\n*/\n  MatchStatus = 573,\n/*\n*************************************************************\n* The point in the matching process at which this trade was *\n* matched.                                                  *\n*************************************************************\n*/\n  MatchType = 574,\n/*\n***********************************************************\n* This trade is to be treated as an odd lot               *\n* If this field is not specified, the default will be \"N\" *\n***********************************************************\n*/\n  OddLot = 575,\n/*\n******************************************************\n* Eligibility of this trade for clearing and central *\n* counterparty processing.                           *\n******************************************************\n*/\n  ClearingInstruction = 577,\n/*\n***********************************************************\n* Type of input device or system from which the trade was *\n* entered.                                                *\n***********************************************************\n*/\n  TradeInputSource = 578,\n/*\n************************************************************\n* Specific device number, terminal number or station where *\n* trade was entered                                        *\n************************************************************\n*/\n  TradeInputDevice = 579,\n/*\n********************************************\n* Type of account associated with an order *\n********************************************\n*/\n  AccountType = 581,\n/*\n*******************************************\n* Capacity of customer placing the order. *\n*******************************************\n*/\n  CustOrderCapacity = 582,\n/*\n**************************************************************\n* Permits order originators to tie together groups of orders *\n* in which trades resulting from orders are associated for a *\n* specific purpose, for example the calculation of average   *\n* execution price for a customer or to associate lists       *\n* submitted to a broker as waves of a larger program trade.  *\n**************************************************************\n*/\n  ClOrdLinkID = 583,\n/*\n***************************************************************\n* Value assigned by issuer of Mass Status Request to uniquely *\n* identify the request                                        *\n***************************************************************\n*/\n  MassStatusReqID = 584,\n/*\n****************************\n* Mass Status Request Type *\n****************************\n*/\n  MassStatusReqType = 585,\n/*\n****************************************************************\n* The most recent (or current) modification TransactTime (tag  *\n* 60) reported on an Execution Report for the order. The       *\n* OrigOrdModTime is provided as an optional field on Order     *\n* Cancel Request and Order Cancel Replace Requests to identify *\n* that the state of the order has not changed since the        *\n* request was issued. The use of this approach is not          *\n* recommended.                                                 *\n****************************************************************\n*/\n  OrigOrdModTime = 586,\n/*\n****************************************************************\n* Indicates order settlement period. If present, LegSettlDate  *\n* (588) overrides this field. If both LegSettlType (587) and   *\n* LegSettDate (588) are omitted, the default for LegSettlType  *\n* (587) is 0 (Regular)                                         *\n* Regular is defined as the default settlement period for the  *\n* particular security on the exchange of execution.            *\n* In Fixed Income the contents of this field may influence the *\n* instrument definition if the LegSecurityID (602) is          *\n* ambiguous. In the US an active Treasury offering may be      *\n* re-opened, and for a time one CUSIP will apply to both the   *\n* current and \"when-issued\" securities. Supplying a value of   *\n* \"7\" clarifies the instrument description; any other value or *\n* the absence of this field should cause the respondent to     *\n* default to the active issue.                                 *\n* Additionally the following patterns may be uses as well as   *\n* enum values                                                  *\n* Dx = FX tenor expression for \"days\", e.g. \"D5\", where \"x\" is *\n* any integer > 0                                              *\n* Mx = FX tenor expression for \"months\", e.g. \"M3\", where \"x\"  *\n* is any integer > 0                                           *\n* Wx = FX tenor expression for \"weeks\", e.g. \"W13\", where \"x\"  *\n* is any integer > 0                                           *\n* Yx = FX tenor expression for \"years\", e.g. \"Y1\", where \"x\"   *\n* is any integer > 0.                                          *\n* Note that for FX the tenors expressed using Dx, Mx, Wx, and  *\n* Yx values do not denote business days, but calendar days.    *\n****************************************************************\n*/\n  LegSettlType = 587,\n/*\n******************************************\n* Refer to description for SettlDate[64] *\n******************************************\n*/\n  LegSettlDate = 588,\n/*\n*********************************************************\n* Indicates whether or not automatic booking can occur. *\n*********************************************************\n*/\n  DayBookingInst = 589,\n/*\n***********************************************\n* Indicates what constitutes a bookable unit. *\n***********************************************\n*/\n  BookingUnit = 590,\n/*\n******************************************\n* Indicates the method of preallocation. *\n******************************************\n*/\n  PreallocMethod = 591,\n/*\n**************************************************\n* Underlying security's CountryOfIssue.          *\n* See CountryOfIssue (470) field for description *\n**************************************************\n*/\n  UnderlyingCountryOfIssue = 592,\n/*\n**********************************************************\n* Underlying security's StateOrProvinceOfIssue.          *\n* See StateOrProvinceOfIssue (471) field for description *\n**********************************************************\n*/\n  UnderlyingStateOrProvinceOfIssue = 593,\n/*\n*************************************************\n* Underlying security's LocaleOfIssue.          *\n* See LocaleOfIssue (472) field for description *\n*************************************************\n*/\n  UnderlyingLocaleOfIssue = 594,\n/*\n*************************************************\n* Underlying security's InstrRegistry.          *\n* See InstrRegistry (543) field for description *\n*************************************************\n*/\n  UnderlyingInstrRegistry = 595,\n/*\n***************************************************\n* Multileg instrument's individual leg security's *\n* CountryOfIssue.                                 *\n* See CountryOfIssue (470) field for description  *\n***************************************************\n*/\n  LegCountryOfIssue = 596,\n/*\n**********************************************************\n* Multileg instrument's individual leg security's        *\n* StateOrProvinceOfIssue.                                *\n* See StateOrProvinceOfIssue (471) field for description *\n**********************************************************\n*/\n  LegStateOrProvinceOfIssue = 597,\n/*\n***************************************************\n* Multileg instrument's individual leg security's *\n* LocaleOfIssue.                                  *\n* See LocaleOfIssue (472) field for description   *\n***************************************************\n*/\n  LegLocaleOfIssue = 598,\n/*\n***************************************************\n* Multileg instrument's individual leg security's *\n* InstrRegistry.                                  *\n* See InstrRegistry (543) field for description   *\n***************************************************\n*/\n  LegInstrRegistry = 599,\n/*\n*******************************************************\n* Multileg instrument's individual security's Symbol. *\n* See Symbol (55) field for description               *\n*******************************************************\n*/\n  LegSymbol = 600,\n/*\n**********************************************************\n* Multileg instrument's individual security's SymbolSfx. *\n* See SymbolSfx (65) field for description               *\n**********************************************************\n*/\n  LegSymbolSfx = 601,\n/*\n***********************************************************\n* Multileg instrument's individual security's SecurityID. *\n* See SecurityID (48) field for description               *\n***********************************************************\n*/\n  LegSecurityID = 602,\n/*\n***************************************************\n* Multileg instrument's individual security's     *\n* SecurityIDSource.                               *\n* See SecurityIDSource (22) field for description *\n***************************************************\n*/\n  LegSecurityIDSource = 603,\n/*\n**************************************************************\n* Multileg instrument's individual security's SecurityAltID. *\n* See SecurityAltID (455) field for description              *\n**************************************************************\n*/\n  LegSecurityAltID = 605,\n/*\n*******************************************************\n* Multileg instrument's individual security's         *\n* SecurityAltIDSource.                                *\n* See SecurityAltIDSource (456) field for description *\n*******************************************************\n*/\n  LegSecurityAltIDSource = 606,\n/*\n********************************************************\n* Multileg instrument's individual security's Product. *\n* See Product (460) field for description              *\n********************************************************\n*/\n  LegProduct = 607,\n/*\n********************************************************\n* Multileg instrument's individual security's CFICode. *\n* See CFICode (461) field for description              *\n********************************************************\n*/\n  LegCFICode = 608,\n/*\n********************************************\n* Refer to definition of SecurityType(167) *\n********************************************\n*/\n  LegSecurityType = 609,\n/*\n*****************************************************\n* Multileg instrument's individual security's       *\n* MaturityMonthYear.                                *\n* See MaturityMonthYear (200) field for description *\n*****************************************************\n*/\n  LegMaturityMonthYear = 610,\n/*\n*************************************************************\n* Multileg instrument's individual security's MaturityDate. *\n* See MaturityDate (54) field for description               *\n*************************************************************\n*/\n  LegMaturityDate = 611,\n/*\n************************************************************\n* Multileg instrument's individual security's StrikePrice. *\n* See StrikePrice (202) field for description              *\n************************************************************\n*/\n  LegStrikePrice = 612,\n/*\n*************************************************************\n* Multileg instrument's individual security's OptAttribute. *\n* See OptAttribute (206) field for description              *\n*************************************************************\n*/\n  LegOptAttribute = 613,\n/*\n*****************************************************\n* Multileg instrument's individual security's       *\n* ContractMultiplier.                               *\n* See ContractMultiplier (23) field for description *\n*****************************************************\n*/\n  LegContractMultiplier = 614,\n/*\n***********************************************************\n* Multileg instrument's individual security's CouponRate. *\n* See CouponRate (223) field for description              *\n***********************************************************\n*/\n  LegCouponRate = 615,\n/*\n****************************************************\n* Multileg instrument's individual security's      *\n* SecurityExchange.                                *\n* See SecurityExchange (207) field for description *\n****************************************************\n*/\n  LegSecurityExchange = 616,\n/*\n*******************************************************\n* Multileg instrument's individual security's Issuer. *\n* See Issuer (106) field for description              *\n*******************************************************\n*/\n  LegIssuer = 617,\n/*\n****************************************************\n* Multileg instrument's individual security's      *\n* EncodedIssuerLen.                                *\n* See EncodedIssuerLen (348) field for description *\n****************************************************\n*/\n  EncodedLegIssuerLen = 618,\n/*\n**************************************************************\n* Multileg instrument's individual security's EncodedIssuer. *\n* See EncodedIssuer (349) field for description              *\n**************************************************************\n*/\n  EncodedLegIssuer = 619,\n/*\n**************************************************\n* Description of a leg of a multileg instrument. *\n* See SecurityDesc(107).                         *\n**************************************************\n*/\n  LegSecurityDesc = 620,\n/*\n**********************************************************\n* Multileg instrument's individual security's            *\n* EncodedSecurityDescLen.                                *\n* See EncodedSecurityDescLen (350) field for description *\n**********************************************************\n*/\n  EncodedLegSecurityDescLen = 621,\n/*\n******************************************************\n* Multileg instrument's individual security's        *\n* EncodedSecurityDesc.                               *\n* See EncodedSecurityDesc (35) field for description *\n******************************************************\n*/\n  EncodedLegSecurityDesc = 622,\n/*\n*************************************************************\n* The ratio of quantity for this individual leg relative to *\n* the entire multileg security.                             *\n*************************************************************\n*/\n  LegRatioQty = 623,\n/*\n********************************************************\n* The side of this individual leg (multileg security). *\n* See Side (54) field for description and values       *\n********************************************************\n*/\n  LegSide = 624,\n/*\n****************************************************************\n* Optional market assigned sub identifier for a trading phase  *\n* within a trading session. Usage is determined by market or   *\n* counterparties. Used by US based futures markets to identify *\n* exchange specific execution time bracket codes as required   *\n* by US market regulations. Bilaterally agreed values of data  *\n* type \"String\" that start with a character can be used for    *\n* backward compatibility                                       *\n****************************************************************\n*/\n  TradingSessionSubID = 625,\n/*\n***************************************************************\n* Describes the specific type or purpose of an Allocation     *\n* message (i.e. \"Buyside Calculated\")                         *\n* (see Volume : \"Glossary\" for value definitions)             *\n* *** SOME VALUES HAVE BEEN REPLACED - See \"Replaced Features *\n* and Supported Approach\" ***                                 *\n***************************************************************\n*/\n  AllocType = 626,\n/*\n****************************************************************\n* Assigned value used to identify the third party firm which   *\n* delivered a specific message either from the firm which      *\n* originated the message or from another third party (if       *\n* multiple \"hops\" are performed). It is recommended that this  *\n* value be the SenderCompID (49) of the third party.           *\n* Applicable when messages are communicated/re-distributed via *\n* third parties which function as service bureaus or \"hubs\".   *\n* Only applicable if OnBehalfOfCompID (115) is being used.     *\n****************************************************************\n*/\n  HopCompID = 628,\n/*\n****************************************************************\n* Time that HopCompID (628) sent the message. It is            *\n* recommended that this value be the SendingTime (52) of the   *\n* message sent by the third party.                             *\n* Applicable when messages are communicated/re-distributed via *\n* third parties which function as service bureaus or \"hubs\".   *\n* Only applicable if OnBehalfOfCompID (115) is being used.     *\n****************************************************************\n*/\n  HopSendingTime = 629,\n/*\n****************************************************************\n* Reference identifier assigned by HopCompID (628) associated  *\n* with the message sent. It is recommended that this value be  *\n* the MsgSeqNum (34) of the message sent by the third party.   *\n* Applicable when messages are communicated/re-distributed via *\n* third parties which function as service bureaus or \"hubs\".   *\n* Only applicable if OnBehalfOfCompID (115) is being used.     *\n****************************************************************\n*/\n  HopRefID = 630,\n/*\n**************************************************************\n* Mid price/rate.                                            *\n* For OTC swaps this is the mid-market mark (for example, as *\n* defined by CFTC).                                          *\n* For uncleared OTC swaps, LegMidPx(2346) and the MidPx(631) *\n* fields are mutually exclusive.                             *\n**************************************************************\n*/\n  MidPx = 631,\n/*\n*************\n* Bid yield *\n*************\n*/\n  BidYield = 632,\n/*\n*************\n* Mid yield *\n*************\n*/\n  MidYield = 633,\n/*\n***************\n* Offer yield *\n***************\n*/\n  OfferYield = 634,\n/*\n************************************************************\n* Indicates type of fee being assessed of the customer for *\n* trade executions at an exchange. Applicable for futures  *\n* markets only at this time.                               *\n* (Values source CBOT, CME, NYBOT, and NYMEX):             *\n************************************************************\n*/\n  ClearingFeeIndicator = 635,\n/*\n****************************************************************\n* Indicates if the order is currently being worked. Applicable *\n* only for OrdStatus = \"New\". For open outcry markets this     *\n* indicates that the order is being worked in the crowd. For   *\n* electronic markets it indicates that the order has           *\n* transitioned from a contingent order to a market order.      *\n****************************************************************\n*/\n  WorkingIndicator = 636,\n/*\n***************************************************************\n* Execution price assigned to a leg of a multileg instrument. *\n* See LastPx (31) field for description and values            *\n***************************************************************\n*/\n  LegLastPx = 637,\n/*\n*************************************************************\n* Indicates if a Cancel/Replace has caused an order to lose *\n* book priority.                                            *\n*************************************************************\n*/\n  PriorityIndicator = 638,\n/*\n********************************\n* Amount of price improvement. *\n********************************\n*/\n  PriceImprovement = 639,\n/*\n*************************************************\n* Price of the future part of a F/X swap order. *\n* See Price (44) for description.               *\n*************************************************\n*/\n  Price2 = 640,\n/*\n*************************************************************\n* F/X forward points of the future part of a F/X swap order *\n* added to LastSpotRate (94). May be a negative value.      *\n*************************************************************\n*/\n  LastForwardPoints2 = 641,\n/*\n**************************************************************\n* Bid F/X forward points of the future portion of a F/X swap *\n* quote added to spot rate. May be a negative value.         *\n**************************************************************\n*/\n  BidForwardPoints2 = 642,\n/*\n****************************************************************\n* Offer F/X forward points of the future portion of a F/X swap *\n* quote added to spot rate. May be a negative value.           *\n****************************************************************\n*/\n  OfferForwardPoints2 = 643,\n/*\n*****************************************************\n* RFQ Request ID - used to identify an RFQ Request. *\n*****************************************************\n*/\n  RFQReqID = 644,\n/*\n*********************************************\n* Used to indicate the best bid in a market *\n*********************************************\n*/\n  MktBidPx = 645,\n/*\n***********************************************\n* Used to indicate the best offer in a market *\n***********************************************\n*/\n  MktOfferPx = 646,\n/*\n**************************************************\n* Used to indicate a minimum quantity for a bid. *\n**************************************************\n*/\n  MinBidSize = 647,\n/*\n*************************************************************\n* Used to indicate a minimum quantity for an offer. If this *\n* field is used the OfferSize (135) field is interpreted as *\n* the maximum offer size.                                   *\n*************************************************************\n*/\n  MinOfferSize = 648,\n/*\n***********************************************\n* Unique identifier for Quote Status Request. *\n***********************************************\n*/\n  QuoteStatusReqID = 649,\n/*\n************************************************************\n* Indicates that this message is to serve as the final and *\n* legal confirmation.                                      *\n************************************************************\n*/\n  LegalConfirm = 650,\n/*\n****************************************************************\n* The calculated or traded price for the underlying instrument *\n* that corresponds to a derivative. Used for transactions that *\n* include the cash instrument and the derivative.              *\n****************************************************************\n*/\n  UnderlyingLastPx = 651,\n/*\n*********************************************************\n* The calculated or traded quantity for the underlying  *\n* instrument that corresponds to a derivative. Used for *\n* transactions that include the cash instrument and the *\n* derivative.                                           *\n*********************************************************\n*/\n  UnderlyingLastQty = 652,\n/*\n****************************************************************\n* Unique identifier for a specific leg (uniqueness not defined *\n* as part of the FIX specification). LegRefID(654) be used to  *\n* reference the value from LegID(1788).                        *\n****************************************************************\n*/\n  LegRefID = 654,\n/*\n************************************************************\n* Unique indicator for a specific leg for the ContraBroker *\n* (375).                                                   *\n************************************************************\n*/\n  ContraLegRefID = 655,\n/*\n****************************************************************\n* Foreign exchange rate used to compute the bid \"SettlCurrAmt\" *\n* (119) from Currency (15) to SettlCurrency (120)              *\n****************************************************************\n*/\n  SettlCurrBidFxRate = 656,\n/*\n************************************************************\n* Foreign exchange rate used to compute the offer          *\n* \"SettlCurrAmt\" (119) from Currency (15) to SettlCurrency *\n* (120)                                                    *\n************************************************************\n*/\n  SettlCurrOfferFxRate = 657,\n/*\n******************************\n* Reason Quote was rejected: *\n******************************\n*/\n  QuoteRequestRejectReason = 658,\n/*\n************************************************************\n* ID within repeating group of sides which is used to      *\n* represent this transaction for compliance purposes (e.g. *\n* OATS reporting).                                         *\n************************************************************\n*/\n  SideComplianceID = 659,\n/*\n****************************************************************\n* Used to identify the source of the Account (1) code. This is *\n* especially useful if the account is a new account that the   *\n* Respondent may not have setup yet in their system.           *\n****************************************************************\n*/\n  AcctIDSource = 660,\n/*\n**************************************************************\n* Used to identify the source of the AllocAccount (79) code. *\n* See AcctIDSource (660) for valid values.                   *\n**************************************************************\n*/\n  AllocAcctIDSource = 661,\n/*\n*****************************************\n* Specifies the price of the benchmark. *\n*****************************************\n*/\n  BenchmarkPrice = 662,\n/*\n********************************************\n* Identifies type of BenchmarkPrice (662). *\n* See PriceType (423) for valid values.    *\n********************************************\n*/\n  BenchmarkPriceType = 663,\n/*\n**************************************\n* Message reference for Confirmation *\n**************************************\n*/\n  ConfirmID = 664,\n/*\n**********************************************\n* Identifies the status of the Confirmation. *\n**********************************************\n*/\n  ConfirmStatus = 665,\n/*\n*************************************************\n* Identifies the Confirmation transaction type. *\n*************************************************\n*/\n  ConfirmTransType = 666,\n/*\n***********************************************************\n* Specifies when the contract (i.e. MBS/TBA) will settle. *\n***********************************************************\n*/\n  ContractSettlMonth = 667,\n/*\n************************************\n* Identifies the form of delivery. *\n************************************\n*/\n  DeliveryForm = 668,\n/*\n***********************************************************\n* Last price expressed in percent-of-par. Conditionally   *\n* required for Fixed Income trades when LastPx (31) is    *\n* expressed in Yield, Spread, Discount or any other type. *\n* Usage: Execution Report and Allocation Report repeating *\n* executions block (from sellside).                       *\n***********************************************************\n*/\n  LastParPx = 669,\n/*\n***********************************************************\n* Allocation Account for the leg                          *\n* See AllocAccount (79) for description and valid values. *\n***********************************************************\n*/\n  LegAllocAccount = 671,\n/*\n*********************************************************\n* Reference for the individual allocation ticket        *\n* See IndividualAllocID (467) for description and valid *\n* values.                                               *\n*********************************************************\n*/\n  LegIndividualAllocID = 672,\n/*\n*******************************************************\n* Leg allocation quantity.                            *\n* See AllocQty (80) for description and valid values. *\n*******************************************************\n*/\n  LegAllocQty = 673,\n/*\n*********************************************************\n* The source of the LegAllocAccount (671)               *\n* See AllocAcctIDSource (661) for description and valid *\n* values.                                               *\n*********************************************************\n*/\n  LegAllocAcctIDSource = 674,\n/*\n***********************************************************\n* Identifies settlement currency for the Leg.             *\n* See SettlCurrency (20) for description and valid values *\n***********************************************************\n*/\n  LegSettlCurrency = 675,\n/*\n**************************************************************\n* LegBenchmarkPrice (679) currency                           *\n* See BenchmarkCurveCurrency (220) for description and valid *\n* values.                                                    *\n**************************************************************\n*/\n  LegBenchmarkCurveCurrency = 676,\n/*\n*********************************************************\n* Name of the Leg Benchmark Curve.                      *\n* See BenchmarkCurveName (22) for description and valid *\n* values.                                               *\n*********************************************************\n*/\n  LegBenchmarkCurveName = 677,\n/*\n***********************************************************\n* Identifies the point on the Leg Benchmark Curve.        *\n* See BenchmarkCurvePoint (222) for description and valid *\n* values.                                                 *\n***********************************************************\n*/\n  LegBenchmarkCurvePoint = 678,\n/*\n**************************************************************\n* Used to identify the price of the benchmark security.      *\n* See BenchmarkPrice (662) for description and valid values. *\n**************************************************************\n*/\n  LegBenchmarkPrice = 679,\n/*\n*************************************************\n* The price type of the LegBenchmarkPrice(679). *\n*************************************************\n*/\n  LegBenchmarkPriceType = 680,\n/*\n****************************************************\n* Bid price of this leg.                           *\n* See BidPx (32) for description and valid values. *\n****************************************************\n*/\n  LegBidPx = 681,\n/*\n****************************************************\n* Leg-specific IOI quantity.                       *\n* See IOIQty (27) for description and valid values *\n****************************************************\n*/\n  LegIOIQty = 682,\n/*\n******************************************************\n* Offer price of this leg.                           *\n* See OfferPx (133) for description and valid values *\n******************************************************\n*/\n  LegOfferPx = 684,\n/*\n******************************************************\n* Quantity ordered of this leg.                      *\n* See OrderQty (38) for description and valid values *\n******************************************************\n*/\n  LegOrderQty = 685,\n/*\n**********************************************************\n* The price type of the LegBidPx (681) and/or LegOfferPx *\n* (684).                                                 *\n* See PriceType (423) for description and valid values   *\n**********************************************************\n*/\n  LegPriceType = 686,\n/*\n****************************************************************\n* This field is deprecated and has been replaced by            *\n* LegOrderQty(865). This field will likely be removed from the *\n* FIX standard in a future version.                            *\n****************************************************************\n*/\n  LegQty = 687,\n/*\n**************************************************************\n* For Fixed Income, type of Stipulation for this leg.        *\n* See StipulationType (233) for description and valid values *\n**************************************************************\n*/\n  LegStipulationType = 688,\n/*\n***************************************************************\n* For Fixed Income, value of stipulation.                     *\n* See StipulationValue (234) for description and valid values *\n***************************************************************\n*/\n  LegStipulationValue = 689,\n/*\n**************************************************************\n* For Fixed Income, used instead of LegOrderQty(685) to      *\n* requests the respondent to calculate the quantity based on *\n* the quantity on the opposite side of the swap.             *\n**************************************************************\n*/\n  LegSwapType = 690,\n/*\n************************************************\n* For Fixed Income, identifies MBS / ABS pool. *\n************************************************\n*/\n  Pool = 691,\n/*\n***************************************************************\n* Code to represent price type requested in Quote.            *\n* If the Quote Request is for a Swap, values 1-8 apply to all *\n* legs.                                                       *\n***************************************************************\n*/\n  QuotePriceType = 692,\n/*\n****************************************\n* Message reference for Quote Response *\n****************************************\n*/\n  QuoteRespID = 693,\n/*\n******************************************\n* Identifies the type of Quote Response. *\n******************************************\n*/\n  QuoteRespType = 694,\n/*\n********************************************************\n* Code to qualify Quote use and other aspects of price *\n* negotiation.                                         *\n********************************************************\n*/\n  QuoteQualifier = 695,\n/*\n***************************************************************\n* Date to which the yield has been calculated (i.e. maturity, *\n* par call or current call, pre-refunded date).               *\n***************************************************************\n*/\n  YieldRedemptionDate = 696,\n/*\n*************************************************\n* Price to which the yield has been calculated. *\n*************************************************\n*/\n  YieldRedemptionPrice = 697,\n/*\n*********************************************************\n* The price type of the YieldRedemptionPrice (697)      *\n* See PriceType (423) for description and valid values. *\n*********************************************************\n*/\n  YieldRedemptionPriceType = 698,\n/*\n*************************************************************\n* The identifier of the benchmark security, e.g. Treasury   *\n* against Corporate bond.                                   *\n* See SecurityID (tag 48) for description and valid values. *\n*************************************************************\n*/\n  BenchmarkSecurityID = 699,\n/*\n*****************************************************\n* Indicates a trade that reverses a previous trade. *\n*****************************************************\n*/\n  ReversalIndicator = 700,\n/*\n****************************************************************\n* Include as needed to clarify yield irregularities associated *\n* with date, e.g. when it falls on a non-business day.         *\n****************************************************************\n*/\n  YieldCalcDate = 701,\n/*\n*******************************************************\n* Used to identify the type of quantity that is being *\n* returned.                                           *\n*******************************************************\n*/\n  PosType = 703,\n/*\n******************\n* Long quantity. *\n******************\n*/\n  LongQty = 704,\n/*\n*******************\n* Short quantity. *\n*******************\n*/\n  ShortQty = 705,\n/*\n****************************\n* Status of this position. *\n****************************\n*/\n  PosQtyStatus = 706,\n/*\n***************************\n* Type of Position amount *\n***************************\n*/\n  PosAmtType = 707,\n/*\n*******************\n* Position amount *\n*******************\n*/\n  PosAmt = 708,\n/*\n************************************************\n* Identifies the type of position transaction. *\n************************************************\n*/\n  PosTransType = 709,\n/*\n*************************************************************\n* Unique identifier for the position maintenance request as *\n* assigned by the submitter                                 *\n*************************************************************\n*/\n  PosReqID = 710,\n/*\n***************************************\n* Maintenance Action to be performed. *\n***************************************\n*/\n  PosMaintAction = 712,\n/*\n*************************************************************\n* Reference to the PosReqID (710) of a previous maintenance *\n* request that is being replaced or canceled.               *\n*************************************************************\n*/\n  OrigPosReqRefID = 713,\n/*\n***************************************************************\n* Reference to a PosMaintRptID (721) from a previous Position *\n* Maintenance Report that is being replaced or canceled.      *\n***************************************************************\n*/\n  PosMaintRptRefID = 714,\n/*\n***********************************************************\n* The business date for which the trade is expected to be *\n* cleared.                                                *\n***********************************************************\n*/\n  ClearingBusinessDate = 715,\n/*\n********************************************\n* Identifies a specific settlement session *\n********************************************\n*/\n  SettlSessID = 716,\n/*\n************************************************\n* SubID value associated with SettlSessID(716) *\n************************************************\n*/\n  SettlSessSubID = 717,\n/*\n**************************************************************\n* Type of adjustment to be applied. Used for Position Change *\n* Submission (PCS), Position Adjustment (PAJ), and Customer  *\n* Gross Margin (CGM).                                        *\n**************************************************************\n*/\n  AdjustmentType = 718,\n/*\n****************************************************************\n* Used to indicate when a contrary instruction for exercise or *\n* abandonment is being submitted                               *\n****************************************************************\n*/\n  ContraryInstructionIndicator = 719,\n/*\n************************************************************\n* Indicates if requesting a rollover of prior day's spread *\n* submissions.                                             *\n************************************************************\n*/\n  PriorSpreadIndicator = 720,\n/*\n**********************************************\n* Unique identifier for this position report *\n**********************************************\n*/\n  PosMaintRptID = 721,\n/*\n******************************************\n* Status of Position Maintenance Request *\n******************************************\n*/\n  PosMaintStatus = 722,\n/*\n*******************************************\n* Result of Position Maintenance Request. *\n*******************************************\n*/\n  PosMaintResult = 723,\n/*\n************************************************************\n* Used to specify the type of position request being made. *\n************************************************************\n*/\n  PosReqType = 724,\n/*\n********************************************************\n* Identifies how the response to the request should be *\n* transmitted.                                         *\n* Details specified via ResponseDestination (726).     *\n********************************************************\n*/\n  ResponseTransportType = 725,\n/*\n****************************************************************\n* URI (Uniform Resource Identifier) for details) or other      *\n* pre-arranged value. Used in conjunction with                 *\n* ResponseTransportType (725) value of Out-of-Band to identify *\n* the out-of-band destination.                                 *\n* See \"Appendix 6-B FIX Fields Based Upon Other Standards\"     *\n****************************************************************\n*/\n  ResponseDestination = 726,\n/*\n****************************************************\n* Total number of Position Reports being returned. *\n****************************************************\n*/\n  TotalNumPosReports = 727,\n/*\n************************************\n* Result of Request for Positions. *\n************************************\n*/\n  PosReqResult = 728,\n/*\n***********************************\n* Status of Request for Positions *\n***********************************\n*/\n  PosReqStatus = 729,\n/*\n********************\n* Settlement price *\n********************\n*/\n  SettlPrice = 730,\n/*\n****************************\n* Type of settlement price *\n****************************\n*/\n  SettlPriceType = 731,\n/*\n**********************************************\n* Underlying security's SettlPrice.          *\n* See SettlPrice (730) field for description *\n**********************************************\n*/\n  UnderlyingSettlPrice = 732,\n/*\n**************************************************\n* Underlying security's SettlPriceType.          *\n* See SettlPriceType (731) field for description *\n**************************************************\n*/\n  UnderlyingSettlPriceType = 733,\n/*\n*****************************\n* Previous settlement price *\n*****************************\n*/\n  PriorSettlPrice = 734,\n/*\n***********************************************************\n* Currency code of settlement denomination for a specific *\n* AllocAccount (79).                                      *\n***********************************************************\n*/\n  AllocSettlCurrency = 736,\n/*\n***************************************************************\n* Total amount due expressed in settlement currency (includes *\n* the effect of the forex transaction) for a specific         *\n* AllocAccount (79).                                          *\n***************************************************************\n*/\n  AllocSettlCurrAmt = 737,\n/*\n***************************************************\n* Amount of interest (i.e. lump-sum) at maturity. *\n***************************************************\n*/\n  InterestAtMaturity = 738,\n/*\n****************************************************************\n* The effective date of a new securities issue determined by   *\n* its underwriters. Often but not always the same as the Issue *\n* Date and the Interest Accrual Date                           *\n****************************************************************\n*/\n  LegDatedDate = 739,\n/*\n**************************************************************\n* For Fixed Income, identifies MBS / ABS pool for a specific *\n* leg of a multi-leg instrument.                             *\n* See Pool (691) for description and valid values.           *\n**************************************************************\n*/\n  LegPool = 740,\n/*\n*********************************************************\n* Amount of interest (i.e. lump-sum) at maturity at the *\n* account-level.                                        *\n*********************************************************\n*/\n  AllocInterestAtMaturity = 741,\n/*\n**************************************************************\n* Amount of Accrued Interest for convertible bonds and fixed *\n* income at the allocation-level.                            *\n**************************************************************\n*/\n  AllocAccruedInterestAmt = 742,\n/*\n*********************\n* Date of delivery. *\n*********************\n*/\n  DeliveryDate = 743,\n/*\n***************************************************************\n* Method by which short positions are assigned to an exercise *\n* notice during exercise and assignment processing            *\n***************************************************************\n*/\n  AssignmentMethod = 744,\n/*\n*****************************************************\n* Quantity Increment used in performing assignment. *\n*****************************************************\n*/\n  AssignmentUnit = 745,\n/*\n***************************************************\n* Open interest that was eligible for assignment. *\n***************************************************\n*/\n  OpenInterest = 746,\n/*\n*****************************************************\n* Exercise Method used to in performing assignment. *\n*****************************************************\n*/\n  ExerciseMethod = 747,\n/*\n*******************************************\n* Total number of trade reports returned. *\n*******************************************\n*/\n  TotNumTradeReports = 748,\n/*\n***************************\n* Result of Trade Request *\n***************************\n*/\n  TradeRequestResult = 749,\n/*\n****************************\n* Status of Trade Request. *\n****************************\n*/\n  TradeRequestStatus = 750,\n/*\n************************************************************\n* Reason Trade Capture Request was rejected.               *\n* 100+ Reserved and available for bi-laterally agreed upon *\n* user-defined values.                                     *\n************************************************************\n*/\n  TradeReportRejectReason = 751,\n/*\n****************************************************************\n* Used to indicate if the side being reported on Trade Capture *\n* Report represents a leg of a multileg instrument or a single *\n* security.                                                    *\n****************************************************************\n*/\n  SideMultiLegReportingType = 752,\n/*\n*************************************************************\n* Identifies whether or not an allocation has been          *\n* automatically accepted on behalf of the Carry Firm by the *\n* Clearing House.                                           *\n*************************************************************\n*/\n  AutoAcceptIndicator = 754,\n/*\n****************************************************\n* Unique identifier for Allocation Report message. *\n****************************************************\n*/\n  AllocReportID = 755,\n/*\n*************************************************************\n* PartyID value within a \"second instance\" Nested repeating *\n* group.                                                    *\n* Same values as PartyID (448)                              *\n*************************************************************\n*/\n  Nested2PartyID = 757,\n/*\n*********************************************************\n* PartyIDSource value within a \"second instance\" Nested *\n* repeating group.                                      *\n* Same values as PartyIDSource (447)                    *\n*********************************************************\n*/\n  Nested2PartyIDSource = 758,\n/*\n***************************************************************\n* PartyRole value within a \"second instance\" Nested repeating *\n* group.                                                      *\n* Same values as PartyRole (452)                              *\n***************************************************************\n*/\n  Nested2PartyRole = 759,\n/*\n****************************************************************\n* PartySubID value within a \"second instance\" Nested repeating *\n* group.                                                       *\n* Same values as PartySubID (523)                              *\n****************************************************************\n*/\n  Nested2PartySubID = 760,\n/*\n***************************************************************\n* Identifies class or source of the BenchmarkSecurityID (699) *\n* value. Required if BenchmarkSecurityID is specified.        *\n* Same values as the SecurityIDSource (22) field              *\n***************************************************************\n*/\n  BenchmarkSecurityIDSource = 761,\n/*\n***************************************************************\n* Sub-type qualification/identification of the SecurityType.  *\n* As an example for SecurityType(167)=\"REPO\", the             *\n* SecuritySubType=\"General Collateral\" can be used to further *\n* specify the type of REPO.                                   *\n* If SecuritySubType is used, then SecurityType is required.  *\n* For SecurityType=\"MLEG\" a name of the option or futures     *\n* strategy name can be specified, such as \"Calendar\",         *\n* \"Vertical\", \"Butterfly\".                                    *\n* For SecurityType(167)=\"OPT\" the subclassification can be    *\n* specified, such as \"Asian\".                                 *\n* For SecurityType(167)=\"SWAPTION\" a value of \"Straddle\" is   *\n* used to identify a straddle swaption.                       *\n***************************************************************\n*/\n  SecuritySubType = 762,\n/*\n***************************************************\n* Underlying security's SecuritySubType.          *\n* See SecuritySubType (762) field for description *\n***************************************************\n*/\n  UnderlyingSecuritySubType = 763,\n/*\n***************************************************\n* SecuritySubType of the leg instrument.          *\n* See SecuritySubType (762) field for description *\n***************************************************\n*/\n  LegSecuritySubType = 764,\n/*\n**********************************************************\n* The maximum percentage that execution of one side of a *\n* program trade can exceed execution of the other.       *\n**********************************************************\n*/\n  AllowableOneSidednessPct = 765,\n/*\n**************************************************************\n* The maximum amount that execution of one side of a program *\n* trade can exceed execution of the other.                   *\n**************************************************************\n*/\n  AllowableOneSidednessValue = 766,\n/*\n*********************************************************\n* The currency that AllowableOneSidednessValue (766) is *\n* expressed in if AllowableOneSidednessValue is used.   *\n*********************************************************\n*/\n  AllowableOneSidednessCurr = 767,\n/*\n*************************************************************\n* Traded / Regulatory timestamp value. Use to store time    *\n* information required by government regulators or self     *\n* regulatory organizations (such as an exchange or clearing *\n* house).                                                   *\n*************************************************************\n*/\n  TrdRegTimestamp = 769,\n/*\n************************************************************\n* Trading / Regulatory timestamp type.                     *\n* Note of Applicability: values are required in US futures *\n* markets by the CFTC to support computerized trade        *\n* reconstruction.                                          *\n* (see Volume : \"Glossary\" for value definitions)          *\n************************************************************\n*/\n  TrdRegTimestampType = 770,\n/*\n****************************************************************\n* Text which identifies the \"origin\" (i.e. system which was    *\n* used to generate the time stamp) for the Traded / Regulatory *\n* timestamp value.                                             *\n****************************************************************\n*/\n  TrdRegTimestampOrigin = 771,\n/*\n***************************************************************\n* Reference identifier to be used with ConfirmTransType (666) *\n* = Replace or Cancel                                         *\n***************************************************************\n*/\n  ConfirmRefID = 772,\n/*\n***********************************************************\n* Identifies the type of Confirmation message being sent. *\n***********************************************************\n*/\n  ConfirmType = 773,\n/*\n*******************************************************\n* Identifies the reason for rejecting a Confirmation. *\n*******************************************************\n*/\n  ConfirmRejReason = 774,\n/*\n**************************************************************\n* Method for booking out this order. Used when notifying a   *\n* broker that an order to be settled by that broker is to be *\n* booked out as an OTC derivative (e.g. CFD or similar).     *\n**************************************************************\n*/\n  BookingType = 775,\n/*\n**************************************************************\n* Identified reason for rejecting an individual AllocAccount *\n* (79) detail.                                               *\n* Same values as AllocRejCode (88)                           *\n**************************************************************\n*/\n  IndividualAllocRejCode = 776,\n/*\n*********************************************************\n* Unique identifier for Settlement Instruction message. *\n*********************************************************\n*/\n  SettlInstMsgID = 777,\n/*\n************************************************************\n* Timestamp of last update to data item (or creation if no *\n* updates made since creation).                            *\n************************************************************\n*/\n  LastUpdateTime = 779,\n/*\n**************************************************************\n* Used to indicate whether settlement instructions are       *\n* provided on an allocation instruction message, and if not, *\n* how they are to be derived.                                *\n**************************************************************\n*/\n  AllocSettlInstType = 780,\n/*\n***************************************************************\n* PartyID value within a settlement parties component. Nested *\n* repeating group.                                            *\n* Same values as PartyID (448)                                *\n***************************************************************\n*/\n  SettlPartyID = 782,\n/*\n**************************************************************\n* PartyIDSource value within a settlement parties component. *\n* Same values as PartyIDSource (447)                         *\n**************************************************************\n*/\n  SettlPartyIDSource = 783,\n/*\n**********************************************************\n* PartyRole value within a settlement parties component. *\n* Same values as PartyRole (452)                         *\n**********************************************************\n*/\n  SettlPartyRole = 784,\n/*\n***********************************************************\n* PartySubID value within a settlement parties component. *\n* Same values as PartySubID (523)                         *\n***********************************************************\n*/\n  SettlPartySubID = 785,\n/*\n****************************************\n* Type of SettlPartySubID (785) value. *\n* Same values as PartySubIDType (803)  *\n****************************************\n*/\n  SettlPartySubIDType = 786,\n/*\n***************************************************************\n* Used to indicate whether a delivery instruction is used for *\n* securities or cash settlement.                              *\n***************************************************************\n*/\n  DlvyInstType = 787,\n/*\n**********************************\n* Type of financing termination. *\n**********************************\n*/\n  TerminationType = 788,\n/*\n************************************************************\n* Can be used to uniquely identify a specific Order Status *\n* Request message.                                         *\n************************************************************\n*/\n  OrdStatusReqID = 790,\n/*\n*******************************************************\n* Unique ID of settlement instruction request message *\n*******************************************************\n*/\n  SettlInstReqID = 791,\n/*\n****************************************************************\n* Identifies reason for rejection (of a settlement instruction *\n* request message).                                            *\n****************************************************************\n*/\n  SettlInstReqRejCode = 792,\n/*\n****************************************************************\n* Secondary allocation identifier. Unlike the AllocID (70),    *\n* this can be shared across a number of allocation instruction *\n* or allocation report messages, thereby making it possible to *\n* pass an identifier for an original allocation message on     *\n* multiple messages (e.g. from one party to a second to a      *\n* third, across cancel and replace messages etc.).             *\n****************************************************************\n*/\n  SecondaryAllocID = 793,\n/*\n***********************************************************\n* Describes the specific type or purpose of an Allocation *\n* Report message                                          *\n***********************************************************\n*/\n  AllocReportType = 794,\n/*\n*************************************************************\n* Reference identifier to be used with AllocTransType (7) = *\n* Replace or Cancel                                         *\n*************************************************************\n*/\n  AllocReportRefID = 795,\n/*\n****************************************************************\n* Reason for cancelling or replacing an Allocation Instruction *\n* or Allocation Report message                                 *\n****************************************************************\n*/\n  AllocCancReplaceReason = 796,\n/*\n***********************************************************\n* Indicates whether or not this message is a drop copy of *\n* another message.                                        *\n***********************************************************\n*/\n  CopyMsgIndicator = 797,\n/*\n***********************************************************\n* Type of account associated with a confirmation or other *\n* trade-level message                                     *\n***********************************************************\n*/\n  AllocAccountType = 798,\n/*\n**************************************\n* Average price for a specific order *\n**************************************\n*/\n  OrderAvgPx = 799,\n/*\n****************************************************************\n* Quantity of the order that is being booked out as part of an *\n* Allocation Instruction or Allocation Report message          *\n****************************************************************\n*/\n  OrderBookingQty = 800,\n/*\n**********************************\n* Type of PartySubID(523) value. *\n**********************************\n*/\n  PartySubIDType = 803,\n/*\n*****************************************\n* Type of NestedPartySubID (545) value. *\n* Same values as PartySubIDType (803)   *\n*****************************************\n*/\n  NestedPartySubIDType = 805,\n/*\n*************************************************************\n* Type of Nested2PartySubID (760) value. Second instance of *\n* <NestedParties>.                                          *\n* Same values as PartySubIDType (803)                       *\n*************************************************************\n*/\n  Nested2PartySubIDType = 807,\n/*\n***************************************************************\n* Response to allocation to be communicated to a counterparty *\n* through an intermediary, i.e. clearing house. Used in       *\n* conjunction with AllocType = \"Request to Intermediary\" and  *\n* AllocReportType = \"Request to Intermediary\"                 *\n***************************************************************\n*/\n  AllocIntermedReqType = 808,\n/*\n************************************************************\n* Underlying price associate with a derivative instrument. *\n************************************************************\n*/\n  UnderlyingPx = 810,\n/*\n****************************************************************\n* The rate of change in the price of a derivative with respect *\n* to the movement in the price of the underlying instrument(s) *\n* upon which the derivative instrument price is based.         *\n* This value is normally between -1.0 and 1.0.                 *\n****************************************************************\n*/\n  PriceDelta = 811,\n/*\n***************************************************************\n* Used to specify the maximum number of application messages  *\n* that can be queued bedore a corrective action needs to take *\n* place to resolve the queuing issue.                         *\n***************************************************************\n*/\n  ApplQueueMax = 812,\n/*\n**************************************************************\n* Current number of application messages that were queued at *\n* the time that the message was created by the counterparty. *\n**************************************************************\n*/\n  ApplQueueDepth = 813,\n/*\n**************************************************************\n* Resolution taken when ApplQueueDepth (813) exceeds         *\n* ApplQueueMax (812) or system specified maximum queue size. *\n**************************************************************\n*/\n  ApplQueueResolution = 814,\n/*\n**********************************************************\n* Action to take to resolve an application message queue *\n* (backlog).                                             *\n**********************************************************\n*/\n  ApplQueueAction = 815,\n/*\n**********************************************************\n* Session layer source for market data                   *\n* (For the standard FIX session layer, this would be the *\n* TargetCompID (56) where market data can be obtained).  *\n**********************************************************\n*/\n  AltMDSourceID = 817,\n/*\n****************************************************************\n* Secondary trade report identifier - can be used to associate *\n* an additional identifier with a trade.                       *\n****************************************************************\n*/\n  SecondaryTradeReportID = 818,\n/*\n*****************************\n* Average Pricing Indicator *\n*****************************\n*/\n  AvgPxIndicator = 819,\n/*\n********************************************\n* Used to link a group of trades together. *\n********************************************\n*/\n  TradeLinkID = 820,\n/*\n************************************************************\n* Specific device number, terminal number or station where *\n* order was entered                                        *\n************************************************************\n*/\n  OrderInputDevice = 821,\n/*\n*************************************************************\n* Trading Session in which the underlying instrument trades *\n*************************************************************\n*/\n  UnderlyingTradingSessionID = 822,\n/*\n**********************************************************\n* Trading Session sub identifier in which the underlying *\n* instrument trades                                      *\n**********************************************************\n*/\n  UnderlyingTradingSessionSubID = 823,\n/*\n***************************************************************\n* Reference to the leg of a multileg instrument to which this *\n* trade refers                                                *\n***************************************************************\n*/\n  TradeLegRefID = 824,\n/*\n****************************************************************\n* Used to report any exchange rules that apply to this trade.  *\n* Primarily intended for US futures markets. Certain trading   *\n* practices are permitted by the CFTC, such as large lot       *\n* trading, block trading, all or none trades. If the rules are *\n* used, the exchanges are required to indicate these rules on  *\n* the trade.                                                   *\n****************************************************************\n*/\n  ExchangeRule = 825,\n/*\n***********************************************************\n* Identifies if, and how, the trade is to be allocated or *\n* split.                                                  *\n***********************************************************\n*/\n  TradeAllocIndicator = 826,\n/*\n**************************************************************\n* Part of trading cycle when an instrument expires. Field is *\n* applicable for derivatives.                                *\n**************************************************************\n*/\n  ExpirationCycle = 827,\n/*\n******************\n* Type of trade. *\n******************\n*/\n  TrdType = 828,\n/*\n*******************************************\n* Further qualification to the trade type *\n*******************************************\n*/\n  TrdSubType = 829,\n/*\n*************************************\n* Reason trade is being transferred *\n*************************************\n*/\n  TransferReason = 830,\n/*\n***************************************************************\n* Total Number of Assignment Reports being returned to a firm *\n***************************************************************\n*/\n  TotNumAssignmentReports = 832,\n/*\n***********************************************\n* Unique identifier for the Assignment Report *\n***********************************************\n*/\n  AsgnRptID = 833,\n/*\n**************************************************************\n* Amount that a position has to be in the money before it is *\n* exercised.                                                 *\n**************************************************************\n*/\n  ThresholdAmount = 834,\n/*\n*********************************************\n* Describes whether peg is static or floats *\n*********************************************\n*/\n  PegMoveType = 835,\n/*\n****************************\n* Type of Peg Offset value *\n****************************\n*/\n  PegOffsetType = 836,\n/*\n*********************\n* Type of Peg Limit *\n*********************\n*/\n  PegLimitType = 837,\n/*\n***********************************************************\n* If the calculated peg price is not a valid tick price,  *\n* specifies whether to round the price to be more or less *\n* aggressive                                              *\n***********************************************************\n*/\n  PegRoundDirection = 838,\n/*\n**********************************************\n* The price the order is currently pegged at *\n**********************************************\n*/\n  PeggedPrice = 839,\n/*\n************************\n* The scope of the peg *\n************************\n*/\n  PegScope = 840,\n/*\n************************************************************\n* Describes whether discretionay price is static or floats *\n************************************************************\n*/\n  DiscretionMoveType = 841,\n/*\n***********************************\n* Type of Discretion Offset value *\n***********************************\n*/\n  DiscretionOffsetType = 842,\n/*\n****************************\n* Type of Discretion Limit *\n****************************\n*/\n  DiscretionLimitType = 843,\n/*\n*************************************************************\n* If the calculated discretionary price is not a valid tick *\n* price, specifies whether to round the price to be more or *\n* less aggressive                                           *\n*************************************************************\n*/\n  DiscretionRoundDirection = 844,\n/*\n************************************************\n* The current discretionary price of the order *\n************************************************\n*/\n  DiscretionPrice = 845,\n/*\n*******************************\n* The scope of the discretion *\n*******************************\n*/\n  DiscretionScope = 846,\n/*\n***************************************************************\n* The target strategy of the order                            *\n* 1000+ = Reserved and available for bi-laterally agreed upon *\n* user defined values                                         *\n***************************************************************\n*/\n  TargetStrategy = 847,\n/*\n****************************************************************\n* Field to allow further specification of the TargetStrategy - *\n* usage to be agreed between counterparties                    *\n****************************************************************\n*/\n  TargetStrategyParameters = 848,\n/*\n***************************************************************\n* For a TargetStrategy=Participate order specifies the target *\n* particpation rate. For other order types this is a volume   *\n* limit (i.e. do not be more than this percent of the market  *\n* volume)                                                     *\n***************************************************************\n*/\n  ParticipationRate = 849,\n/*\n****************************************************************\n* For communication of the performance of the order versus the *\n* target strategy                                              *\n****************************************************************\n*/\n  TargetStrategyPerformance = 850,\n/*\n**************************************************************\n* Indicator to identify whether this fill was a result of a  *\n* liquidity provider providing or liquidity taker taking the *\n* liquidity.                                                 *\n**************************************************************\n*/\n  LastLiquidityInd = 851,\n/*\n********************************************************\n* Indicates if a trade should be reported via a market *\n* reporting service.                                   *\n********************************************************\n*/\n  PublishTrdIndicator = 852,\n/*\n**************************\n* Reason for short sale. *\n**************************\n*/\n  ShortSaleReason = 853,\n/*\n***************************************************************\n* Type of quantity specified in quantity field.               *\n* ContractMultiplier (tag 231) is required when QtyType = 1   *\n* (Contracts). UnitOfMeasure (tag 996) and TimeUnit (tag 997) *\n* are required when QtyType =  2 (Units of Measure per Time   *\n* Unit).                                                      *\n***************************************************************\n*/\n  QtyType = 854,\n/*\n**************************************************************\n* Additional TrdType(828) assigned to a trade by trade match *\n* system.                                                    *\n**************************************************************\n*/\n  SecondaryTrdType = 855,\n/*\n************************\n* Type of Trade Report *\n************************\n*/\n  TradeReportType = 856,\n/*\n**************************************************************\n* Indicates how the orders being booked and allocated by an  *\n* AllocationInstruction or AllocationReport message are      *\n* identified, e.g. by explicit definition in the OrdAllocGrp *\n* or ExecAllocGrp components, or not identified explicitly.  *\n**************************************************************\n*/\n  AllocNoOrdersType = 857,\n/*\n***************************************************************\n* Commission to be shared with a third party, e.g. as part of *\n* a directed brokerage commission sharing arrangement.        *\n***************************************************************\n*/\n  SharedCommission = 858,\n/*\n********************************************************\n* Unique identifier for a Confirmation Request message *\n********************************************************\n*/\n  ConfirmReqID = 859,\n/*\n***************************************************************\n* Used to express average price as percent of par (used where *\n* AvgPx field is expressed in some other way)                 *\n***************************************************************\n*/\n  AvgParPx = 860,\n/*\n***************************************************************\n* Reported price (used to differentiate from AvgPx on a       *\n* confirmation of a marked-up or marked-down principal trade) *\n***************************************************************\n*/\n  ReportedPx = 861,\n/*\n***************************************************************\n* Quantity executed under a specific OrderCapacity (e.g.      *\n* quantity executed as agent, quantity executed as principal) *\n***************************************************************\n*/\n  OrderCapacityQty = 863,\n/*\n***************************************\n* Code to represent the type of event *\n***************************************\n*/\n  EventType = 865,\n/*\n*****************\n* Date of event *\n*****************\n*/\n  EventDate = 866,\n/*\n********************************************************\n* Predetermined price of issue at event, if applicable *\n********************************************************\n*/\n  EventPx = 867,\n/*\n**********************************\n* Comments related to the event. *\n**********************************\n*/\n  EventText = 868,\n/*\n************************************************\n* Percent at risk due to lowest possible call. *\n************************************************\n*/\n  PctAtRisk = 869,\n/*\n******************************************************\n* Code to represent the type of instrument attribute *\n******************************************************\n*/\n  InstrAttribType = 871,\n/*\n***********************************************************\n* Attribute value appropriate to the InstrAttribType (87) *\n* field.                                                  *\n***********************************************************\n*/\n  InstrAttribValue = 872,\n/*\n****************************************************************\n* The effective date of a new securities issue determined by   *\n* its underwriters. Often but not always the same as the Issue *\n* Date and the Interest Accrual Date                           *\n****************************************************************\n*/\n  DatedDate = 873,\n/*\n****************************************************************\n* The start date used for calculating accrued interest on debt *\n* instruments which are being sold between interest payment    *\n* dates. Often but not always the same as the Issue Date and   *\n* the Dated Date                                               *\n****************************************************************\n*/\n  InterestAccrualDate = 874,\n/*\n************************************************************\n* The program under which a commercial paper offering is   *\n* exempt from SEC registration identified by the paragraph *\n* number(s) within the US Securities Act of 1933 or as     *\n* identified below.                                        *\n************************************************************\n*/\n  CPProgram = 875,\n/*\n***************************************************************\n* The description of commercial paper registration or rule    *\n* under which exempt commercial paper is offered. For example *\n* \"144a\", \"Tax Exempt\" or \"REG. S\".                           *\n***************************************************************\n*/\n  CPRegType = 876,\n/*\n**************************************************************\n* The program under which the underlying commercial paper is *\n* issued                                                     *\n**************************************************************\n*/\n  UnderlyingCPProgram = 877,\n/*\n************************************************************\n* The registration type of the underlying commercial paper *\n* issuance                                                 *\n************************************************************\n*/\n  UnderlyingCPRegType = 878,\n/*\n********************************************************\n* Unit amount of the underlying security (par, shares, *\n* currency, etc.)                                      *\n********************************************************\n*/\n  UnderlyingQty = 879,\n/*\n********************************************************\n* Identifier assigned to a trade by a matching system. *\n********************************************************\n*/\n  TrdMatchID = 880,\n/*\n**************************************************************\n* Used to refer to a previous SecondaryTradeReportRefID when *\n* amending the transaction (cancel, replace, release, or     *\n* reversal).                                                 *\n**************************************************************\n*/\n  SecondaryTradeReportRefID = 881,\n/*\n*********************************************************\n* Price (percent-of-par or per unit) of the underlying  *\n* security or basket. \"Dirty\" means it includes accrued *\n* interest                                              *\n*********************************************************\n*/\n  UnderlyingDirtyPrice = 882,\n/*\n********************************************************\n* Price (percent-of-par or per unit) of the underlying *\n* security or basket at the end of the agreement.      *\n********************************************************\n*/\n  UnderlyingEndPrice = 883,\n/*\n****************************************************************\n* Currency value attributed to this collateral at the start of *\n* the agreement                                                *\n****************************************************************\n*/\n  UnderlyingStartValue = 884,\n/*\n**********************************************************\n* Currency value currently attributed to this collateral *\n**********************************************************\n*/\n  UnderlyingCurrentValue = 885,\n/*\n**************************************************************\n* Currency value attributed to this collateral at the end of *\n* the agreement                                              *\n**************************************************************\n*/\n  UnderlyingEndValue = 886,\n/*\n****************************************\n* Type of stipulation.                 *\n* Same values as StipulationType (233) *\n****************************************\n*/\n  UnderlyingStipType = 888,\n/*\n*****************************************\n* Value of stipulation.                 *\n* Same values as StipulationValue (234) *\n*****************************************\n*/\n  UnderlyingStipValue = 889,\n/*\n**************************************************************\n* Net Money at maturity if Zero Coupon and maturity value is *\n* different from par value                                   *\n**************************************************************\n*/\n  MaturityNetMoney = 890,\n/*\n*********************************************\n* Defines the unit for a miscellaneous fee. *\n*********************************************\n*/\n  MiscFeeBasis = 891,\n/*\n***************************************************************\n* Total number of NoAlloc entries across all messages. Should *\n* be the sum of all NoAllocs in each message that has         *\n* repeating NoAlloc entries related to the same AllocID or    *\n* AllocReportID. Used to support fragmentation.               *\n***************************************************************\n*/\n  TotNoAllocs = 892,\n/*\n****************************************************************\n* Indicates whether this message is the last in a sequence of  *\n* messages for those messages that support fragmentation, such *\n* as Allocation Instruction, Mass Quote, Security List,        *\n* Derivative Security List                                     *\n****************************************************************\n*/\n  LastFragment = 893,\n/*\n*********************************\n* Collateral Request Identifier *\n*********************************\n*/\n  CollReqID = 894,\n/*\n************************************\n* Reason for Collateral Assignment *\n************************************\n*/\n  CollAsgnReason = 895,\n/*\n**********************************\n* Collateral inquiry qualifiers: *\n**********************************\n*/\n  CollInquiryQualifier = 896,\n/*\n****************************************************************\n* The fraction of the cash consideration that must be          *\n* collateralized, expressed as a percent. A MarginRatio of 02% *\n* indicates that the value of the collateral (after deducting  *\n* for \"haircut\") must exceed the cash consideration by 2%.     *\n****************************************************************\n*/\n  MarginRatio = 898,\n/*\n*******************************************************\n* Excess margin amount (deficit if value is negative) *\n*******************************************************\n*/\n  MarginExcess = 899,\n/*\n**************************************************************\n* TotalNetValue is determined as follows:                    *\n* At the initial collateral assignment TotalNetValue is the  *\n* sum of (UnderlyingStartValue * (1-haircut)).               *\n* In a collateral substitution TotalNetValue is the sum of   *\n* (UnderlyingCurrentValue * (1-haircut)).                    *\n* For listed derivatives clearing margin management, this is *\n* the collateral value which equals (Market value * haircut) *\n**************************************************************\n*/\n  TotalNetValue = 900,\n/*\n******************************************\n* Starting consideration less repayments *\n******************************************\n*/\n  CashOutstanding = 901,\n/*\n************************************\n* Collateral Assignment Identifier *\n************************************\n*/\n  CollAsgnID = 902,\n/*\n******************************************\n* Collateral Assignment Transaction Type *\n******************************************\n*/\n  CollAsgnTransType = 903,\n/*\n**********************************\n* Collateral Response Identifier *\n**********************************\n*/\n  CollRespID = 904,\n/*\n*******************************************\n* Type of collateral assignment response. *\n*******************************************\n*/\n  CollAsgnRespType = 905,\n/*\n***************************************\n* Collateral Assignment Reject Reason *\n***************************************\n*/\n  CollAsgnRejectReason = 906,\n/*\n***********************************************************\n* Collateral Assignment Identifier to which a transaction *\n* refers                                                  *\n***********************************************************\n*/\n  CollAsgnRefID = 907,\n/*\n********************************\n* Collateral Report Identifier *\n********************************\n*/\n  CollRptID = 908,\n/*\n*********************************\n* Collateral Inquiry Identifier *\n*********************************\n*/\n  CollInquiryID = 909,\n/*\n*********************\n* Collateral Status *\n*********************\n*/\n  CollStatus = 910,\n/*\n**************************************************************\n* Total number of reports returned in response to a request. *\n**************************************************************\n*/\n  TotNumReports = 911,\n/*\n****************************************************************\n* Indicates whether this message is the last report message in *\n* response to a request message, e.g.                          *\n* OrderMassStatusRequest(35=AF),                               *\n* TradeCaptureReportRequest(35=AD).                            *\n****************************************************************\n*/\n  LastRptRequested = 912,\n/*\n***************************************************************\n* The full name of the base standard agreement, annexes and   *\n* amendments in place between the principals applicable to a  *\n* financing transaction.  See                                 *\n* http://www.fpml.org/coding-scheme/master-agreement-type for *\n* derivative values.                                          *\n***************************************************************\n*/\n  AgreementDesc = 913,\n/*\n***********************************************************\n* A common reference to the applicable standing agreement *\n* between the counterparties to a financing transaction.  *\n***********************************************************\n*/\n  AgreementID = 914,\n/*\n**************************************************************\n* A reference to the date the underlying agreement specified *\n* by AgreementID and AgreementDesc was executed.             *\n**************************************************************\n*/\n  AgreementDate = 915,\n/*\n****************************************************************\n* Start date of a financing deal, i.e. the date the buyer pays *\n* the seller cash and takes control of the collateral          *\n****************************************************************\n*/\n  StartDate = 916,\n/*\n**********************************************************\n* End date of a financing deal, i.e. the date the seller *\n* reimburses the buyer and takes back control of the     *\n* collateral                                             *\n**********************************************************\n*/\n  EndDate = 917,\n/*\n***********************************************************\n* Contractual currency forming the basis of a financing   *\n* agreement and associated transactions. Usually, but not *\n* always, the same as the trade currency.                 *\n***********************************************************\n*/\n  AgreementCurrency = 918,\n/*\n*********************************\n* Identifies type of settlement *\n*********************************\n*/\n  DeliveryType = 919,\n/*\n*****************************************************\n* Accrued Interest Amount applicable to a financing *\n* transaction on the End Date.                      *\n*****************************************************\n*/\n  EndAccruedInterestAmt = 920,\n/*\n***************************************************************\n* Starting dirty cash consideration of a financing deal, i.e. *\n* paid to the seller on the Start Date.                       *\n***************************************************************\n*/\n  StartCash = 921,\n/*\n*************************************************************\n* Ending dirty cash consideration of a financing deal. i.e. *\n* reimbursed to the buyer on the End Date.                  *\n*************************************************************\n*/\n  EndCash = 922,\n/*\n*****************************************\n* Unique identifier for a User Request. *\n*****************************************\n*/\n  UserRequestID = 923,\n/*\n***********************************************************\n* Indicates the action required by a User Request Message *\n***********************************************************\n*/\n  UserRequestType = 924,\n/*\n******************************\n* New Password or passphrase *\n******************************\n*/\n  NewPassword = 925,\n/*\n**********************************\n* Indicates the status of a user *\n**********************************\n*/\n  UserStatus = 926,\n/*\n*****************************************************\n* A text description associated with a user status. *\n*****************************************************\n*/\n  UserStatusText = 927,\n/*\n************************************************\n* Indicates the status of a network connection *\n************************************************\n*/\n  StatusValue = 928,\n/*\n********************************************************\n* A text description associated with a network status. *\n********************************************************\n*/\n  StatusText = 929,\n/*\n*******************************************\n* Assigned value used to identify a firm. *\n*******************************************\n*/\n  RefCompID = 930,\n/*\n**************************************************************\n* Assigned value used to identify specific elements within a *\n* firm.                                                      *\n**************************************************************\n*/\n  RefSubID = 931,\n/*\n*********************************************\n* Unique identifier for a network response. *\n*********************************************\n*/\n  NetworkResponseID = 932,\n/*\n*********************************************\n* Unique identifier for a network resquest. *\n*********************************************\n*/\n  NetworkRequestID = 933,\n/*\n***************************************************************\n* Identifier of the previous Network Response message sent to *\n* a counterparty, used to allow incremental updates.          *\n***************************************************************\n*/\n  LastNetworkResponseID = 934,\n/*\n**********************************************************\n* Indicates the type and level of details required for a *\n* Network Status Request Message                         *\n* Boolean logic applies EG If you want to subscribe for  *\n* changes to certain id's then UserRequestType =0 (8+2), *\n* Snapshot for certain ID's = 9 (8+1)                    *\n**********************************************************\n*/\n  NetworkRequestType = 935,\n/*\n***************************************************\n* Indicates the type of Network Response Message. *\n***************************************************\n*/\n  NetworkStatusResponseType = 937,\n/*\n***********************\n* Trade Report Status *\n***********************\n*/\n  TrdRptStatus = 939,\n/*\n*********************************************************\n* Specifies the affirmation status of the confirmation. *\n*********************************************************\n*/\n  AffirmStatus = 940,\n/*\n*******************************************************\n* Currency in which the strike price of an underlying *\n* instrument is denominated                           *\n*******************************************************\n*/\n  UnderlyingStrikeCurrency = 941,\n/*\n***************************************************************\n* Currency in which the strike price of a instrument leg of a *\n* multileg instrument is denominated                          *\n***************************************************************\n*/\n  LegStrikeCurrency = 942,\n/*\n*************************************************************\n* A code that represents a time interval in which a fill or *\n* trade occurred.                                           *\n* Required for US futures markets.                          *\n*************************************************************\n*/\n  TimeBracket = 943,\n/*\n**********************************************************\n* Action proposed for an Underlying Instrument instance. *\n**********************************************************\n*/\n  CollAction = 944,\n/*\n********************************\n* Status of Collateral Inquiry *\n********************************\n*/\n  CollInquiryStatus = 945,\n/*\n*************************************************************\n* Result returned in response to Collateral Inquiry         *\n* 4000+ Reserved and available for bi-laterally agreed upon *\n* user-defined values                                       *\n*************************************************************\n*/\n  CollInquiryResult = 946,\n/*\n*****************************************************\n* Currency in which the StrikePrice is denominated. *\n*****************************************************\n*/\n  StrikeCurrency = 947,\n/*\n************************************************************\n* PartyID value within a \"third instance\" Nested repeating *\n* group.                                                   *\n* Same values as PartyID (448)                             *\n************************************************************\n*/\n  Nested3PartyID = 949,\n/*\n********************************************************\n* PartyIDSource value within a \"third instance\" Nested *\n* repeating group.                                     *\n* Same values as PartyIDSource (447)                   *\n********************************************************\n*/\n  Nested3PartyIDSource = 950,\n/*\n**************************************************************\n* PartyRole value within a \"third instance\" Nested repeating *\n* group.                                                     *\n* Same values as PartyRole (452)                             *\n**************************************************************\n*/\n  Nested3PartyRole = 951,\n/*\n***************************************************************\n* PartySubID value within a \"third instance\" Nested repeating *\n* group.                                                      *\n* Same values as PartySubID (523)                             *\n***************************************************************\n*/\n  Nested3PartySubID = 953,\n/*\n*********************************************************\n* PartySubIDType value within a \"third instance\" Nested *\n* repeating group.                                      *\n* Same values as PartySubIDType (803)                   *\n*********************************************************\n*/\n  Nested3PartySubIDType = 954,\n/*\n***********************************************************\n* Specifies when the contract (i.e. MBS/TBA) will settle. *\n***********************************************************\n*/\n  LegContractSettlMonth = 955,\n/*\n****************************************************************\n* The start date used for calculating accrued interest on debt *\n* instruments which are being sold between interest payment    *\n* dates. Often but not always the same as the Issue Date and   *\n* the Dated Date                                               *\n****************************************************************\n*/\n  LegInterestAccrualDate = 956,\n/*\n*********************\n* Name of parameter *\n*********************\n*/\n  StrategyParameterName = 958,\n/*\n*****************************\n* Datatype of the parameter *\n*****************************\n*/\n  StrategyParameterType = 959,\n/*\n**************************\n* Value of the parameter *\n**************************\n*/\n  StrategyParameterValue = 960,\n/*\n****************************************************************\n* Host assigned entity ID that can be used to reference all    *\n* components of a cross; sides + strategy + legs. Used as the  *\n* primary key with which to refer to the Cross Order for       *\n* cancellation and replace. The HostCrossID will also be used  *\n* to link together components of the Cross Order. For example, *\n* each individual Execution Report associated with the order   *\n* will carry HostCrossID in order to tie back to the original  *\n* cross order.                                                 *\n****************************************************************\n*/\n  HostCrossID = 961,\n/*\n****************************************************************\n* Indicates how long the order as specified in the side stays  *\n* in effect. SideTimeInForce allows a two-sided cross order to *\n* specify order behavior separately for each side. Absence of  *\n* this field indicates that TimeInForce should be referenced.  *\n* SideTimeInForce will override TimeInForce if both are        *\n* provided.                                                    *\n****************************************************************\n*/\n  SideTimeInForce = 962,\n/*\n*************************************************\n* Unique identifier for the Market Data Report. *\n*************************************************\n*/\n  MDReportID = 963,\n/*\n***************************************\n* Identifies a Security List message. *\n***************************************\n*/\n  SecurityReportID = 964,\n/*\n**********************************************************\n* Used for derivatives. Denotes the current state of the *\n* Instrument.                                            *\n**********************************************************\n*/\n  SecurityStatus = 965,\n/*\n**********************************************************\n* Indicator to determine if instrument is settle on open *\n**********************************************************\n*/\n  SettleOnOpenFlag = 966,\n/*\n****************************************************************\n* Used for derivatives. Multiplier applied to the strike price *\n* for the purpose of calculating the settlement value.         *\n****************************************************************\n*/\n  StrikeMultiplier = 967,\n/*\n************************************************************\n* Used for derivatives. The number of shares/units for the *\n* financial instrument involved in the option trade.       *\n************************************************************\n*/\n  StrikeValue = 968,\n/*\n******************************************************\n* Minimum price increase for a given exchange-traded *\n* Instrument                                         *\n******************************************************\n*/\n  MinPriceIncrement = 969,\n/*\n*******************************************************\n* Position Limit for a given exchange-traded product. *\n*******************************************************\n*/\n  PositionLimit = 970,\n/*\n********************************************************\n* Position Limit in the near-term contract for a given *\n* exchange-traded product.                             *\n********************************************************\n*/\n  NTPositionLimit = 971,\n/*\n****************************************************************\n* Percent of the Strike Price that this underlying represents. *\n****************************************************************\n*/\n  UnderlyingAllocationPercent = 972,\n/*\n*********************************************************\n* Cash amount associated with the underlying component. *\n*********************************************************\n*/\n  UnderlyingCashAmount = 973,\n/*\n***********************************************************\n* Used for derivatives that deliver into cash underlying. *\n***********************************************************\n*/\n  UnderlyingCashType = 974,\n/*\n********************************************************\n* Indicates order settlement period for the underlying *\n* instrument.                                          *\n********************************************************\n*/\n  UnderlyingSettlementType = 975,\n/*\n**************************************************************\n* Date associated to the quantity that is being reported for *\n* the position.                                              *\n**************************************************************\n*/\n  QuantityDate = 976,\n/*\n*******************************************************\n* Unique identifier for the Contrary Intention report *\n*******************************************************\n*/\n  ContIntRptID = 977,\n/*\n**************************************************************\n* Indicates if the contrary intention was received after the *\n* exchange imposed cutoff time                               *\n**************************************************************\n*/\n  LateIndicator = 978,\n/*\n**************************************\n* Originating source of the request. *\n**************************************\n*/\n  InputSource = 979,\n  SecurityUpdateAction = 980,\n/*\n****************************\n* Expiration Quantity type *\n****************************\n*/\n  ExpirationQtyType = 982,\n/*\n***********************************************************\n* Expiration Quantity associated with the Expiration Type *\n***********************************************************\n*/\n  ExpQty = 983,\n/*\n***************************************************************\n* Amount to pay in order to receive the underlying instrument *\n***************************************************************\n*/\n  UnderlyingPayAmount = 985,\n/*\n********************************************************\n* Amount to collect in order to deliver the underlying *\n* instrument                                           *\n********************************************************\n*/\n  UnderlyingCollectAmount = 986,\n/*\n***********************************************************\n* Date the underlying instrument will settle. Used for    *\n* derivatives that deliver into more than one underlying  *\n* instrument. Settlement dates can vary across underlying *\n* instruments.                                            *\n***********************************************************\n*/\n  UnderlyingSettlementDate = 987,\n/*\n************************************************************\n* Settlement status of the underlying instrument. Used for *\n* derivatives that deliver into more than one underlying   *\n* instrument. Settlement can be delayed for an underlying  *\n* instrument.                                              *\n************************************************************\n*/\n  UnderlyingSettlementStatus = 988,\n/*\n***********************************************************\n* Will allow the intermediary to specify an allocation ID *\n* generated by their system.                              *\n***********************************************************\n*/\n  SecondaryIndividualAllocID = 989,\n/*\n**********************************************************\n* Additional attribute to store the Trade ID of the Leg. *\n**********************************************************\n*/\n  LegReportID = 990,\n/*\n********************************************************\n* Specifies average price rounded to quoted precision. *\n********************************************************\n*/\n  RndPx = 991,\n/*\n***************************************************************\n* Identifies whether the allocation is to be sub-allocated or *\n* allocated to a third party                                  *\n***************************************************************\n*/\n  IndividualAllocType = 992,\n/*\n*************************************************\n* Capacity of customer in the allocation block. *\n*************************************************\n*/\n  AllocCustomerCapacity = 993,\n/*\n**********************************************************\n* The Tier the trade was matched by the clearing system. *\n**********************************************************\n*/\n  TierCode = 994,\n/*\n****************************************************************\n* The unit of measure of the underlying commodity upon which   *\n* the contract is based. Two groups of units of measure        *\n* enumerations are supported.                                  *\n* Fixed Magnitude UOMs are primarily used in energy            *\n* derivatives and specify a magnitude (such as, MM, Kilo, M,   *\n* etc.) and the dimension (such as, watt hours, BTU's) to      *\n* produce standard fixed measures (such as MWh -               *\n* Megawatt-hours, MMBtu - One million BTUs).                   *\n* The second group, Variable Quantity UOMs, specifies the      *\n* dimension as a single unit without a magnitude (or more      *\n* accurately a magnitude of one) and uses the                  *\n* UnitOfMeasureQty(1147) field to define the quantity of units *\n* per contract. Variable Quantity UOMs are used for both       *\n* commodities (such as lbs of lean cattle, bushels of corn,    *\n* ounces of gold) and financial futures.                       *\n* Examples:                                                    *\n* For lean cattle futures contracts, a UnitOfMeasure of 'lbs'  *\n* with a UnitOfMeasureQty(1147) of 40,000, means each lean     *\n* cattle futures contract represents 40,000 lbs of lean        *\n* cattle.                                                      *\n* For Eurodollars futures contracts, a UnitOfMeasure of Ccy    *\n* with a UnitOfMeasureCurrency(1716)  of USD and a             *\n* UnitOfMeasureQty(1147) of 1,000,000, means a Eurodollar      *\n* futures contract represents 1,000,000 USD.                   *\n* For gold futures contracts, a UnitOfMeasure is oz_tr (Troy   *\n* ounce) with a UnitOfMeasureQty(1147) of 1,000, means each    *\n* gold futures contract represents 1,000 troy ounces of gold.  *\n****************************************************************\n*/\n  UnitOfMeasure = 996,\n/*\n**************************************************************\n* Unit of time associated with the contract.                 *\n* NOTE: Additional values may be used by mutual agreement of *\n* the counterparties                                         *\n**************************************************************\n*/\n  TimeUnit = 997,\n/*\n********************************************\n* Refer to defintion of UnitOfMeasure(996) *\n********************************************\n*/\n  UnderlyingUnitOfMeasure = 998,\n/*\n********************************************\n* Refer to defintion of UnitOfMeasure(996) *\n********************************************\n*/\n  LegUnitOfMeasure = 999,\n/*\n*********************\n* Same as TimeUnit. *\n*********************\n*/\n  UnderlyingTimeUnit = 1000,\n/*\n*********************\n* Same as TimeUnit. *\n*********************\n*/\n  LegTimeUnit = 1001,\n/*\n*********************************************************\n* Specifies the method under which a trade quantity was *\n* allocated.                                            *\n*********************************************************\n*/\n  AllocMethod = 1002,\n/*\n****************************************************************\n* The unique ID assigned to the trade entity once it is        *\n* received or matched by the exchange or central counterparty. *\n****************************************************************\n*/\n  TradeID = 1003,\n/*\n*********************************************************\n* Used on a multi-sided trade to designate the ReportID *\n*********************************************************\n*/\n  SideTradeReportID = 1005,\n/*\n*******************************************************\n* Used on a multi-sided trade to convey order routing *\n* information                                         *\n*******************************************************\n*/\n  SideFillStationCd = 1006,\n/*\n**************************************************************\n* Used on a multi-sided trade to convey reason for execution *\n**************************************************************\n*/\n  SideReasonCd = 1007,\n/*\n****************************************************************\n* Used on a multi-sided trade to specify the type of trade for *\n* a given side. Same values as TrdSubType (829).               *\n****************************************************************\n*/\n  SideTrdSubTyp = 1008,\n/*\n**************************************************************\n* Used to indicate the quantity on one side of a multi-sided *\n* trade.                                                     *\n**************************************************************\n*/\n  SideLastQty = 1009,\n/*\n***************************************************************\n* Used to identify the event or source which gave rise to a   *\n* message.                                                    *\n* Valid values will be based on an exchange's implementation. *\n* Example values are:                                         *\n* \"MQM\" (originated at Firm Back Office)                      *\n* \"Clear\" (originated in Clearing System)                     *\n* \"Reg\" (static data generated via Register request)          *\n***************************************************************\n*/\n  MessageEventSource = 1011,\n/*\n************************************************************\n* Will be used in a multi-sided message.                   *\n* Traded Regulatory timestamp value Use to store time      *\n* information required by government regulators or self    *\n* regulatory organizations such as an exchange or clearing *\n* house                                                    *\n************************************************************\n*/\n  SideTrdRegTimestamp = 1012,\n/*\n*******************************\n* Same as TrdRegTimeStampType *\n*******************************\n*/\n  SideTrdRegTimestampType = 1013,\n/*\n***************************************************************\n* Same as TrdRegTimestampOrigin                               *\n* Text which identifies the origin i.e. system which was used *\n* to generate the time stamp for the Traded Regulatory        *\n* timestamp value                                             *\n***************************************************************\n*/\n  SideTrdRegTimestampSrc = 1014,\n/*\n****************************************************************\n* A trade that is being submitted for a trade date prior to    *\n* the current trade or clearing date, e.g. in an open outcry   *\n* market an out trade being submitted for the previous trading *\n* session or trading day.                                      *\n****************************************************************\n*/\n  AsOfIndicator = 1015,\n/*\n************************************************************\n* Expresses the risk of an option leg                      *\n* Value must be between -1 and 1.                          *\n* A Call Option will require a ratio value between 0 and 1 *\n* A Put Option will require a ratio value between -1 and 0 *\n************************************************************\n*/\n  LegOptionRatio = 1017,\n/*\n*************************************************************\n* PartyID value within an instrument party repeating group. *\n* Same values as PartyID (448)                              *\n*************************************************************\n*/\n  InstrumentPartyID = 1019,\n/*\n**************************************\n* Used to report volume with a trade *\n**************************************\n*/\n  TradeVolume = 1020,\n/*\n**************************************************************\n* Describes the type of book for which the feed is intended. *\n* Used when multiple feeds are provided over the same        *\n* connection                                                 *\n**************************************************************\n*/\n  MDBookType = 1021,\n/*\n**************************************************************\n* Describes a class of service for a given data feed, ie     *\n* Regular and Market Maker, Bandwidth Intensive or Bandwidth *\n* Conservative                                               *\n**************************************************************\n*/\n  MDFeedType = 1022,\n/*\n***************************************************************\n* Integer to convey the level of a bid or offer at a given    *\n* price level. This is in contrast to MDEntryPositionNo which *\n* is used to convey the position of an order within a Price   *\n* level                                                       *\n***************************************************************\n*/\n  MDPriceLevel = 1023,\n/*\n*********************************************************\n* Used to describe the origin of the market data entry. *\n*********************************************************\n*/\n  MDOriginType = 1024,\n/*\n******************************************************\n* Indicates the first trade price of the day/session *\n******************************************************\n*/\n  FirstPx = 1025,\n/*\n*********************************\n* The spot rate for an FX entry *\n*********************************\n*/\n  MDEntrySpotRate = 1026,\n/*\n***************************************************************\n* Used for an F/X entry. The forward points to be added to or *\n* subtracted from the spot rate to get the \"all-in\" rate in   *\n* MDEntryPx. Expressed in decimal form. For example, 61.99    *\n* points is expressed and sent as 0.006199                    *\n***************************************************************\n*/\n  MDEntryForwardPoints = 1027,\n/*\n****************************************************************\n* Indicates if the order was initially received manually (as   *\n* opposed to electronically) or if it was entered manually (as *\n* opposed to entered by automated trading software).           *\n****************************************************************\n*/\n  ManualOrderIndicator = 1028,\n/*\n***************************************************************\n* Indicates if the customer directed this order to a specific *\n* execution venue \"Y\" or not \"N\".                             *\n* A default of \"N\" customer did not direct this order should  *\n* be used in the case where the information is both missing   *\n* and essential.                                              *\n***************************************************************\n*/\n  CustDirectedOrder = 1029,\n/*\n***************************************************************\n* Identifies the broker-dealer department that first took the *\n* order.                                                      *\n***************************************************************\n*/\n  ReceivedDeptID = 1030,\n/*\n***************************************************************************************\n* Codes that apply special information that the Broker /                              *\n* Dealer needs to report, as specified by the customer.                               *\n* NOTE: This field and its values have no bearing on the                              *\n* ExecInst and TimeInForce fields. These values should not be                         *\n* used instead of ExecInst or TimeInForce. This field and its                         *\n* values are intended for compliance reporting and/or billing                         *\n* purposes only.                                                                      *\n*                                                                                     *\n* For OrderHandlingInstSrc(1032) = 1 (FINRA OATS), valid                              *\n* values are (as of OATS Phase 3 as provided by FINRA. See                            *\n* also                                                                                *\n* http://www.finra.org/Industry/Compliance/MarketTransparency/OATS/PhaseIII/index.htm *\n* for a complete list.                                                                *\n*                                                                                     *\n* For OrderHandlingInstSrc(1032) = 2 (FIA Execution Source                            *\n* Code), only one enumeration value may be specified.                                 *\n***************************************************************************************\n*/\n  CustOrderHandlingInst = 1031,\n/*\n****************************************************************\n* Identifies the class or source of the order handling         *\n* instruction values.  Scope of this will apply to both        *\n* CustOrderHandlingInst(1031) and DeskOrderHandlingInst(1035). *\n* Conditionally required when CustOrderHandlingInst(1031) or   *\n* DeskOrderHandlingInst(1035) is specified.                    *\n****************************************************************\n*/\n  OrderHandlingInstSource = 1032,\n/*\n*************************************************************\n* Identifies the type of Trading Desk.                      *\n* Conditionally required when InformationBarrierID(1727) is *\n* specified for OATS.                                       *\n*************************************************************\n*/\n  DeskType = 1033,\n/*\n************************************************************\n* Identifies the class or source of DeskType(1033) values. *\n* Conditionally required when DeskType(1033) is specified. *\n************************************************************\n*/\n  DeskTypeSource = 1034,\n/*\n***************************************************************\n* Codes that apply special information that the broker-dealer *\n* needs to report.                                            *\n***************************************************************\n*/\n  DeskOrderHandlingInst = 1035,\n/*\n*********************************************************\n* The status of this execution acknowledgement message. *\n*********************************************************\n*/\n  ExecAckStatus = 1036,\n/*\n************************************************************\n* Indicates the underlying position amount to be delivered *\n************************************************************\n*/\n  UnderlyingDeliveryAmount = 1037,\n/*\n************************************************************\n* Maximum notional value for a capped financial instrument *\n************************************************************\n*/\n  UnderlyingCapValue = 1038,\n/*\n**************************************************************\n* Settlement method for a contract or instrument. Additional *\n* values may be used with bilateral agreement.               *\n**************************************************************\n*/\n  UnderlyingSettlMethod = 1039,\n/*\n**************************************************************\n* Used to carry an internal trade entity ID which may or may *\n* not be reported to the firm                                *\n**************************************************************\n*/\n  SecondaryTradeID = 1040,\n/*\n***********************************************************\n* The ID assigned to a trade by the Firm to track a trade *\n* within the Firm system. This ID can be assigned either  *\n* before or after submission to the exchange or central   *\n* counterpary                                             *\n***********************************************************\n*/\n  FirmTradeID = 1041,\n/*\n***************************************************************\n* Used to carry an internal firm assigned ID which may or may *\n* not be reported to the exchange or central counterpary      *\n***************************************************************\n*/\n  SecondaryFirmTradeID = 1042,\n/*\n*********************************************************\n* conveys how the collateral should be/has been applied *\n*********************************************************\n*/\n  CollApplType = 1043,\n/*\n****************************************************************\n* Unit amount of the underlying security (shares) adjusted for *\n* pending corporate action not yet allocated.                  *\n****************************************************************\n*/\n  UnderlyingAdjustedQuantity = 1044,\n/*\n******************************************************\n* Foreign exchange rate used to compute              *\n* UnderlyingCurrentValue(885) (or market value) from *\n* UnderlyingCurrency(318) to Currency(15).           *\n******************************************************\n*/\n  UnderlyingFXRate = 1045,\n/*\n**********************************************************\n* Specifies whether the UnderlyingFxRate(1045) should be *\n* multiplied or divided.                                 *\n**********************************************************\n*/\n  UnderlyingFXRateCalc = 1046,\n/*\n***************************************************************\n* Indicates whether the resulting position after a trade      *\n* should be an opening position or closing position. Used for *\n* omnibus accounting - where accounts are held on a gross     *\n* basis instead of being netted together.                     *\n***************************************************************\n*/\n  AllocPositionEffect = 1047,\n/*\n************************************************\n* Identifies role of dealer; Agent, Principal, *\n* RisklessPrincipal                            *\n************************************************\n*/\n  DealingCapacity = 1048,\n/*\n***********************************************\n* Method under which assignment was conducted *\n***********************************************\n*/\n  InstrmtAssignmentMethod = 1049,\n/*\n***********************************************************\n* PartyIDSource value within an instrument partyrepeating *\n* group.                                                  *\n* Same values as PartyIDSource (447)                      *\n***********************************************************\n*/\n  InstrumentPartyIDSource = 1050,\n/*\n*************************************************************\n* PartyRole value within an instrument partyepeating group. *\n* Same values as PartyRole (452)                            *\n*************************************************************\n*/\n  InstrumentPartyRole = 1051,\n/*\n****************************************************************\n* PartySubID value within an instrument party repeating group. *\n* Same values as PartySubID (523)                              *\n****************************************************************\n*/\n  InstrumentPartySubID = 1053,\n/*\n**********************************************\n* Type of InstrumentPartySubID (1053) value. *\n* Same values as PartySubIDType (803)        *\n**********************************************\n*/\n  InstrumentPartySubIDType = 1054,\n/*\n************************************************************\n* The Currency in which the position Amount is denominated *\n************************************************************\n*/\n  PositionCurrency = 1055,\n/*\n*************************************************************\n* Used for the calculated quantity of the other side of the *\n* currency trade. Can be derived from LastQty and LastPx.   *\n*************************************************************\n*/\n  CalculatedCcyLastQty = 1056,\n/*\n****************************************************************\n* Used to identify whether the order initiator is an aggressor *\n* or not in the trade.                                         *\n****************************************************************\n*/\n  AggressorIndicator = 1057,\n/*\n*******************************************************\n* PartyID value within an underlying instrument party *\n* repeating group.                                    *\n* Same values as PartyID (448)                        *\n*******************************************************\n*/\n  UnderlyingInstrumentPartyID = 1059,\n/*\n*******************************************************\n* PartyIDSource value within an underlying instrument *\n* partyrepeating group.                               *\n* Same values as PartyIDSource (447)                  *\n*******************************************************\n*/\n  UnderlyingInstrumentPartyIDSource = 1060,\n/*\n***************************************************\n* PartyRole value within an underlying instrument *\n* partyepeating group.                            *\n* Same values as PartyRole (452)                  *\n***************************************************\n*/\n  UnderlyingInstrumentPartyRole = 1061,\n/*\n**********************************************************\n* PartySubID value within an underlying instrument party *\n* repeating group.                                       *\n* Same values as PartySubID (523)                        *\n**********************************************************\n*/\n  UnderlyingInstrumentPartySubID = 1063,\n/*\n*********************************************************\n* Type of underlying InstrumentPartySubID (1053) value. *\n* Same values as PartySubIDType (803)                   *\n*********************************************************\n*/\n  UnderlyingInstrumentPartySubIDType = 1064,\n/*\n*************************************************************\n* The bid FX Swap points for an FX Swap. It is the \"far bid *\n* forward points - near offer forward point\". Value can be  *\n* negative. Expressed in decimal form. For example, 61.99   *\n* points is expressed and sent as 0.006199                  *\n*************************************************************\n*/\n  BidSwapPoints = 1065,\n/*\n**************************************************************\n* The offer FX Swap points for an FX Swap. It is the \"far    *\n* offer forward points - near bid forward points\". Value can *\n* be negative. Expressed in decimal form. For example, 61.99 *\n* points is expressed and sent as 0.006199                   *\n**************************************************************\n*/\n  OfferSwapPoints = 1066,\n/*\n**************************************************************\n* The bid FX forward points for the leg of an FX Swap. Value *\n* can be negative. Expressed in decimal form. For example,   *\n* 61.99 points is expressed and sent as 0.006199             *\n**************************************************************\n*/\n  LegBidForwardPoints = 1067,\n/*\n****************************************************************\n* The offer FX forward points for the leg of an FX Swap. Value *\n* can be negative. Expressed in decimal form. For example,     *\n* 61.99 points is expressed and sent as 0.006199               *\n****************************************************************\n*/\n  LegOfferForwardPoints = 1068,\n/*\n****************************************************************\n* For FX Swap, this is used to express the differential        *\n* between the far leg's bid/offer and the near leg's           *\n* bid/offer. Value can be negative. Expressed in decimal form. *\n* For example, 61.99 points is expressed and sent as 0.006199  *\n****************************************************************\n*/\n  SwapPoints = 1069,\n/*\n**************************************\n* Identifies market data quote type. *\n**************************************\n*/\n  MDQuoteType = 1070,\n/*\n****************************************************************\n* For FX Swap, this is used to express the last market event   *\n* for the differential between the far leg's bid/offer and the *\n* near leg's bid/offer in a fill or partial fill. Value can be *\n* negative. Expressed in decimal form. For example, 61.99      *\n* points is expressed and sent as 0.006199                     *\n****************************************************************\n*/\n  LastSwapPoints = 1071,\n/*\n***************************************************************\n* The gross trade amount for this side of the trade. See also *\n* GrossTradeAmt (381) for additional definition.              *\n***************************************************************\n*/\n  SideGrossTradeAmt = 1072,\n/*\n**************************************************************\n* The forward points for this leg's fill event. Value can be *\n* negative. Expressed in decimal form. For example, 61.99    *\n* points is expressed and sent as 0.006199                   *\n**************************************************************\n*/\n  LegLastForwardPoints = 1073,\n/*\n*************************************************************\n* Used for the calculated quantity of the other side of the *\n* currency for this leg. Can be derived from LegQty and     *\n* LegLastPx.                                                *\n*************************************************************\n*/\n  LegCalculatedCcyLastQty = 1074,\n/*\n****************************************************************\n* The gross trade amount of the leg. For FX Futures this is    *\n* used to express the notional value of a fill when LegLastQty *\n* and other quantity fields are express in terms of contract   *\n* size.                                                        *\n****************************************************************\n*/\n  LegGrossTradeAmt = 1075,\n/*\n************************************************************\n* Time of security's maturity expressed in local time with *\n* offset to UTC specified                                  *\n************************************************************\n*/\n  MaturityTime = 1079,\n/*\n**************************************************************\n* The ID reference to the order being hit or taken.          *\n*                                                            *\n* For pre-trade credit/risk limit check process, this is the *\n* reference to the placed order, quote request or quote for  *\n* the credit/risk limit check.                               *\n**************************************************************\n*/\n  RefOrderID = 1080,\n/*\n**************************************************************\n* Used to specify what identifier, provided in order depth   *\n* market data, to use when hitting (taking) a specific order *\n* or to identify what type of order or quote reference is    *\n* being provided when seeking credit limit check.            *\n**************************************************************\n*/\n  RefOrderIDSource = 1081,\n/*\n**************************************************************\n* Used for reserve orders when DisplayQty applies to the     *\n* primary execution market (e.g.an ECN) and another quantity *\n* is to be shown at other markets (e.g. the exchange). On    *\n* orders specifies the qty to be displayed, on execution     *\n* reports the currently displayed quantity.                  *\n**************************************************************\n*/\n  SecondaryDisplayQty = 1082,\n/*\n************************************************\n* Instructs when to refresh DisplayQty (1138). *\n************************************************\n*/\n  DisplayWhen = 1083,\n/*\n**********************************************************\n* Defines what value to use in DisplayQty (1138). If not *\n* specified the default DisplayMethod is \"1\"             *\n**********************************************************\n*/\n  DisplayMethod = 1084,\n/*\n***************************************************************\n* Defines the lower quantity limit to a randomized refresh of *\n* DisplayQty.                                                 *\n***************************************************************\n*/\n  DisplayLowQty = 1085,\n/*\n***************************************************************\n* Defines the upper quantity limit to a randomized refresh of *\n* DisplayQty.                                                 *\n***************************************************************\n*/\n  DisplayHighQty = 1086,\n/*\n***************************************************************\n* Defines the minimum increment to be used when calculating a *\n* random refresh of DisplayQty. A user specifies this when he *\n* wants a larger increment than the standard provided by the  *\n* market (e.g. the round lot size).                           *\n***************************************************************\n*/\n  DisplayMinIncr = 1087,\n/*\n****************************************************\n* Defines the quantity used to refresh DisplayQty. *\n****************************************************\n*/\n  RefreshQty = 1088,\n/*\n****************************************************************\n* Allows orders to specify a minimum quantity that applies to  *\n* every execution (one execution could be for multiple         *\n* counter-orders). The order may still fill against smaller    *\n* orders, but the cumulative quantity of the execution must be *\n* in multiples of the MatchIncrement.                          *\n****************************************************************\n*/\n  MatchIncrement = 1089,\n/*\n****************************************************************\n* Allows an order to specify a maximum number of price levels  *\n* to trade through. Only valid for aggressive orders and       *\n* during continuous (autoexecution) trading sessions. Property *\n* lost when order is put on book. A partially filled order is  *\n* assigned last trade price as limit price. Non-filled order   *\n* behaves as ordinary Market or Limit.                         *\n****************************************************************\n*/\n  MaxPriceLevels = 1090,\n/*\n***************************************************************\n* Allows trader to explicitly request anonymity or disclosure *\n* in pre-trade market data feeds. Anonymity is relevant in    *\n* markets where counterparties are regularly disclosed in     *\n* order depth feeds. Disclosure is relevant when              *\n* counterparties are not normally visible.                    *\n***************************************************************\n*/\n  PreTradeAnonymity = 1091,\n/*\n**************************************************************\n* Defines the type of price protection the customer requires *\n* on their order.                                            *\n**************************************************************\n*/\n  PriceProtectionScope = 1092,\n/*\n***********************************************\n* Defines the lot type assigned to the order. *\n***********************************************\n*/\n  LotType = 1093,\n/*\n****************************\n* Defines the type of peg. *\n****************************\n*/\n  PegPriceType = 1094,\n/*\n*************************************************************\n* The value of the reference price that the order is pegged *\n* to. PeggedRefPrice + PegOffsetValue (211) = PeggedPrice   *\n* (839) unless the limit price (44, Price) is breached. The *\n* values may not be exact due to rounding.                  *\n*************************************************************\n*/\n  PeggedRefPrice = 1095,\n/*\n*************************************************************\n* Defines the identity of the security off whose prices the *\n* order will peg. Same values as SecurityIDSource (22)      *\n*************************************************************\n*/\n  PegSecurityIDSource = 1096,\n/*\n*************************************************************\n* Defines the identity of the security off whose prices the *\n* order will peg.                                           *\n*************************************************************\n*/\n  PegSecurityID = 1097,\n/*\n****************************************************************\n* Defines the common, 'human understood' representation of the *\n* security off whose prices the order will Peg.                *\n****************************************************************\n*/\n  PegSymbol = 1098,\n/*\n*************************************************************\n* Security description of the security off whose prices the *\n* order will Peg.                                           *\n*************************************************************\n*/\n  PegSecurityDesc = 1099,\n/*\n****************************************************************\n* Defines when the trigger will hit, i.e. the action specified *\n* by the trigger instructions will come into effect.           *\n****************************************************************\n*/\n  TriggerType = 1100,\n/*\n*************************************************************\n* Defines the type of action to take when the trigger hits. *\n*************************************************************\n*/\n  TriggerAction = 1101,\n/*\n**********************************************\n* The price at which the trigger should hit. *\n**********************************************\n*/\n  TriggerPrice = 1102,\n/*\n****************************************************************\n* Defines the common, 'human understood' representation of the *\n* security whose prices will be tracked by the trigger logic.  *\n****************************************************************\n*/\n  TriggerSymbol = 1103,\n/*\n*************************************************************\n* Defines the identity of the security whose prices will be *\n* tracked by the trigger logic.                             *\n*************************************************************\n*/\n  TriggerSecurityID = 1104,\n/*\n*************************************************************\n* Defines the identity of the security whose prices will be *\n* tracked by the trigger logic. Same values as              *\n* SecurityIDSource (22).                                    *\n*************************************************************\n*/\n  TriggerSecurityIDSource = 1105,\n/*\n**********************************************************\n* Defines the security description of the security whose *\n* prices will be tracked by the trigger logic.           *\n**********************************************************\n*/\n  TriggerSecurityDesc = 1106,\n/*\n******************************************************\n* The type of price that the trigger is compared to. *\n******************************************************\n*/\n  TriggerPriceType = 1107,\n/*\n**************************************************************\n* Defines the type of price protection the customer requires *\n* on their order.                                            *\n**************************************************************\n*/\n  TriggerPriceTypeScope = 1108,\n/*\n*****************************************************\n* The side from which the trigger price is reached. *\n*****************************************************\n*/\n  TriggerPriceDirection = 1109,\n/*\n**************************************************************\n* The Price that the order should have after the trigger has *\n* hit. Could be applicable for any trigger type, but must be *\n* specified for Trigger Type 1.                              *\n**************************************************************\n*/\n  TriggerNewPrice = 1110,\n/*\n****************************************************************\n* The OrdType the order should have after the trigger has hit. *\n* Required to express orders that change from Limit to Market. *\n* Other values from OrdType (40) may be used if appropriate    *\n* and bilaterally agreed upon.                                 *\n****************************************************************\n*/\n  TriggerOrderType = 1111,\n/*\n************************************************************\n* The Quantity the order should have after the trigger has *\n* hit.                                                     *\n************************************************************\n*/\n  TriggerNewQty = 1112,\n/*\n**********************************************************\n* Defines the trading session at which the order will be *\n* activated.                                             *\n**********************************************************\n*/\n  TriggerTradingSessionID = 1113,\n/*\n**************************************************************\n* Defines the subordinate trading session at which the order *\n* will be activated.                                         *\n**************************************************************\n*/\n  TriggerTradingSessionSubID = 1114,\n/*\n****************************************************************\n* Defines the type of interest behind a trade (fill or partial *\n* fill).                                                       *\n****************************************************************\n*/\n  OrderCategory = 1115,\n/*\n**************************************************************\n* PartyID value within a root parties component. Same values *\n* as PartyID (448)                                           *\n**************************************************************\n*/\n  RootPartyID = 1117,\n/*\n*************************************************************\n* PartyIDSource value within a root parties component. Same *\n* values as PartyIDSource (447)                             *\n*************************************************************\n*/\n  RootPartyIDSource = 1118,\n/*\n****************************************************************\n* PartyRole value within a root parties component. Same values *\n* as PartyRole (452)                                           *\n****************************************************************\n*/\n  RootPartyRole = 1119,\n/*\n**********************************************************\n* PartySubID value within a root parties component. Same *\n* values as PartySubID (523)                             *\n**********************************************************\n*/\n  RootPartySubID = 1121,\n/*\n*******************************************************\n* Type of RootPartySubID (1121) value. Same values as *\n* PartySubIDType (803)                                *\n*******************************************************\n*/\n  RootPartySubIDType = 1122,\n/*\n*********************************************************\n* Specified how the TradeCaptureReport(35=AE) should be *\n* handled by the respondent.                            *\n*********************************************************\n*/\n  TradeHandlingInstr = 1123,\n/*\n***************************************************************\n* Optionally used with TradeHandlingInstr = 0 to relay the    *\n* trade handling instruction used when reporting the trade to *\n* the marketplace. Same values as TradeHandlingInstr (1123)   *\n***************************************************************\n*/\n  OrigTradeHandlingInstr = 1124,\n/*\n****************************************************************\n* Used to preserve original trade date when original trade is  *\n* being referenced in a subsequent trade transaction such as a *\n* transfer                                                     *\n****************************************************************\n*/\n  OrigTradeDate = 1125,\n/*\n****************************************************************\n* Used to preserve original trade id when original trade is    *\n* being referenced in a subsequent trade transaction such as a *\n* transfer                                                     *\n****************************************************************\n*/\n  OrigTradeID = 1126,\n/*\n***************************************************************\n* Used to preserve original secondary trade id when original  *\n* trade is being referenced in a subsequent trade transaction *\n* such as a transfer                                          *\n***************************************************************\n*/\n  OrigSecondaryTradeID = 1127,\n/*\n***************************************************************\n* Specifies the service pack release being applied at message *\n* level. Enumerated field with values assigned at time of     *\n* service pack release                                        *\n***************************************************************\n*/\n  ApplVerID = 1128,\n/*\n**************************************************************\n* Specifies the service pack release being applied to a      *\n* message at the session level. Enumerated field with values *\n* assigned at time of service pack release. Uses same values *\n* as ApplVerID                                               *\n**************************************************************\n*/\n  RefApplVerID = 1130,\n/*\n**************************************************************\n* Specifies a custom extension to a message being applied at *\n* the session level.                                         *\n**************************************************************\n*/\n  RefCstmApplVerID = 1131,\n/*\n***************************************************************\n* Transact time in the local date-time stamp with a TZ offset *\n* to UTC identified                                           *\n***************************************************************\n*/\n  TZTransactTime = 1132,\n/*\n**********************************\n* The ID source of ExDestination *\n**********************************\n*/\n  ExDestinationIDSource = 1133,\n/*\n****************************************************************\n* Indicates that the reported price that is different from the *\n* market price. The price difference should be stated by using *\n* field 828 TrdType and, if required, field 829 TrdSubType     *\n****************************************************************\n*/\n  ReportedPxDiff = 1134,\n/*\n***************************************************************\n* Indicates the system or medium on which the report has been *\n* published                                                   *\n***************************************************************\n*/\n  RptSys = 1135,\n/*\n***************************************************\n* ClearingFeeIndicator(635) for Allocation, see   *\n* ClearingFeeIndicator(635) for permitted values. *\n***************************************************\n*/\n  AllocClearingFeeIndicator = 1136,\n/*\n**************************************************************\n* Specifies the service pack release being applied, by       *\n* default, to message at the session level. Enumerated field *\n* with values assigned at time of service pack release. Uses *\n* same values as ApplVerID                                   *\n**************************************************************\n*/\n  DefaultApplVerID = 1137,\n/*\n***************************************************************\n* The quantity to be displayed . Required for reserve orders. *\n* On orders specifies the qty to be displayed, on execution   *\n* reports the currently displayed quantity.                   *\n***************************************************************\n*/\n  DisplayQty = 1138,\n/*\n************************************************\n* Free format text string related to exchange. *\n************************************************\n*/\n  ExchangeSpecialInstructions = 1139,\n/*\n*************************************************************\n* The maximum order quantity (as expressed by               *\n* TradeVolType(1786)) that can be submitted for a security. *\n*************************************************************\n*/\n  MaxTradeVol = 1140,\n/*\n*************************************************************\n* The types of algorithm used to match orders in a specific *\n* security. Possilbe value types are FIFO, Allocation,      *\n* Pro-rata, Lead Market Maker, Currency Calender.           *\n*************************************************************\n*/\n  MatchAlgorithm = 1142,\n/*\n**************************************************************\n* The maximum price variation of an execution from one event *\n* to the next for a given security. Expressed in absolute    *\n* price terms.                                               *\n**************************************************************\n*/\n  MaxPriceVariation = 1143,\n/*\n***************************************************************\n* Indicates that an implied market should be created for      *\n* either the legs of a multi-leg instrument (Implied-in) or   *\n* for the multi-leg instrument based on the existence of the  *\n* legs (Implied-out). Determination as to whether implied     *\n* markets should be created is generally done at the level of *\n* the multi-leg instrument. Commonly used in listed           *\n* derivatives.                                                *\n***************************************************************\n*/\n  ImpliedMarketIndicator = 1144,\n/*\n**********************************************************\n* Specific time of event. To be used in combination with *\n* EventDate [866]                                        *\n**********************************************************\n*/\n  EventTime = 1145,\n/*\n***************************************************************\n* Minimum price increment amount associated with the          *\n* MinPriceIncrement ( tag 969). For listed derivatives, the   *\n* value can be calculated by multiplying MinPriceIncrement by *\n* ContractValueFactor(231).                                   *\n***************************************************************\n*/\n  MinPriceIncrementAmount = 1146,\n/*\n*************************************************************\n* Used to indicate the quantity of the underlying commodity *\n* unit of measure on which the contract is based, such as,  *\n* 2500 lbs of lean cattle, 1000 barrels of crude oil, 1000  *\n* bushels of corn, etc. UnitOfMeasureQty is required for    *\n* UnitOfMeasure(996) Variable Quantity UOMs enumerations.   *\n* Refer to the definition of UnitOfMeasure(996) for more    *\n* information on the use of UnitOfMeasureQty.               *\n*************************************************************\n*/\n  UnitOfMeasureQty = 1147,\n/*\n***************************************************************\n* Allowable low limit price for the trading day. A key        *\n* parameter in validating order price. Used as the lower band *\n* for validating order prices. Orders submitted with prices   *\n* below the lower limit will be rejected                      *\n***************************************************************\n*/\n  LowLimitPrice = 1148,\n/*\n***************************************************************\n* Allowable high limit price for the trading day. A key       *\n* parameter in validating order price. Used as the upper band *\n* for validating order prices. Orders submitted with prices   *\n* above the upper limit will be rejected                      *\n***************************************************************\n*/\n  HighLimitPrice = 1149,\n/*\n***************************************************************\n* Reference price for the current trading price range usually *\n* representing the mid price between the HighLimitPrice and   *\n* LowLimitPrice. The value may be the settlement price or     *\n* closing price of the prior trading day.                     *\n***************************************************************\n*/\n  TradingReferencePrice = 1150,\n/*\n************************************************************\n* An exchange specific name assigned to a group of related *\n* securities which may be concurrently affected by market  *\n* events and actions.                                      *\n************************************************************\n*/\n  SecurityGroup = 1151,\n/*\n**********************************************************\n* Allow sequencing of Legs for a Strategy to be captured *\n**********************************************************\n*/\n  LegNumber = 1152,\n/*\n***********************************************************\n* Settlement cycle in which the settlement obligation was *\n* generated                                               *\n***********************************************************\n*/\n  SettlementCycleNo = 1153,\n/*\n**************************************************************\n* Used to identify the trading currency on the Trade Capture *\n* Report Side                                                *\n**************************************************************\n*/\n  SideCurrency = 1154,\n/*\n*********************************************************\n* Used to identify the settlement currency on the Trade *\n* Capture Report Side                                   *\n*********************************************************\n*/\n  SideSettlCurrency = 1155,\n/*\n**************************\n* Net flow of Currency 1 *\n**************************\n*/\n  CcyAmt = 1157,\n/*\n*********************************************************\n* Used to identify the reporting mode of the settlement *\n* obligation which is either preliminary or final       *\n*********************************************************\n*/\n  SettlObligMode = 1159,\n/*\n*******************************************************\n* Message identifier for Settlement Obligation Report *\n*******************************************************\n*/\n  SettlObligMsgID = 1160,\n/*\n**********************************************\n* Unique ID for this settlement instruction. *\n**********************************************\n*/\n  SettlObligID = 1161,\n/*\n*************************************************************\n* Transaction Type - required except where SettlInstMode is *\n* 5=Reject SSI request                                      *\n*************************************************************\n*/\n  SettlObligTransType = 1162,\n/*\n**********************************************************\n* Required where SettlInstTransType is Cancel or Replace *\n**********************************************************\n*/\n  SettlObligRefID = 1163,\n/*\n****************************************************************\n* Used to identify whether these delivery instructions are for *\n* the buyside or the sellside.                                 *\n****************************************************************\n*/\n  SettlObligSource = 1164,\n/*\n******************************************\n* Unique identifier for a quote message. *\n******************************************\n*/\n  QuoteMsgID = 1166,\n/*\n**********************************************************\n* Identifies the status of an individual quote. See also *\n* QuoteStatus(297) which is used for single Quotes.      *\n**********************************************************\n*/\n  QuoteEntryStatus = 1167,\n/*\n*******************************************\n* Specifies the number of canceled quotes *\n*******************************************\n*/\n  TotNoCxldQuotes = 1168,\n/*\n*******************************************\n* Specifies the number of accepted quotes *\n*******************************************\n*/\n  TotNoAccQuotes = 1169,\n/*\n*******************************************\n* Specifies the number of rejected quotes *\n*******************************************\n*/\n  TotNoRejQuotes = 1170,\n/*\n**************************************************************\n* Specifies whether a quote is public, i.e. available to the *\n* market, or private, i.e. available to a specified          *\n* counterparty only.                                         *\n**************************************************************\n*/\n  PrivateQuote = 1171,\n/*\n************************************************\n* Specifies the type of respondents requested. *\n************************************************\n*/\n  RespondentType = 1172,\n/*\n****************************************************************\n* Describes a class of sub book, e.g. for the separation of    *\n* various lot types. The Sub Book Type indicates that the      *\n* following Market Data Entries belong to a non-integrated Sub *\n* Book. Whenever provided the Sub Book must be used together   *\n* with MDPriceLevel and MDEntryPositionNo in order to sort the *\n* order properly.                                              *\n* Values are bilaterally agreed.                               *\n****************************************************************\n*/\n  MDSubBookType = 1173,\n/*\n****************************************************************\n* Identifies an event related to a SecurityTradingStatus(326). *\n* An event occurs and is gone, it is not a state that applies  *\n* for a period of time.                                        *\n****************************************************************\n*/\n  SecurityTradingEvent = 1174,\n/*\n**********************\n* Type of statistics *\n**********************\n*/\n  StatsType = 1176,\n/*\n*****************************************\n* Specifies the type of secondary size. *\n*****************************************\n*/\n  MDSecSizeType = 1178,\n/*\n************************************************************\n* A part of the MDEntrySize(271) that represents secondary *\n* interest as specified by MDSecSizeType(1178).            *\n************************************************************\n*/\n  MDSecSize = 1179,\n/*\n*********************************************************\n* Identifies the application with which a message is    *\n* associated. Used only if application sequencing is in *\n* effect.                                               *\n*********************************************************\n*/\n  ApplID = 1180,\n/*\n**************************************************************\n* Data sequence number to be used when FIX session is not in *\n* effect                                                     *\n**************************************************************\n*/\n  ApplSeqNum = 1181,\n/*\n***************************************************\n* Beginning range of application sequence numbers *\n***************************************************\n*/\n  ApplBegSeqNum = 1182,\n/*\n************************************************\n* Ending range of application sequence numbers *\n************************************************\n*/\n  ApplEndSeqNum = 1183,\n/*\n***********************************************\n* The schema used to validate the contents of *\n* SecurityXML(1185).                          *\n***********************************************\n*/\n  SecurityXMLSchema = 1186,\n/*\n***********************************************************\n* Set by the sender to tell the receiver to perform an    *\n* immediate refresh of the book due to disruptions in the *\n* accompanying real-time feed                             *\n* 'Y' - Mandatory refresh by all participants             *\n* 'N' - Process as required                               *\n***********************************************************\n*/\n  RefreshIndicator = 1187,\n/*\n*******************************************************\n* Annualized volatility for option model calculations *\n*******************************************************\n*/\n  Volatility = 1188,\n/*\n****************************************************************\n* Time to expiration in years calculated as the number of days *\n* remaining to expiration divided by 365 days per year.        *\n****************************************************************\n*/\n  TimeToExpiration = 1189,\n/*\n********************************************************\n* Interest rate. Usually some form of short term rate. *\n********************************************************\n*/\n  RiskFreeRate = 1190,\n/*\n**************************************************************\n* Used to express the UOM of the price if different from the *\n* contract. In futures, this can be different for cross-rate *\n* products in which the price is quoted in units differently *\n* from the contract                                          *\n**************************************************************\n*/\n  PriceUnitOfMeasure = 1191,\n/*\n***************************************************************\n* Used to express the UOM Quantity of the price if different  *\n* from the contract. In futures, this can be different for    *\n* physically delivered products in which price is quoted in a *\n* unit size different from the contract, i.e. a Cattle Future *\n* contract has a UOMQty of 40,000 and a PriceUOMQty of 100.   *\n***************************************************************\n*/\n  PriceUnitOfMeasureQty = 1192,\n/*\n**************************************************************\n* Settlement method for a contract or instrument. Additional *\n* values may be used with bilateral agreement.               *\n**************************************************************\n*/\n  SettlMethod = 1193,\n/*\n**********************************************\n* Type of exercise of a derivatives security *\n**********************************************\n*/\n  ExerciseStyle = 1194,\n/*\n*********************************************************\n* Cash amount indicating the pay out associated with an *\n* option. For binary options this is a fixed amount.    *\n*********************************************************\n*/\n  OptPayoutAmount = 1195,\n/*\n******************************\n* Method for price quotation *\n******************************\n*/\n  PriceQuoteMethod = 1196,\n/*\n***************************************************\n* Specifies the type of valuation method applied. *\n***************************************************\n*/\n  ValuationMethod = 1197,\n/*\n************************************************************\n* Indicates whether instruments are pre-listed only or can *\n* also be defined via user request                         *\n************************************************************\n*/\n  ListMethod = 1198,\n/*\n******************************************************\n* Used to express the ceiling price of a capped call *\n******************************************************\n*/\n  CapPrice = 1199,\n/*\n***************************************************\n* Used to express the floor price of a capped put *\n***************************************************\n*/\n  FloorPrice = 1200,\n/*\n*************************************************************\n* Starting price for the range to which the StrikeIncrement *\n* applies. Price refers to the price of the underlying      *\n*************************************************************\n*/\n  StartStrikePxRange = 1202,\n/*\n**********************************************************\n* Ending price of the range to which the StrikeIncrement *\n* applies. Price refers to the price of the underlying   *\n**********************************************************\n*/\n  EndStrikePxRange = 1203,\n/*\n****************************************************************\n* Value by which strike price should be incremented within the *\n* specified price range.                                       *\n****************************************************************\n*/\n  StrikeIncrement = 1204,\n/*\n*****************************************************\n* Starting price range for specified tick increment *\n*****************************************************\n*/\n  StartTickPriceRange = 1206,\n/*\n*******************************************************\n* Ending price range for the specified tick increment *\n*******************************************************\n*/\n  EndTickPriceRange = 1207,\n/*\n**************************************************************\n* Tick increment for stated price range. Specifies the valid *\n* price increments at which a security can be quoted and     *\n* traded                                                     *\n**************************************************************\n*/\n  TickIncrement = 1208,\n/*\n************************************************************\n* Specifies the type of tick rule which is being described *\n************************************************************\n*/\n  TickRuleType = 1209,\n/*\n******************************************************\n* Code to represent the type of instrument attribute *\n******************************************************\n*/\n  NestedInstrAttribType = 1210,\n/*\n************************************************************\n* Attribute value appropriate to the NestedInstrAttribType *\n* field                                                    *\n************************************************************\n*/\n  NestedInstrAttribValue = 1211,\n/*\n************************************************************\n* Time of security's maturity expressed in local time with *\n* offset to UTC specified                                  *\n************************************************************\n*/\n  LegMaturityTime = 1212,\n/*\n************************************************************\n* Time of security's maturity expressed in local time with *\n* offset to UTC specified                                  *\n************************************************************\n*/\n  UnderlyingMaturityTime = 1213,\n/*\n**************************************\n* Refer to definition for Symbol(55) *\n**************************************\n*/\n  DerivativeSymbol = 1214,\n/*\n*****************************************\n* Refer to definition for SymbolSfx(65) *\n*****************************************\n*/\n  DerivativeSymbolSfx = 1215,\n/*\n******************************************\n* Refer to definition for SecurityID(48) *\n******************************************\n*/\n  DerivativeSecurityID = 1216,\n/*\n************************************************\n* Refer to definition for SecurityIDSoruce(22) *\n************************************************\n*/\n  DerivativeSecurityIDSource = 1217,\n/*\n**********************************************\n* Refer to definition for SecurityAltID(455) *\n**********************************************\n*/\n  DerivativeSecurityAltID = 1219,\n/*\n****************************************************\n* Refer to definition for SecurityAltIDSource(456) *\n****************************************************\n*/\n  DerivativeSecurityAltIDSource = 1220,\n/*\n**********************************************\n* Refer to definition of LowLimitPrice(1148) *\n**********************************************\n*/\n  SecondaryLowLimitPrice = 1221,\n/*\n**************************************************************\n* Allows maturity rule to be referenced via an identifier so *\n* that rules do not need to be explicitly enumerated         *\n**************************************************************\n*/\n  MaturityRuleID = 1222,\n/*\n************************************************************\n* Allows strike rule to be referenced via an identifier so *\n* that rules do not need to be explicitly enumerated       *\n************************************************************\n*/\n  StrikeRuleID = 1223,\n/*\n*************************************************\n* Refer to definition of UnitOfMeasureQty(1147) *\n*************************************************\n*/\n  LegUnitOfMeasureQty = 1224,\n/*\n*********************************************************\n* Cash amount indicating the pay out associated with an *\n* option. For binary options this is a fixed amount     *\n*********************************************************\n*/\n  DerivativeOptPayAmount = 1225,\n/*\n**************************************************\n* Ending maturity month year for an option class *\n**************************************************\n*/\n  EndMaturityMonthYear = 1226,\n/*\n**************************************************************\n* Identifies an entire suite of products for a given market. *\n* In Futures this may be \"interest rates\", \"agricultural\",   *\n* \"equity indexes\", etc.                                     *\n**************************************************************\n*/\n  ProductComplex = 1227,\n/*\n*********************************\n* Refer to ProductComplex(1227) *\n*********************************\n*/\n  DerivativeProductComplex = 1228,\n/*\n***************************************************************\n* Increment between successive maturities for an option class *\n***************************************************************\n*/\n  MaturityMonthYearIncrement = 1229,\n/*\n***********************************************\n* Refer to definition of HighLimitPrice(1149) *\n***********************************************\n*/\n  SecondaryHighLimitPrice = 1230,\n/*\n***********************************************************\n* Minimum lot size allowed based on lot type specified in *\n* LotType(1093)                                           *\n***********************************************************\n*/\n  MinLotSize = 1231,\n/*\n****************************************************************\n* The commission rate when Commission(12) is based on a        *\n* percentage of quantity, amount per unit or a factor of \"unit *\n* of measure\". If the rate is a percentage, use the            *\n* decimalized form, e.g. \"0.05\" for a 5% commission or \"0.005\" *\n* for 50 basis points.                                         *\n****************************************************************\n*/\n  CommRate = 1233,\n/*\n****************************************\n* The commission rate unit of measure. *\n****************************************\n*/\n  CommUnitOfMeasure = 1238,\n/*\n*******************************************************\n* Refer to definition for TradingReferencePrice(1150) *\n*******************************************************\n*/\n  SecondaryTradingReferencePrice = 1240,\n/*\n****************************************************\n* Starting maturity month year for an option class *\n****************************************************\n*/\n  StartMaturityMonthYear = 1241,\n/*\n**************************************************************\n* Used to indicate if a product or group of product supports *\n* the creation of flexible securities                        *\n**************************************************************\n*/\n  FlexProductEligibilityIndicator = 1242,\n/*\n**************************************************\n* Refer to FlexProductEligibilityIndicator(1242) *\n**************************************************\n*/\n  DerivFlexProductEligibilityIndicator = 1243,\n/*\n***************************************************************\n* Used to indicate a derivatives security that can be defined *\n* using flexible terms. The terms commonly permitted to be    *\n* defined by market participants are expiration date and      *\n* strike price. FlexibleIndicator is an alternative           *\n* CFICode(461) Standard/Non-standard attribute.               *\n***************************************************************\n*/\n  FlexibleIndicator = 1244,\n/*\n************************************************************\n* Used when the trading currency can differ from the price *\n* currency                                                 *\n************************************************************\n*/\n  TradingCurrency = 1245,\n  DerivativeProduct = 1246,\n  DerivativeSecurityGroup = 1247,\n  DerivativeCFICode = 1248,\n  DerivativeSecurityType = 1249,\n  DerivativeSecuritySubType = 1250,\n  DerivativeMaturityMonthYear = 1251,\n  DerivativeMaturityDate = 1252,\n  DerivativeMaturityTime = 1253,\n  DerivativeSettleOnOpenFlag = 1254,\n  DerivativeInstrmtAssignmentMethod = 1255,\n  DerivativeSecurityStatus = 1256,\n  DerivativeInstrRegistry = 1257,\n  DerivativeCountryOfIssue = 1258,\n  DerivativeStateOrProvinceOfIssue = 1259,\n  DerivativeLocaleOfIssue = 1260,\n  DerivativeStrikePrice = 1261,\n  DerivativeStrikeCurrency = 1262,\n  DerivativeStrikeMultiplier = 1263,\n  DerivativeStrikeValue = 1264,\n  DerivativeOptAttribute = 1265,\n  DerivativeContractMultiplier = 1266,\n  DerivativeMinPriceIncrement = 1267,\n  DerivativeMinPriceIncrementAmount = 1268,\n  DerivativeUnitOfMeasure = 1269,\n  DerivativeUnitOfMeasureQty = 1270,\n  DerivativeTimeUnit = 1271,\n  DerivativeSecurityExchange = 1272,\n  DerivativePositionLimit = 1273,\n  DerivativeNTPositionLimit = 1274,\n  DerivativeIssuer = 1275,\n  DerivativeIssueDate = 1276,\n  DerivativeEncodedIssuerLen = 1277,\n  DerivativeEncodedIssuer = 1278,\n  DerivativeSecurityDesc = 1279,\n  DerivativeEncodedSecurityDescLen = 1280,\n  DerivativeEncodedSecurityDesc = 1281,\n/*\n**************************************************\n* Refer to definition of SecurityXMLSchema(1186) *\n**************************************************\n*/\n  DerivativeSecurityXMLSchema = 1284,\n  DerivativeContractSettlMonth = 1285,\n  DerivativeEventType = 1287,\n  DerivativeEventDate = 1288,\n  DerivativeEventTime = 1289,\n  DerivativeEventPx = 1290,\n  DerivativeEventText = 1291,\n/*\n***************************************\n* Refer to definition of PartyID(448) *\n***************************************\n*/\n  DerivativeInstrumentPartyID = 1293,\n/*\n*********************************************\n* Refer to definition of PartyIDSource(447) *\n*********************************************\n*/\n  DerivativeInstrumentPartyIDSource = 1294,\n/*\n*****************************************\n* REfer to definition of PartyRole(452) *\n*****************************************\n*/\n  DerivativeInstrumentPartyRole = 1295,\n/*\n*******************************************\n* Refer to definition for PartySubID(523) *\n*******************************************\n*/\n  DerivativeInstrumentPartySubID = 1297,\n/*\n***********************************************\n* Refer to definition for PartySubIDType(803) *\n***********************************************\n*/\n  DerivativeInstrumentPartySubIDType = 1298,\n/*\n**********************************************\n* Type of exercise of a derivatives security *\n**********************************************\n*/\n  DerivativeExerciseStyle = 1299,\n/*\n*********************************\n* Identifies the market segment *\n*********************************\n*/\n  MarketSegmentID = 1300,\n/*\n*************************\n* Identifies the market *\n*************************\n*/\n  MarketID = 1301,\n/*\n*********************************************************\n* Unit of measure for the Maturity Month Year Increment *\n*********************************************************\n*/\n  MaturityMonthYearIncrementUnits = 1302,\n/*\n**********************************************************\n* Format used to generate the MaturityMonthYear for each *\n* option                                                 *\n**********************************************************\n*/\n  MaturityMonthYearFormat = 1303,\n/*\n*****************************************\n* Expiration Style for an option class: *\n*****************************************\n*/\n  StrikeExerciseStyle = 1304,\n/*\n****************************************************\n* Describes the how the price limits are expressed *\n****************************************************\n*/\n  SecondaryPriceLimitType = 1305,\n/*\n*****************************************************\n* Describes the how the price limits are expressed. *\n*****************************************************\n*/\n  PriceLimitType = 1306,\n/*\n***********************************************************\n* Indicates execution instructions that are valid for the *\n* specified market segment                                *\n***********************************************************\n*/\n  ExecInstValue = 1308,\n/*\n***********************************************\n* Refer to definition of InstrAttribType(871) *\n***********************************************\n*/\n  DerivativeInstrAttribType = 1313,\n/*\n************************************************\n* Refer to definition of InstrAttribValue(872) *\n************************************************\n*/\n  DerivativeInstrAttribValue = 1314,\n/*\n****************************************************\n* Refer to definition for PriceUnitOfMeasure(1191) *\n****************************************************\n*/\n  DerivativePriceUnitOfMeasure = 1315,\n/*\n******************************************************\n* Refer to definition of PriceUnitOfMeasureQty(1192) *\n******************************************************\n*/\n  DerivativePriceUnitOfMeasureQty = 1316,\n/*\n**************************************************************\n* Settlement method for a contract or instrument. Additional *\n* values may be used with bilateral agreement.               *\n**************************************************************\n*/\n  DerivativeSettlMethod = 1317,\n/*\n*************************************************\n* Refer to definition of PriceQuoteMethod(1196) *\n*************************************************\n*/\n  DerivativePriceQuoteMethod = 1318,\n/*\n*************************************************\n* Refer to definition of ValuationMethod(1197). *\n*************************************************\n*/\n  DerivativeValuationMethod = 1319,\n/*\n************************************************************\n* Indicates whether instruments are pre-listed only or can *\n* also be defined via user request                         *\n************************************************************\n*/\n  DerivativeListMethod = 1320,\n/*\n*****************************************\n* Refer to definition of CapPrice(1199) *\n*****************************************\n*/\n  DerivativeCapPrice = 1321,\n/*\n*******************************************\n* Refer to definition of FloorPrice(1200) *\n*******************************************\n*/\n  DerivativeFloorPrice = 1322,\n/*\n****************************************************\n* Indicates whether an Option is for a put or call *\n****************************************************\n*/\n  DerivativePutOrCall = 1323,\n/*\n**********************************************************\n* If provided, then Instrument occurrence has explicitly *\n* changed                                                *\n**********************************************************\n*/\n  ListUpdateAction = 1324,\n/*\n*********************************************\n* Reference to a parent Market Segment. See *\n* MarketSegmentID(1300)                     *\n*********************************************\n*/\n  ParentMktSegmID = 1325,\n/*\n*******************************\n* Trading Session description *\n*******************************\n*/\n  TradingSessionDesc = 1326,\n/*\n********************************************************\n* Specifies the action taken for the specified trading *\n* sessions.                                            *\n********************************************************\n*/\n  TradSesUpdateAction = 1327,\n/*\n****************************************\n* Identifies the reason for rejection. *\n****************************************\n*/\n  RejectText = 1328,\n/*\n***************************************************************\n* This is a multiplier that Clearing (Fee system) will use to *\n* calculate fees and will be sent to the firms on their       *\n* confirms.                                                   *\n***************************************************************\n*/\n  FeeMultiplier = 1329,\n/*\n**************************************\n* Refer to definition for Symbol(55) *\n**************************************\n*/\n  UnderlyingLegSymbol = 1330,\n/*\n*****************************************\n* Refer to definition for SymbolSfx(65) *\n*****************************************\n*/\n  UnderlyingLegSymbolSfx = 1331,\n/*\n******************************************\n* Refer to definition for SecurityID(48) *\n******************************************\n*/\n  UnderlyingLegSecurityID = 1332,\n/*\n************************************************\n* Refer to definition for SecurityIDSource(22) *\n************************************************\n*/\n  UnderlyingLegSecurityIDSource = 1333,\n/*\n**********************************************\n* Refer to definition for SecurityAltID(455) *\n**********************************************\n*/\n  UnderlyingLegSecurityAltID = 1335,\n/*\n****************************************************\n* Refer to definition for SecurityAltIDSource(456) *\n****************************************************\n*/\n  UnderlyingLegSecurityAltIDSource = 1336,\n/*\n*********************************************\n* Refer to definition for SecurityType(167) *\n*********************************************\n*/\n  UnderlyingLegSecurityType = 1337,\n/*\n************************************************\n* Refer to definition for SecuritySubType(762) *\n************************************************\n*/\n  UnderlyingLegSecuritySubType = 1338,\n/*\n**************************************************\n* Refer to definition for MaturityMonthYear(200) *\n**************************************************\n*/\n  UnderlyingLegMaturityMonthYear = 1339,\n/*\n********************************************\n* Refer to definition for StrikePrice(202) *\n********************************************\n*/\n  UnderlyingLegStrikePrice = 1340,\n/*\n*************************************************\n* Refer to definition for SecurityExchange(207) *\n*************************************************\n*/\n  UnderlyingLegSecurityExchange = 1341,\n/*\n******************************************\n* Refer to definition for PutOrCall(201) *\n******************************************\n*/\n  UnderlyingLegPutOrCall = 1343,\n/*\n****************************************\n* Refer to definition for CFICode(461) *\n****************************************\n*/\n  UnderlyingLegCFICode = 1344,\n/*\n*********************\n* Date of maturity. *\n*********************\n*/\n  UnderlyingLegMaturityDate = 1345,\n/*\n*********************************\n* Unique identifier for request *\n*********************************\n*/\n  ApplReqID = 1346,\n/*\n***************************************************\n* Type of Application Message Request being made. *\n***************************************************\n*/\n  ApplReqType = 1347,\n/*\n************************************************************\n* Used to indicate the type of acknowledgement being sent. *\n************************************************************\n*/\n  ApplResponseType = 1348,\n/*\n******************************************************\n* Total number of messages included in transmission. *\n******************************************************\n*/\n  ApplTotalMessageCount = 1349,\n/*\n***************************************************************\n* Application sequence number of last message in transmission *\n***************************************************************\n*/\n  ApplLastSeqNum = 1350,\n/*\n****************************************************************\n* Used to indicate that a message is being sent in response to *\n* an Application Message Request. It is possible for both      *\n* ApplResendFlag and PossDupFlag to be set on the same message *\n* if the Sender's cache size is greater than zero and the      *\n* message is being resent due to a session level resend        *\n* request                                                      *\n****************************************************************\n*/\n  ApplResendFlag = 1352,\n/*\n*****************************************************\n* Identifier for the Applicaton Message Request Ack *\n*****************************************************\n*/\n  ApplResponseID = 1353,\n/*\n**********************************************************\n* Used to return an error code or text associated with a *\n* response to an Application Request.                    *\n**********************************************************\n*/\n  ApplResponseError = 1354,\n/*\n*************************************************************\n* Reference to the unique application identifier which      *\n* corresponds to ApplID(1180) from the Application Sequence *\n* Group component                                           *\n*************************************************************\n*/\n  RefApplID = 1355,\n/*\n*************************************************\n* Identifier for the Application Sequence Reset *\n*************************************************\n*/\n  ApplReportID = 1356,\n/*\n****************************************************************\n* Application sequence number of last message in transmission. *\n****************************************************************\n*/\n  RefApplLastSeqNum = 1357,\n/*\n**********************************************\n* Put or call indicator of the leg security. *\n* See PutOrCall(201).                        *\n**********************************************\n*/\n  LegPutOrCall = 1358,\n/*\n***************************************************************\n* Total number of fill entries across all messages. Should be *\n* the sum of all NoFills(1362) in each message that has       *\n* repeating list of fill entries related to the same          *\n* ExecID(17). Used to support fragmentation.                  *\n***************************************************************\n*/\n  TotNoFills = 1361,\n/*\n**************************************************************\n* Refer to ExecID(17). Used when multiple partial fills are  *\n* reported in single Execution Report. ExecID and FillExecID *\n* should not overlap,                                        *\n**************************************************************\n*/\n  FillExecID = 1363,\n/*\n***************************************\n* Price of Fill. Refer to LastPx(31). *\n***************************************\n*/\n  FillPx = 1364,\n/*\n*******************************************\n* Quantity of Fill. Refer to LastQty(32). *\n*******************************************\n*/\n  FillQty = 1365,\n/*\n*************************************************************\n* The AllocID(70) of an individual leg of a multileg order. *\n*************************************************************\n*/\n  LegAllocID = 1366,\n/*\n****************************************************************\n* Identifies settlement currency for the leg level allocation. *\n****************************************************************\n*/\n  LegAllocSettlCurrency = 1367,\n/*\n****************************************************************\n* Identifies an event related to a TradSesStatus(340). An      *\n* event occurs and is gone, it is not a state that applies for *\n* a period of time.                                            *\n****************************************************************\n*/\n  TradSesEvent = 1368,\n/*\n***************************************************************\n* Unique identifier of Order Mass Cancel Report or Order Mass *\n* Action Report message as assigned by sell-side (broker,     *\n* exchange, ECN)                                              *\n***************************************************************\n*/\n  MassActionReportID = 1369,\n/*\n************************************************************\n* OrderID(37) of an order not affected by a mass cancel or *\n* mass action request.                                     *\n************************************************************\n*/\n  NotAffectedOrderID = 1371,\n/*\n************************************************************\n* ClOrdID(11) of an order not affected by a mass cancel or *\n* mass action request.                                     *\n************************************************************\n*/\n  NotAffOrigClOrdID = 1372,\n/*\n******************************************\n* Specifies the type of action requested *\n******************************************\n*/\n  MassActionType = 1373,\n/*\n*************************************************\n* Specifies scope of Order Mass Action Request. *\n*************************************************\n*/\n  MassActionScope = 1374,\n/*\n*************************************************************\n* Specifies the action taken by counterparty order handling *\n* system as a result of the action type indicated in        *\n* MassActionType of the Order Mass Action Request.          *\n*************************************************************\n*/\n  MassActionResponse = 1375,\n/*\n*************************************************\n* Reason Order Mass Action Request was rejected *\n*************************************************\n*/\n  MassActionRejectReason = 1376,\n/*\n*************************************************************\n* Specifies the type of multileg order. Defines whether the *\n* security is pre-defined or user-defined. Note that        *\n* MultilegModel(1377)=2(User-defined, Non-Securitized,      *\n* Multileg) does not apply for Securities.                  *\n*************************************************************\n*/\n  MultilegModel = 1377,\n/*\n***********************************************************\n* Code to represent how the multileg price is to be       *\n* interpreted when applied to the legs.                   *\n* (See Volume : \"Glossary\" for further value definitions) *\n***********************************************************\n*/\n  MultilegPriceMethod = 1378,\n/*\n**************************************************\n* Specifies the volatility of an instrument leg. *\n**************************************************\n*/\n  LegVolatility = 1379,\n/*\n****************************************************************\n* The continuously-compounded annualized dividend yield of the *\n* underlying(s) of an option. Used as a parameter to           *\n* theoretical option pricing models.                           *\n****************************************************************\n*/\n  DividendYield = 1380,\n/*\n************************************************\n* Refer to definition for DividendYield(1380). *\n************************************************\n*/\n  LegDividendYield = 1381,\n/*\n****************************************************************\n* Specifies the currency ratio between the currency used for a *\n* multileg price and the currency used by the outright book    *\n* defined by the leg. Example: Multileg quoted in EUR,         *\n* outright leg in USD and 1 EUR = 0,7 USD then CurrencyRatio = *\n* 0.7                                                          *\n****************************************************************\n*/\n  CurrencyRatio = 1382,\n/*\n****************************************************************\n* Specifies the currency ratio between the currency used for a *\n* multileg price and the currency used by the outright book    *\n* defined by the leg. Example: Multileg quoted in EUR,         *\n* outright leg in USD and 1 EUR = 0,7 USD then                 *\n* LegCurrencyRatio = 0.7                                       *\n****************************************************************\n*/\n  LegCurrencyRatio = 1383,\n/*\n*******************************\n* Refer to ExecInst(18)       *\n* Same values as ExecInst(18) *\n*******************************\n*/\n  LegExecInst = 1384,\n/*\n************************************\n* Defines the type of contingency. *\n************************************\n*/\n  ContingencyType = 1385,\n/*\n****************************************************************\n* Identifies the reason for rejection of a New Order List      *\n* message. Note that OrdRejReason(103) is used if the          *\n* rejection is based on properties of an individual order part *\n* of the List.                                                 *\n****************************************************************\n*/\n  ListRejectReason = 1386,\n/*\n**********************************************************\n* Identifies the type of party for trade reporting. Same *\n* values as PartyRole(452).                              *\n**********************************************************\n*/\n  TrdRepPartyRole = 1388,\n/*\n***************************************************************\n* Specifies whether the trade should be reported (or not) to  *\n* parties of the provided TrdRepPartyRole(1388). Used to      *\n* override standard reporting behavior by the receiver of the *\n* trade report and thereby complements the PublTrdIndicator(  *\n* tag1390).                                                   *\n***************************************************************\n*/\n  TrdRepIndicator = 1389,\n/*\n**********************************************************\n* Indicates if a trade should be reported via a market   *\n* reporting service. The indicator governs all reporting *\n* services of the recipient. Replaces                    *\n* PublishTrdIndicator(852).                              *\n**********************************************************\n*/\n  TradePublishIndicator = 1390,\n/*\n********************************************\n* Refer to definition of OptAttribute(206) *\n********************************************\n*/\n  UnderlyingLegOptAttribute = 1391,\n/*\n********************************************\n* Refer to definition of SecurityDesc(107) *\n********************************************\n*/\n  UnderlyingLegSecurityDesc = 1392,\n/*\n*****************************************************\n* Unique ID of a Market Definition Request message. *\n*****************************************************\n*/\n  MarketReqID = 1393,\n/*\n*****************************************\n* Market Definition message identifier. *\n*****************************************\n*/\n  MarketReportID = 1394,\n/*\n***************************************************************\n* Specifies the action taken for the specified MarketID(1301) *\n* + MarketSegmentID(1300).                                    *\n***************************************************************\n*/\n  MarketUpdateAction = 1395,\n/*\n*****************************************\n* Description or name of Market Segment *\n*****************************************\n*/\n  MarketSegmentDesc = 1396,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedMktSegmDesc(1324) field.               *\n*************************************************\n*/\n  EncodedMktSegmDescLen = 1397,\n/*\n**************************************************************\n* Encoded (non-ASCII characters) representation of the       *\n* MarketSegmDesc(1396) field in the encoded format specified *\n* via the MessageEncoding(347) field. If used, the ASCII     *\n* (English) representation should also be specified in the   *\n* MarketSegmDesc field.                                      *\n**************************************************************\n*/\n  EncodedMktSegmDesc = 1398,\n/*\n******************************************************\n* Used to specify a new application sequence number. *\n******************************************************\n*/\n  ApplNewSeqNum = 1399,\n/*\n****************************************************************\n* Enumeration defining the encryption method used to encrypt   *\n* password fields.                                             *\n* At this time there are no encryption methods defined by FPL. *\n****************************************************************\n*/\n  EncryptedPasswordMethod = 1400,\n/*\n***********************************************\n* Length of the EncryptedPassword(1402) field *\n***********************************************\n*/\n  EncryptedPasswordLen = 1401,\n/*\n**************************************************************\n* Encrypted password - encrypted via the method specified in *\n* the field EncryptedPasswordMethod(1400)                    *\n**************************************************************\n*/\n  EncryptedPassword = 1402,\n/*\n**************************************************\n* Length of the EncryptedNewPassword(1404) field *\n**************************************************\n*/\n  EncryptedNewPasswordLen = 1403,\n/*\n***************************************************************\n* Encrypted new password - encrypted via the method specified *\n* in the field EncryptedPasswordMethod(1400)                  *\n***************************************************************\n*/\n  EncryptedNewPassword = 1404,\n/*\n************************************************************\n* Time of security's maturity expressed in local time with *\n* offset to UTC specified                                  *\n************************************************************\n*/\n  UnderlyingLegMaturityTime = 1405,\n/*\n************************************************************\n* The extension pack number associated with an application *\n* message.                                                 *\n************************************************************\n*/\n  RefApplExtID = 1406,\n/*\n***********************************************************\n* The extension pack number that is the default for a FIX *\n* session.                                                *\n***********************************************************\n*/\n  DefaultApplExtID = 1407,\n/*\n***************************\n* Status of a FIX session *\n***************************\n*/\n  SessionStatus = 1409,\n  DefaultVerIndicator = 1410,\n/*\n**********************************************\n* Refer to definition of PartySubIDType(803) *\n**********************************************\n*/\n  Nested4PartySubIDType = 1411,\n/*\n******************************************\n* Refer to definition of PartySubID(523) *\n******************************************\n*/\n  Nested4PartySubID = 1412,\n/*\n***************************************\n* Refer to definition of PartyID(448) *\n***************************************\n*/\n  Nested4PartyID = 1415,\n/*\n*********************************************\n* Refer to definition of PartyIDSource(447) *\n*********************************************\n*/\n  Nested4PartyIDSource = 1416,\n/*\n*****************************************\n* Refer to definition of PartyRole(452) *\n*****************************************\n*/\n  Nested4PartyRole = 1417,\n/*\n****************************************\n* Fill quantity for the leg instrument *\n****************************************\n*/\n  LegLastQty = 1418,\n/*\n**********************************************\n* Type of exercise of a derivatives security *\n**********************************************\n*/\n  UnderlyingExerciseStyle = 1419,\n/*\n**********************************************\n* Type of exercise of a derivatives security *\n**********************************************\n*/\n  LegExerciseStyle = 1420,\n/*\n****************************************************\n* Refer to definition for PriceUnitOfMeasure(1191) *\n****************************************************\n*/\n  LegPriceUnitOfMeasure = 1421,\n/*\n******************************************************\n* Refer to definition of PriceUnitOfMeasureQty(1192) *\n******************************************************\n*/\n  LegPriceUnitOfMeasureQty = 1422,\n/*\n*************************************************\n* Refer to definition of UnitOfMeasureQty(1147) *\n*************************************************\n*/\n  UnderlyingUnitOfMeasureQty = 1423,\n/*\n****************************************************\n* Refer to definition for PriceUnitOfMeasure(1191) *\n****************************************************\n*/\n  UnderlyingPriceUnitOfMeasure = 1424,\n/*\n******************************************************\n* Refer to definition of PriceUnitOfMeasureQty(1192) *\n******************************************************\n*/\n  UnderlyingPriceUnitOfMeasureQty = 1425,\n/*\n******************\n* Type of report *\n******************\n*/\n  ApplReportType = 1426,\n/*\n**************************************************************\n* When reporting trades, used to reference the identifier of *\n* the execution (ExecID) being reported if different ExecIDs *\n* were assigned to each side of the trade.                   *\n**************************************************************\n*/\n  SideExecID = 1427,\n/*\n***************************************************************\n* Time lapsed from order entry until match, based on the unit *\n* of time specified in OrderDelayUnit.  Default is seconds if *\n* OrderDelayUnit is not specified. Value = 0, indicates the   *\n* aggressor (the initiating side of the trade).               *\n***************************************************************\n*/\n  OrderDelay = 1428,\n/*\n********************************************************\n* Time unit in which the OrderDelay(1428) is expressed *\n********************************************************\n*/\n  OrderDelayUnit = 1429,\n/*\n***********************************************************\n* Identifies the type of venue where a trade was executed *\n***********************************************************\n*/\n  VenueType = 1430,\n/*\n****************************************\n* The reason for updating the RefOrdID *\n****************************************\n*/\n  RefOrdIDReason = 1431,\n/*\n***************************************************************\n* The customer capacity for this trade at the time of the     *\n* order/execution.                                            *\n* Primarily used by futures exchanges to indicate the CTICode *\n* (customer type indicator) as required by the US CFTC        *\n* (Commodity Futures Trading Commission).                     *\n***************************************************************\n*/\n  OrigCustOrderCapacity = 1432,\n/*\n*************************************************************\n* Used to reference a previously submitted ApplReqID (1346) *\n* from within a subsequent                                  *\n* ApplicationMessageRequest(MsgType=BW)                     *\n*************************************************************\n*/\n  RefApplReqID = 1433,\n/*\n******************************\n* Type of pricing model used *\n******************************\n*/\n  ModelType = 1434,\n/*\n****************************************************************\n* Indicates the type of multiplier being applied to the        *\n* contract. Can be optionally used to further define what unit *\n* ContractMultiplier(tag 231) is expressed in.                 *\n****************************************************************\n*/\n  ContractMultiplierUnit = 1435,\n/*\n****************************************************************\n* \"Indicates the type of multiplier being applied to the       *\n* contract. Can be optionally used to further define what unit *\n* LegContractMultiplier(tag 614) is expressed in.              *\n****************************************************************\n*/\n  LegContractMultiplierUnit = 1436,\n/*\n*********************************************************\n* Indicates the type of multiplier being applied to the *\n* contract.                                             *\n*********************************************************\n*/\n  UnderlyingContractMultiplierUnit = 1437,\n/*\n****************************************************************\n* Indicates the type of multiplier being applied to the        *\n* contract. Can be optionally used to further define what unit *\n* DerivativeContractMultiplier(tag 1266)is expressed in.       *\n****************************************************************\n*/\n  DerivativeContractMultiplierUnit = 1438,\n/*\n***************************************************************\n* The industry standard flow schedule by which electricity or *\n* natural gas is traded. Schedules exist by regions and       *\n* on-peak and off-peak status, such as \"Western Peak\".        *\n***************************************************************\n*/\n  FlowScheduleType = 1439,\n/*\n***************************************************************\n* The industry standard flow schedule by which electricity or *\n* natural gas is traded. Schedules exist by regions and       *\n* on-peak and off-peak status, such as \"Western Peak\".        *\n***************************************************************\n*/\n  LegFlowScheduleType = 1440,\n/*\n***************************************************************\n* The industry standard flow schedule by which electricity or *\n* natural gas is traded. Schedules exist by regions and       *\n* on-peak and off-peak status, such as \"Western Peak\".        *\n***************************************************************\n*/\n  UnderlyingFlowScheduleType = 1441,\n/*\n***************************************************************\n* The industry standard flow schedule by which electricity or *\n* natural gas is traded. Schedules exist by regions and       *\n* on-peak and off-peak status, such as \"Western Peak\".        *\n***************************************************************\n*/\n  DerivativeFlowScheduleType = 1442,\n/*\n**************************************************************\n* Indicator to identify whether this fill was a result of a  *\n* liquidity provider providing or liquidity taker taking the *\n* liquidity. Applicable only for OrdStatus of Partial or     *\n* Filled                                                     *\n**************************************************************\n*/\n  FillLiquidityInd = 1443,\n/*\n**************************************************************\n* Indicator to identify whether this fill was a result of a  *\n* liquidity provider providing or liquidity taker taking the *\n* liquidity. Applicable only for OrdStatus of Partial or     *\n* Filled.                                                    *\n**************************************************************\n*/\n  SideLiquidityInd = 1444,\n/*\n***********************************************************\n* Identifies the source of rate information.              *\n* For FX, the reference source to be used for the FX spot *\n* rate.                                                   *\n***********************************************************\n*/\n  RateSource = 1446,\n/*\n***************************************************************\n* Indicates whether the rate source specified is a primary or *\n* secondary source.                                           *\n***************************************************************\n*/\n  RateSourceType = 1447,\n/*\n****************************************************************\n* Identifies the reference \"page\" from the rate source.        *\n* For FX, the reference page to the spot rate to be used for   *\n* the reference FX spot rate.                                  *\n*                                                              *\n* When RateSource(1446) = 3 (ISDA Settlement Rate Option) this *\n* contains the value from the scheme that reflects the terms   *\n* of the Annex A to the ISDA 1998 FX and Currency Option       *\n* Definitions. See:                                            *\n* http://www.fpml.org/coding-scheme/settlement-rate-option     *\n****************************************************************\n*/\n  ReferencePage = 1448,\n/*\n***************************************************************\n* A category of CDS credit event in which the underlying bond *\n* experiences a restructuring.                                *\n* Used to define a CDS instrument.                            *\n***************************************************************\n*/\n  RestructuringType = 1449,\n/*\n****************************************************************\n* Specifies which issue (underlying bond) will receive payment *\n* priority in the event of a default.                          *\n* Used to define a CDS instrument.                             *\n****************************************************************\n*/\n  Seniority = 1450,\n/*\n****************************************************************\n* Indicates the notional percentage of the deal that is still  *\n* outstanding based on the remaining components of the index.  *\n* Used to calculate the true value of a CDS trade or position. *\n****************************************************************\n*/\n  NotionalPercentageOutstanding = 1451,\n/*\n***************************************************************\n* Used to reflect the Original value prior to the application *\n* of a credit event. See NotionalPercentageOutstanding(1451). *\n***************************************************************\n*/\n  OriginalNotionalPercentageOutstanding = 1452,\n/*\n*******************************\n* See RestructuringType(1449) *\n*******************************\n*/\n  UnderlyingRestructuringType = 1453,\n/*\n***********************\n* See Seniority(1450) *\n***********************\n*/\n  UnderlyingSeniority = 1454,\n/*\n*******************************************\n* See NotionalPercentageOutstanding(1451) *\n*******************************************\n*/\n  UnderlyingNotionalPercentageOutstanding = 1455,\n/*\n***************************************************\n* See OriginalNotionalPercentageOutstanding(1452) *\n***************************************************\n*/\n  UnderlyingOriginalNotionalPercentageOutstanding = 1456,\n/*\n***********************************************************\n* Lower bound percentage of the loss that the tranche can *\n* endure.                                                 *\n***********************************************************\n*/\n  AttachmentPoint = 1457,\n/*\n**************************************************************\n* Upper bound percentage of the loss the tranche can endure. *\n**************************************************************\n*/\n  DetachmentPoint = 1458,\n/*\n******************************\n* See AttachmentPoint(1457). *\n******************************\n*/\n  UnderlyingAttachmentPoint = 1459,\n/*\n******************************\n* See DetachmentPoint(1458). *\n******************************\n*/\n  UnderlyingDetachmentPoint = 1460,\n/*\n*********************************************************\n* PartyID value within an target party repeating group. *\n*********************************************************\n*/\n  TargetPartyID = 1462,\n/*\n***************************************************************\n* PartyIDSource value within an target party repeating group. *\n* Same values as PartyIDSource (447)                          *\n***************************************************************\n*/\n  TargetPartyIDSource = 1463,\n/*\n***********************************************************\n* PartyRole value within an target party repeating group. *\n* Same values as PartyRole (452)                          *\n***********************************************************\n*/\n  TargetPartyRole = 1464,\n/*\n***********************************************\n* Specifies an identifier for a Security List *\n***********************************************\n*/\n  SecurityListID = 1465,\n/*\n************************************************************\n* Specifies a reference from one Security List to another. *\n* Used to support a hierarchy of Security Lists.           *\n************************************************************\n*/\n  SecurityListRefID = 1466,\n/*\n*******************************************************\n* Specifies a description or name of a Security List. *\n*******************************************************\n*/\n  SecurityListDesc = 1467,\n/*\n**************************************\n* Specifies a type of Security List. *\n**************************************\n*/\n  SecurityListType = 1470,\n/*\n****************************************************************\n* Specifies a specific source for a SecurityListType. Relevant *\n* when a certain type can be provided from various sources.    *\n****************************************************************\n*/\n  SecurityListTypeSource = 1471,\n/*\n****************************************\n* Unique identifier for a News message *\n****************************************\n*/\n  NewsID = 1472,\n/*\n****************************\n* Category of news mesage. *\n****************************\n*/\n  NewsCategory = 1473,\n/*\n*************************************************************\n* The national language in which the news item is provided. *\n*************************************************************\n*/\n  LanguageCode = 1474,\n/*\n***************************************************\n* Reference to another News message identified by *\n* NewsID(1474).                                   *\n***************************************************\n*/\n  NewsRefID = 1476,\n/*\n*********************************************************\n* Type of reference to another News(35=B) message item. *\n*********************************************************\n*/\n  NewsRefType = 1477,\n/*\n****************************************************************\n* Specifies how the strike price is determined at the point of *\n* option exercise. The strike may be fixed throughout the life *\n* of the option, set at expiration to the value of the         *\n* underlying, set to the average value of the underlying , or  *\n* set to the optimal value of the underlying.                  *\n****************************************************************\n*/\n  StrikePriceDeterminationMethod = 1478,\n/*\n**************************************************************\n* Specifies the boundary condition to be used for the strike *\n* price relative to the underlying price at the point of     *\n* option exercise.                                           *\n**************************************************************\n*/\n  StrikePriceBoundaryMethod = 1479,\n/*\n*************************************************************\n* Used in combination with StrikePriceBoundaryMethod to     *\n* specify the percentage of the strike price in relation to *\n* the  underlying price. The percentage is generally 100 or *\n* greater for puts and 100 or less for calls.               *\n*************************************************************\n*/\n  StrikePriceBoundaryPrecision = 1480,\n/*\n****************************************************************\n* Specifies how the underlying price is determined at the      *\n* point of option exercise. The underlying price may be set to *\n* the current settlement price, set to a special reference,    *\n* set to the optimal value of the underlying during the        *\n* defined period (\"Look-back\") or set to the average value of  *\n* the underlying during the defined period (\"Asian option\").   *\n****************************************************************\n*/\n  UnderlyingPriceDeterminationMethod = 1481,\n/*\n*********************************************************\n* Indicates the type of payout that will result from an *\n* in-the-money option.                                  *\n*********************************************************\n*/\n  OptPayoutType = 1482,\n/*\n*****************************************\n* Identifies the type of complex event. *\n*****************************************\n*/\n  ComplexEventType = 1484,\n/*\n****************************************************************\n* Cash amount indicating the pay out associated with an event. *\n* For binary options this is a fixed amount.                   *\n****************************************************************\n*/\n  ComplexOptPayoutAmount = 1485,\n/*\n****************************************************************\n* Specifies the price at which the complex event takes effect. *\n* Impact of the event price is determined by the               *\n* ComplexEventType(1484).                                      *\n****************************************************************\n*/\n  ComplexEventPrice = 1486,\n/*\n*************************************************************\n* Specifies the boundary condition to be used for the event *\n* price relative to the underlying price at the point the   *\n* complex event outcome takes effect as determined by the   *\n* ComplexEventPriceTimeType.                                *\n*************************************************************\n*/\n  ComplexEventPriceBoundaryMethod = 1487,\n/*\n***************************************************************\n* Used in combination with ComplexEventPriceBoundaryMethod to *\n* specify the percentage of the strike price in relation to   *\n* the  underlying price. The percentage is generally 100 or   *\n* greater for puts and 100 or less for calls.                 *\n***************************************************************\n*/\n  ComplexEventPriceBoundaryPrecision = 1488,\n/*\n***************************************************************\n* Specifies when the complex event outcome takes effect. The  *\n* outcome of a complex event is a payout or barrier action as *\n* specified by the ComplexEventType(1484).                    *\n***************************************************************\n*/\n  ComplexEventPriceTimeType = 1489,\n/*\n***************************************************************\n* Specifies the condition between complex events when more    *\n* than one event is specified.                                *\n* Multiple barrier events would use an \"or\" condition since   *\n* only one can be effective at a given time. A set of digital *\n* range events would use an \"and\" condition since both        *\n* conditions must be in effect for a payout to result.        *\n***************************************************************\n*/\n  ComplexEventCondition = 1490,\n/*\n****************************************************************\n* Specifies the start date of the date range on which a        *\n* complex event is effective. The start date will be set equal *\n* to the end date for single day events such as Bermuda        *\n* options                                                      *\n* ComplexEventStartDate must always be less than or equal to   *\n* ComplexEventEndDate.                                         *\n****************************************************************\n*/\n  ComplexEventStartDate = 1492,\n/*\n***************************************************************\n* Specifies the end date of the date range on which a complex *\n* event is effective. The start date will be set equal to the *\n* end date for single day events such as Bermuda options      *\n* ComplexEventEndDate must always be greater than or equal to *\n* ComplexEventStartDate.                                      *\n***************************************************************\n*/\n  ComplexEventEndDate = 1493,\n/*\n**************************************************************\n* Specifies the start time of the time range on which a      *\n* complex event date is effective.                           *\n* ComplexEventStartTime must always be less than or equal to *\n* ComplexEventEndTime.                                       *\n**************************************************************\n*/\n  ComplexEventStartTime = 1495,\n/*\n***************************************************************\n* Specifies the end time of the time range on which a complex *\n* event date is effective.                                    *\n* ComplexEventEndTime must always be greater than or equal to *\n* ComplexEventStartTime.                                      *\n***************************************************************\n*/\n  ComplexEventEndTime = 1496,\n/*\n****************************************************************\n* Unique identifier for the stream assignment request provided *\n* by the requester.                                            *\n****************************************************************\n*/\n  StreamAsgnReqID = 1497,\n/*\n**************************************\n* Type of stream assignment request. *\n**************************************\n*/\n  StreamAsgnReqType = 1498,\n/*\n***********************************************\n* The identifier or name of the price stream. *\n***********************************************\n*/\n  MDStreamID = 1500,\n/*\n**************************************************************\n* Unique identifier of the stream assignment report provided *\n* by the respondent.                                         *\n**************************************************************\n*/\n  StreamAsgnRptID = 1501,\n/*\n*****************************************************\n* Reason code for stream assignment request reject. *\n*****************************************************\n*/\n  StreamAsgnRejReason = 1502,\n/*\n****************************\n* Type of acknowledgement. *\n****************************\n*/\n  StreamAsgnAckType = 1503,\n/*\n************************\n* See TransactTime(60) *\n************************\n*/\n  RelSymTransactTime = 1504,\n/*\n**************************************************\n* Unique identifier for PartyDetailsListRequest. *\n**************************************************\n*/\n  PartyDetailsListRequestID = 1505,\n/*\n*************************************************************\n* Used to represent the trade ID for each side of the trade *\n* assigned by an intermediary.                              *\n*************************************************************\n*/\n  SideTradeID = 1506,\n/*\n************************************************************\n* Used to capture the original trade id for each side of a *\n* trade undergoing novation to a standardized model.       *\n************************************************************\n*/\n  SideOrigTradeID = 1507,\n/*\n******************************************************\n* Identifies the type or role of party that has been *\n* requested.                                         *\n******************************************************\n*/\n  RequestedPartyRole = 1509,\n/*\n*****************************************************\n* Identifier for the PartyDetailsListReport and the *\n* PartyDetailsListUpdateReport.                     *\n*****************************************************\n*/\n  PartyDetailsListReportID = 1510,\n/*\n****************************************************************\n* Result of a request as identified by the appropriate request *\n* ID field                                                     *\n****************************************************************\n*/\n  RequestResult = 1511,\n/*\n******************************************\n* Total number of PartyListGrp returned. *\n******************************************\n*/\n  TotNoParties = 1512,\n/*\n****************************************************************\n* A sentence or phrase pertenant to the trade, not a reference *\n* to an external document. E.g. \"To be registered with the     *\n* U.S. Environmental Protection Agency, Acid Rain Division,    *\n* SO2 Allowance Tracking System\"                               *\n****************************************************************\n*/\n  DocumentationText = 1513,\n/*\n*******************************************************\n* Used to specify the type of the party relationship. *\n*******************************************************\n*/\n  PartyRelationship = 1515,\n/*\n************************************************************\n* An alternate party identifier for the party specified in *\n* PartyDetailID(1691)                                      *\n************************************************************\n*/\n  PartyDetailAltID = 1517,\n/*\n**************************************************************\n* Identifies the source of the PartyDetailAltID(1517) value. *\n**************************************************************\n*/\n  PartyDetailAltIDSource = 1518,\n/*\n*********************************************\n* Sub-identifier for the party specified in *\n* PartyDetailAltID(1517).                   *\n*********************************************\n*/\n  PartyDetailAltSubID = 1520,\n/*\n********************************************\n* Type of PartyDetailAltSubID(1520) value. *\n********************************************\n*/\n  PartyDetailAltSubIDType = 1521,\n/*\n****************************************************************\n* Used to specify the differential price when reporting the    *\n* individual leg of a spread trade. Both leg price and         *\n* differential price may be provided on such a report. Note    *\n* that MultiLegReportingType(442) will be set to 2 (Individual *\n* leg of a multi-leg security) in this case.                   *\n* Also used in pricing Trade at Settlement (TAS) and Trade At  *\n* Marker (TAM) contracts for which the value is the negotiated *\n* currency offset either at settlement (TAS) or at time        *\n* specified in the product definition (TAM). The final         *\n* contract price is specified in LastPx(31).                   *\n****************************************************************\n*/\n  DifferentialPrice = 1522,\n/*\n****************************************************************\n* Used to indicate the status of the trade submission (not the *\n* trade report)                                                *\n****************************************************************\n*/\n  TrdAckStatus = 1523,\n/*\n***************************************************************\n* Default currency in which the price is quoted. Defined at   *\n* the instrument level. Used in place of Currency (tag 15) to *\n* express the currency of a product when the former is        *\n* implemented as the FX dealt currency.                       *\n***************************************************************\n*/\n  PriceQuoteCurrency = 1524,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedDocumentationText(1527) field.         *\n*************************************************\n*/\n  EncodedDocumentationTextLen = 1525,\n/*\n***************************************************************\n* Default currency in which the price is quoted. Defined at   *\n* the instrument level. Used in place of Currency (tag 15) to *\n* express the currency of a product when the former is        *\n* implemented as the FX dealt currency.                       *\n***************************************************************\n*/\n  UnderlyingPriceQuoteCurrency = 1526,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* DocumentationText(1513) field in the encoded format         *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the DocumentationText(1513) field.                          *\n***************************************************************\n*/\n  EncodedDocumentationText = 1527,\n/*\n***************************************************************\n* Default currency in which the price is quoted. Defined at   *\n* the instrument level. Used in place of Currency (tag 15) to *\n* express the currency of a product when the former is        *\n* implemented as the FX dealt currency.                       *\n***************************************************************\n*/\n  LegPriceQuoteCurrency = 1528,\n/*\n*************************************************************\n* Used to specify the type of risk limit amount or position *\n* limit quantity or margin requirement amounts.             *\n*************************************************************\n*/\n  RiskLimitType = 1530,\n/*\n************************************\n* Specifies the risk limit amount. *\n************************************\n*/\n  RiskLimitAmount = 1531,\n/*\n**********************************************************\n* Used to specify the currency of the risk limit amount. *\n**********************************************************\n*/\n  RiskLimitCurrency = 1532,\n/*\n*************************************************************\n* The area to which risk limit is applicable. This can be a *\n* trading platform or an offering.                          *\n*************************************************************\n*/\n  RiskLimitPlatform = 1533,\n/*\n******************************************************\n* Operator to perform on the instrument(s) specified *\n******************************************************\n*/\n  InstrumentScopeOperator = 1535,\n/*\n*******************************************************\n* Used to limit instrument scope to specified symbol. *\n* See Symbol(55) field for description.               *\n*******************************************************\n*/\n  InstrumentScopeSymbol = 1536,\n/*\n**************************************************************\n* Used to limit instrument scope to specified symbol suffix. *\n* See SymbolSfx(65) field for description.                   *\n**************************************************************\n*/\n  InstrumentScopeSymbolSfx = 1537,\n/*\n********************************************************\n* Used to limit instrument scope to specified security *\n* identifier.                                          *\n* See SecurityID(48) field for description.            *\n********************************************************\n*/\n  InstrumentScopeSecurityID = 1538,\n/*\n********************************************************\n* Used to limit instrument scope to specified security *\n* identifier source.                                   *\n* See SecurityIDSource(22) field for description.      *\n********************************************************\n*/\n  InstrumentScopeSecurityIDSource = 1539,\n/*\n********************************************************\n* Used to limit instrument scope to specified security *\n* alternate identifier.                                *\n* See SecurityAltID(455) field for description.        *\n********************************************************\n*/\n  InstrumentScopeSecurityAltID = 1541,\n/*\n********************************************************\n* Used to limit instrument scope to specified security *\n* alternate identifier source.                         *\n* See SecurityAltIDSource(456) field for description.  *\n********************************************************\n*/\n  InstrumentScopeSecurityAltIDSource = 1542,\n/*\n**********************************************************\n* Used to limit instrument scope to specified instrument *\n* product category.                                      *\n* See Product (460) field for description.               *\n**********************************************************\n*/\n  InstrumentScopeProduct = 1543,\n/*\n****************************************************************\n* Used to limit instrument scope to specified product complex. *\n* See ProductComplex(1227) field for description.              *\n****************************************************************\n*/\n  InstrumentScopeProductComplex = 1544,\n/*\n***************************************************************\n* Used to limit instrument scope to specified security group. *\n* See SecurityGroup(1151) field for description.              *\n***************************************************************\n*/\n  InstrumentScopeSecurityGroup = 1545,\n/*\n********************************************************\n* Used to limit instrument scope to specified CFICode. *\n* See CFICode(461) field for description.              *\n********************************************************\n*/\n  InstrumentScopeCFICode = 1546,\n/*\n**************************************************************\n* Used to limit instrument scope to specified security type. *\n* See SecurityType(167) field for description).              *\n**************************************************************\n*/\n  InstrumentScopeSecurityType = 1547,\n/*\n********************************************************\n* Used to limit instrument scope to specified security *\n* sub-type.                                            *\n* See SecuritySubType(762) field for description.      *\n********************************************************\n*/\n  InstrumentScopeSecuritySubType = 1548,\n/*\n**************************************************************\n* Used to limit instrument scope to specified maturity month *\n* and year.                                                  *\n* See MaturityMonthYear(200) field for description.          *\n**************************************************************\n*/\n  InstrumentScopeMaturityMonthYear = 1549,\n/*\n**************************************************************\n* Used to limit instrument scope to specified maturity time. *\n* See MaturityTime(1079) field for description.              *\n**************************************************************\n*/\n  InstrumentScopeMaturityTime = 1550,\n/*\n*************************************************************\n* Used to limit instrument scope to specified restructuring *\n* type.                                                     *\n* See RestructuringType(1449) field for description.        *\n*************************************************************\n*/\n  InstrumentScopeRestructuringType = 1551,\n/*\n***************************************************************\n* Used to limit instrument scope to specified seniority type. *\n* See Seniority(1450) field for description.                  *\n***************************************************************\n*/\n  InstrumentScopeSeniority = 1552,\n/*\n****************************************************\n* Used to limit instrument scope to puts or calls. *\n* See PutOrCall(201) field for description.        *\n****************************************************\n*/\n  InstrumentScopePutOrCall = 1553,\n/*\n************************************************************\n* Used to limit instrument scope to securities that can be *\n* defined using flexible terms or not.                     *\n* See FlexibleIndicator(1244) field for description.       *\n************************************************************\n*/\n  InstrumentScopeFlexibleIndicator = 1554,\n/*\n************************************************************\n* Used to limit instrument scope to specified coupon rate. *\n* See CouponRate(223) field for description.               *\n************************************************************\n*/\n  InstrumentScopeCouponRate = 1555,\n/*\n********************************************************\n* Used to limit instrument scope to specified security *\n* description.                                         *\n* See SecurityDesc(107) field for description.         *\n********************************************************\n*/\n  InstrumentScopeSecurityDesc = 1556,\n/*\n****************************************************************\n* Used to limit instrument scope to specified settlement type. *\n* See SettlType(63) field for description.                     *\n****************************************************************\n*/\n  InstrumentScopeSettlType = 1557,\n/*\n***************************************************************\n* Multiplier applied to the transaction amount for comparison *\n* with risk limits. Default if not specified is 1.0.          *\n***************************************************************\n*/\n  RiskInstrumentMultiplier = 1558,\n/*\n*******************************************************\n* Percent of risk limit at which a warning is issued. *\n*******************************************************\n*/\n  RiskWarningLevelPercent = 1560,\n/*\n**********************************************************\n* Name or error message associated with the risk warning *\n* level.                                                 *\n**********************************************************\n*/\n  RiskWarningLevelName = 1561,\n/*\n*******************************************************\n* Party identifier for the party related to the party *\n* specified in PartyDetailID(1691).                   *\n*******************************************************\n*/\n  RelatedPartyDetailID = 1563,\n/*\n************************************************************\n* Identifies the source of the RelatedPartyDetailID(1563). *\n************************************************************\n*/\n  RelatedPartyDetailIDSource = 1564,\n/*\n*****************************************\n* Identifies the type or role of the    *\n* RelatedPartyDetailID(1563) specified. *\n*****************************************\n*/\n  RelatedPartyDetailRole = 1565,\n/*\n*********************************************\n* Sub-identifier for the party specified in *\n* RelatedPartyID(1563).                     *\n*********************************************\n*/\n  RelatedPartyDetailSubID = 1567,\n/*\n************************************************\n* Type of RelatedPartyDetailSubID(1567) value. *\n************************************************\n*/\n  RelatedPartyDetailSubIDType = 1568,\n/*\n************************************************************\n* An alternate party identifier for the party specified in *\n* RelatedPartyID(1563).                                    *\n************************************************************\n*/\n  RelatedPartyDetailAltID = 1570,\n/*\n**************************************************************\n* Identifies the source of the RelatedPartyDetailAltID(1570) *\n* value.                                                     *\n**************************************************************\n*/\n  RelatedPartyDetailAltIDSource = 1571,\n/*\n*********************************************\n* Sub-identifier for the party specified in *\n* RelatedPartyDetailAltID(1570).            *\n*********************************************\n*/\n  RelatedPartyDetailAltSubID = 1573,\n/*\n***************************************************\n* Type of RelatedPartyDetailAltSubID(1573) value. *\n***************************************************\n*/\n  RelatedPartyDetailAltSubIDType = 1574,\n/*\n*********************************************\n* The subclassification or subtype of swap. *\n*********************************************\n*/\n  SwapSubClass = 1575,\n/*\n***************************************************************\n* Default currency in which the price is quoted. Defined at   *\n* the instrument level. Used in place of Currency (tag 15) to *\n* express the currency of a product when the former is        *\n* implemented as the FX dealt currency.                       *\n***************************************************************\n*/\n  DerivativePriceQuoteCurrency = 1576,\n/*\n**********************************************************\n* In an outright or forward commodity trade that is cash *\n* settled this is the index used to determine the cash   *\n* payment.                                               *\n**********************************************************\n*/\n  SettlRateIndex = 1577,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedEventText(868) fied.                   *\n*************************************************\n*/\n  EncodedEventTextLen = 1578,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* EventText(868) field in the encoded format specified via the *\n* MessageEncoding (347) field. If used, the ASCII (English)    *\n* representation should also be specified in the               *\n* EventText(868) field.                                        *\n****************************************************************\n*/\n  EncodedEventText = 1579,\n/*\n*********************************************************\n* This is an optional qualifying attribute of           *\n* SettlRateIndex(1577) such as the delivery zone for an *\n* electricity contract.                                 *\n*********************************************************\n*/\n  SettlRateIndexLocation = 1580,\n/*\n*****************************************\n* Description of the option expiration. *\n*****************************************\n*/\n  OptionExpirationDesc = 1581,\n/*\n**************************************************************\n* Allows classification of instruments according to a set of *\n* high level reasons. Classification reasons describe the    *\n* classes in which the instrument participates.              *\n**************************************************************\n*/\n  SecurityClassificationReason = 1583,\n/*\n**************************************************************\n* Specifies the product classification value which further   *\n* details the manner in which the instrument participates in *\n* the class.                                                 *\n**************************************************************\n*/\n  SecurityClassificationValue = 1584,\n/*\n***************************************************************\n* Specifies the reason for an amount type when reported on a  *\n* position. Useful when multiple instances of the same amount *\n* type are reported.                                          *\n***************************************************************\n*/\n  PosAmtReason = 1585,\n/*\n************************\n* Leg position amount. *\n************************\n*/\n  LegPosAmt = 1587,\n/*\n********************************\n* Type of leg position amount. *\n********************************\n*/\n  LegPosAmtType = 1588,\n/*\n**************************\n* Leg position currency. *\n**************************\n*/\n  LegPosCurrency = 1589,\n/*\n***************************************************************\n* Specifies the reason for an amount type when reported on a  *\n* position. Useful when multiple instances of the same amount *\n* type are reported.                                          *\n***************************************************************\n*/\n  LegPosAmtReason = 1590,\n/*\n****************************************************************\n* Type of quantity specified in LegQty field.                  *\n* LegContractMultiplier (614) is required when LegQtyType = 1  *\n* (Contracts). LegUnitOfMeasure (tag 999) and LegTimeUnit (tag *\n* 1001) are required when LegQtyType = 2 (Units of Measure per *\n* Time Unit). LegQtyType can be different for each leg.        *\n****************************************************************\n*/\n  LegQtyType = 1591,\n/*\n***************************************************************\n* Used to calculate the present value of an amount to be paid *\n* in the future.                                              *\n***************************************************************\n*/\n  DiscountFactor = 1592,\n/*\n***************************************************************\n* Contains the IndividualAllocId (tag 467) value of the       *\n* allocation that is being offset as a result of a new        *\n* allocation. This would be an optional field that would only *\n* be populated in the case of an allocation of an allocation  *\n* (as well as any subsequent allocations). This wouldn\u0019t be   *\n* populated for an initial allocation since an allocation id  *\n* is not supplied on default (initial) allocations.           *\n***************************************************************\n*/\n  ParentAllocID = 1593,\n/*\n***********************************************************\n* Represents the product group of a leg.This is useful in *\n* conveying multi-leg instruments where the legs may      *\n* participate in separate security groups.                *\n***********************************************************\n*/\n  LegSecurityGroup = 1594,\n/*\n***************************************************************\n* Risk adjusted price used to calculate variation margin on a *\n* position.                                                   *\n***************************************************************\n*/\n  PositionContingentPrice = 1595,\n/*\n****************************\n* Alternate clearing price *\n****************************\n*/\n  ClearingTradePrice = 1596,\n/*\n*********************************************************\n* Alternate clearing price for the side being reported. *\n*********************************************************\n*/\n  SideClearingTradePrice = 1597,\n/*\n****************************************************************\n* Indicates to recipient whether trade is clearing at          *\n* execution prices LastPx(tag 31) or alternate clearing prices *\n* SideClearingTradePrice(tag 1597).                            *\n****************************************************************\n*/\n  SideClearingTradePriceType = 1598,\n/*\n**********************************************************\n* Price Differential between the front and back leg of a *\n* spread or complex instrument.                          *\n**********************************************************\n*/\n  SidePriceDifferential = 1599,\n/*\n***************************************************************\n* Represents the total number of simple instruments that make *\n* up a multi-legged security. Complex spread instruments may  *\n* be constructed of legs which themselves are multi-leg       *\n* instruments.                                                *\n***************************************************************\n*/\n  NumOfSimpleInstruments = 1606,\n/*\n***********************************************************\n* Identifies the reason  a security definition request is *\n* being rejected.                                         *\n***********************************************************\n*/\n  SecurityRejectReason = 1607,\n/*\n****************************************************************\n* Used to convey the initially requested display quantity      *\n* specified in DisplayQty(1138) on order entry and             *\n* modification messages in ExecutionReport message. Applicable *\n* only in ExecutionReport message where DisplayQty(1138) is    *\n* the currently displayed quantity and the requested display   *\n* quantity of the order also needs to be conveyed. The values  *\n* of the two fields are different as soon as the order is      *\n* partially filled and also after a refresh of the order       *\n* whenever DisplayMethod(1084) is not 1=Initial.               *\n****************************************************************\n*/\n  InitialDisplayQty = 1608,\n/*\n*********************************************************\n* Indicates whether a message was queued as a result of *\n* throttling.                                           *\n*********************************************************\n*/\n  ThrottleStatus = 1609,\n/*\n*****************************************************\n* Action to take should throttle limit be exceeded. *\n*****************************************************\n*/\n  ThrottleAction = 1611,\n/*\n*********************\n* Type of throttle. *\n*********************\n*/\n  ThrottleType = 1612,\n/*\n****************************************************************\n* Maximum number of messages allowed by the throttle. May be a *\n* rate limit or a limit on the number of outstanding requests. *\n****************************************************************\n*/\n  ThrottleNoMsgs = 1613,\n/*\n************************************************************\n* Value of the time interval in which the rate throttle is *\n* applied.                                                 *\n************************************************************\n*/\n  ThrottleTimeInterval = 1614,\n/*\n***************************************************************\n* Units in which ThrottleTimeInterval is expressed. Uses same *\n* enumerations as OrderDelayUnit(1429).                       *\n***************************************************************\n*/\n  ThrottleTimeUnit = 1615,\n/*\n********************************************************\n* Used to limit instrument scope to specified security *\n* exchange.                                            *\n* See SecurityExchange(207) field for description.     *\n********************************************************\n*/\n  InstrumentScopeSecurityExchange = 1616,\n/*\n*******************************************************\n* The type of assignment being affected in the Stream *\n* Assignment Report.                                  *\n*******************************************************\n*/\n  StreamAsgnType = 1617,\n/*\n*********************************************************\n* The MsgType (35) of the FIX message being referenced. *\n*********************************************************\n*/\n  ThrottleMsgType = 1619,\n/*\n****************************************************\n* Yield Type, using same values as YieldType (235) *\n****************************************************\n*/\n  FillYieldType = 1622,\n/*\n******************************************************\n* Yield Percentage, using same values as Yield (236) *\n******************************************************\n*/\n  FillYield = 1623,\n/*\n***************************************\n* Matching Instruction for the order. *\n***************************************\n*/\n  MatchInst = 1625,\n/*\n**************************************************************\n* Existing FIX field to be applied as a matching criteria to *\n* the instruction, bilaterally agreed between parties.       *\n**************************************************************\n*/\n  MatchAttribTagID = 1626,\n/*\n*********************************************************\n* Value of MatchAttribTagID(1626) on which to apply the *\n* matching instruction.                                 *\n*********************************************************\n*/\n  MatchAttribValue = 1627,\n/*\n**************************************************************\n* Defines the scope of TriggerAction(1101) when it is set to *\n* \"cancel\" (3).                                              *\n**************************************************************\n*/\n  TriggerScope = 1628,\n/*\n****************************************************************\n* This is the time in seconds of a \"Good for Time\" (GFT)       *\n* TimeInForce.                                                 *\n* Positive integer value which represents the time is seconds  *\n* in which the new order remains active in the market before   *\n* it is automatically cancelled (e.g. expired).                *\n* Bi-lateral agreements will dictate the maximum value of this *\n* field. It is assumed that most systems will impose a max     *\n* limit of 86,400 seconds (i.e. 24 hours).                     *\n* For Quotes: The period of time a quoted price is             *\n* tradable(i.e. on-the-wire) before it becomes indicative      *\n* (i.e. off-the-wire).                                         *\n****************************************************************\n*/\n  ExposureDuration = 1629,\n/*\n****************************************************\n* Identifies the type of limit amount expressed in *\n* LastLimitAmt(1632) and LimitAmtRemaining(1633).  *\n****************************************************\n*/\n  LimitAmtType = 1631,\n/*\n****************************************************************\n* The amount that has been drawn down against the counterparty *\n* for a given trade.  The type of limit is specified in        *\n* LimitAmtType(1631).                                          *\n*                                                              *\n* Bilateral agreements dictate the units and maximum value of  *\n* this field.                                                  *\n****************************************************************\n*/\n  LastLimitAmt = 1632,\n/*\n***************************************************************\n* The remaining limit amount available between the            *\n* counterparties.  The type of limit is specified in          *\n* LimitAmtType(1631).                                         *\n*                                                             *\n* Bilateral agreements dictate the units and maximum value of *\n* this field.                                                 *\n***************************************************************\n*/\n  LimitAmtRemaining = 1633,\n/*\n**************************************************************\n* Indicates the currency that the limit amount is specified  *\n* in.  See Currency(15) for additional description and valid *\n* values.                                                    *\n**************************************************************\n*/\n  LimitAmtCurrency = 1634,\n/*\n******************************************************\n* Unique identifier of the MarginRequirementInquiry. *\n******************************************************\n*/\n  MarginReqmtInqID = 1635,\n/*\n********************************************************\n* Qualifier for MarginRequirementInquiry to identify a *\n* specific report.                                     *\n********************************************************\n*/\n  MarginReqmtInqQualifier = 1637,\n/*\n************************************\n* Type of MarginRequirementReport. *\n************************************\n*/\n  MarginReqmtRptType = 1638,\n/*\n*********************************************************\n* Identifier for group of instruments with similar risk *\n* profile.                                              *\n*********************************************************\n*/\n  MarginClass = 1639,\n/*\n***************************************\n* Status of MarginRequirementInquiry. *\n***************************************\n*/\n  MarginReqmtInqStatus = 1640,\n/*\n************************************************************\n* Result returned in response to MarginRequirementInquiry. *\n************************************************************\n*/\n  MarginReqmtInqResult = 1641,\n/*\n*******************************************************\n* Identifier for the MarginRequirementReport message. *\n*******************************************************\n*/\n  MarginReqmtRptID = 1642,\n/*\n******************************************************\n* Type of margin requirement amount being specified. *\n******************************************************\n*/\n  MarginAmtType = 1644,\n/*\n*********************************\n* Amount of margin requirement. *\n*********************************\n*/\n  MarginAmt = 1645,\n/*\n************************************\n* Currency of the MarginAmt(1645). *\n************************************\n*/\n  MarginAmtCcy = 1646,\n/*\n***************************************\n* The type of instrument relationship *\n***************************************\n*/\n  RelatedInstrumentType = 1648,\n/*\n********************************************************\n* Ticker symbol of the related security. Common \"human *\n* understood\" representation of the security.          *\n********************************************************\n*/\n  RelatedSymbol = 1649,\n/*\n****************************************\n* Related security identifier value of *\n* RelatedSecurityIDSource(1651) type.  *\n****************************************\n*/\n  RelatedSecurityID = 1650,\n/*\n**************************************************************\n* Identifies class or source of the RelatedSecurityID (1650) *\n* value.                                                     *\n**************************************************************\n*/\n  RelatedSecurityIDSource = 1651,\n/*\n********************************************\n* Security type of the related instrument. *\n********************************************\n*/\n  RelatedSecurityType = 1652,\n/*\n********************************************************\n* Expiration date for the related instrument contract. *\n********************************************************\n*/\n  RelatedMaturityMonthYear = 1653,\n/*\n**************************************************************\n* Used to specify the portion of the short contract quantity *\n* that is considered covered (e.g. used for short option     *\n* position).                                                 *\n**************************************************************\n*/\n  CoveredQty = 1654,\n/*\n*****************************************************\n* Indicates market maker participation in security. *\n*****************************************************\n*/\n  MarketMakerActivity = 1655,\n/*\n**********************************************\n* Party identifier for the requesting party. *\n**********************************************\n*/\n  RequestingPartyID = 1658,\n/*\n***************************************************************\n* Identifies the source of the RequestingPartyID(1658) value. *\n***************************************************************\n*/\n  RequestingPartyIDSource = 1659,\n/*\n**************************************************************\n* Identifies the type or role of the RequestingPartyID(1658) *\n* specified.                                                 *\n**************************************************************\n*/\n  RequestingPartyRole = 1660,\n/*\n*********************************************\n* Sub-identifier for the party specified in *\n* RequestingPartyID(1658).                  *\n*********************************************\n*/\n  RequestingPartySubID = 1662,\n/*\n*********************************************\n* Type of RequestingPartySubID(1662) value. *\n*********************************************\n*/\n  RequestingPartySubIDType = 1663,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedRejectText(1665) field.                *\n*************************************************\n*/\n  EncodedRejectTextLen = 1664,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* RejectText(1328) field in the encoded format specified via   *\n* the MessageEncoding(347) field. If used, the ASCII (English) *\n* representation should also be specified in the               *\n* RejectText(1328) field.                                      *\n****************************************************************\n*/\n  EncodedRejectText = 1665,\n/*\n****************************************************\n* Unique identifier for the PartyRiskLimitsRequest *\n****************************************************\n*/\n  RiskLimitRequestID = 1666,\n/*\n********************************************\n* Identifier for the PartyRiskLimitsReport *\n********************************************\n*/\n  RiskLimitReportID = 1667,\n/*\n*********************************************************\n* Unique reference identifier for a specific risk limit *\n* defined for the specified party.                      *\n*********************************************************\n*/\n  RiskLimitID = 1670,\n/*\n*****************************************************\n* Indicates the status of the party identified with *\n* PartyDetailID(1691).                              *\n*****************************************************\n*/\n  PartyDetailStatus = 1672,\n/*\n***********************************************************\n* Identifies the market to which the matching instruction *\n* applies.                                                *\n***********************************************************\n*/\n  MatchInstMarketID = 1673,\n/*\n*************************************************\n* Qualifies the value of PartyDetailRole(1693). *\n*************************************************\n*/\n  PartyDetailRoleQualifier = 1674,\n/*\n*************************************************\n* Qualifies the value of RelatedPartyRole(1565) *\n*************************************************\n*/\n  RelatedPartyDetailRoleQualifier = 1675,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedOptionExpirationDesc(1697) field.      *\n*************************************************\n*/\n  EncodedOptionExpirationDescLen = 1678,\n/*\n**********************************************************\n* Identifies the trading status applicable to a group of *\n* instruments.                                           *\n**********************************************************\n*/\n  SecurityMassTradingStatus = 1679,\n/*\n***********************************************************\n* Identifies an event related to the mass trading status. *\n***********************************************************\n*/\n  SecurityMassTradingEvent = 1680,\n/*\n***************************************************************\n* Denotes the reason for the Opening Delay or Trading halt of *\n* a group of securities.                                      *\n***************************************************************\n*/\n  MassHaltReason = 1681,\n/*\n**************************************************************\n* Identifies the trading status applicable to the instrument *\n* in the market data message.                                *\n**************************************************************\n*/\n  MDSecurityTradingStatus = 1682,\n/*\n**************************************************************\n* Describes a sub-class for a given class of service defined *\n* by MDFeedType (1022)                                       *\n**************************************************************\n*/\n  MDSubFeedType = 1683,\n/*\n*************************************************************\n* Denotes the reason for the Opening Delay or Trading Halt. *\n*************************************************************\n*/\n  MDHaltReason = 1684,\n/*\n**************************************************************\n* Describes action recipient should take if a throttle limit *\n* were exceeded.                                             *\n**************************************************************\n*/\n  ThrottleInst = 1685,\n/*\n********************************************************\n* Indicates whether a message decrements the number of *\n* outstanding requests, e.g. one where ThrottleType =  *\n* Outstanding Requests.                                *\n********************************************************\n*/\n  ThrottleCountIndicator = 1686,\n/*\n**************************************************************\n* Indicates whether a restriction applies to short selling a *\n* security.                                                  *\n**************************************************************\n*/\n  ShortSaleRestriction = 1687,\n/*\n**************************************************************\n* Indicates the reason a short sale order is exempted from   *\n* applicable regulation (e.g. Reg SHO addendum (b)(1) in the *\n* U.S.).                                                     *\n**************************************************************\n*/\n  ShortSaleExemptionReason = 1688,\n/*\n**************************************************************\n* Indicates the reason a short sale is exempted from         *\n* applicable regulation (e.g. Reg SHO addendum (b)(1) in the *\n* U.S.)                                                      *\n**************************************************************\n*/\n  LegShortSaleExemptionReason = 1689,\n/*\n**************************************************************\n* Indicates the reason a short sale is exempted from         *\n* applicable regulation (e.g. Reg SHO addendum (b)(1) in the *\n* U.S.)                                                      *\n**************************************************************\n*/\n  SideShortSaleExemptionReason = 1690,\n/*\n************************************************************\n* Party identifier within Parties Reference Data messages. *\n************************************************************\n*/\n  PartyDetailID = 1691,\n/*\n*******************************************************\n* Source of the identifier of the PartyDetailID(1691) *\n* specified.                                          *\n*******************************************************\n*/\n  PartyDetailIDSource = 1692,\n/*\n******************************************************\n* Identifies the type or role of PartyDetailID(1691) *\n* specified.                                         *\n******************************************************\n*/\n  PartyDetailRole = 1693,\n/*\n*********************************************\n* Sub-identifier for the party specified in *\n* PartyDetailID(1691).                      *\n*********************************************\n*/\n  PartyDetailSubID = 1695,\n/*\n*****************************************\n* Type of PartyDetailSubID(1695) value. *\n*****************************************\n*/\n  PartyDetailSubIDType = 1696,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* OptionExpirationDesc(1581) field in the encoded format      *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the OptionExpirationDesc(1581).                             *\n***************************************************************\n*/\n  EncodedOptionExpirationDesc = 1697,\n/*\n*************************************************************\n* Used to express the unit of measure (UOM) of the price if *\n* different from the contract.                              *\n*************************************************************\n*/\n  StrikeUnitOfMeasure = 1698,\n/*\n**********************************************************\n* Unique identifier for the AccountSummaryReport(35=CQ). *\n**********************************************************\n*/\n  AccountSummaryReportID = 1699,\n/*\n*****************************\n* The amount of settlement. *\n*****************************\n*/\n  SettlementAmount = 1701,\n/*\n***************************************************\n* The currency of the reported settlement amount. *\n***************************************************\n*/\n  SettlementAmountCurrency = 1702,\n/*\n**********************************************************\n* Currency value currently attributed to the collateral. *\n**********************************************************\n*/\n  CurrentCollateralAmount = 1704,\n/*\n*********************************************************\n* Currency of the collateral; optional, defaults to the *\n* Settlement Currency if not specified.                 *\n*********************************************************\n*/\n  CollateralCurrency = 1705,\n/*\n*************************************************\n* Type of collateral on deposit being reported. *\n*************************************************\n*/\n  CollateralType = 1706,\n/*\n************************************************************\n* Category describing the reason for funds paid to, or the *\n* funds collected from the clearing firm.                  *\n************************************************************\n*/\n  PayCollectType = 1708,\n/*\n***************************************************************\n* Currency denomination of value in PayAmount(1710) and       *\n* CollectAmount(1711).  If not specified, default to currency *\n* specified in SettlementAmountCurrency(1702).                *\n***************************************************************\n*/\n  PayCollectCurrency = 1709,\n/*\n****************************************************************\n* Amount to be paid by the clearinghouse to the clearing firm. *\n****************************************************************\n*/\n  PayAmount = 1710,\n/*\n********************************************************\n* Amount to be collected by the clearinghouse from the *\n* clearing firm.                                       *\n********************************************************\n*/\n  CollectAmount = 1711,\n/*\n**********************************************************\n* Market segment associated with the pay collect amount. *\n**********************************************************\n*/\n  PayCollectMarketSegmentID = 1712,\n/*\n**************************************************\n* Market associated with the pay collect amount. *\n**************************************************\n*/\n  PayCollectMarketID = 1713,\n/*\n*****************************************************\n* Market segment associated with the margin amount. *\n*****************************************************\n*/\n  MarginAmountMarketSegmentID = 1714,\n/*\n********************************************\n* Market associated with the margin amount *\n********************************************\n*/\n  MarginAmountMarketID = 1715,\n/*\n****************************************************************\n* Indicates the currency of the unit of measure. Conditionally *\n* required when UnitOfMeasure(996) = Ccy                       *\n****************************************************************\n*/\n  UnitOfMeasureCurrency = 1716,\n/*\n**************************************************************\n* Indicates the currency of the price unit of measure.       *\n* Conditionally required when PriceUnitOfMeasure(1191) = Ccy *\n**************************************************************\n*/\n  PriceUnitOfMeasureCurrency = 1717,\n/*\n**************************************************************\n* Indicates the currency of the underlying unit of measure.  *\n* Conditionally required when UnderlyingUnitOfMeasure(998) = *\n* Ccy                                                        *\n**************************************************************\n*/\n  UnderlyingUnitOfMeasureCurrency = 1718,\n/*\n**********************************************************\n* Indicates the currency of the underlying price unit of *\n* measure. Conditionally required when                   *\n* UnderlyingPriceUnitOfMeasure(1424) = Ccy               *\n**********************************************************\n*/\n  UnderlyingPriceUnitOfMeasureCurrency = 1719,\n/*\n****************************************************************\n* Indicates the currency of the unit of measure. Conditionally *\n* required when LegUnitOfMeasure(999) = Ccy                    *\n****************************************************************\n*/\n  LegUnitOfMeasureCurrency = 1720,\n/*\n*************************************************************\n* Indicates the currency of the price unit of measure.      *\n* Conditionally required when LegPriceUnitOfMeasure(1421) = *\n* Ccy                                                       *\n*************************************************************\n*/\n  LegPriceUnitOfMeasureCurrency = 1721,\n/*\n****************************************************************\n* Indicates the currency of the unit of measure. Conditionally *\n* required when DerivativeUnitOfMeasure(1269) = Ccy            *\n****************************************************************\n*/\n  DerivativeUnitOfMeasureCurrency = 1722,\n/*\n********************************************************\n* Indicates the currency of the price unit of measure. *\n* Conditionally required when                          *\n* DerivativePriceUnitOfMeasure(1315) = Ccy             *\n********************************************************\n*/\n  DerivativePriceUnitOfMeasureCurrency = 1723,\n/*\n***************************************\n* Identifies the origin of the order. *\n***************************************\n*/\n  OrderOrigination = 1724,\n/*\n****************************************************************\n* An identifier representing the department or desk within the *\n* firm that originated the order.                              *\n****************************************************************\n*/\n  OriginatingDeptID = 1725,\n/*\n****************************************************************\n* An identifier representing the department or desk within the *\n* firm that received the order.                                *\n****************************************************************\n*/\n  ReceivingDeptID = 1726,\n/*\n************************************************************\n* The identifier of the information barrier in place for a *\n* trading unit that will meet the criteria of the          *\n* \"no-knowledge\" exception in FINRA Rule 5320.02.          *\n************************************************************\n*/\n  InformationBarrierID = 1727,\n/*\n*****************************************************\n* Firm assigned group allocation entity identifier. *\n*****************************************************\n*/\n  FirmGroupID = 1728,\n/*\n*************************************************************\n* Allocation identifier assigned by the Firm submitting the *\n* allocation for an individual allocation instruction (as   *\n* opposed to the overall message level identifier).         *\n*************************************************************\n*/\n  FirmMnemonic = 1729,\n/*\n***************************************************************\n* Intended to be used by a central counterparty to assign an  *\n* identifier to allocations of trades for the same instrument *\n* traded at the same price.                                   *\n***************************************************************\n*/\n  AllocGroupID = 1730,\n/*\n****************************************************************\n* Used by submitting firm to group trades being allocated into *\n* an average price group. The trades in average price group    *\n* will be used to calculate an average price for the group.    *\n****************************************************************\n*/\n  AvgPxGroupID = 1731,\n/*\n**************************************************************\n* Firm reference information, usually internal information,  *\n* that is part of the initial message. The information would *\n* not be carried forward (e.g to Take-up Firm) and preserved *\n* with the transaction.                                      *\n**************************************************************\n*/\n  FirmAllocText = 1732,\n/*\n************************************************************\n* An indicator to override the normal procedure to roll up *\n* allocations for the same take-up firm.                   *\n************************************************************\n*/\n  AllocationRollupInstruction = 1735,\n/*\n********************************************************\n* Indicates the total quantity of an allocation group. *\n* Includes any allocated quantity.                     *\n********************************************************\n*/\n  AllocGroupQuantity = 1736,\n/*\n****************************************************************\n* Indicates the remaining quantity of an allocation group that *\n* has not yet been allocated.                                  *\n****************************************************************\n*/\n  AllocGroupRemainingQuantity = 1737,\n/*\n****************************************************\n* Identifies the status of a reversal transaction. *\n****************************************************\n*/\n  AllocReversalStatus = 1738,\n/*\n*******************************************************\n* Type of reference obligation for credit derivatives *\n* contracts.                                          *\n*******************************************************\n*/\n  ObligationType = 1739,\n/*\n**************************************************\n* Method used for negotiation of contract price. *\n**************************************************\n*/\n  TradePriceNegotiationMethod = 1740,\n/*\n*************************************************************\n* Type of price used to determine upfront payment for swaps *\n* contracts.                                                *\n*************************************************************\n*/\n  UpfrontPriceType = 1741,\n/*\n****************************************************************\n* Price used to determine upfront payment for swaps contracts. *\n****************************************************************\n*/\n  UpfrontPrice = 1742,\n/*\n***************************************************************\n* Price used to determine upfront payment for swaps contracts *\n* reported for a deal (trade).                                *\n***************************************************************\n*/\n  LastUpfrontPrice = 1743,\n/*\n***************************************************************\n* The market data entry identifier of the bid side of a quote *\n***************************************************************\n*/\n  BidMDEntryID = 1745,\n/*\n***********************************************************\n* The market data entry identifier of the offer side of a *\n* quote.                                                  *\n***********************************************************\n*/\n  OfferMDEntryID = 1746,\n/*\n***************************************************************\n* Marketplace assigned quote identifier for the bid side. Can *\n* be used to indicate priority.                               *\n***************************************************************\n*/\n  BidQuoteID = 1747,\n/*\n*************************************************************\n* Marketplace assigned quote identifier for the offer side. *\n* Can be used to indicate priority.                         *\n*************************************************************\n*/\n  OfferQuoteID = 1748,\n/*\n*********************************\n* Specifies the total bid size. *\n*********************************\n*/\n  TotalBidSize = 1749,\n/*\n***********************************\n* Specifies the total offer size. *\n***********************************\n*/\n  TotalOfferSize = 1750,\n/*\n**************************************************************\n* Assigned by the party which accepts the quote. Can be used *\n* to provide the quote identifier assigned by an exchange,   *\n* marketplace or executing system.                           *\n**************************************************************\n*/\n  SecondaryQuoteID = 1751,\n/*\n***************************************************************\n* An opaque identifier used to communicate the custodian\u0019s    *\n* identifier for the lot.  It is expected that this           *\n* information would be provided by the custodian as part of a *\n* reconciliation process that occurs before trading.          *\n***************************************************************\n*/\n  CustodialLotID = 1752,\n/*\n****************************************************************\n* The effective acquisition date of the lot that would be used *\n* for gain-loss trade lot reporting. The versus purchase date  *\n* used to identify the lot in situations where a custodial lot *\n* identifier is not available.                                 *\n****************************************************************\n*/\n  VersusPurchaseDate = 1753,\n/*\n**************************************************************\n* The versus purchase price used to identify the lot in      *\n* situations where a custodial lot identifier is not         *\n* available. The value should be calculated based on current *\n* cost basis / quantity held.                                *\n**************************************************************\n*/\n  VersusPurchasePrice = 1754,\n/*\n***************************************************************\n* The amount that the current shares are worth.  If this lot  *\n* was liquidated, the total gain/loss for a trade is equal to *\n* the trade amount minus the current cost basis.              *\n***************************************************************\n*/\n  CurrentCostBasis = 1755,\n/*\n***************************************************************\n* An opaque identifier used to communicate the custodian\u0019s    *\n* identifier for the lot.  It is expected that this           *\n* information would be provided by the custodian as part of a *\n* reconciliation process that occurs before trading.          *\n***************************************************************\n*/\n  LegCustodialLotID = 1756,\n/*\n****************************************************************\n* The effective acquisition date of the lot that would be used *\n* for gain-loss trade lot reporting. The versus purchase date  *\n* used to identify the lot in situations where a custodial lot *\n* identifier is not available.                                 *\n****************************************************************\n*/\n  LegVersusPurchaseDate = 1757,\n/*\n*************************************************************\n* The versus purchase price used to identify the lot in     *\n* situations where a custodial lot identifier is not        *\n* available.The value should be calculated based on current *\n* cost basis / quantity held.                               *\n*************************************************************\n*/\n  LegVersusPurchasePrice = 1758,\n/*\n***************************************************************\n* The amount that the current shares are worth.  If this lot  *\n* was liquidated, the total gain/loss for a trade is equal to *\n* the trade amount minus the current cost basis.              *\n***************************************************************\n*/\n  LegCurrentCostBasis = 1759,\n/*\n***********************************\n* Type of risk limit information. *\n***********************************\n*/\n  RiskLimitRequestType = 1760,\n/*\n********************************************\n* Result of risk limit definition request. *\n********************************************\n*/\n  RiskLimitRequestResult = 1761,\n/*\n********************************************\n* Status of risk limit definition request. *\n********************************************\n*/\n  RiskLimitRequestStatus = 1762,\n/*\n**************************************************\n* Status of risk limit definition for one party. *\n**************************************************\n*/\n  RiskLimitStatus = 1763,\n/*\n**************************************************\n* Result of risk limit definition for one party. *\n**************************************************\n*/\n  RiskLimitResult = 1764,\n/*\n**********************************************************\n* Percentage of utilization of a party's set risk limit. *\n**********************************************************\n*/\n  RiskLimitUtilizationPercent = 1765,\n/*\n***************************************************************\n* Absolute amount of utilization of a party's set risk limit. *\n***************************************************************\n*/\n  RiskLimitUtilizationAmount = 1766,\n/*\n****************************************************************\n* Identifies the action to take or risk model to assume should *\n* risk limit be exceeded or breached for the specified party.  *\n****************************************************************\n*/\n  RiskLimitAction = 1767,\n/*\n****************************************\n* Amount at which a warning is issued. *\n****************************************\n*/\n  RiskWarningLevelAmount = 1768,\n/*\n****************************************************\n* Action to take should warning level be exceeded. *\n****************************************************\n*/\n  RiskWarningLevelAction = 1769,\n/*\n**********************************************************\n* Unique identifier for PartyEntitlementsRequest(35=CU). *\n**********************************************************\n*/\n  EntitlementRequestID = 1770,\n/*\n******************************************************\n* Identifier for the PartyEntitlementsReport(35=CV). *\n******************************************************\n*/\n  EntitlementReportID = 1771,\n/*\n*************************************************************\n* Used to indicate if a party is entitled to an entitlement *\n* type specified in the EntitlementType(1775) field.        *\n*************************************************************\n*/\n  EntitlementIndicator = 1774,\n/*\n************************\n* Type of entitlement. *\n************************\n*/\n  EntitlementType = 1775,\n/*\n*********************************************************\n* Unique identifier for a specific NoEntitlements(1773) *\n* repeating group instance.                             *\n*********************************************************\n*/\n  EntitlementID = 1776,\n/*\n*************************************\n* Number of entitlement attributes. *\n*************************************\n*/\n  NoEntitlementAttrib = 1777,\n/*\n***************************************************************\n* Name of the entitlement attribute type. A code list of      *\n* allowed values will be maintained on the FIX Protocol       *\n* website.                                                    *\n* Values \"4000\" and above are reserved for bilaterally agreed *\n* upon user defined enumerations.                             *\n***************************************************************\n*/\n  EntitlementAttribType = 1778,\n/*\n******************************************\n* Datatype of the entitlement attribute. *\n******************************************\n*/\n  EntitlementAttribDatatype = 1779,\n/*\n***************************************\n* Value of the entitlement attribute. *\n***************************************\n*/\n  EntitlementAttribValue = 1780,\n/*\n*************************************************************\n* Currency for EntitlementAttribValue(1780). Can be used if *\n* these fields represent a price, price offset, or amount.  *\n*************************************************************\n*/\n  EntitlementAttribCurrency = 1781,\n/*\n***************************************************\n* Indicates the starting date of the entitlement. *\n***************************************************\n*/\n  EntitlementStartDate = 1782,\n/*\n*************************************************\n* Indicates the ending date of the entitlement. *\n*************************************************\n*/\n  EntitlementEndDate = 1783,\n/*\n****************************************************************\n* The area to which the entitlement is applicable. This can be *\n* a trading platform or an offering.                           *\n****************************************************************\n*/\n  EntitlementPlatform = 1784,\n/*\n***********************************************************\n* Indicates how control of trading session and subsession *\n* transitions are performed.                              *\n***********************************************************\n*/\n  TradSesControl = 1785,\n/*\n******************************************************\n* Define the type of trade volume applicable for the *\n* MinTradeVol(562) and MaxTradeVol(1140)             *\n******************************************************\n*/\n  TradeVolType = 1786,\n/*\n*********************************************************\n* Spread table code referred by the security or symbol. *\n*********************************************************\n*/\n  RefTickTableID = 1787,\n/*\n**************************************************************\n* Unique identifier for the leg within the context of a      *\n* message (the scope of uniqueness to be defined by          *\n* counterparty agreement). The LegID(1788) can be referenced *\n* using LegRefID(654).                                       *\n**************************************************************\n*/\n  LegID = 1788,\n/*\n***********************************************************\n* Market segment within a target market segment repeating *\n* group.                                                  *\n***********************************************************\n*/\n  TargetMarketSegmentID = 1790,\n/*\n**************************************************************\n* Market segment within an affected market repeating segment *\n* group.                                                     *\n**************************************************************\n*/\n  AffectedMarketSegmentID = 1792,\n/*\n****************************************************************\n* Market segment within an unaffected market repeating segment *\n* group.                                                       *\n****************************************************************\n*/\n  NotAffectedMarketSegmentID = 1794,\n/*\n*************************************************************\n* The type of event affecting an order. The last event type *\n* within the OrderEventGrp component indicates the          *\n* ExecType(150) value resulting from the series of events   *\n* (ExecType(150) values are shown in brackets).             *\n*************************************************************\n*/\n  OrderEventType = 1796,\n/*\n****************************************************************\n* Refer to ExecID(17). Used when multiple different events are *\n* reported in single Execution Report. ExecID(17) and          *\n* OrderEventExecID(1797) values should not overlap.            *\n****************************************************************\n*/\n  OrderEventExecID = 1797,\n/*\n******************************************\n* Action that caused the event to occur. *\n******************************************\n*/\n  OrderEventReason = 1798,\n/*\n************************************\n* Price associated with the event. *\n************************************\n*/\n  OrderEventPx = 1799,\n/*\n***************************************\n* Quantity associated with the event. *\n***************************************\n*/\n  OrderEventQty = 1800,\n/*\n**************************************************************\n* Indicator to identify whether this fill was a result of a  *\n* liquidity provider providing or liquidity taker taking the *\n* liquidity. Applicable only for OrderEventType(1796) values *\n* of 4(Partially Filled) or 5(Filled).                       *\n**************************************************************\n*/\n  OrderEventLiquidityIndicator = 1801,\n/*\n*******************************************\n* Additional information about the event. *\n*******************************************\n*/\n  OrderEventText = 1802,\n/*\n**************************\n* Type of auction order. *\n**************************\n*/\n  AuctionType = 1803,\n/*\n*********************************************************\n* Percentage of matched quantity to be allocated to the *\n* submitter of the response to an auction order.        *\n*********************************************************\n*/\n  AuctionAllocationPct = 1804,\n/*\n****************************************************************\n* Instruction related to system generated auctions, e.g. flash *\n* order auctions.                                              *\n****************************************************************\n*/\n  AuctionInstruction = 1805,\n/*\n***********************************************\n* Used to reference an order via ClOrdID(11). *\n***********************************************\n*/\n  RefClOrdID = 1806,\n/*\n*************************************************************\n* Indicates whether an order is locked and for what reason. *\n*************************************************************\n*/\n  LockType = 1807,\n/*\n**************************\n* Locked order quantity. *\n**************************\n*/\n  LockedQty = 1808,\n/*\n***************************************************************\n* Locked order quantity in addition to LockedQty (1808), e.g. *\n* to distinguish total locked quantity from currently locked  *\n* quantity.                                                   *\n***************************************************************\n*/\n  SecondaryLockedQty = 1809,\n/*\n*************************************************************\n* Instruction to define conditions under which to release a *\n* locked order or parts of it.                              *\n*************************************************************\n*/\n  ReleaseInstruction = 1810,\n/*\n*************************************************************\n* Quantity to be made available, i.e. released from a lock. *\n*************************************************************\n*/\n  ReleaseQty = 1811,\n/*\n**************************************\n* Information subject to disclosure. *\n**************************************\n*/\n  DisclosureType = 1813,\n/*\n***************************************************************\n* Instruction to disclose information or to use default value *\n* of the receiver.                                            *\n***************************************************************\n*/\n  DisclosureInstruction = 1814,\n/*\n***************************************************************\n* Designates the capacity in which the order is submitted for *\n* trading by the market participant.                          *\n***************************************************************\n*/\n  TradingCapacity = 1815,\n/*\n*************************************************************\n* Designates the account type to be used for the order when *\n* submitted to clearing.                                    *\n*************************************************************\n*/\n  ClearingAccountType = 1816,\n/*\n****************************************************************\n* Designates the capacity in which the order will be submitted *\n* to clearing.                                                 *\n****************************************************************\n*/\n  LegClearingAccountType = 1817,\n/*\n**************************************************\n* Qualifies the value of TargetPartyRole (1464). *\n**************************************************\n*/\n  TargetPartyRoleQualifier = 1818,\n/*\n****************************************************************\n* Upper boundary for the price of a related entity, e.g. price *\n* of the underlying instrument in an Underlying Price          *\n* Contingency (UPC) order.                                     *\n****************************************************************\n*/\n  RelatedHighPrice = 1819,\n/*\n****************************************************************\n* Lower boundary for the price of a related entity, e.g. price *\n* of the underlying instrument in an Underlying Price          *\n* Contingency (UPC) order.                                     *\n****************************************************************\n*/\n  RelatedLowPrice = 1820,\n/*\n***************************************************************\n* Source for the price of a related entity, e.g. price of the *\n* underlying instrument in an Underlying Price Contingency    *\n* (UPC) order. Can be used together with RelatedHighPrice     *\n* (1819) and/or RelatedLowPrice (1820).                       *\n***************************************************************\n*/\n  RelatedPriceSource = 1821,\n/*\n*************************************************************\n* Indicates how the minimum quantity should be applied when *\n* executing the order.                                      *\n*************************************************************\n*/\n  MinQtyMethod = 1822,\n/*\n***************************************************************\n* Indicates whether order has been triggered during its       *\n* lifetime. Applies to cases where original information, e.g. *\n* OrdType(40), is modified when the order is triggered.       *\n***************************************************************\n*/\n  Triggered = 1823,\n/*\n************************************************************\n* OrigClOrdID(41) of an order affected by a mass cancel or *\n* mass action request.                                     *\n************************************************************\n*/\n  AffectedOrigClOrdID = 1824,\n/*\n*************************************************************\n* SecondaryOrderID (198) of an order not affected by a mass *\n* cancel or mass action request.                            *\n*************************************************************\n*/\n  NotAffSecondaryOrderID = 1825,\n/*\n***************************************\n* Time unit multiplier for the event. *\n***************************************\n*/\n  EventTimePeriod = 1826,\n/*\n****************************************\n* Time unit associated with the event. *\n****************************************\n*/\n  EventTimeUnit = 1827,\n/*\n************************************************************\n* When LastQty is an estimated value, e.g. for a Repo      *\n* \u001ccircled\u001d trade, LastQtyVariance specifies the absolute  *\n* amount that the size may vary up or down when finalized. *\n* Omitted when LastQty(32) is already final.               *\n************************************************************\n*/\n  LastQtyVariance = 1828,\n/*\n******************************************************\n* Settlement price increment for stated price range. *\n******************************************************\n*/\n  SettlPriceIncrement = 1830,\n/*\n****************************************************************\n* Secondary settlement price increment for stated price range. *\n* The meaning of secondary is left to bilateral agreement,     *\n* e.g. it may refer to final settlement for a contract.        *\n****************************************************************\n*/\n  SettlPriceSecondaryIncrement = 1831,\n/*\n**************************************************************\n* Indicates whether the trade or position being reported was *\n* cleared through a clearing organization.                   *\n**************************************************************\n*/\n  ClearedIndicator = 1832,\n/*\n****************************************************************\n* Additional information related to the pricing of a commodity *\n* swaps position, specifically an indicator referring to the   *\n* position type.                                               *\n****************************************************************\n*/\n  ContractRefPosType = 1833,\n/*\n***************************************************\n* Used to describe the ownership of the position. *\n***************************************************\n*/\n  PositionCapacity = 1834,\n/*\n**************************************************************\n* Indicates the currency of the unit of measure if position  *\n* quantity is expressed in valuation rather than contracts.  *\n* Conditionally required when PosQtyUnitOfMeasure(1836)=Ccy. *\n**************************************************************\n*/\n  PosQtyUnitOfMeasureCurrency = 1835,\n/*\n***************************************************************\n* Indicates the unit of measure of the position quantity when *\n* not expressed in contracts.                                 *\n***************************************************************\n*/\n  PosQtyUnitOfMeasure = 1836,\n/*\n**********************************************************\n* Reference month if there is no applicable              *\n* UnderlyingMaturityMonth(313) value for the contract or *\n* security.                                              *\n**********************************************************\n*/\n  UnderlyingContractPriceRefMonth = 1837,\n/*\n****************************************************************\n* Price conditions in effect at the time of the trade.         *\n* Multiple price conditions can be in effect at the same time. *\n* Price conditions are usually required to be reported in      *\n* markets that have regulations on price execution at a market *\n* or national best bid or offer, and the trade price differs   *\n* from the best bid or offer.                                  *\n****************************************************************\n*/\n  TradePriceCondition = 1839,\n/*\n*******************************************************\n* Identifies the status of an allocation when using a *\n* pre-clear workflow.                                 *\n*******************************************************\n*/\n  TradeAllocStatus = 1840,\n/*\n***********************************************************\n* Indicates the type of trade quantity in TradeQty(1843). *\n***********************************************************\n*/\n  TradeQtyType = 1842,\n/*\n*******************\n* Trade quantity. *\n*******************\n*/\n  TradeQty = 1843,\n/*\n**********************************************************\n* Type of the amount associated with a trade allocation. *\n**********************************************************\n*/\n  TradeAllocAmtType = 1845,\n/*\n**************************************************\n* The amount associated with a trade allocation. *\n**************************************************\n*/\n  TradeAllocAmt = 1846,\n/*\n*********************************************************\n* Currency denomination of the trade allocation amount. *\n*********************************************************\n*/\n  TradeAllocCurrency = 1847,\n/*\n************************************************************\n* Instruction on how to add a trade to an allocation group *\n* when it is being given-up.                               *\n************************************************************\n*/\n  TradeAllocGroupInstruction = 1848,\n/*\n**********************************************************\n* Indicates the trade is a result of an offset or onset. *\n**********************************************************\n*/\n  OffsetInstruction = 1849,\n/*\n***************************************************************\n* Specifies the reason for an amount type when reported on an *\n* allocation. Useful when multiple instances of the same      *\n* amount type are reported.                                   *\n***************************************************************\n*/\n  TradeAllocAmtReason = 1850,\n/*\n***************************************************************\n* Identifies the multileg strategy (e.g. spread) to which the *\n* trade belongs. This links together trade legs executed as   *\n* part of a strategy during a single match event.             *\n***************************************************************\n*/\n  StrategyLinkID = 1851,\n/*\n********************************************************\n* Calculated average price for this side of the trade. *\n********************************************************\n*/\n  SideAvgPx = 1852,\n/*\n****************************************************************\n* Used to indicate whether a trade or a sub-allocation should  *\n* be allocated at the trade price (e.g. no average pricing),   *\n* or whether it should be grouped with other                   *\n* trades/sub-allocations and allocated at the average price of *\n* the group.                                                   *\n****************************************************************\n*/\n  SideAvgPxIndicator = 1853,\n/*\n************************************************************\n* The identifier for the average price group for the trade *\n* side.  See also AvgPxGroupID(1731).                      *\n************************************************************\n*/\n  SideAvgPxGroupID = 1854,\n/*\n**********************************\n* Identifier of a related trade. *\n**********************************\n*/\n  RelatedTradeID = 1856,\n/*\n***********************************************\n* Describes the source of the identifier that *\n* RelatedTradeID(1856) represents.            *\n***********************************************\n*/\n  RelatedTradeIDSource = 1857,\n/*\n****************************\n* Date of a related trade. *\n****************************\n*/\n  RelatedTradeDate = 1858,\n/*\n*****************************************\n* Market of execution of related trade. *\n*****************************************\n*/\n  RelatedTradeMarketID = 1859,\n/*\n***********************************************************\n* Quantity of the related trade which can be less than or *\n* equal to the actual quantity of the related trade. For  *\n* example, when one trade offsets another across asset    *\n* classes.                                                *\n***********************************************************\n*/\n  RelatedTradeQuantity = 1860,\n/*\n*************************************\n* Identifier of a related position. *\n*************************************\n*/\n  RelatedPositionID = 1862,\n/*\n***********************************************\n* Describes the source of the identifier that *\n* RelatedPositionID(1862) represents.         *\n***********************************************\n*/\n  RelatedPositionIDSource = 1863,\n/*\n***************************************************************\n* Used to help identify the position when                     *\n* RelatedPositionID(1862) is not unique across multiple days. *\n* This date is generally the creation date of the identifier. *\n***************************************************************\n*/\n  RelatedPositionDate = 1864,\n/*\n****************************************************************\n* Acknowledgement status of a Quote(35=S) or QuoteCancel(35=Z) *\n* message submission.                                          *\n****************************************************************\n*/\n  QuoteAckStatus = 1865,\n/*\n***********************************************************\n* Specifies the index used to calculate the strike price. *\n***********************************************************\n*/\n  StrikeIndex = 1866,\n/*\n***************************************************************\n* Unique identifier for the ask side of the quote assigned by *\n* the quote issuer.                                           *\n***************************************************************\n*/\n  OfferID = 1867,\n/*\n********************************\n* Type of value to be checked. *\n********************************\n*/\n  ValueCheckType = 1869,\n/*\n****************************************************\n* Action to be taken for the ValueCheckType(1869). *\n****************************************************\n*/\n  ValueCheckAction = 1870,\n/*\n***********************************************\n* The schema used to validate the contents of *\n* LegSecurityXML(1872).                       *\n***********************************************\n*/\n  LegSecurityXMLSchema = 1873,\n/*\n***********************************************\n* The schema used to validate the contents of *\n* UnderlyingSecurityXML(1875).                *\n***********************************************\n*/\n  UnderlyingSecurityXMLSchema = 1876,\n/*\n*******************************************\n* Result party detail definition request. *\n*******************************************\n*/\n  PartyDetailRequestResult = 1877,\n/*\n***********************************************\n* Status of party details definition request. *\n***********************************************\n*/\n  PartyDetailRequestStatus = 1878,\n/*\n****************************************************\n* Status of party detail definition for one party. *\n****************************************************\n*/\n  PartyDetailDefinitionStatus = 1879,\n/*\n****************************************************\n* Result of party detail definition for one party. *\n****************************************************\n*/\n  PartyDetailDefinitionResult = 1880,\n/*\n********************************************\n* Result of risk limit definition request. *\n********************************************\n*/\n  EntitlementRequestResult = 1881,\n/*\n****************************************************\n* Status of party entitlements definition request. *\n****************************************************\n*/\n  EntitlementRequestStatus = 1882,\n/*\n***************************************************\n* Status of entitlement definition for one party. *\n***************************************************\n*/\n  EntitlementStatus = 1883,\n/*\n***************************************************\n* Result of entitlement definition for one party. *\n***************************************************\n*/\n  EntitlementResult = 1884,\n/*\n**************************************************************\n* Reference to an EntitlementID(1776). Used for modification *\n* or deletion of an entitlement.                             *\n**************************************************************\n*/\n  EntitlementRefID = 1885,\n/*\n***************************************************************\n* Used to express the unit of measure of the settlement price *\n* if different from the contract.                             *\n***************************************************************\n*/\n  SettlPriceUnitOfMeasure = 1886,\n/*\n**********************************************************\n* Indicates the currency of the settlement price unit of *\n* measure if expressed in another currency than the base *\n* currency.                                              *\n* Conditionally required when                            *\n* SettlPriceUnitOfMeasure(1886)=Ccy.                     *\n**********************************************************\n*/\n  SettlPriceUnitOfMeasureCurrency = 1887,\n/*\n**************************************************************\n* Timestamp of the match event. For off-exchange trades the  *\n* time at which the deal was matched by the exchange.        *\n* This timestamp will be the same on all the trades and will *\n* not change when a trade is modified.                       *\n**************************************************************\n*/\n  TradeMatchTimestamp = 1888,\n/*\n************************************************************\n* Used to identify each price level, step or clip within a *\n* match event.                                             *\n************************************************************\n*/\n  TrdMatchSubID = 1891,\n/*\n******************************************************\n* The ExecID(17) value corresponding to a trade leg. *\n******************************************************\n*/\n  LegExecID = 1893,\n/*\n*********************************************************\n* The TradeID(1003) value corresponding to a trade leg. *\n*********************************************************\n*/\n  LegTradeID = 1894,\n/*\n**************************************************************\n* The TradeReportID(571) value corresponding to a trade leg. *\n**************************************************************\n*/\n  LegTradeReportID = 1895,\n/*\n*********************************************************\n* Used to indicate the status of the trade match report *\n* submission.                                           *\n*********************************************************\n*/\n  TradeMatchAckStatus = 1896,\n/*\n**********************************************************\n* Reason the trade match report submission was rejected. *\n**********************************************************\n*/\n  TradeMatchRejectReason = 1897,\n/*\n**********************************************\n* Identifies the market segment of the side. *\n**********************************************\n*/\n  SideMarketSegmentID = 1898,\n/*\n*************************************************************\n* Identifies the type of venue where the trade was executed *\n* for the side.                                             *\n*************************************************************\n*/\n  SideVenueType = 1899,\n/*\n******************************************************\n* Used to reference the value from SideExecID(1427). *\n******************************************************\n*/\n  SideExecRefID = 1900,\n/*\n*****************************************************\n* Used to reference the value from LegExecID(1893). *\n*****************************************************\n*/\n  LegExecRefID = 1901,\n/*\n****************************************************************\n* Indicates, if \"Y\", that a stated valuation includes a        *\n* haircut, e.g. that the stated value reflects the subtraction *\n* of the haircut. Note that a value of \"N\" does not imply a    *\n* haircut is not applicable, only that the haircut (if any) is *\n* not reflected in the stated valuation.                       *\n****************************************************************\n*/\n  HaircutIndicator = 1902,\n/*\n***************************************************************\n* Trade identifier required by government regulators or other *\n* regulatory organizations for regulatory reporting purposes. *\n* For example, unique swap identifer (USI) as required by the *\n* U.S. Commodity Futures Trading Commission.                  *\n***************************************************************\n*/\n  RegulatoryTradeID = 1903,\n/*\n****************************************************************\n* Identifies the event which caused origination of the         *\n* identifier in RegulatoryTradeID(1903). When more than one    *\n* event is the cause, use the higher enumeration value.  For   *\n* example, if the identifier is originated due to an allocated *\n* trade which was cleared and reported, use the enumeration    *\n* value 2 (Clearing).                                          *\n****************************************************************\n*/\n  RegulatoryTradeIDEvent = 1904,\n/*\n****************************************************************\n* Identifies the reporting entity that originated the value in *\n* RegulatoryTradeID(1903). The reporting entitiy identifier    *\n* may be assigned by a regulator.                              *\n****************************************************************\n*/\n  RegulatoryTradeIDSource = 1905,\n/*\n***************************************************************\n* Specifies the type of trade identifier provided in          *\n* RegulatoryTradeID(1903).                                    *\n* Contextual hierarchy of events for the same trade or        *\n* transaction maybe captured through use of the different     *\n* RegulatoryTradeIDType(1906) values using multiple instances *\n* of the repeating group as needed for regulatory reporting.  *\n***************************************************************\n*/\n  RegulatoryTradeIDType = 1906,\n/*\n***************************************************************\n* Trade identifier required by government regulators or other *\n* regulatory organizations for regulatory reporting purposes. *\n* For example, unique swap identifer (USI) as required by the *\n* U.S. Commodity Futures Trading Commission.                  *\n***************************************************************\n*/\n  AllocRegulatoryTradeID = 1909,\n/*\n****************************************************************\n* Identifies the reporting entity that originated the value in *\n* AllocRegulatoryTradeID(1909).  The reporting entity          *\n* identifier may be assigned by a regulator.                   *\n****************************************************************\n*/\n  AllocRegulatoryTradeIDSource = 1910,\n/*\n***************************************************************\n* Identifies the event which caused the origination of the    *\n* identifier in AllocRegulatoryTradeID(1909).  When more than *\n* one event is the cause, use the higher enumeration value.   *\n* For example, if the identifier is originated due to an      *\n* allocated trade which was cleared and reported, use the     *\n* enumeration value 2(Clearing).                              *\n***************************************************************\n*/\n  AllocRegulatoryTradeIDEvent = 1911,\n/*\n***********************************************************\n* Specifies the type of trade identifier provided in      *\n* AllocRegulatoryTradeID(1909), within the context of the *\n* hierarchy of trade events.                              *\n***********************************************************\n*/\n  AllocRegulatoryTradeIDType = 1912,\n/*\n**************************************************************\n* The number of competing Respondents (e.g. dealers) to      *\n* receive a quote request (either via the QuoteRequest(35=R) *\n* or via other means).                                       *\n**************************************************************\n*/\n  NumOfCompetitors = 1913,\n/*\n**************************************************************\n* The time by which a meaningful response should arrive back *\n* (always expressed in UTC (Universal Time Coordinated, also *\n* known as \"GMT\").                                           *\n**************************************************************\n*/\n  ResponseTime = 1914,\n/*\n**********************************************\n* Time by which the quote will be displayed. *\n**********************************************\n*/\n  QuoteDisplayTime = 1915,\n/*\n***************************************************************\n* Time unit in which the ExposureDuration(1629) is expressed. *\n***************************************************************\n*/\n  ExposureDurationUnit = 1916,\n/*\n**********************************************************\n* The best quoted price received among those not traded. *\n**********************************************************\n*/\n  CoverPrice = 1917,\n/*\n*******************************************\n* Value at specific price movement point. *\n*******************************************\n*/\n  PriceMovementValue = 1921,\n/*\n****************************************************************\n* Price movement point up (positive integer) or down (negative *\n* integer) relative to the underlying price of the instrument. *\n****************************************************************\n*/\n  PriceMovementPoint = 1922,\n/*\n*********************************************************\n* Describes the format of the PriceMovementValue(1921). *\n*********************************************************\n*/\n  PriceMovementType = 1923,\n/*\n************************************************************\n* Specifies the party's or parties' intention to clear the *\n* trade.                                                   *\n************************************************************\n*/\n  ClearingIntention = 1924,\n/*\n************************************************************\n* Specifies the eligibility of this trade for clearing and *\n* central counterparty processing.                         *\n************************************************************\n*/\n  TradeClearingInstruction = 1925,\n/*\n****************************************************************\n* Indicates that the trade being reported occurred in the past *\n* and is still in effect or active.                            *\n****************************************************************\n*/\n  BackloadedTradeIndicator = 1926,\n/*\n****************************************\n* Specifies how a trade was confirmed. *\n****************************************\n*/\n  ConfirmationMethod = 1927,\n/*\n*********************************************************\n* An indication that the trade is flagged for mandatory *\n* clearing.                                             *\n*********************************************************\n*/\n  MandatoryClearingIndicator = 1928,\n/*\n*************************************************\n* An indication that the trade is a mixed swap. *\n*************************************************\n*/\n  MixedSwapIndicator = 1929,\n/*\n***********************************************\n* An indication that the price is off-market. *\n***********************************************\n*/\n  OffMarketPriceIndicator = 1930,\n/*\n*******************************************\n* Indication of how a trade was verified. *\n*******************************************\n*/\n  VerificationMethod = 1931,\n/*\n****************************************************************\n* Specifies whether a party to a swap is using an exception to *\n* a clearing requirement. In the US, one such clearing         *\n* requirement is CFTC's rule pursuant to CEA Section 2(h)(1).  *\n****************************************************************\n*/\n  ClearingRequirementException = 1932,\n/*\n****************************************************************\n* Used to specify whether the principal is paying or receiving *\n* the fixed rate in an interest rate swap.                     *\n****************************************************************\n*/\n  IRSDirection = 1933,\n/*\n******************************\n* Type of regulatory report. *\n******************************\n*/\n  RegulatoryReportType = 1934,\n/*\n***************************************************************\n* Used in conjunction with RegulatoryReportType(1934) to      *\n* indicate whether the trade report is a voluntary regulatory *\n* report. If not specified, the default for a regulatory      *\n* report is \"N\".                                              *\n* When VoluntaryRegulatoryReport(1935)=Y it is recommended    *\n* that one of the parties to the trade be identified as the   *\n* voluntary reporting party through PartySubIDType(803) = 63  *\n* (Voluntary reporting entity).                               *\n***************************************************************\n*/\n  VoluntaryRegulatoryReport = 1935,\n/*\n**********************************************\n* Specifies how the trade is collateralized. *\n**********************************************\n*/\n  TradeCollateralization = 1936,\n/*\n****************************************************************\n* Specifies the post-execution trade continuation or lifecycle *\n* event. Additional values may be used by mutual agreement of  *\n* the counterparties.                                          *\n****************************************************************\n*/\n  TradeContinuation = 1937,\n/*\n*********************************************************\n* The broad asset category for assessing risk exposure. *\n*********************************************************\n*/\n  AssetClass = 1938,\n/*\n***************************************************\n* The subcategory description of the asset class. *\n***************************************************\n*/\n  AssetSubClass = 1939,\n/*\n****************************************************************\n* Within the asset subclass this can be used to provide more   *\n* specific description of the asset.                           *\n* Recommended values include:                                  *\n*                                                              *\n* Interest Rate:                                               *\n* LIBOR or other floating rate index if appropriate            *\n* For multi-currency IRS there are two currencies - specify    *\n* the riskier ISO 4217 Currency Code in primary fields and the *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields.                                                      *\n*                                                              *\n* Currency:                                                    *\n* ISO 4217 Currency Code                                       *\n* G7, G20, etc. for standard \"grouping\" of currencies          *\n* For cross-currency swaps there are two currencies, so        *\n* specify the riskier Currency Code in primary fields and the  *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields. If settlement is to be in \"any G7\" currency, specify *\n* \"G7\" in secondary field.                                     *\n*                                                              *\n* Credit:                                                      *\n* Corporate, Sovereign, CDX, CDX Structured, iTraxx, iTraxx    *\n* Structured                                                   *\n*                                                              *\n* Equity:                                                      *\n* S&P500 or other index                                        *\n*                                                              *\n* Commodity:                                                   *\n* Non-precious, Precious, Oil, Natural Gas, Coal, Electricity, *\n* Inter-Energy, Grains, Oils Seeds, Dairy, Livestock,          *\n* Forestry, Softs, Weather, Emissions, Warehouse receipts      *\n*                                                              *\n* Debt:                                                        *\n* Bill, Bond, Note, Floating rate, Strip, Index linked,        *\n* Discount note, Mortgage backed, Benchmark note.              *\n*                                                              *\n* Other values may be used by mutual agreement of the          *\n* counterparties.                                              *\n****************************************************************\n*/\n  AssetType = 1940,\n/*\n****************************************************************\n* The classification or type of swap. Additional values may be *\n* used by mutual agreement of the counterparties.              *\n****************************************************************\n*/\n  SwapClass = 1941,\n/*\n***************************************************************\n* The Nth reference obligation to default in a CDS reference  *\n* basket. If specified without MthToDefault(1943) the default *\n* will trigger a CDS payout.  If MthToDefault(1943) is also   *\n* present then payout occurs between the Nth and Mth          *\n* obligations to default.                                     *\n***************************************************************\n*/\n  NthToDefault = 1942,\n/*\n**************************************************************\n* The Mth reference obligation to default in a CDS reference *\n* basket. When NthToDefault(1942) and MthToDefault(1943) are *\n* represented then the CDS payout occurs between the Nth and *\n* Mth obligations to default.                                *\n**************************************************************\n*/\n  MthToDefault = 1943,\n/*\n******************************************\n* Relevant settled entity matrix source. *\n******************************************\n*/\n  SettledEntityMatrixSource = 1944,\n/*\n****************************************************************\n* The publication date of the applicable version of the        *\n* matrix. If not specified, the Standard Terms Supplement      *\n* defines rules for which version of the matrix is applicable. *\n****************************************************************\n*/\n  SettledEntityMatrixPublicationDate = 1945,\n/*\n****************************\n* Coupon type of the bond. *\n****************************\n*/\n  CouponType = 1946,\n/*\n***************************************************************\n* Specifies the total amount of the issue. Corresponds to the *\n* par value multiplied by the number of issued securities.    *\n***************************************************************\n*/\n  TotalIssuedAmount = 1947,\n/*\n***************************************************************\n* Time unit multiplier for the frequency of the bond's coupon *\n* payment.                                                    *\n***************************************************************\n*/\n  CouponFrequencyPeriod = 1948,\n/*\n****************************************************************\n* Time unit associated with the frequency of the bond's coupon *\n* payment.                                                     *\n****************************************************************\n*/\n  CouponFrequencyUnit = 1949,\n/*\n****************************************************************\n* The day count convention used in interest calculations for a *\n* bond or an interest bearing security.  Absence of this field *\n* for a bond or an interest bearing security transaction       *\n* implies a \"flat\" trade, i.e. no accrued interest determined  *\n* at time of the transaction.                                  *\n****************************************************************\n*/\n  CouponDayCount = 1950,\n/*\n************************************************************\n* Identifies the equity in which a convertible bond can be *\n* converted to.                                            *\n************************************************************\n*/\n  ConvertibleBondEquityID = 1951,\n/*\n*******************************************\n* Identifies class or source of the       *\n* ConvertibleBondEquityID(1951) value.    *\n* 100+ are reserved for private security. *\n*******************************************\n*/\n  ConvertibleBondEquityIDSource = 1952,\n/*\n**************************************************************\n* Reference month if there is no applicable                  *\n* MaturityMonthYear(200) value for the contract or security. *\n**************************************************************\n*/\n  ContractPriceRefMonth = 1953,\n/*\n********************************************************\n* Indicates the seniority level of the lien in a loan. *\n********************************************************\n*/\n  LienSeniority = 1954,\n/*\n*************************************************************\n* Specifies the type of loan when the credit default swap's *\n* reference obligation is a loan.                           *\n*************************************************************\n*/\n  LoanFacility = 1955,\n/*\n***************************************************************\n* Specifies the type of reference entity for first-to-default *\n* CDS basket contracts.                                       *\n***************************************************************\n*/\n  ReferenceEntityType = 1956,\n/*\n*********************************************************\n* The series identifier of a credit default swap index. *\n*********************************************************\n*/\n  IndexSeries = 1957,\n/*\n*****************************************************\n* The version of a credit default swap index annex. *\n*****************************************************\n*/\n  IndexAnnexVersion = 1958,\n/*\n*********************************************************\n* The date of a credit default swap index series annex. *\n*********************************************************\n*/\n  IndexAnnexDate = 1959,\n/*\n*****************************************************\n* The source of a credit default swap series annex. *\n*****************************************************\n*/\n  IndexAnnexSource = 1960,\n/*\n***************************************\n* The version of the master agreement *\n***************************************\n*/\n  AgreementVersion = 1961,\n/*\n**************************************************************\n* The type of master confirmation executed between the       *\n* parties.                                                   *\n* See                                                        *\n* http://www.fpml.org/coding-scheme/master-confirmation-type *\n* for values.                                                *\n**************************************************************\n*/\n  MasterConfirmationDesc = 1962,\n/*\n*************************************************************\n* Alternative to broker confirmation. The date of the       *\n* confirmation executed between the parties and intended to *\n* govern all relevant transactions between those parties.   *\n*************************************************************\n*/\n  MasterConfirmationDate = 1963,\n/*\n********************************************************************\n* The type of master confirmation annex executed between the       *\n* parties.                                                         *\n* See                                                              *\n* http://www.fpml.org/coding-scheme/master-confirmation-annex-type *\n* for values.                                                      *\n********************************************************************\n*/\n  MasterConfirmationAnnexDesc = 1964,\n/*\n*********************************************************\n* The date that an annex to the master confirmation was *\n* executed between the parties.                         *\n*********************************************************\n*/\n  MasterConfirmationAnnexDate = 1965,\n/*\n**************************************************************\n* Describes the type of broker confirmation executed between *\n* the parites.  Can be used as an alterative to              *\n* MasterConfirmationDesc(1962).  See                         *\n* http://www.fpml.org/coding-scheme/broker-confirmation-type *\n* for values.                                                *\n**************************************************************\n*/\n  BrokerConfirmationDesc = 1966,\n/*\n*******************************************************************\n* The type of ISDA Credit Support Agreement. See                  *\n* http://www.fpml.org/coding-scheme/credit-support-agreement-type *\n* for values.                                                     *\n*******************************************************************\n*/\n  CreditSupportAgreementDesc = 1967,\n/*\n*************************************************************\n* The date of the ISDA Credit Support Agreement executed    *\n* between the parties and intended to govern collateral     *\n* arrangements for all OTC derivatives transactions between *\n* those parties.                                            *\n*************************************************************\n*/\n  CreditSupportAgreementDate = 1968,\n/*\n****************************************************************\n* A common reference or unique identifier to identify the ISDA *\n* Credit Support Agreement executed between the parties.       *\n****************************************************************\n*/\n  CreditSupportAgreementID = 1969,\n/*\n***************************************************************\n* Identification of the law governing the transaction. See    *\n* http://www.fpml.org/coding-scheme/governing-law for values. *\n***************************************************************\n*/\n  GoverningLaw = 1970,\n/*\n****************************************************************\n* Trade identifier required by government regulators or other  *\n* regulatory organziations for regulatory reporting purposes.  *\n* For example, unique swap identifier (USI) as required by the *\n* U.S. Commodity Futures Trading Commission.                   *\n****************************************************************\n*/\n  SideRegulatoryTradeID = 1972,\n/*\n**************************************************************\n* Identifies the  reporting entity that originated the value *\n* in SideRegulatoryTradeID(1972).  The reporting entity      *\n* identifier may be assigned by a regulator.                 *\n**************************************************************\n*/\n  SideRegulatoryTradeIDSource = 1973,\n/*\n*************************************************************\n* Identifies the event which caused origination of the      *\n* identifier in SideRegulatoryTradeID(1972). When more than *\n* one event is the cause, use the higher enumeration value. *\n* For example, if the identifier is originated due to an    *\n* allocated trade which was cleared and reported, use the   *\n* enumeration value 2 (Clearing).                           *\n*************************************************************\n*/\n  SideRegulatoryTradeIDEvent = 1974,\n/*\n**********************************************************\n* Specifies the type of trade identifier provided in     *\n* SideRegulatoryTradeID(1972), within the context of the *\n* hierarchy of trade events.                             *\n**********************************************************\n*/\n  SideRegulatoryTradeIDType = 1975,\n/*\n**************************************************************\n* The broad asset category for assessing risk exposure for a *\n* multi-asset trade.                                         *\n**************************************************************\n*/\n  SecondaryAssetClass = 1977,\n/*\n****************************************************************\n* An indication of the general description of the asset class. *\n****************************************************************\n*/\n  SecondaryAssetSubClass = 1978,\n/*\n****************************************************************\n* Within the asset subclass this can be used to provide more   *\n* specific description of the asset.                           *\n* Recommended values include:                                  *\n*                                                              *\n* Interest Rate:                                               *\n* LIBOR or other floating rate index if appropriate            *\n* For multi-currency IRS there are two currencies - specify    *\n* the riskier ISO 4217 Currency Code in primary fields and the *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields.                                                      *\n*                                                              *\n* Currency:                                                    *\n* ISO 4217 Currency Code                                       *\n* G7, G20, etc. for standard \"grouping\" of currencies          *\n* For cross-currency swaps there are two currencies, so        *\n* specify the riskier Currency Code in primary fields and the  *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields. If settlement is to be in \"any G7\" currency, specify *\n* \"G7\" in secondary field.                                     *\n*                                                              *\n* Credit:                                                      *\n* Corporate, Sovereign, CDX, CDX Structured, iTraxx, iTraxx    *\n* Structured                                                   *\n*                                                              *\n* Equity:                                                      *\n* S&P500 or other index                                        *\n*                                                              *\n* Commodity:                                                   *\n* Non-precious, Precious, Oil, Natural Gas, Coal, Electricity, *\n* Inter-Energy, Grains, Oils Seeds, Dairy, Livestock,          *\n* Forestry, Softs, Weather, Emissions, Warehouse receipts      *\n*                                                              *\n* Debt:                                                        *\n* Bill, Bond, Note, Floating rate, Strip, Index linked,        *\n* Discount note, Mortgage backed, Benchmark note.              *\n*                                                              *\n* Other values may be used by mutual agreement of the          *\n* counterparties.                                              *\n****************************************************************\n*/\n  SecondaryAssetType = 1979,\n/*\n****************************************************\n* Indication that a block trade will be allocated. *\n****************************************************\n*/\n  BlockTrdAllocIndicator = 1980,\n/*\n****************************************\n* Code to represent the type of event. *\n****************************************\n*/\n  UnderlyingEventType = 1982,\n/*\n**************************\n* The date of the event. *\n**************************\n*/\n  UnderlyingEventDate = 1983,\n/*\n*********************************************************\n* The time of the event. To be used in combination with *\n* UnderlyingEventDate(1983).                            *\n*********************************************************\n*/\n  UnderlyingEventTime = 1984,\n/*\n****************************************\n* Time unit associated with the event. *\n****************************************\n*/\n  UnderlyingEventTimeUnit = 1985,\n/*\n***************************************\n* Time unit multiplier for the event. *\n***************************************\n*/\n  UnderlyingEventTimePeriod = 1986,\n/*\n*********************************************************\n* Predetermined price of issue at event, if applicable. *\n*********************************************************\n*/\n  UnderlyingEventPx = 1987,\n/*\n**************************************************************\n* For a basket, or pool, describes the weight of each of the *\n* constituents within the basket. If not provided, it is     *\n* assumed to be equal weighted.                              *\n**************************************************************\n*/\n  UnderlyingConstituentWeight = 1988,\n/*\n*****************************************************\n* Specifies the coupon type of the underlying bond. *\n*****************************************************\n*/\n  UnderlyingCouponType = 1989,\n/*\n***************************************************************\n* Specifies the total amount of the issue. Corresponds to the *\n* par value multiplied by the number of issued security.      *\n***************************************************************\n*/\n  UnderlyingTotalIssuedAmount = 1990,\n/*\n***************************************************************\n* Time unit multiplier for the frequency of the bond's coupon *\n* payment.                                                    *\n***************************************************************\n*/\n  UnderlyingCouponFrequencyPeriod = 1991,\n/*\n****************************************************************\n* Time unit associated with the frequency of the bond's coupon *\n* payment.                                                     *\n****************************************************************\n*/\n  UnderlyingCouponFrequencyUnit = 1992,\n/*\n****************************************************************\n* The day count convention used in interest calculations for a *\n* bond or an interest bearing security.                        *\n****************************************************************\n*/\n  UnderlyingCouponDayCount = 1993,\n/*\n*****************************************************\n* For a CDS basket or pool identifies the reference *\n* obligation.                                       *\n*****************************************************\n*/\n  UnderlyingObligationID = 1994,\n/*\n***************************************\n* Identifies the source scheme of the *\n* UnderlyingObligationID(1994).       *\n***************************************\n*/\n  UnderlyingObligationIDSource = 1995,\n/*\n***********************************************************\n* Specifies the equity in which a convertible bond can be *\n* converted.                                              *\n***********************************************************\n*/\n  UnderlyingEquityID = 1996,\n/*\n**********************************************************\n* Identifies the source of the UnderlyingEquityID(1996). *\n**********************************************************\n*/\n  UnderlyingEquityIDSource = 1997,\n/*\n********************************************************\n* Indicates the seniority level of the lien in a loan. *\n********************************************************\n*/\n  UnderlyingLienSeniority = 1998,\n/*\n*************************************************************\n* Specifies the type of loan when the credit default swap's *\n* reference obligation is a loan.                           *\n*************************************************************\n*/\n  UnderlyingLoanFacility = 1999,\n/*\n***************************************************************\n* Specifies the type of reference entity for first-to-default *\n* CDS basket contracts.                                       *\n***************************************************************\n*/\n  UnderlyingReferenceEntityType = 2000,\n/*\n***********************************************************\n* Specifies the strike price offset from the named index. *\n***********************************************************\n*/\n  StrikeIndexSpread = 2001,\n/*\n*************************************************\n* Specifies the source of trade valuation data. *\n*************************************************\n*/\n  ValuationSource = 2002,\n/*\n*********************************************************\n* The series identifier of a credit default swap index. *\n*********************************************************\n*/\n  UnderlyingIndexSeries = 2003,\n/*\n****************************************************************\n* The version identifier of a credit default swap index annex. *\n****************************************************************\n*/\n  UnderlyingIndexAnnexVersion = 2004,\n/*\n*********************************************************\n* The date of a credit default swap index series annex. *\n*********************************************************\n*/\n  UnderlyingIndexAnnexDate = 2005,\n/*\n***********************************************************\n* The source of a credit default swap index series annex. *\n***********************************************************\n*/\n  UnderlyingIndexAnnexSource = 2006,\n/*\n**************************************************************\n* Identifies an entire suite of products for a given market. *\n* In Futures this may be \"interest rates\", \"agricultural\",   *\n* \"equity indexes\", etc                                      *\n**************************************************************\n*/\n  UnderlyingProductComplex = 2007,\n/*\n************************************************************\n* An exchange specific name assigned to a group of related *\n* securities which may be concurrently affected by market  *\n* events and actions.                                      *\n************************************************************\n*/\n  UnderlyingSecurityGroup = 2008,\n/*\n***********************************************************\n* Indicator to determine if Instrument is Settle on Open. *\n***********************************************************\n*/\n  UnderlyingSettleOnOpenFlag = 2009,\n/*\n***********************************************\n* Method under which assignment was conducted *\n***********************************************\n*/\n  UnderlyingAssignmentMethod = 2010,\n/*\n*********************************************\n* Gives the current state of the instrument *\n*********************************************\n*/\n  UnderlyingSecurityStatus = 2011,\n/*\n*******************************************************\n* Type of reference obligation for credit derivatives *\n* contracts.                                          *\n*******************************************************\n*/\n  UnderlyingObligationType = 2012,\n/*\n*********************************************************\n* The broad asset category for assessing risk exposure. *\n*********************************************************\n*/\n  UnderlyingAssetClass = 2013,\n/*\n****************************************************************\n* An indication of the general description of the asset class. *\n****************************************************************\n*/\n  UnderlyingAssetSubClass = 2014,\n/*\n****************************************************************\n* Within the asset subclass this can be used to provide more   *\n* specific description of the asset.                           *\n* Recommended values include:                                  *\n*                                                              *\n* Interest Rate:                                               *\n* LIBOR or other floating rate index if appropriate            *\n* For multi-currency IRS there are two currencies - specify    *\n* the riskier ISO 4217 Currency Code in primary fields and the *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields.                                                      *\n*                                                              *\n* Currency:                                                    *\n* ISO 4217 Currency Code                                       *\n* G7, G20, etc. for standard \"grouping\" of currencies          *\n* For cross-currency swaps there are two currencies, so        *\n* specify the riskier Currency Code in primary fields and the  *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields. If settlement is to be in \"any G7\" currency, specify *\n* \"G7\" in secondary field.                                     *\n*                                                              *\n* Credit:                                                      *\n* Corporate, Sovereign, CDX, CDX Structured, iTraxx, iTraxx    *\n* Structured                                                   *\n*                                                              *\n* Equity:                                                      *\n* S&P500 or other index                                        *\n*                                                              *\n* Commodity:                                                   *\n* Non-precious, Precious, Oil, Natural Gas, Coal, Electricity, *\n* Inter-Energy, Grains, Oils Seeds, Dairy, Livestock,          *\n* Forestry, Softs, Weather, Emissions, Warehouse receipts      *\n*                                                              *\n* Debt:                                                        *\n* Bill, Bond, Note, Floating rate, Strip, Index linked,        *\n* Discount note, Mortgage backed, Benchmark note.              *\n*                                                              *\n* Other values may be used by mutual agreement of the          *\n* counterparties.                                              *\n****************************************************************\n*/\n  UnderlyingAssetType = 2015,\n/*\n****************************************************************\n* The type or classification of swap. Additional values may be *\n* used by mutual agreement of the counterparties.              *\n****************************************************************\n*/\n  UnderlyingSwapClass = 2016,\n/*\n**************************************************************\n* The Nth reference obligation to default in a CDS reference *\n* basket. If specified without UnderlyingMthToDefault(2018)  *\n* the default will trigger a CDS payout.  If                 *\n* UnderlyingMthToDefault(2018) is also present then payout   *\n* occurs between the Nth and Mth obligations to default.     *\n**************************************************************\n*/\n  UnderlyingNthToDefault = 2017,\n/*\n**************************************************************\n* The Mth reference obligation to default in a CDS reference *\n* basket. When UnderlyingNthToDefault(2017) and              *\n* UnderlyingMthToDefault(2018) are represented then the CDS  *\n* payout occurs between the Nth and Mth obligations to       *\n* default.                                                   *\n**************************************************************\n*/\n  UnderlyingMthToDefault = 2018,\n/*\n******************************************\n* Relevant settled entity matrix source. *\n******************************************\n*/\n  UnderlyingSettledEntityMatrixSource = 2019,\n/*\n****************************************************************\n* Specifies the publication date of the applicable version of  *\n* the matrix. If not specified, the Standard Terms Supplement  *\n* defines rules for which version of the matrix is applicable. *\n****************************************************************\n*/\n  UnderlyingSettledEntityMatrixPublicationDate = 2020,\n/*\n****************************************************************\n* Used for derivatives. Multiplier applied to the strike price *\n* for the purpose of calculating the settlement value.         *\n****************************************************************\n*/\n  UnderlyingStrikeMultiplier = 2021,\n/*\n************************************************************\n* Used for derivatives. The number of shares/units for the *\n* financial instrument involved in the option trade.       *\n************************************************************\n*/\n  UnderlyingStrikeValue = 2022,\n/*\n****************************************************************\n* Specifies how the strike price is determined at the point of *\n* option exercise. The strike may be fixed throughout the life *\n* of the option, set at expiration to the value of the         *\n* underlying, set to the average value of the underlying , or  *\n* set to the optimal value of the underlying.                  *\n****************************************************************\n*/\n  UnderlyingStrikePriceDeterminationMethod = 2023,\n/*\n**************************************************************\n* Specifies the boundary condition to be used for the strike *\n* price relative to the underlying price at the point of     *\n* option exercise.                                           *\n**************************************************************\n*/\n  UnderlyingStrikePriceBoundaryMethod = 2024,\n/*\n***************************************************************\n* Used in combination with StrikePriceBoundaryMethod(1479) to *\n* specify the percentage of the strike price in relation to   *\n* the underlying price. The percentage is generally 100 or    *\n* greater for puts and 100 or less for calls.                 *\n***************************************************************\n*/\n  UnderlyingStrikePriceBoundaryPrecision = 2025,\n/*\n*************************************************************\n* Minimum price increment for the instrument. Could also be *\n* used to represent tick value.                             *\n*************************************************************\n*/\n  UnderlyingMinPriceIncrement = 2026,\n/*\n**************************************************************\n* Minimum price increment amount associated with the         *\n* UnderlyingMinPriceIncrement(2026). For listed derivatives, *\n* the value can be calculated by multiplying                 *\n* UnderlyingMinPriceIncrement(2026) by                       *\n* UnderlyingContractMultiplier(436).                         *\n**************************************************************\n*/\n  UnderlyingMinPriceIncrementAmount = 2027,\n/*\n*********************************************************\n* Indicates the type of payout that will result from an *\n* in-the-money option.                                  *\n*********************************************************\n*/\n  UnderlyingOptPayoutType = 2028,\n/*\n*********************************************************\n* Cash amount indicating the pay out associated with an *\n* option. For binary options this is a fixed amount.    *\n*********************************************************\n*/\n  UnderlyingOptPayoutAmount = 2029,\n/*\n*******************************\n* Method for price quotation. *\n*******************************\n*/\n  UnderlyingPriceQuoteMethod = 2030,\n/*\n********************************************\n* Indicates type of valuation method used. *\n********************************************\n*/\n  UnderlyingValuationMethod = 2031,\n/*\n****************************************************************\n* Indicates whether the instruments are pre-listed only or can *\n* also be defined via user request.                            *\n****************************************************************\n*/\n  UnderlyingListMethod = 2032,\n/*\n*******************************************************\n* Used to express the ceiling price of a capped call. *\n*******************************************************\n*/\n  UnderlyingCapPrice = 2033,\n/*\n****************************************************\n* Used to express the floor price of a capped put. *\n****************************************************\n*/\n  UnderlyingFloorPrice = 2034,\n/*\n***************************************************************\n* Used to indicate if a security has been defined as flexible *\n* according to \"non-standard\" means. Analog to CFICode        *\n* Standard/Non-standard indicator.                            *\n***************************************************************\n*/\n  UnderlyingFlexibleIndicator = 2035,\n/*\n**************************************************************\n* Used to indicate if a product or group of product supports *\n* the creation of flexible securities.                       *\n**************************************************************\n*/\n  UnderlyingFlexProductEligibilityIndicator = 2036,\n/*\n**************************************\n* Position limit for the instrument. *\n**************************************\n*/\n  UnderlyingPositionLimit = 2037,\n/*\n********************************************************\n* Position Limit in the near-term contract for a given *\n* exchange-traded product.                             *\n********************************************************\n*/\n  UnderlyingNTPositionLimit = 2038,\n/*\n****************************************************************\n* Identifies the mortgage backed security (MBS) / asset backed *\n* security (ABS) pool.                                         *\n****************************************************************\n*/\n  UnderlyingPool = 2039,\n/*\n***********************************************************\n* Specifies when the contract (i.e. MBS/TBA) will settle. *\n* Must be present for MBS/TBA.                            *\n***********************************************************\n*/\n  UnderlyingContractSettlMonth = 2040,\n/*\n*********************************\n* If different from IssueDate() *\n*********************************\n*/\n  UnderlyingDatedDate = 2041,\n/*\n*********************************************\n* If different from IssueDate and DatedDate *\n*********************************************\n*/\n  UnderlyingInterestAccrualDate = 2042,\n/*\n**************************************************************\n* Indicates whether a restriction applies to short selling a *\n* security.                                                  *\n**************************************************************\n*/\n  UnderlyingShortSaleRestriction = 2043,\n/*\n*********************************************************\n* Spread table code referred by the security or symbol. *\n*********************************************************\n*/\n  UnderlyingRefTickTableID = 2044,\n/*\n*****************************************\n* Identifies the type of complex event. *\n*****************************************\n*/\n  UnderlyingComplexEventType = 2046,\n/*\n****************************************************************\n* Cash amount indicating the pay out associated with an event. *\n* For binary options this is a fixed amount.                   *\n****************************************************************\n*/\n  UnderlyingComplexOptPayoutAmount = 2047,\n/*\n****************************************************************\n* Specifies the price at which the complex event takes effect. *\n* Impact of the event price is determined by the               *\n* UnderlyingComplexEventType(2046).                            *\n****************************************************************\n*/\n  UnderlyingComplexEventPrice = 2048,\n/*\n****************************************************************\n* Specifies the boundary condition to be used for the event    *\n* price relative to the UnderlyingComplexEventPrice(2048) at   *\n* the point the complex event outcome takes effect as          *\n* determined by the UnderlyingComplexEventPriceTimeType(2051). *\n****************************************************************\n*/\n  UnderlyingComplexEventPriceBoundaryMethod = 2049,\n/*\n****************************************************************\n* Used in combination with                                     *\n* UnderlyingComplexEventPriceBoundaryMethod(2049) to specify   *\n* the percentage of the strike price in relation to the        *\n* underlying price. The percentage is generally 100 or greater *\n* for puts and 100 or less for calls.                          *\n****************************************************************\n*/\n  UnderlyingComplexEventPriceBoundaryPrecision = 2050,\n/*\n***************************************************************\n* Specifies when the complex event outcome takes effect. The  *\n* outcome of a complex event is a payout or barrier action as *\n* specified by the UnderlyingComplexEventType(2046).          *\n***************************************************************\n*/\n  UnderlyingComplexEventPriceTimeType = 2051,\n/*\n***************************************************************\n* Specifies the condition between complex events when more    *\n* than one event is specified.                                *\n*                                                             *\n* Multiple barrier events would use an \"or\" condition since   *\n* only one can be effective at a given time. A set of digital *\n* range events would use an \"and\" condition since both        *\n* conditions must be in effect for a payout to result.        *\n***************************************************************\n*/\n  UnderlyingComplexEventCondition = 2052,\n/*\n****************************************************************\n* The start date of the date range on which a complex event is *\n* effective. The start date will be set equal to the end date  *\n* for single day events such as Bermuda options.               *\n* The start date must always be less than or equal to end      *\n* date.                                                        *\n****************************************************************\n*/\n  UnderlyingComplexEventStartDate = 2054,\n/*\n***************************************************************\n* The end date of the date range on which a complex event is  *\n* effective. The start date will be set equal to the end date *\n* for single day events such as Bermuda options.              *\n* UnderlyingComplexEventEndDate(2056) must always be greater  *\n* than or equal to UnderlyingComplexEventStartDate(2055).     *\n***************************************************************\n*/\n  UnderlyingComplexEventEndDate = 2055,\n/*\n*************************************************************\n* The start time of the time range on which a complex event *\n* date is effective.                                        *\n* UnderlyingComplexEventStartTime(2057) must always be less *\n* than or equal to UndelryingComplexEventEndTime(2058).     *\n*************************************************************\n*/\n  UnderlyingComplexEventStartTime = 2057,\n/*\n****************************************************************\n* The end time of the time range on which a complex event date *\n* is effective.                                                *\n* UnderlyingComplexEventEndTime(2058) must always be greater   *\n* than or equal to UnderlyingComplexEventStartTime(2057).      *\n****************************************************************\n*/\n  UnderlyingComplexEventEndTime = 2058,\n/*\n****************************************\n* Code to represent the type of event. *\n****************************************\n*/\n  LegEventType = 2060,\n/*\n**************************\n* The date of the event. *\n**************************\n*/\n  LegEventDate = 2061,\n/*\n**********************************************************\n* Specific time of event. To be used in combination with *\n* LegEventDate(2061).                                    *\n**********************************************************\n*/\n  LegEventTime = 2062,\n/*\n****************************************\n* Time unit associated with the event. *\n****************************************\n*/\n  LegEventTimeUnit = 2063,\n/*\n***************************************\n* Time unit multiplier for the event. *\n***************************************\n*/\n  LegEventTimePeriod = 2064,\n/*\n*********************************************************\n* Predetermined price of issue at event, if applicable. *\n*********************************************************\n*/\n  LegEventPx = 2065,\n/*\n**********************************************************\n* Free form text to specify additional information or    *\n* enumeration description when a standard value does not *\n* apply.                                                 *\n**********************************************************\n*/\n  LegEventText = 2066,\n/*\n*********************************************************\n* The broad asset category for assessing risk exposure. *\n*********************************************************\n*/\n  LegAssetClass = 2067,\n/*\n***********************************************************\n* The general subcategory description of the asset class. *\n***********************************************************\n*/\n  LegAssetSubClass = 2068,\n/*\n****************************************************************\n* Within the asset subclass this can be used to provide more   *\n* specific description of the asset.                           *\n* Recommended values include:                                  *\n*                                                              *\n* Interest Rate:                                               *\n* LIBOR or other floating rate index if appropriate            *\n* For multi-currency IRS there are two currencies - specify    *\n* the riskier ISO 4217 Currency Code in primary fields and the *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields.                                                      *\n*                                                              *\n* Currency:                                                    *\n* ISO 4217 Currency Code                                       *\n* G7, G20, etc. for standard \"grouping\" of currencies          *\n* For cross-currency swaps there are two currencies, so        *\n* specify the riskier Currency Code in primary fields and the  *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields. If settlement is to be in \"any G7\" currency, specify *\n* \"G7\" in secondary field.                                     *\n*                                                              *\n* Credit:                                                      *\n* Corporate, Sovereign, CDX, CDX Structured, iTraxx, iTraxx    *\n* Structured                                                   *\n*                                                              *\n* Equity:                                                      *\n* S&P500 or other index                                        *\n*                                                              *\n* Commodity:                                                   *\n* Non-precious, Precious, Oil, Natural Gas, Coal, Electricity, *\n* Inter-Energy, Grains, Oils Seeds, Dairy, Livestock,          *\n* Forestry, Softs, Weather, Emissions, Warehouse receipts      *\n*                                                              *\n* Debt:                                                        *\n* Bill, Bond, Note, Floating rate, Strip, Index linked,        *\n* Discount note, Mortgage backed, Benchmark note.              *\n*                                                              *\n* Other values may be used by mutual agreement of the          *\n* counterparties.                                              *\n****************************************************************\n*/\n  LegAssetType = 2069,\n/*\n**************\n* Swap type. *\n**************\n*/\n  LegSwapClass = 2070,\n/*\n************************************************************\n* Free form text to specify comments related to the event. *\n************************************************************\n*/\n  UnderlyingEventText = 2071,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedUnderlyingEventText(2073) field.       *\n*************************************************\n*/\n  EncodedUnderlyingEventTextLen = 2072,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* UnderlyingEventText(2071) field in the encoded format       *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the UnderlyingEventText(2071) field.                        *\n***************************************************************\n*/\n  EncodedUnderlyingEventText = 2073,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedLegEventText(2075) field.              *\n*************************************************\n*/\n  EncodedLegEventTextLen = 2074,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* LegEventText(2066) field in the encoded format specified via *\n* the MessageEncoding (347) field. If used, the ASCII          *\n* (English) representation should also be specified in the     *\n* LegEventText(2066) field.                                    *\n****************************************************************\n*/\n  EncodedLegEventText = 2075,\n/*\n**************************************************************\n* The broad asset category for assessing risk exposure for a *\n* multi-asset trade.                                         *\n**************************************************************\n*/\n  LegSecondaryAssetClass = 2077,\n/*\n****************************************************************\n* An indication of the general description of the asset class. *\n****************************************************************\n*/\n  LegSecondaryAssetSubClass = 2078,\n/*\n****************************************************************\n* Within the asset subclass this can be used to provide more   *\n* specific description of the asset.                           *\n* Recommended values include:                                  *\n*                                                              *\n* Interest Rate:                                               *\n* LIBOR or other floating rate index if appropriate            *\n* For multi-currency IRS there are two currencies - specify    *\n* the riskier ISO 4217 Currency Code in primary fields and the *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields.                                                      *\n*                                                              *\n* Currency:                                                    *\n* ISO 4217 Currency Code                                       *\n* G7, G20, etc. for standard \"grouping\" of currencies          *\n* For cross-currency swaps there are two currencies, so        *\n* specify the riskier Currency Code in primary fields and the  *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields. If settlement is to be in \"any G7\" currency, specify *\n* \"G7\" in secondary field.                                     *\n*                                                              *\n* Credit:                                                      *\n* Corporate, Sovereign, CDX, CDX Structured, iTraxx, iTraxx    *\n* Structured                                                   *\n*                                                              *\n* Equity:                                                      *\n* S&P500 or other index                                        *\n*                                                              *\n* Commodity:                                                   *\n* Non-precious, Precious, Oil, Natural Gas, Coal, Electricity, *\n* Inter-Energy, Grains, Oils Seeds, Dairy, Livestock,          *\n* Forestry, Softs, Weather, Emissions, Warehouse receipts      *\n*                                                              *\n* Debt:                                                        *\n* Bill, Bond, Note, Floating rate, Strip, Index linked,        *\n* Discount note, Mortgage backed, Benchmark note.              *\n*                                                              *\n* Other values may be used by mutual agreement of the          *\n* counterparties.                                              *\n****************************************************************\n*/\n  LegSecondaryAssetType = 2079,\n/*\n**************************************************************\n* The broad asset category for assessing risk exposure for a *\n* multi-asset trade.                                         *\n**************************************************************\n*/\n  UnderlyingSecondaryAssetClass = 2081,\n/*\n****************************************************************\n* An indication of the general description of the asset class. *\n****************************************************************\n*/\n  UnderlyingSecondaryAssetSubClass = 2082,\n/*\n****************************************************************\n* Within the asset subclass this can be used to provide more   *\n* specific description of the asset.                           *\n* Recommended values include:                                  *\n*                                                              *\n* Interest Rate:                                               *\n* LIBOR or other floating rate index if appropriate            *\n* For multi-currency IRS there are two currencies - specify    *\n* the riskier ISO 4217 Currency Code in primary fields and the *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields.                                                      *\n*                                                              *\n* Currency:                                                    *\n* ISO 4217 Currency Code                                       *\n* G7, G20, etc. for standard \"grouping\" of currencies          *\n* For cross-currency swaps there are two currencies, so        *\n* specify the riskier Currency Code in primary fields and the  *\n* less risky Currency Code or home Currency Code in secondary  *\n* fields. If settlement is to be in \"any G7\" currency, specify *\n* \"G7\" in secondary field.                                     *\n*                                                              *\n* Credit:                                                      *\n* Corporate, Sovereign, CDX, CDX Structured, iTraxx, iTraxx    *\n* Structured                                                   *\n*                                                              *\n* Equity:                                                      *\n* S&P500 or other index                                        *\n*                                                              *\n* Commodity:                                                   *\n* Non-precious, Precious, Oil, Natural Gas, Coal, Electricity, *\n* Inter-Energy, Grains, Oils Seeds, Dairy, Livestock,          *\n* Forestry, Softs, Weather, Emissions, Warehouse receipts      *\n*                                                              *\n* Debt:                                                        *\n* Bill, Bond, Note, Floating rate, Strip, Index linked,        *\n* Discount note, Mortgage backed, Benchmark note.              *\n*                                                              *\n* Other values may be used by mutual agreement of the          *\n* counterparties.                                              *\n****************************************************************\n*/\n  UnderlyingSecondaryAssetType = 2083,\n/*\n***************************************************\n* The date of the previous clearing business day. *\n***************************************************\n*/\n  PreviousClearingBusinessDate = 2084,\n/*\n************************************\n* The valuation date of the trade. *\n************************************\n*/\n  ValuationDate = 2085,\n/*\n************************************\n* The valuation time of the trade. *\n************************************\n*/\n  ValuationTime = 2086,\n/*\n*************************************************************\n* Identifies the business center whose calendar is used for *\n* valuation, e.g. \"GLOB\". See                               *\n* http://www.fpml.org/coding-scheme/business-center for     *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  ValuationBusinessCenter = 2087,\n/*\n*************************************************************\n* Foreign exchange rate used to compute the MarginAmt(1645) *\n* from the MarginAmtCcy(1646) and the Currency(15).         *\n*************************************************************\n*/\n  MarginAmtFXRate = 2088,\n/*\n************************************************************\n* Specifies whether or not MarginAmtFXRate(2088) should be *\n* multipled or divided.                                    *\n************************************************************\n*/\n  MarginAmtFXRateCalc = 2089,\n/*\n**************************************************\n* Foreign exchange rate used to compute the      *\n* CurrentCollateralAmount(1704) from the         *\n* CollateralCurrency(1646) and the Currency(15). *\n**************************************************\n*/\n  CollateralFXRate = 2090,\n/*\n*************************************************************\n* Specifies whether or not CollateralFXRate(2090) should be *\n* multipled or divided.                                     *\n*************************************************************\n*/\n  CollateralFXRateCalc = 2091,\n/*\n*********************************************************\n* Market segment associated with the collateral amount. *\n*********************************************************\n*/\n  CollateralAmountMarketSegmentID = 2092,\n/*\n*************************************************\n* Market associated with the collateral amount. *\n*************************************************\n*/\n  CollateralAmountMarketID = 2093,\n/*\n****************************************************************\n* Foreign exchange rate used to compute the PayAmount(1710) or *\n* CollectAmount(1711) from the PayCollectCurrency(1709) and    *\n* the Currency(15).                                            *\n****************************************************************\n*/\n  PayCollectFXRate = 2094,\n/*\n*************************************************************\n* Specifies whether or not PayCollectFXRate(2094) should be *\n* multipled or divided.                                     *\n*************************************************************\n*/\n  PayCollectFXRateCalc = 2095,\n/*\n********************************************************\n* Corresponds to the value in StreamDesc(40051) in the *\n* StreamGrp component.                                 *\n********************************************************\n*/\n  PosAmtStreamDesc = 2096,\n/*\n**************************************************************\n* Foreign exchange rate used to compute the PosAmt(708) from *\n* the PositionCurrency(1055) and the Currency (15).          *\n**************************************************************\n*/\n  PositionFXRate = 2097,\n/*\n***********************************************************\n* Specifies whether or not PositionFXRate(2097) should be *\n* multipled or divided.                                   *\n***********************************************************\n*/\n  PositionFXRateCalc = 2098,\n/*\n*******************************************************\n* Market segment associated with the position amount. *\n*******************************************************\n*/\n  PosAmtMarketSegmentID = 2099,\n/*\n***********************************************\n* Market associated with the position amount. *\n***********************************************\n*/\n  PosAmtMarketID = 2100,\n/*\n**************************************************\n* Indicates if the position has been terminated. *\n**************************************************\n*/\n  TerminatedIndicator = 2101,\n/*\n****************************************************************\n* Indicates whether the originating account is exempt (Y) from *\n* marking orders as short or not (N). This designation may be  *\n* used on both buy and sell orders.                            *\n****************************************************************\n*/\n  ShortMarkingExemptIndicator = 2102,\n/*\n****************************************************************\n* Specifies the identifier of the reporting entity as assigned *\n* by regulatory agency.                                        *\n****************************************************************\n*/\n  RelatedRegulatoryTradeIDSource = 2103,\n/*\n**********************************************\n* Specifies the file name of the attachment. *\n**********************************************\n*/\n  AttachmentName = 2105,\n/*\n*****************************************************************************\n* The MIME media type (and optional subtype) of the                         *\n* attachment.  The values used are those assigned, listed and               *\n* maintained by IANA (www.iana.org) [RFC2046]. See                          *\n* http://www.iana.org/assignments/media-types/index.html for                *\n* available types.                                                          *\n*                                                                           *\n*                                                                           *\n* Examples values (RFC number provided for reference here                   *\n* only):                                                                    *\n* \"application/pdf\" (see [RFC3778])                                         *\n* \"application/msword\" (for .doc files)                                     *\n* \"multipart/signed\" (see [RFC1847])                                        *\n* \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" *\n* (for .docx files)                                                         *\n*****************************************************************************\n*/\n  AttachmentMediaType = 2106,\n/*\n****************************************************************\n* Specifies  semantically the type of the attached document    *\n* from a business perspective. The default classification      *\n* scheme reuses the FIX standard classification scheme of a    *\n* high level section (pretrade, trade, posttrade, etc.) and a  *\n* category, then a specific application or document type. The  *\n* expression follows {\"section/category/application type\"}.    *\n*                                                              *\n* The goal here is to map the attachment into the sections and *\n* categories of the FIX business messages if possible. The     *\n* classification scheme can be expanded or replaced by         *\n* counterparty agreement. This approach permits the            *\n* introduction and reference to other business ontologies.     *\n*                                                              *\n* Example:                                                     *\n* posttrade/confirmation/confirm                               *\n* pretrade//termsheet                                          *\n****************************************************************\n*/\n  AttachmentClassification = 2107,\n/*\n***************************************************************\n* Used to specify an external URL where the attachment can be *\n* obtained.                                                   *\n***************************************************************\n*/\n  AttachmentExternalURL = 2108,\n/*\n************************************************\n* The encoding type of the content provided in *\n* EncodedAttachment(2112).                     *\n************************************************\n*/\n  AttachmentEncodingType = 2109,\n/*\n**************************************************************\n* Unencoded content length in bytes. Can be used to validate *\n* successful unencoding.                                     *\n**************************************************************\n*/\n  UnencodedAttachmentLen = 2110,\n/*\n*************************************************************\n* Byte length of encoded the EncodedAttachment(2112) field. *\n*************************************************************\n*/\n  EncodedAttachmentLen = 2111,\n/*\n********************************************************\n* The content of the attachment in the encoding format *\n* specified in the AttachmentEncodingType(2109) field. *\n********************************************************\n*/\n  EncodedAttachment = 2112,\n/*\n*********************************************************\n* Can be used to provide data or keyword tagging of the *\n* content of the attachment.                            *\n*********************************************************\n*/\n  AttachmentKeyword = 2114,\n/*\n************************************************\n* Specifies the negotiation method to be used. *\n************************************************\n*/\n  NegotiationMethod = 2115,\n/*\n*********************************\n* The time of the next auction. *\n*********************************\n*/\n  NextAuctionTime = 2116,\n/*\n*******************************\n* Trade side of payout payer. *\n*******************************\n*/\n  ComplexOptPayoutPaySide = 2117,\n/*\n**********************************\n* Trade side of payout receiver. *\n**********************************\n*/\n  ComplexOptPayoutReceiveSide = 2118,\n/*\n**************************************************************\n* Reference to the underlier whose payments are being passed *\n* through.                                                   *\n**************************************************************\n*/\n  ComplexOptPayoutUnderlier = 2119,\n/*\n***********************************************************\n* Percentage of observed price for calculating the payout *\n* associated with the event.                              *\n***********************************************************\n*/\n  ComplexOptPayoutPercentage = 2120,\n/*\n******************************************\n* Specifies when the payout is to occur. *\n******************************************\n*/\n  ComplexOptPayoutTime = 2121,\n/*\n**************************************************************\n* Specifies the currency of the payout amount. Uses ISO 4217 *\n* currency codes.                                            *\n**************************************************************\n*/\n  ComplexOptPayoutCurrency = 2122,\n/*\n****************************************************************\n* Specifies the price percentage at which the complex event    *\n* takes effect. Impact of the event price is determined by the *\n* ComplexEventType(1484).                                      *\n****************************************************************\n*/\n  ComplexEventPricePercentage = 2123,\n/*\n****************************************************************\n* Specifies the first or only reference currency of the trade. *\n* Uses ISO 4217 currency codes.                                *\n****************************************************************\n*/\n  ComplexEventCurrencyOne = 2124,\n/*\n*************************************************************\n* Specifies the second reference currencyof the trade. Uses *\n* ISO 4217 currency codes.                                  *\n*************************************************************\n*/\n  ComplexEventCurrencyTwo = 2125,\n/*\n***********************************************\n* For foreign exchange Quanto option feature. *\n***********************************************\n*/\n  ComplexEventQuoteBasis = 2126,\n/*\n**********************************************************\n* Specifies the fixed FX rate alternative for FX Quantro *\n* options.                                               *\n**********************************************************\n*/\n  ComplexEventFixedFXRate = 2127,\n/*\n***************************************************************\n* Specifies the method according to which an amount or a date *\n* is determined.                                              *\n* See http://www.fpml.org/coding-scheme/determination-method  *\n* for values.                                                 *\n***************************************************************\n*/\n  ComplexEventDeterminationMethod = 2128,\n/*\n*******************************************\n* Used to identify the calculation agent. *\n*******************************************\n*/\n  ComplexEventCalculationAgent = 2129,\n/*\n*******************************************************\n* Upper strike price for Asian option feature. Strike *\n* percentage for a Strike Spread.                     *\n*******************************************************\n*/\n  ComplexEventStrikePrice = 2130,\n/*\n********************************************************\n* Strike factor for Asian option feature. Upper strike *\n* percentage for a Strike Spread.                      *\n********************************************************\n*/\n  ComplexEventStrikeFactor = 2131,\n/*\n*******************************************************\n* Upper string number of options for a Strike Spread. *\n*******************************************************\n*/\n  ComplexEventStrikeNumberOfOptions = 2132,\n/*\n*************************************************************\n* Reference to credit event table elsewhere in the message. *\n*************************************************************\n*/\n  ComplexEventCreditEventsXIDRef = 2133,\n/*\n***************************************************************\n* The notifying party is the party that notifies the other    *\n* party when a credit event has occurred by means of a credit *\n* event notice. If more than one party is referenced as being *\n* the notifying party then either party may notify the other  *\n* of a credit event occurring.                                *\n***************************************************************\n*/\n  ComplexEventCreditEventNotifyingParty = 2134,\n/*\n****************************************************************\n* The local business center for which the credit event is to   *\n* be determined. The inclusion of this business center implies *\n* that Greenwich Mean Time in Section 3.3 of the 2003 ISDA     *\n* Credit Derivatives Definitions is replaced by the local time *\n* of the specified business center.                            *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  ComplexEventCreditEventBusinessCenter = 2135,\n/*\n*************************************************************\n* When this element is specified and set to 'Y', indicates  *\n* that ISDA defined Standard Public Sources are applicable. *\n*************************************************************\n*/\n  ComplexEventCreditEventStandardSources = 2136,\n/*\n**********************************************************\n* The minimum number of the specified public information *\n* sources that must publish information that reasonably  *\n* confirms that a credit event has occurred. The market  *\n* convention is two.                                     *\n**********************************************************\n*/\n  ComplexEventCreditEventMinimumSources = 2137,\n/*\n**********************************************************\n* Identifier of this complex event for cross referencing *\n* elsewhere in the message.                              *\n**********************************************************\n*/\n  ComplexEventXID = 2138,\n/*\n**********************************************************\n* Reference to a complex event elsewhere in the message. *\n**********************************************************\n*/\n  ComplexEventXIDRef = 2139,\n/*\n********************************************************\n* Specifies the methodology and/or assumptions used to *\n* generate the  trade value.                           *\n********************************************************\n*/\n  ValuationReferenceModel = 2140,\n/*\n*****************************************\n* Specifies the type of trade strategy. *\n*****************************************\n*/\n  StrategyType = 2141,\n/*\n***************************************************************\n* When this element is specified and set to 'Y', it indicates *\n* that common pricing applies. Common pricing may be relevant *\n* for a transaction that references more than one commodity   *\n* reference price.                                            *\n***************************************************************\n*/\n  CommonPricingIndicator = 2142,\n/*\n***************************************************************\n* Specifies the consequences of bullion settlement disruption *\n* events.                                                     *\n***************************************************************\n*/\n  SettlDisruptionProvision = 2143,\n/*\n******************************************************\n* Specifies the rounding direction if not overridden *\n* elsewhere.                                         *\n******************************************************\n*/\n  InstrumentRoundingDirection = 2144,\n/*\n*************************************************************\n* Specifies the rounding precision in terms of a number of  *\n* decimal places. Note how a percentage rate rounding of 5  *\n* decimal places is expressed as a rounding precision of 7. *\n*************************************************************\n*/\n  InstrumentRoundingPrecision = 2145,\n/*\n************************************************************\n* Indicator to determine if the instrument is to settle on *\n* open.                                                    *\n************************************************************\n*/\n  LegSettleOnOpenFlag = 2146,\n/*\n**************************************************************\n* Specifies the method under which assignment was conducted. *\n**************************************************************\n*/\n  LegInstrmtAssignmentMethod = 2147,\n/*\n**********************************************************\n* Used for derivatives. Denotes the current state of the *\n* InstrumentLeg.                                         *\n**********************************************************\n*/\n  LegSecurityStatus = 2148,\n/*\n***************************************************************\n* A category of CDS credit event in which the underlying bond *\n* experiences a restructuring.                                *\n* Used to define a CDS instrument.                            *\n***************************************************************\n*/\n  LegRestructuringType = 2149,\n/*\n****************************************************************\n* Specifies which issue (underlying bond) will receive payment *\n* priority in the event of a default.                          *\n* Used to define a CDS instrument.                             *\n****************************************************************\n*/\n  LegSeniority = 2150,\n/*\n****************************************************************\n* Indicates the notional percentage of the deal that is still  *\n* outstanding based on the remaining components of the index.  *\n* Used to calculate the true value of a CDS trade or position. *\n****************************************************************\n*/\n  LegNotionalPercentageOutstanding = 2151,\n/*\n***************************************************************\n* Used to reflect the Original value prior to the application *\n* of a credit event. See                                      *\n* LegNotionalPercentageOutstanding(2151).                     *\n***************************************************************\n*/\n  LegOriginalNotionalPercentageOutstanding = 2152,\n/*\n***********************************************************\n* Lower bound percentage of the loss that the tranche can *\n* endure.                                                 *\n***********************************************************\n*/\n  LegAttachmentPoint = 2153,\n/*\n**************************************************************\n* Upper bound percentage of the loss the tranche can endure. *\n**************************************************************\n*/\n  LegDetachmentPoint = 2154,\n/*\n*******************************************************\n* Type of reference obligation for credit derivatives *\n* contracts.                                          *\n*******************************************************\n*/\n  LegObligationType = 2155,\n/*\n*********************************************\n* The subclassification or subtype of swap. *\n*********************************************\n*/\n  LegSwapSubClass = 2156,\n/*\n**************************************************************\n* The Nth reference obligation in a CDS reference basket. If *\n* specified without LegMthToDefault(2158) the default will   *\n* trigger a CDS payout. If LegMthToDefault(2158) is also     *\n* present then payout occurs between the Nth and Mth         *\n* obligations to default.                                    *\n**************************************************************\n*/\n  LegNthToDefault = 2157,\n/*\n****************************************************************\n* The Mth reference obligation to default in a CDS reference   *\n* basket. When an NthToDefault(2157) to MthToDefault(2158) are *\n* represented then the CDS payout occurs between the Nth and   *\n* Mth obligations to default.                                  *\n****************************************************************\n*/\n  LegMthToDefault = 2158,\n/*\n******************************************\n* Relevant settled entity matrix source. *\n******************************************\n*/\n  LegSettledEntityMatrixSource = 2159,\n/*\n***************************************************************\n* The publication date of the applicable version of the       *\n* matrix. When this element is omitted, the Standard Terms    *\n* Supplement defines rules for which version of the matrix is *\n* applicable.                                                 *\n***************************************************************\n*/\n  LegSettledEntityMatrixPublicationDate = 2160,\n/*\n******************************************\n* Specifies the coupon type of the bond. *\n******************************************\n*/\n  LegCouponType = 2161,\n/*\n***************************************************************\n* Specifies the total amount of the issue. Corresponds to the *\n* par value multiplied by the number of issued security.      *\n***************************************************************\n*/\n  LegTotalIssuedAmount = 2162,\n/*\n***************************************************************\n* Time unit multiplier for the frequency of the bond's coupon *\n* payment.                                                    *\n***************************************************************\n*/\n  LegCouponFrequencyPeriod = 2163,\n/*\n****************************************************************\n* Time unit associated with the frequency of the bond's coupon *\n* payment.                                                     *\n****************************************************************\n*/\n  LegCouponFrequencyUnit = 2164,\n/*\n****************************************************************\n* The day count convention used in interest calculations for a *\n* bond or an interest bearing security.                        *\n****************************************************************\n*/\n  LegCouponDayCount = 2165,\n/*\n************************************************************\n* Identifies the equity in which a convertible bond can be *\n* converted to.                                            *\n************************************************************\n*/\n  LegConvertibleBondEquityID = 2166,\n/*\n***************************************************\n* Identifies class or source of the               *\n* LegConvertibleBondEquitySecurityID(2166) value. *\n***************************************************\n*/\n  LegConvertibleBondEquityIDSource = 2167,\n/*\n*******************************************************\n* Reference month if there is no applicable           *\n* LegMaturityMonthYear(610) value for the contract or *\n* security.                                           *\n*******************************************************\n*/\n  LegContractPriceRefMonth = 2168,\n/*\n********************************************************\n* Indicates the seniority level of the lien in a loan. *\n********************************************************\n*/\n  LegLienSeniority = 2169,\n/*\n*************************************************************\n* Specifies the type of loan when the credit default swap's *\n* reference obligation is a loan.                           *\n*************************************************************\n*/\n  LegLoanFacility = 2170,\n/*\n***************************************************************\n* Specifies the type of reference entity for first-to-default *\n* CDS basket contracts.                                       *\n***************************************************************\n*/\n  LegReferenceEntityType = 2171,\n/*\n*********************************************************\n* The series identifier of a credit default swap index. *\n*********************************************************\n*/\n  LegIndexSeries = 2172,\n/*\n*****************************************************\n* The version of a credit default swap index annex. *\n*****************************************************\n*/\n  LegIndexAnnexVersion = 2173,\n/*\n*********************************************************\n* The date of a credit default swap index series annex. *\n*********************************************************\n*/\n  LegIndexAnnexDate = 2174,\n/*\n*****************************************************\n* The source of a credit default swap series annex. *\n*****************************************************\n*/\n  LegIndexAnnexSource = 2175,\n/*\n**********************************************************\n* In an outright or forward commodity trade that is cash *\n* settled this is the index used to determine the cash   *\n* payment.                                               *\n**********************************************************\n*/\n  LegSettlRateIndex = 2176,\n/*\n**************************************************************\n* This is an optional qualifying attribute of                *\n* LegSettlementRateIndex(2176) such as the delivery zone for *\n* an electricity contract.                                   *\n**************************************************************\n*/\n  LegSettlRateIndexLocation = 2177,\n/*\n*****************************************\n* Description of the option expiration. *\n*****************************************\n*/\n  LegOptionExpirationDesc = 2178,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedLegOptionExpirationDesc(2180) field.   *\n*************************************************\n*/\n  EncodedLegOptionExpirationDescLen = 2179,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* LegOptionExpirationDesc(2178) field in the encoded format   *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the LegOptionExpirationDesc(2178).                          *\n***************************************************************\n*/\n  EncodedLegOptionExpirationDesc = 2180,\n/*\n****************************************************************\n* Used for derivatives. Multiplier applied to the strike price *\n* for the purpose of calculating the settlement value.         *\n****************************************************************\n*/\n  LegStrikeMultiplier = 2181,\n/*\n***********************************************************\n* The number of shares/units for the financial instrument *\n* involved in the option trade. Used for derivatives.     *\n***********************************************************\n*/\n  LegStrikeValue = 2182,\n/*\n*************************************************************\n* Used to express the unit of measure (UOM) of the price if *\n* different from the contract.                              *\n*************************************************************\n*/\n  LegStrikeUnitOfMeasure = 2183,\n/*\n***********************************************************\n* Specifies the index used to calculate the strike price. *\n***********************************************************\n*/\n  LegStrikeIndex = 2184,\n/*\n***********************************************************\n* Specifies the strike price offset from the named index. *\n***********************************************************\n*/\n  LegStrikeIndexSpread = 2185,\n/*\n****************************************************************\n* Specifies how the strike price is determined at the point of *\n* option exercise. The strike may be fixed throughout the life *\n* of the option, set at expiration to the value of the         *\n* underlying, set to the average value of the underlying , or  *\n* set to the optimal value of the underlying.                  *\n****************************************************************\n*/\n  LegStrikePriceDeterminationMethod = 2186,\n/*\n**************************************************************\n* Specifies the boundary condition to be used for the strike *\n* price relative to the underlying price at the point of     *\n* option exercise.                                           *\n**************************************************************\n*/\n  LegStrikePriceBoundaryMethod = 2187,\n/*\n***************************************************************\n* Used in combination with StrikePriceBoundaryMethod(2187) to *\n* specify the percentage of the strike price in relation to   *\n* the underlying price. The percentage is generally 100 or    *\n* greater for puts and 100 or less for calls.                 *\n***************************************************************\n*/\n  LegStrikePriceBoundaryPrecision = 2188,\n/*\n****************************************************************\n* Specifies how the underlying price is determined at the      *\n* point of option exercise. The underlying price may be set to *\n* the current settlement price, set to a special reference,    *\n* set to the optimal value of the underlying during the        *\n* defined period (\"Look-back\") or set to the average value of  *\n* the underlying during the defined period (\"Asian option\").   *\n****************************************************************\n*/\n  LegUnderlyingPriceDeterminationMethod = 2189,\n/*\n************************************************************\n* Minimum price increment for a given exchange-traded      *\n* instrument.  Could also be used to represent tick value. *\n************************************************************\n*/\n  LegMinPriceIncrement = 2190,\n/*\n*************************************************************\n* Minimum price increment amount associated with the        *\n* LegMinPriceIncrement(2190). For listed derivatives, the   *\n* value can be calculated by multiplying                    *\n* LegMinPriceIncrement(2190) by LegContractMultiplier(614). *\n*************************************************************\n*/\n  LegMinPriceIncrementAmount = 2191,\n/*\n**************************************************************\n* Settlement method for a contract or instrument. Additional *\n* values may be used with bilateral agreement.               *\n**************************************************************\n*/\n  LegSettlMethod = 2192,\n/*\n*********************************************************\n* Indicates the type of payout that will result from an *\n* in-the-money option.                                  *\n*********************************************************\n*/\n  LegOptPayoutType = 2193,\n/*\n*********************************************************\n* Cash amount indicating the pay out associated with an *\n* option. For binary options this is a fixed amount.    *\n*********************************************************\n*/\n  LegOptPayoutAmount = 2194,\n/*\n*********************************************\n* Specifies the method for price quotation. *\n*********************************************\n*/\n  LegPriceQuoteMethod = 2195,\n/*\n***************************************************\n* Specifies the type of valuation method applied. *\n***************************************************\n*/\n  LegValuationMethod = 2196,\n/*\n*************************************************\n* Specifies the source of trade valuation data. *\n*************************************************\n*/\n  LegValuationSource = 2197,\n/*\n********************************************************\n* Specifies the methodology and/or assumptions used to *\n* generate the trade value.                            *\n********************************************************\n*/\n  LegValuationReferenceModel = 2198,\n/*\n************************************************************\n* Indicates whether instruments are pre-listed only or can *\n* also be defined via user request.                        *\n************************************************************\n*/\n  LegListMethod = 2199,\n/*\n*******************************************************\n* Used to express the ceiling price of a capped call. *\n*******************************************************\n*/\n  LegCapPrice = 2200,\n/*\n****************************************************\n* Used to express the floor price of a capped put. *\n****************************************************\n*/\n  LegFloorPrice = 2201,\n/*\n***************************************************************\n* Used to indicate a derivatives security that can be defined *\n* using flexible terms. The terms commonly permitted to be    *\n* defined by market participants are expiration date and      *\n* strike price. FlexibleIndicator is an alternative to        *\n* LegCFICode(608) Standard/Non-standard attribute.            *\n***************************************************************\n*/\n  LegFlexibleIndicator = 2202,\n/*\n**************************************************************\n* Used to indicate if a product or group of product supports *\n* the creation of flexible securities.                       *\n**************************************************************\n*/\n  LegFlexProductEligibilityIndicator = 2203,\n/*\n***************************************************************\n* The start time of the time range on which a complex event   *\n* date is effective.                                          *\n* The start time must always be less than or equal to the end *\n* time.                                                       *\n***************************************************************\n*/\n  LegComplexEventStartTime = 2204,\n/*\n*******************************************************\n* Position Limit for a given exchange-traded product. *\n*******************************************************\n*/\n  LegPositionLimit = 2205,\n/*\n********************************************************\n* Position limit in the near-term contract for a given *\n* exchange-traded product.                             *\n********************************************************\n*/\n  LegNTPositionLimit = 2206,\n/*\n*********************************************************\n* The program under which a commercial paper is issued. *\n*********************************************************\n*/\n  LegCPProgram = 2207,\n/*\n*********************************************************\n* The registration type of a commercial paper issuance. *\n*********************************************************\n*/\n  LegCPRegType = 2208,\n/*\n**************************************************************\n* Indicates whether a restriction applies to short selling a *\n* security.                                                  *\n**************************************************************\n*/\n  LegShortSaleRestriction = 2209,\n/*\n****************************************************************\n* Indicates the broad product or asset classification.  May be *\n* used to provide grouping for the product taxonomy            *\n* (Product(460), SecurityType(167), etc.) and/or the risk      *\n* taxonomy (AssetClass(1938), AssetSubClass(1939),             *\n* AssetType(1940), etc.).                                      *\n****************************************************************\n*/\n  AssetGroup = 2210,\n/*\n*****************************************\n* Specifies the type of trade strategy. *\n*****************************************\n*/\n  LegStrategyType = 2211,\n/*\n***************************************************************\n* When this element is specified and set to 'Y', it indicates *\n* that common pricing applies. Common pricing may be relevant *\n* for a transaction that references more than one commodity   *\n* reference price.                                            *\n***************************************************************\n*/\n  LegCommonPricingIndicator = 2212,\n/*\n***************************************************************\n* Specifies the consequences of bullion settlement disruption *\n* events.                                                     *\n***************************************************************\n*/\n  LegSettlDisruptionProvision = 2213,\n/*\n******************************************************\n* Specifies the rounding direction if not overridden *\n* elsewhere.                                         *\n******************************************************\n*/\n  LegInstrumentRoundingDirection = 2214,\n/*\n*************************************************************\n* Specifies the rounding precision in terms of a number of  *\n* decimal places. Note how a percentage rate rounding of 5  *\n* decimal places is expressed as a rounding precision of 7. *\n*************************************************************\n*/\n  LegInstrumentRoundingPrecision = 2215,\n/*\n**************************************************************\n* The fee rate when MiscFeeAmt(137) is a percentage of trade *\n* quantity.                                                  *\n**************************************************************\n*/\n  MiscFeeRate = 2216,\n/*\n*********************************************************\n* The fee amount due if different from MiscFeeAmt(137). *\n*********************************************************\n*/\n  MiscFeeAmountDue = 2217,\n/*\n*****************************************\n* Identifies the type of complex event. *\n*****************************************\n*/\n  LegComplexEventType = 2219,\n/*\n*******************************\n* Trade side of payout payer. *\n*******************************\n*/\n  LegComplexOptPayoutPaySide = 2220,\n/*\n**********************************\n* Trade side of payout receiver. *\n**********************************\n*/\n  LegComplexOptPayoutReceiveSide = 2221,\n/*\n**************************************************************\n* Reference to the underlier whose payments are being passed *\n* through.                                                   *\n**************************************************************\n*/\n  LegComplexOptPayoutUnderlier = 2222,\n/*\n****************************************************************\n* Cash amount indicating the pay out associated with an event. *\n* For binary options this is a fixed amount.                   *\n****************************************************************\n*/\n  LegComplexOptPayoutAmount = 2223,\n/*\n***********************************************************\n* Percentage of observed price for calculating the payout *\n* associated with the event.                              *\n***********************************************************\n*/\n  LegComplexOptPayoutPercentage = 2224,\n/*\n******************************************\n* Specifies when the payout is to occur. *\n******************************************\n*/\n  LegComplexOptPayoutTime = 2225,\n/*\n**************************************************************\n* Specifies the currency of the payout amount. Uses ISO 4217 *\n* currency codes.                                            *\n**************************************************************\n*/\n  LegComplexOptPayoutCurrency = 2226,\n/*\n****************************************************************\n* Specifies the price at which the complex event takes effect. *\n* Impact of the event price is determined by the               *\n* LegComplexEventType(2219).                                   *\n****************************************************************\n*/\n  LegComplexEventPrice = 2227,\n/*\n****************************************************************\n* Specifies the price percentage at which the complex event    *\n* takes effect. Impact of the event price is determined by the *\n* LegComplexEventType(2219).                                   *\n****************************************************************\n*/\n  LegComplexEventPricePercentage = 2228,\n/*\n**************************************************************\n* Specifies the boundary condition to be used for the event  *\n* price relative to the complex event price at the point the *\n* complex event outcome takes effect as determined by the    *\n* LegComplexEventPriceTimeType(2231).                        *\n**************************************************************\n*/\n  LegComplexEventPriceBoundaryMethod = 2229,\n/*\n****************************************************************\n* Used in combination with                                     *\n* LegComplexEventPriceBoundaryMethod(2229) to specify the      *\n* percentage of the strike price in relation to the            *\n* underlying price. The percentage is generally 100 or greater *\n* for puts and 100 or less for calls.                          *\n****************************************************************\n*/\n  LegComplexEventPriceBoundaryPrecision = 2230,\n/*\n***************************************************************\n* Specifies when the complex event outcome takes effect. The  *\n* outcome of a complex event is a payout or barrier action as *\n* specified by the LegComplexEventType(2219).                 *\n***************************************************************\n*/\n  LegComplexEventPriceTimeType = 2231,\n/*\n***************************************************************\n* Specifies the condition between complex events when more    *\n* than one event is specified.                                *\n* Multiple barrier events would use an \"or\" condition since   *\n* only one can be effective at a given time. A set of digital *\n* range events would use an \"and\" condition since both        *\n* conditions must be in effect for a payout to result.        *\n***************************************************************\n*/\n  LegComplexEventCondition = 2232,\n/*\n****************************************************************\n* Specifies the first or only reference currency of the trade. *\n* Uses ISO 4217 currency codes.                                *\n****************************************************************\n*/\n  LegComplexEventCurrencyOne = 2233,\n/*\n***************************************************************\n* Specifies the second reference currency of the trade.  Uses *\n* ISO 4217 currency codes.                                    *\n***************************************************************\n*/\n  LegComplexEventCurrencyTwo = 2234,\n/*\n***********************************************\n* For foreign exchange Quanto option feature. *\n***********************************************\n*/\n  LegComplexEventQuoteBasis = 2235,\n/*\n**********************************************************\n* Specifies the fixed FX rate alternative for FX Quantro *\n* options.                                               *\n**********************************************************\n*/\n  LegComplexEventFixedFXRate = 2236,\n/*\n***************************************************************\n* Specifies the method according to which an amount or a date *\n* is determined.                                              *\n* See http://www.fpml.org/coding-scheme/determination-method  *\n* for values.                                                 *\n***************************************************************\n*/\n  LegComplexEventDeterminationMethod = 2237,\n/*\n*******************************************\n* Used to identify the calculation agent. *\n*******************************************\n*/\n  LegComplexEventCalculationAgent = 2238,\n/*\n*******************************************************\n* Upper strike price for Asian option feature. Strike *\n* percentage for a Strike Spread.                     *\n*******************************************************\n*/\n  LegComplexEventStrikePrice = 2239,\n/*\n********************************************************\n* Strike factor for Asian option feature. Upper strike *\n* percentage for a Strike Spread.                      *\n********************************************************\n*/\n  LegComplexEventStrikeFactor = 2240,\n/*\n*******************************************************\n* Upper string number of options for a Strike Spread. *\n*******************************************************\n*/\n  LegComplexEventStrikeNumberOfOptions = 2241,\n/*\n*************************************************************\n* Reference to credit event table elsewhere in the message. *\n*************************************************************\n*/\n  LegComplexEventCreditEventsXIDRef = 2242,\n/*\n***************************************************************\n* The notifying party is the party that notifies the other    *\n* party when a credit event has occurred by means of a credit *\n* event notice. If more than one party is referenced as being *\n* the notifying party then either party may notify the other  *\n* of a credit event occurring.                                *\n***************************************************************\n*/\n  LegComplexEventCreditEventNotifyingParty = 2243,\n/*\n***************************************************************\n* Specifies the local business center for which the credit    *\n* event is to be determined. The inclusion of this business   *\n* center implies that Greenwich Mean Time in Section 3.3 of   *\n* the 2003 ISDA Credit Derivatives Definitions is replaced by *\n* the local time of the specified business center.            *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  LegComplexEventCreditEventBusinessCenter = 2244,\n/*\n*************************************************************\n* When this element is specified and set to 'Y', indicates  *\n* that ISDA defined Standard Public Sources are applicable. *\n*************************************************************\n*/\n  LegComplexEventCreditEventStandardSources = 2245,\n/*\n**********************************************************\n* The minimum number of the specified public information *\n* sources that must publish information that reasonably  *\n* confirms that a credit event has occurred. The market  *\n* convention is two.                                     *\n**********************************************************\n*/\n  LegComplexEventCreditEventMinimumSources = 2246,\n/*\n****************************************************************\n* The end time of the time range on which a complex event date *\n* is effective.                                                *\n* The end time must always be greater than or equal to the     *\n* start time.                                                  *\n****************************************************************\n*/\n  LegComplexEventEndTime = 2247,\n/*\n**********************************************************\n* Identifier of this complex event for cross referencing *\n* elsewhere in the message.                              *\n**********************************************************\n*/\n  LegComplexEventXID = 2248,\n/*\n**********************************************************\n* Reference to a complex event elsewhere in the message. *\n**********************************************************\n*/\n  LegComplexEventXIDRef = 2249,\n/*\n****************************************************************\n* The start date of the date range on which a complex event is *\n* effective. The start date will be set equal to the end date  *\n* for single day events such as Bermuda options.               *\n* The start date must always be less than or equal to end      *\n* date.                                                        *\n****************************************************************\n*/\n  LegComplexEventStartDate = 2251,\n/*\n***************************************************************\n* The end date of the date range on which a complex event is  *\n* effective. The start date will be set equal to the end date *\n* for single day events such as Bermuda options.              *\n* The end date must always be greater than or equal to start  *\n* date.                                                       *\n***************************************************************\n*/\n  LegComplexEventEndDate = 2252,\n/*\n****************************************************\n* Used to identify party id related to instrument. *\n****************************************************\n*/\n  LegInstrumentPartyID = 2255,\n/*\n***************************************************\n* Used to identify source of instrument party id. *\n***************************************************\n*/\n  LegInstrumentPartyIDSource = 2256,\n/*\n*****************************************************\n* Used to identify the role of instrument party id. *\n*****************************************************\n*/\n  LegInstrumentPartyRole = 2257,\n/*\n****************************************************************\n* PartySubID value within an instrument party repeating group. *\n****************************************************************\n*/\n  LegInstrumentPartySubID = 2259,\n/*\n*************************************************\n* Type of LegInstrumentPartySubID (2259) value. *\n*************************************************\n*/\n  LegInstrumentPartySubIDType = 2260,\n/*\n*******************************\n* Trade side of payout payer. *\n*******************************\n*/\n  UnderlyingComplexOptPayoutPaySide = 2261,\n/*\n**********************************\n* Trade side of payout receiver. *\n**********************************\n*/\n  UnderlyingComplexOptPayoutReceiveSide = 2262,\n/*\n**************************************************************\n* Reference to the underlier whose payments are being passed *\n* through.                                                   *\n**************************************************************\n*/\n  UnderlyingComplexOptPayoutUnderlier = 2263,\n/*\n***********************************************************\n* Percentage of observed price for calculating the payout *\n* associated with the event.                              *\n***********************************************************\n*/\n  UnderlyingComplexOptPayoutPercentage = 2264,\n/*\n*****************************************\n* The time when the payout is to occur. *\n*****************************************\n*/\n  UnderlyingComplexOptPayoutTime = 2265,\n/*\n**************************************************************\n* Specifies the currency of the payout amount. Uses ISO 4217 *\n* currency codes.                                            *\n**************************************************************\n*/\n  UnderlyingComplexOptPayoutCurrency = 2266,\n/*\n****************************************************************\n* Specifies the price percentage at which the complex event    *\n* takes effect. Impact of the event price is determined by the *\n* UnderlyingComplexEventType(2046).                            *\n****************************************************************\n*/\n  UnderlyingComplexEventPricePercentage = 2267,\n/*\n****************************************************************\n* Specifies the first or only reference currency of the trade. *\n* Uses ISO 4217 currency codes.                                *\n****************************************************************\n*/\n  UnderlyingComplexEventCurrencyOne = 2268,\n/*\n**************************************************************\n* Specifies the second reference currency of the trade. Uses *\n* ISO 4217 currency codes.                                   *\n**************************************************************\n*/\n  UnderlyingComplexEventCurrencyTwo = 2269,\n/*\n*************************************************\n* Specifies the currency pairing for the quote. *\n*************************************************\n*/\n  UnderlyingComplexEventQuoteBasis = 2270,\n/*\n**********************************************************\n* Specifies the fixed FX rate alternative for FX Quantro *\n* options.                                               *\n**********************************************************\n*/\n  UnderlyingComplexEventFixedFXRate = 2271,\n/*\n***************************************************************\n* Specifies the method according to which an amount or a date *\n* is determined.                                              *\n* See http://www.fpml.org/coding-scheme/determination-method  *\n* for values.                                                 *\n***************************************************************\n*/\n  UnderlyingComplexEventDeterminationMethod = 2272,\n/*\n*******************************************\n* Used to identify the calculation agent. *\n*******************************************\n*/\n  UnderlyingComplexEventCalculationAgent = 2273,\n/*\n*******************************************************\n* Upper strike price for Asian option feature. Strike *\n* percentage for a Strike Spread.                     *\n*******************************************************\n*/\n  UnderlyingComplexEventStrikePrice = 2274,\n/*\n********************************************************\n* Strike factor for Asian option feature. Upper strike *\n* percentage for a Strike Spread.                      *\n********************************************************\n*/\n  UnderlyingComplexEventStrikeFactor = 2275,\n/*\n*******************************************************\n* Upper string number of options for a Strike Spread. *\n*******************************************************\n*/\n  UnderlyingComplexEventStrikeNumberOfOptions = 2276,\n/*\n*************************************************************\n* Reference to credit event table elsewhere in the message. *\n*************************************************************\n*/\n  UnderlyingComplexEventCreditEventsXIDRef = 2277,\n/*\n***************************************************************\n* The notifying party is the party that notifies the other    *\n* party when a credit event has occurred by means of a credit *\n* event notice. If more than one party is referenced as being *\n* the notifying party then either party may notify the other  *\n* of a credit event occurring.                                *\n***************************************************************\n*/\n  UnderlyingComplexEventCreditEventNotifyingParty = 2278,\n/*\n***************************************************************\n* Specifies the local business center for which the credit    *\n* event is to be determined. The inclusion of this business   *\n* center implies that Greenwich Mean Time in Section 3.3 of   *\n* the 2003 ISDA Credit Derivatives Definitions is replaced by *\n* the local time of the specified business center.            *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  UnderlyingComplexEventCreditEventBusinessCenter = 2279,\n/*\n*************************************************************\n* When this element is specified and set to 'Y', indicates  *\n* that ISDA defined Standard Public Sources are applicable. *\n*************************************************************\n*/\n  UnderlyingComplexEventCreditEventStandardSources = 2280,\n/*\n**********************************************************\n* The minimum number of the specified public information *\n* sources that must publish information that reasonably  *\n* confirms that a credit event has occurred. The market  *\n* convention is two.                                     *\n**********************************************************\n*/\n  UnderlyingComplexEventCreditEventMinimumSources = 2281,\n/*\n**********************************************************\n* Identifier of this complex event for cross referencing *\n* elsewhere in the message.                              *\n**********************************************************\n*/\n  UnderlyingComplexEventXID = 2282,\n/*\n**********************************************************\n* Reference to a complex event elsewhere in the message. *\n**********************************************************\n*/\n  UnderlyingComplexEventXIDRef = 2283,\n/*\n**********************************************************\n* In an outright or forward commodity trade that is cash *\n* settled this is the index used to determine the cash   *\n* payment.                                               *\n**********************************************************\n*/\n  UnderlyingSettlRateIndex = 2284,\n/*\n************************************************************\n* This is an optional qualifying attribute of              *\n* UnderlyingSettlementRateIndex(2284) such as the delivery *\n* zone for an electricity contract.                        *\n************************************************************\n*/\n  UnderlyingSettlRateIndexLocation = 2285,\n/*\n*****************************************\n* Description of the option expiration. *\n*****************************************\n*/\n  UnderlyingOptionExpirationDesc = 2286,\n/*\n******************************************************\n* Byte length of encoded (non-ASCII characters)      *\n* EncodedUnderlyingOptionExpirationDesc(2288) field. *\n******************************************************\n*/\n  EncodedUnderlyingOptionExpirationDescLen = 2287,\n/*\n*************************************************************\n* Encoded (non-ASCII characters) representation of the      *\n* UnderlyingOptionExpirationDesc(2286) field in the encoded *\n* format specified via the MessageEncoding (347) field. If  *\n* used, the ASCII (English) representation should also be   *\n* specified in the UnderlyingOptionExpirationDesc(2286).    *\n*************************************************************\n*/\n  EncodedUnderlyingOptionExpirationDesc = 2288,\n/*\n*********************************************\n* The subclassification or subtype of swap. *\n*********************************************\n*/\n  UnderlyingSwapSubClass = 2289,\n/*\n*************************************************************\n* Used to express the unit of measure (UOM) of the price if *\n* different from the contract.                              *\n*************************************************************\n*/\n  UnderlyingStrikeUnitOfMeasure = 2290,\n/*\n***********************************************************\n* Specifies the index used to calculate the strike price. *\n***********************************************************\n*/\n  UnderlyingStrikeIndex = 2291,\n/*\n***********************************************************\n* Specifies the strike price offset from the named index. *\n***********************************************************\n*/\n  UnderlyingStrikeIndexSpread = 2292,\n/*\n*************************************************\n* Specifies the source of trade valuation data. *\n*************************************************\n*/\n  UnderlyingValuationSource = 2293,\n/*\n********************************************************\n* Specifies the methodology and/or assumptions used to *\n* generate the  trade value.                           *\n********************************************************\n*/\n  UnderlyingValuationReferenceModel = 2294,\n/*\n*****************************************\n* Specifies the type of trade strategy. *\n*****************************************\n*/\n  UnderlyingStrategyType = 2295,\n/*\n***************************************************************\n* When this element is specified and set to 'Y', it indicates *\n* that common pricing applies. Common pricing may be relevant *\n* for a transaction that references more than one commodity   *\n* reference price.                                            *\n***************************************************************\n*/\n  UnderlyingCommonPricingIndicator = 2296,\n/*\n***************************************************************\n* Specifies the consequences of settlement disruption events. *\n***************************************************************\n*/\n  UnderlyingSettlDisruptionProvision = 2297,\n/*\n******************************************************\n* Specifies the rounding direction if not overridden *\n* elsewhere.                                         *\n******************************************************\n*/\n  UnderlyingInstrumentRoundingDirection = 2298,\n/*\n*************************************************************\n* Specifies the rounding precision in terms of a number of  *\n* decimal places. Note how a percentage rate rounding of 5  *\n* decimal places is expressed as a rounding precision of 7. *\n*************************************************************\n*/\n  UnderlyingInstrumentRoundingPrecision = 2299,\n/*\n****************************************************************\n* Total amount traded for this account (i.e. quantity * price) *\n* expressed in units of currency.                              *\n****************************************************************\n*/\n  AllocGrossTradeAmt = 2300,\n/*\n****************************************************************\n* The positive or negative change in quantity when this report *\n* is a trade correction or continuation.                       *\n****************************************************************\n*/\n  LastQtyChanged = 2301,\n/*\n****************************************************************\n* Specifies the version of a trade or contract.  This is used  *\n* by systems or trading platforms in conjunction with          *\n* TradeID(1003) to uniquely identify the version of a trade or *\n* contract. If used the conditions for a change of version are *\n* subject to bilateral agreement. It is recommended to change  *\n* the version only for significant updates to the business     *\n* entity rather than for minor changes to trade details or     *\n* systematic distribution of reports. Examples where the       *\n* version would change are trade quantity modification,        *\n* customer account assignment or trade novation.               *\n****************************************************************\n*/\n  TradeVersion = 2302,\n/*\n****************************************************************\n* Indicates that the trade or event being reported occurred in *\n* the past and the trade is terminated or no longer active.    *\n****************************************************************\n*/\n  HistoricalReportIndicator = 2303,\n/*\n**********************************************************************\n* Specifies the name of the attribute.                               *\n* See                                                                *\n* http://www.fixtradingcommunity.org/codelists#Asset_Attribute_Types *\n* for code list of applicable asset attribute types.                 *\n**********************************************************************\n*/\n  AssetAttributeType = 2305,\n/*\n***********************************************\n* Specifies the value of the asset attribute. *\n***********************************************\n*/\n  AssetAttributeValue = 2306,\n/*\n*****************************************************\n* Limit or lower acceptable value of the attribute. *\n*****************************************************\n*/\n  AssetAttributeLimit = 2307,\n/*\n**********************************************************************\n* Specifies the name of the attribute.                               *\n* See                                                                *\n* http://www.fixtradingcommunity.org/codelists#Asset_Attribute_Types *\n* for code list of applicable asset attribute types.                 *\n**********************************************************************\n*/\n  LegAssetAttributeType = 2309,\n/*\n*****************************************\n* Specifies the value of the attribute. *\n*****************************************\n*/\n  LegAssetAttributeValue = 2310,\n/*\n*****************************************************\n* Limit or lower acceptable value of the attribute. *\n*****************************************************\n*/\n  LegAssetAttributeLimit = 2311,\n/*\n**********************************************************************\n* Specifies the name of the attribute.                               *\n* See                                                                *\n* http://www.fixtradingcommunity.org/codelists#Asset_Attribute_Types *\n* for code list of applicable asset attribute types.                 *\n**********************************************************************\n*/\n  UnderlyingAssetAttributeType = 2313,\n/*\n*****************************************\n* Specifies the value of the attribute. *\n*****************************************\n*/\n  UnderlyingAssetAttributeValue = 2314,\n/*\n*****************************************************\n* Limit or lower acceptable value of the attribute. *\n*****************************************************\n*/\n  UnderlyingAssetAttributeLimit = 2315,\n/*\n********************************\n* Status of risk limit report. *\n********************************\n*/\n  RiskLimitReportStatus = 2316,\n/*\n****************************************************************\n* The reason for rejecting the PartyRiskLimitsReport(35=CM) or *\n* PartyRiskLimitsUpdateReport(35=CR).                          *\n****************************************************************\n*/\n  RiskLimitReportRejectReason = 2317,\n/*\n**********************************************\n* The unique identifier of the               *\n* PartyRiskLimitCheckRequest(35=DF) message. *\n**********************************************\n*/\n  RiskLimitCheckRequestID = 2318,\n/*\n************************************************************\n* The unique and static identifier, at the business entity *\n* level, of a risk limit check request.                    *\n************************************************************\n*/\n  RiskLimitCheckID = 2319,\n/*\n**********************************************************\n* Specifies the transaction type of the risk limit check *\n* request.                                               *\n**********************************************************\n*/\n  RiskLimitCheckTransType = 2320,\n/*\n**********************************************\n* Specifies the type of limit check message. *\n**********************************************\n*/\n  RiskLimitCheckType = 2321,\n/*\n****************************************************************\n* Specifies the message reference identifier of the risk limit *\n* check request message.                                       *\n****************************************************************\n*/\n  RiskLimitCheckRequestRefID = 2322,\n/*\n*************************************************************\n* Specifies the type of limit amount check being requested. *\n*************************************************************\n*/\n  RiskLimitCheckRequestType = 2323,\n/*\n******************************************************\n* Specifies the amount being requested for approval. *\n******************************************************\n*/\n  RiskLimitCheckAmount = 2324,\n/*\n*********************************************************\n* Indicates the status of the risk limit check request. *\n*********************************************************\n*/\n  RiskLimitCheckRequestStatus = 2325,\n/*\n*********************************************\n* Result of the credit limit check request. *\n*********************************************\n*/\n  RiskLimitCheckRequestResult = 2326,\n/*\n******************************************\n* The credit/risk limit amount approved. *\n******************************************\n*/\n  RiskLimitApprovedAmount = 2327,\n/*\n**********************************************************\n* The unique identifier of the PartyActionRequest(35=DH) *\n* message.                                               *\n**********************************************************\n*/\n  PartyActionRequestID = 2328,\n/*\n***********************************************************\n* Specifies the type of action to take or was taken for a *\n* given party.                                            *\n***********************************************************\n*/\n  PartyActionType = 2329,\n/*\n****************************************************************\n* Used to indicate whether the message being sent is to test   *\n* the receiving application's availability to process the      *\n* message. When set to \"Y\" the message is a test message. If   *\n* not specified, the message is by default not a test message. *\n****************************************************************\n*/\n  ApplTestMessageIndicator = 2330,\n/*\n*********************************************************\n* The unique identifier of the PartyActionReport(35=DI) *\n* message as assigned by the message sender.            *\n*********************************************************\n*/\n  PartyActionReportID = 2331,\n/*\n**********************************************************\n* Specifies the action taken as a result of the          *\n* PartyActionType(2239) of the PartyActionRequest(35=DH) *\n* message.                                               *\n**********************************************************\n*/\n  PartyActionResponse = 2332,\n/*\n**********************************************************\n* Specifies the reason the PartyActionRequest(35=DH) was *\n* rejected.                                              *\n**********************************************************\n*/\n  PartyActionRejectReason = 2333,\n/*\n***************************************************************\n* The reference identifier of the                             *\n* PartyRiskLimitCheckRequest(35=DF) message, or a similar out *\n* of band message, that contained the approval for the        *\n* risk/credit limit check request.                            *\n***************************************************************\n*/\n  RefRiskLimitCheckID = 2334,\n/*\n******************************************************\n* Specifies which type of identifier is specified in *\n* RefRiskLimitCheckID(2334) field.                   *\n******************************************************\n*/\n  RefRiskLimitCheckIDType = 2335,\n/*\n************************************************************\n* The time interval for which the clip size limit applies. *\n* The velocity time unit is expressed in                   *\n* RiskLimitVelocityUnit(2337).                             *\n************************************************************\n*/\n  RiskLimitVelocityPeriod = 2336,\n/*\n**********************************************************\n* Unit of time in which RiskLimitVelocityPeriod(2336) is *\n* expressed.                                             *\n**********************************************************\n*/\n  RiskLimitVelocityUnit = 2337,\n/*\n*****************************************************\n* Qualifies the value of RequestingPartyRole(1660). *\n*****************************************************\n*/\n  RequestingPartyRoleQualifier = 2338,\n/*\n**************************************************************\n* Specifies the type of credit limit check model workflow to *\n* apply for the specified party                              *\n**************************************************************\n*/\n  RiskLimitCheckModelType = 2339,\n/*\n****************************************************************\n* Used with derivatives when an event is express as a          *\n* month-year with optional day or month or week of month.      *\n* Format:                                                      *\n* YYYYMM (e.g. 199903)                                         *\n* YYYYMMDD (e.g. 20030323)                                     *\n* YYYYMMwN (e.g. 200303w2) for week                            *\n* A specific date can be appended to the month-year. For       *\n* instance, if multiple event types exist in the same Year and *\n* Month, but actually at a different time, a value can be      *\n* appended, such as \"w\" or \"w2\" to indicate week. Likewise,    *\n* the day of monty (0-31) can be appended to indicate a        *\n* specific event date.                                         *\n****************************************************************\n*/\n  EventMonthYear = 2340,\n/*\n****************************************************************\n* Used with derivatives when an event is express as a          *\n* month-year with optional day or month or week of month.      *\n* Format:                                                      *\n* YYYYMM (e.g. 199903)                                         *\n* YYYYMMDD (e.g. 20030323)                                     *\n* YYYYMMwN (e.g. 200303w2) for week                            *\n* A specific date can be appended to the month-year. For       *\n* instance, if multiple event types exist in the same Year and *\n* Month, but actually at a different time, a value can be      *\n* appended, such as \"w\" or \"w2\" to indicate week. Likewise,    *\n* the day of monty (0-31) can be appended to indicate a        *\n* specific event date.                                         *\n****************************************************************\n*/\n  LegEventMonthYear = 2341,\n/*\n****************************************************************\n* Used with derivatives when an event is express as a          *\n* month-year with optional day or month or week of month.      *\n* Format:                                                      *\n* YYYYMM (e.g. 199903)                                         *\n* YYYYMMDD (e.g. 20030323)                                     *\n* YYYYMMwN (e.g. 200303w2) for week                            *\n* A specific date can be appended to the month-year. For       *\n* instance, if multiple event types exist in the same Year and *\n* Month, but actually at a different time, a value can be      *\n* appended, such as \"w\" or \"w2\" to indicate week. Likewise,    *\n* the day of monty (0-31) can be appended to indicate a        *\n* specific event date.                                         *\n****************************************************************\n*/\n  UnderlyingEventMonthYear = 2342,\n/*\n***************************************************************\n* Indicates the status of the risk limit check performed on a *\n* trade.                                                      *\n***************************************************************\n*/\n  RiskLimitCheckStatus = 2343,\n/*\n*************************************************************\n* Indicates the status of the risk limit check performed on *\n* the side of a trade.                                      *\n*************************************************************\n*/\n  SideRiskLimitCheckStatus = 2344,\n/*\n***************************************************************\n* Leg Mid price/rate.                                         *\n* For OTC swaps, this is the mid-market mark (for example, as *\n* defined by CFTC).                                           *\n* For uncleared OTC swaps, LegMidPx(2346) and the MidPx(631)  *\n* fields are mutually exclusive.                              *\n***************************************************************\n*/\n  LegMidPx = 2346,\n/*\n*****************************************************\n* Specifies the regulatory mandate or rule that the *\n* transaction complies with.                        *\n*****************************************************\n*/\n  RegulatoryTransactionType = 2347,\n/*\n****************************************************************\n* Indicates the broad product or asset classification.  May be *\n* used to provide grouping for the product taxonomy            *\n* (Product(460), SecurityType(167), etc.) and/or the risk      *\n* taxonomy (AssetClass(1938), AssetSubClass(1939),             *\n* AssetType(1940), etc.).                                      *\n****************************************************************\n*/\n  LegAssetGroup = 2348,\n/*\n************************************************************\n* Specifies the price decimal precision of the instrument. *\n************************************************************\n*/\n  PricePrecision = 2349,\n/*\n**************************************************************\n* Identifier of the collateral portfolio when reporting on a *\n* portfolio basis.                                           *\n**************************************************************\n*/\n  CollateralPortfolioID = 2350,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedComplianceText(2352) field.            *\n*************************************************\n*/\n  EncodedComplianceTextLen = 2351,\n/*\n**************************************************************\n* Encoded (non-ASCII characters) representation of the       *\n* ComplianceText(2404) field in the encoded format specified *\n* via the MessageEncoding (347) field. If used, the ASCII    *\n* (English) representation should also be specified in the   *\n* ComplianceText(2404) field.                                *\n**************************************************************\n*/\n  EncodedComplianceText = 2352,\n/*\n****************************************************************\n* Indicates the number of contract periods associated with the *\n* minimum trading unit for a given contract duration resulting *\n* in the number of total traded contracts.                     *\n****************************************************************\n*/\n  TradingUnitPeriodMultiplier = 2353,\n/*\n****************************************************************\n* Indicates the number of contract periods associated with the *\n* minimum trading unit for a given contract duration resulting *\n* in the number of total traded contracts.                     *\n****************************************************************\n*/\n  LegTradingUnitPeriodMultiplier = 2354,\n/*\n******************************************\n* The status of risk limits for a party. *\n******************************************\n*/\n  PartyRiskLimitStatus = 2355,\n/*\n*******************************************************\n* Indicates whether the trade price was adjusted for  *\n* compensation (i.e. includes a mark-up, mark-down or *\n* commission) in the price paid.                      *\n*******************************************************\n*/\n  RemunerationIndicator = 2356,\n/*\n****************************************************************\n* Expresses the total quantity traded over the life of the     *\n* contract when LegLastQty(1418) is to be repeated             *\n* periodically over the term of the contract. The value is the *\n* product of LegLastQty(1418) and                              *\n* LegTradingUnitPeriodMultiplier(2353).                        *\n****************************************************************\n*/\n  LegTotalTradeQty = 2357,\n/*\n****************************************************************\n* Expresses the quantity bought/sold when LastQty is expressed *\n* in contracts. Used in addition to LegLastQty(1418), it is    *\n* the product of LegLastQty(1418) and                          *\n* LegContractMultiplier(614).                                  *\n****************************************************************\n*/\n  LegLastMultipliedQty = 2358,\n/*\n***************************************************************\n* Expresses the full total monetary value of the traded       *\n* contract. The value is the product of LegLastPx(637) and    *\n* LegTotalTradeQty(2357) or LegTotalTradeMultipliedQty(2360), *\n* if priced in units instead of contracts.                    *\n***************************************************************\n*/\n  LegTotalGrossTradeAmt = 2359,\n/*\n*********************************************************\n* Expresses the total trade quantity in units where     *\n* LegContractMultiplier(614) is not 1. The value is the *\n* product of LegTotalTradeQty(2357) and                 *\n* LegContractMultiplier(614).                           *\n*********************************************************\n*/\n  LegTotalTradeMultipliedQty = 2360,\n/*\n***************************************************************\n* Use to identify a netting or compression group where trades *\n* in the group were netted or compressed.  This includes both *\n* terminating trades and any remnant trades that result from  *\n* the operation.                                              *\n***************************************************************\n*/\n  CompressionGroupID = 2361,\n/*\n***************************************************************\n* Identifies an order or trade that should not be matched to  *\n* an opposite order or trade if both buy and sell orders for  *\n* the same asset contain the same SelfMatchPreventionID(2362) *\n* and submitted by the same firm.                             *\n***************************************************************\n*/\n  SelfMatchPreventionID = 2362,\n/*\n****************************************************************\n* Indicates the number of contract periods associated with the *\n* minimum trading unit for a given contract duration resulting *\n* in the number of total traded contracts.                     *\n****************************************************************\n*/\n  UnderlyingTradingUnitPeriodMultiplier = 2363,\n/*\n********************************************************\n* Indicates action that triggered the Position Report. *\n********************************************************\n*/\n  PosReportAction = 2364,\n/*\n************************************************************\n* FX forward points added to SettlPrice(730). The value is *\n* expressed in decimal form and may be a negative.         *\n************************************************************\n*/\n  SettlForwardPoints = 2365,\n/*\n************************************************************\n* Specifies whether LastPx(31) [TradeCaptureReport] or     *\n* SettlPrice(730) [PositionReport] should be multiplied or *\n* divided.                                                 *\n************************************************************\n*/\n  SettlPriceFxRateCalc = 2366,\n/*\n***************************************************************\n* Expresses the total quantity traded over the life of the    *\n* contract when LastQty(32) is repeated periodically over the *\n* term of the contract. The value is the product of           *\n* LastQty(32) and TradingUnitPeriodMultiplier(2353).          *\n***************************************************************\n*/\n  TotalTradeQty = 2367,\n/*\n*************************************************************\n* Expresses the quantity bought or sold when LastQty(32) is *\n* expressed in number of contracts. Used in addition to     *\n* LastQty(32). It is the product of LastQty(32) and         *\n* ContractMultiplier(231).                                  *\n*************************************************************\n*/\n  LastMultipliedQty = 2368,\n/*\n************************************************************\n* Expresses the full total monetary value of the traded    *\n* contract. The value is the product of LastPx(31) and     *\n* TotalTradeQty(2367) or TotalTradeMultipliedQty(2370), if *\n* priced in units instead of contracts.                    *\n************************************************************\n*/\n  TotalGrossTradeAmt = 2369,\n/*\n**************************************************************\n* Expresses the total trade quantity in units where          *\n* ContractMultiplier(231) is not 1. The value is the product *\n* of TotalTradeQty(2367) and ContractMultiplier(231).        *\n**************************************************************\n*/\n  TotalTradeMultipliedQty = 2370,\n/*\n**************************************************************\n* Encoded (non-ASCII characters) representation of the       *\n* TradeContinuationText(2374) field in the encoded format    *\n* specified via the MessageEncoding(347) field. If used, the *\n* ASCII (English) representation should also be specified in *\n* the TradeContinuationText(2374) field.                     *\n**************************************************************\n*/\n  EncodedTradeContinuationText = 2371,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedTradeContinuationText(2371) field.     *\n*************************************************\n*/\n  EncodedTradeContinuationTextLen = 2372,\n/*\n***************************************************************\n* Indicates whether the trade or position was entered into as *\n* an intra-group transaction, i.e. between two units of the   *\n* same parent entity having majority ownership interest in    *\n* both counterparties.                                        *\n***************************************************************\n*/\n  IntraFirmTradeIndicator = 2373,\n/*\n**********************************************************\n* Elaboration of the purpose or action of the regulatory *\n* report when TradeContinuation(1937)=99 (Other).        *\n**********************************************************\n*/\n  TradeContinuationText = 2374,\n/*\n************************************************************\n* The type of identification taxonomy used to identify the *\n* security.                                                *\n************************************************************\n*/\n  TaxonomyType = 2375,\n/*\n********************************************************\n* Used to further qualify the value of PartyRole(452). *\n********************************************************\n*/\n  PartyRoleQualifier = 2376,\n/*\n****************************************\n* Used to further qualify the value of *\n* DerivativeInstrumentPartyRole(1295). *\n****************************************\n*/\n  DerivativeInstrumentPartyRoleQualifier = 2377,\n/*\n****************************************\n* Used to further qualify the value of *\n* InstrumentPartyRole(1051).           *\n****************************************\n*/\n  InstrumentPartyRoleQualifier = 2378,\n/*\n****************************************\n* Used to further qualify the value of *\n* LegInstrumentPartyRole(2257).        *\n****************************************\n*/\n  LegInstrumentPartyRoleQualifier = 2379,\n/*\n****************************************\n* Used to further qualify the value of *\n* LegProvisionPartyRole(40536).        *\n****************************************\n*/\n  LegProvisionPartyRoleQualifier = 2380,\n/*\n***************************************************************\n* Used to further qualify the value of Nested2PartyRole(759). *\n***************************************************************\n*/\n  Nested2PartyRoleQualifier = 2381,\n/*\n***************************************************************\n* Used to further qualify the value of Nested3PartyRole(951). *\n***************************************************************\n*/\n  Nested3PartyRoleQualifier = 2382,\n/*\n****************************************************************\n* Used to further qualify the value of Nested4PartyRole(1417). *\n****************************************************************\n*/\n  Nested4PartyRoleQualifier = 2383,\n/*\n**************************************************************\n* Used to further qualify the value of NestedPartyRole(538). *\n**************************************************************\n*/\n  NestedPartyRoleQualifier = 2384,\n/*\n****************************************\n* Used to further qualify the value of *\n* ProvisionPartyRole(40177).           *\n****************************************\n*/\n  ProvisionPartyRoleQualifier = 2385,\n/*\n****************************************\n* Used to further qualify the value of *\n* RequestedPartyRole(1509).            *\n****************************************\n*/\n  RequestedPartyRoleQualifier = 2386,\n/*\n***************************************************************\n* Indicates the contingency attribute for a trade in an asset *\n* class that may be contingent on the clearing of a           *\n* corresponding paired trade (for example Exchange for        *\n* Physical (EFP), Exchange for Swap (EFS), Exchange for       *\n* Related (EFR) or Exchange for Option (EFO), collectively    *\n* called EFRPs). Once the paired trade clears or fails to     *\n* clear, the related trade (the trade which carries this      *\n* attribute) ceases to exist.                                 *\n***************************************************************\n*/\n  TradeContingency = 2387,\n/*\n*************************************************************\n* Used to further qualify the value of RootPartyRole(1119). *\n*************************************************************\n*/\n  RootPartyRoleQualifier = 2388,\n/*\n*************************************************************\n* Used to further qualify the value of SettlPartyRole(784). *\n*************************************************************\n*/\n  SettlPartyRoleQualifier = 2389,\n/*\n***************************************************************\n* A reference or control identifier or number used as a trade *\n* confirmation key.                                           *\n***************************************************************\n*/\n  TradeConfirmationReferenceID = 2390,\n/*\n****************************************\n* Used to further qualify the value of *\n* UnderlyingInstrumentPartyRole(1061). *\n****************************************\n*/\n  UnderlyingInstrumentPartyRoleQualifier = 2391,\n/*\n***************************************************************\n* The reference identifier to the                             *\n* PartyRiskLimitCheckRequest(35=DF), or a similar out of band *\n* message, message that contained the approval or rejection   *\n* for risk/credit limit check for this allocation.            *\n***************************************************************\n*/\n  AllocRefRiskLimitCheckID = 2392,\n/*\n******************************************************\n* Specifies which type of identifier is specified in *\n* AllocRefRiskLimitCheckID(2392) field.              *\n******************************************************\n*/\n  AllocRefRiskLimitCheckIDType = 2393,\n/*\n****************************************************************\n* The total amount of the limit that has been drawn down       *\n* against the counterparty. This includes the amount for prior *\n* trades. It may or may not include the amount for the given   *\n* trade, specified in LastLimitAmt(1632), depending upon       *\n* whether the given trade is considered pending.               *\n****************************************************************\n*/\n  LimitUtilizationAmt = 2394,\n/*\n*************************************************************\n* The limit for the counterparty. This represents the total *\n* limit amount, independent of any amount already utilized. *\n*************************************************************\n*/\n  LimitAmt = 2395,\n/*\n*********************************************\n* Indicates the scope of the limit by role. *\n*********************************************\n*/\n  LimitRole = 2396,\n/*\n****************************************************************\n* Specifies the scope to which the RegulatoryTradeID(1903)     *\n* applies.  Used when a trade must be assigned more than one   *\n* identifier, e.g. one for the clearing member and another for *\n* the client on a cleared trade as with the principal model in *\n* Europe.                                                      *\n****************************************************************\n*/\n  RegulatoryTradeIDScope = 2397,\n/*\n****************************************************************\n* Specifies the scope to which the SideRegulatoryTradeID(1972) *\n* applies.  Used when a trade must be assigned more than one   *\n* identifier, e.g. one for the clearing member and another for *\n* the client on a cleared trade as with the principal model in *\n* Europe.                                                      *\n****************************************************************\n*/\n  SideRegulatoryTradeIDScope = 2398,\n/*\n***************************************************************\n* Specifies the scope to which the                            *\n* AllocRegulatoryTradeID(1909) applies.  Used when a trade    *\n* must be assigned more than one identifier, e.g. one for the *\n* clearing member and another for the client on a cleared     *\n* trade as with the principal model in Europe.                *\n***************************************************************\n*/\n  AllocRegulatoryTradeIDScope = 2399,\n/*\n****************************************************************\n* Specifies an explicit business date for associated reference *\n* data or transaction. Used when an implicit date is not       *\n* sufficiently specific.                                       *\n****************************************************************\n*/\n  EffectiveBusinessDate = 2400,\n/*\n****************************************************************\n* Indicates if the list of orders was initially received       *\n* manually (as opposed to electronically) or if it was entered *\n* manually (as opposed to entered by automated trading         *\n* software).                                                   *\n****************************************************************\n*/\n  ListManualOrderIndicator = 2401,\n/*\n******************************************\n* Subtype of an entitlement specified in *\n* EntitlementType(1775).                 *\n******************************************\n*/\n  EntitlementSubType = 2402,\n/*\n********************\n* Quote model type *\n********************\n*/\n  QuoteModelType = 2403,\n/*\n****************************************************************\n* Free text for compliance information required for regulatory *\n* reporting.                                                   *\n****************************************************************\n*/\n  ComplianceText = 2404,\n/*\n***********************************************************\n* Specifies how the transaction was executed, e.g. via an *\n* automated execution platform or other method.           *\n***********************************************************\n*/\n  ExecMethod = 2405,\n/*\n***********************************************************\n* Identifies the leg of the trade the entry applies to by *\n* referencing the leg's LegID(1788).                      *\n***********************************************************\n*/\n  AllocRegulatoryLegRefID = 2406,\n/*\n*****************\n* FX spot rate. *\n*****************\n*/\n  ComplexEventSpotRate = 2407,\n/*\n***********************************************************\n* FX forward points added to spot rate. May be a negative *\n* value.                                                  *\n***********************************************************\n*/\n  ComplexEventForwardPoints = 2408,\n/*\n*****************\n* FX spot rate. *\n*****************\n*/\n  LegComplexEventSpotRate = 2409,\n/*\n***********************************************************\n* FX forward points added to spot rate. May be a negative *\n* value.                                                  *\n***********************************************************\n*/\n  LegComplexEventForwardPoints = 2410,\n/*\n***********************************************************\n* Identifies the leg of the trade the entry applies to by *\n* referencing the leg's LegID(1788).                      *\n***********************************************************\n*/\n  RegulatoryLegRefID = 2411,\n/*\n*****************************************************\n* Identifies the page heading from the rate source. *\n*****************************************************\n*/\n  RateSourceReferemcePageHeading = 2412,\n/*\n****************************************************************\n* The security identifier of the instrument, instrument leg or *\n* underlying instrument with which the related instrument has  *\n* correlation.                                                 *\n****************************************************************\n*/\n  RelatedToSecurityID = 2413,\n/*\n***************************************************************\n* Identifies class or source of the RelatedToSecurityID(2413) *\n* value.                                                      *\n***************************************************************\n*/\n  RelatedToSecurityIDSource = 2414,\n/*\n***********************************************************\n* StreamXID(41303), LegStreamXID(41700) or                *\n* UnderlyingStreamXID(42016) of the stream with which the *\n* related instrument has correlation.                     *\n***********************************************************\n*/\n  RelatedToStreamXIDRef = 2415,\n/*\n***********************************************************\n* Identifies the leg of the trade the entry applies to by *\n* referencing the leg's LegID(1788).                      *\n***********************************************************\n*/\n  SideRegulatoryLegRefID = 2416,\n/*\n**************************************************************\n* The DividendPeriodXID(42293) of the stream dividend period *\n* with which the related instrument has correlation.         *\n**************************************************************\n*/\n  RelatedToDividendPeriodXIDRef = 2417,\n/*\n***********************************************************\n* An identifier created by the trading party for the life *\n* cycle event associated with this report.                *\n***********************************************************\n*/\n  FirmTradeEventID = 2418,\n/*\n*****************\n* FX spot rate. *\n*****************\n*/\n  UnderlyingComplexEventSpotRate = 2419,\n/*\n***********************************************************\n* FX forward points added to spot rate. May be a negative *\n* value.                                                  *\n***********************************************************\n*/\n  UnderlyingComplexEventForwardPoints = 2420,\n/*\n**************************************************************\n* A reference to either the value of the FillExecID(1363) or *\n* an implicit position of a fills instance in the FillsGrp   *\n* component.                                                 *\n**************************************************************\n*/\n  FillRefID = 2421,\n/*\n**************************************************************\n* Unique message identifier for an order request as assigned *\n* by the submitter of the request.                           *\n**************************************************************\n*/\n  OrderRequestID = 2422,\n/*\n*********************************************************\n* Unique message identifier for a mass order request as *\n* assigned by the submitter of the orders.              *\n*********************************************************\n*/\n  MassOrderRequestID = 2423,\n/*\n*********************************************************\n* Unique message identifier for a mass order request as *\n* assigned by the receiver of the orders.               *\n*********************************************************\n*/\n  MassOrderReportID = 2424,\n/*\n*********************************\n* Status of mass order request. *\n*********************************\n*/\n  MassOrderRequestStatus = 2425,\n/*\n*****************************************\n* Request result of mass order request. *\n*****************************************\n*/\n  MassOrderRequestResult = 2426,\n/*\n***************************************************************\n* The level of response requested from receiver of mass order *\n* messages. A default value should be bilaterally agreed.     *\n***************************************************************\n*/\n  OrderResponseLevel = 2427,\n/*\n*********************************************************\n* Specifies the action to be taken for the given order. *\n*********************************************************\n*/\n  OrderEntryAction = 2429,\n/*\n***************************************************************\n* Unique identifier for an order within a single              *\n* MassOrder(35=DJ) message that can be used as a reference in *\n* the MassOrderAck(35=DK) message.                            *\n***************************************************************\n*/\n  OrderEntryID = 2430,\n/*\n***************************************************************\n* The initiating event when an ExecutionReport(35=8) is sent. *\n***************************************************************\n*/\n  ExecTypeReason = 2431,\n/*\n*************************************************************\n* Totals number of orders for a mass order or its           *\n* acknowledgment being fragmented across multiple messages. *\n*************************************************************\n*/\n  TotNoOrderEntries = 2432,\n/*\n**************************************************************\n* Party sub-identifier value within a target party repeating *\n* group.                                                     *\n**************************************************************\n*/\n  TargetPartySubID = 2434,\n/*\n*****************************************\n* Type of TargetPartySubID(2434) value. *\n*****************************************\n*/\n  TargetPartySubIDType = 2435,\n/*\n**************************************************************\n* Unique identifier for the transfer instruction assigned by *\n* the submitter.                                             *\n**************************************************************\n*/\n  TransferInstructionID = 2436,\n/*\n****************************************************************\n* The unique identifier assigned to the transfer entity once   *\n* it is received, for example, by the CCP or the party         *\n* governing the transfer process.  Generally this same         *\n* identifier for the transfer is used by all parties involved. *\n****************************************************************\n*/\n  TransferID = 2437,\n/*\n******************************************************\n* Unique identifier for the transfer report message. *\n******************************************************\n*/\n  TransferReportID = 2438,\n/*\n***********************************************\n* Indicates the type of transfer transaction. *\n***********************************************\n*/\n  TransferTransType = 2439,\n/*\n*******************************************\n* Indicates the type of transfer request. *\n*******************************************\n*/\n  TransferType = 2440,\n/*\n***********************************\n* Indicates the type of transfer. *\n***********************************\n*/\n  TransferScope = 2441,\n/*\n***************************\n* Status of the transfer. *\n***************************\n*/\n  TransferStatus = 2442,\n/*\n*************************************************\n* Reason the transfer instruction was rejected. *\n*************************************************\n*/\n  TransferRejectReason = 2443,\n/*\n******************************************\n* Indicates the type of transfer report. *\n******************************************\n*/\n  TransferReportType = 2444,\n/*\n*************************************************************\n* Timestamp of aggressive order or quote resulting in match *\n* event.                                                    *\n*************************************************************\n*/\n  AggressorTime = 2445,\n/*\n***************************************************************\n* Side of aggressive order or quote resulting in match event. *\n***************************************************************\n*/\n  AggressorSide = 2446,\n/*\n**********************************************************\n* Indicates if the instrument is in \"fast market\" state. *\n**********************************************************\n*/\n  FastMarketIndicator = 2447,\n/*\n*********************************************************\n* Indicate whether linkage handling is in effect for an *\n* instrument or not.                                    *\n*********************************************************\n*/\n  LinkageHandlingIndicator = 2448,\n/*\n*********************************************\n* Number of buy orders involved in a trade. *\n*********************************************\n*/\n  NumberOfBuyOrders = 2449,\n/*\n**********************************************\n* Number of sell orders involved in a trade. *\n**********************************************\n*/\n  NumberOfSellOrders = 2450,\n/*\n**********************************************************\n* Calculation method used to determine settlement price. *\n**********************************************************\n*/\n  SettlPriceDeterminationMethod = 2451,\n/*\n************************************************\n* Message identifier for a statistics request. *\n************************************************\n*/\n  MDStatisticReqID = 2452,\n/*\n***********************************************\n* Message identifier for a statistics report. *\n***********************************************\n*/\n  MDStatisticRptID = 2453,\n/*\n****************************************************************\n* The short name or acronym for a set of statistic parameters. *\n****************************************************************\n*/\n  MDStatisticName = 2454,\n/*\n****************************************************************\n* Can be used to provide an optional textual description for a *\n* statistic.                                                   *\n****************************************************************\n*/\n  MDStatisticDesc = 2455,\n/*\n****************************\n* Type of statistic value. *\n****************************\n*/\n  MDStatisticType = 2456,\n/*\n**********************************************\n* Entities used as basis for the statistics. *\n**********************************************\n*/\n  MDStatisticScope = 2457,\n/*\n**************************************************************\n* Sub-scope of the statistics to further reduce the entities *\n* used as basis for the statistics.                          *\n**************************************************************\n*/\n  MDStatisticSubScope = 2458,\n/*\n***********************************************************\n* Scope details of the statistics to reduce the number of *\n* events being used as basis for the statistics.          *\n***********************************************************\n*/\n  MDStatisticScopeType = 2459,\n/*\n**************************************************************\n* Dissemination frequency of statistics.                     *\n* Special meaning for a value of zero which represents  an   *\n* event-driven dissemination in real time (e.g. as soon as a *\n* new trade occurs).                                         *\n**************************************************************\n*/\n  MDStatisticFrequencyPeriod = 2460,\n/*\n***************************************************\n* Time unit for MDStatisticFrequencyPeriod(2460). *\n***************************************************\n*/\n  MDStatisticFrequencyUnit = 2461,\n/*\n************************************************************\n* Number of time units between the calculation of the      *\n* statistic and its dissemination. Can be used to defer or *\n* delay publication.                                       *\n************************************************************\n*/\n  MDStatisticDelayPeriod = 2462,\n/*\n***********************************************\n* Time unit for MDStatisticDelayPeriod(2462). *\n***********************************************\n*/\n  MDStatisticDelayUnit = 2463,\n/*\n********************************************************\n* Type of interval over which statistic is calculated. *\n********************************************************\n*/\n  MDStatisticIntervalType = 2464,\n/*\n************************************************\n* Time unit for MDStatisticIntervalType(2464). *\n************************************************\n*/\n  MDStatisticIntervalTypeUnit = 2465,\n/*\n****************************************************************\n* Length of time over which the statistic is calculated.       *\n* Special meaning for a value of zero to express that there is *\n* no aggregation over time. Can be used with other interval    *\n* types expressing relative date and time ranges to combine    *\n* them with sliding window peaks, e.g. highest volume across 1 *\n* minute intervals of the previous day.                        *\n****************************************************************\n*/\n  MDStatisticIntervalPeriod = 2466,\n/*\n**************************************************\n* Time unit for MDStatisticIntervalPeriod(2466). *\n**************************************************\n*/\n  MDStatisticIntervalUnit = 2467,\n/*\n***************************************************************\n* First day of range for which statistical data is collected. *\n***************************************************************\n*/\n  MDStatisticStartDate = 2468,\n/*\n**************************************************************\n* Last day of range for which statistical data is collected. *\n**************************************************************\n*/\n  MDStatisticEndDate = 2469,\n/*\n**************************************************************\n* Start time of the time range for which statistical data is *\n* collected.                                                 *\n**************************************************************\n*/\n  MDStatisticStartTime = 2470,\n/*\n************************************************************\n* End time of the time range for which statistical data is *\n* collected.                                               *\n************************************************************\n*/\n  MDStatisticEndTime = 2471,\n/*\n************************************\n* Ratios between various entities. *\n************************************\n*/\n  MDStatisticRatioType = 2472,\n/*\n**************************************************************\n* Result returned in response to MarketDataStatisticsRequest *\n* (35=DO).                                                   *\n**************************************************************\n*/\n  MDStatisticRequestResult = 2473,\n/*\n**************************************\n* Unique identifier for a statistic. *\n**************************************\n*/\n  MDStatisticID = 2475,\n/*\n***************************************\n* Time of calculation of a statistic. *\n***************************************\n*/\n  MDStatisticTime = 2476,\n/*\n********************************************************\n* Status for a statistic to indicate its availability. *\n********************************************************\n*/\n  MDStatisticStatus = 2477,\n/*\n**********************\n* Statistical value. *\n**********************\n*/\n  MDStatisticValue = 2478,\n/*\n******************************\n* Type of statistical value. *\n******************************\n*/\n  MDStatisticValueType = 2479,\n/*\n***************************************\n* Unit of time for statistical value. *\n***************************************\n*/\n  MDStatisticValueUnit = 2480,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedMDStatisticDesc(2482) field.           *\n*************************************************\n*/\n  EncodedMDStatisticDescLen = 2481,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* MDStatisticDesc(2455) field in the encoded format specified *\n* via the MessageEncoding (347) field. If used, the ASCII     *\n* (English) representation should also be specified in the    *\n* MDStatisticDesc(2455) field.                                *\n***************************************************************\n*/\n  EncodedMDStatisticDesc = 2482,\n/*\n***************************************************************\n* Indicates the status of the risk limit check performed on a *\n* trade for this allocation instance.                         *\n***************************************************************\n*/\n  AllocRiskLimitCheckStatus = 2483,\n/*\n************************************************************\n* The unique transaction entity identifier assigned by the *\n* firm.                                                    *\n************************************************************\n*/\n  FirmTransactionID = 2484,\n/*\n*********************************************\n* The unique transaction entity identifier. *\n*********************************************\n*/\n  TransactionID = 2485,\n/*\n***************************************************************\n* The reference to a wire transfer associated with the        *\n* transaction. Wire references done via wire services such as *\n* Fedwire Output Message Accountabilitty Data \"OMAD\" or SWIFT *\n* Output Sequence Number \"OSN\".                               *\n***************************************************************\n*/\n  WireReference = 2486,\n/*\n***********************************************************\n* Reject reason code for rejecting the collateral report. *\n***********************************************************\n*/\n  CollRptRejectReason = 2487,\n/*\n****************************************\n* The status of the collateral report. *\n****************************************\n*/\n  CollRptStatus = 2488,\n/*\n**************************************************************\n* Identifier assigned to a collection of trades so that they *\n* can be analyzed as one atomic unit for risk assessment and *\n* clearing.                                                  *\n**************************************************************\n*/\n  PackageID = 2489,\n/*\n**********************************************************\n* Ordinal number of the trade within a series of related *\n* trades.                                                *\n**********************************************************\n*/\n  TradeNumber = 2490,\n/*\n****************************************************************\n* Indicates the broad product or asset classification.  May be *\n* used to provide grouping for the product taxonomy            *\n* (Product(460), SecurityType(167), etc.) and/or the risk      *\n* taxonomy (AssetClass(1938), AssetSubClass(1939),             *\n* AssetType(1940), etc.).                                      *\n****************************************************************\n*/\n  UnderlyingAssetGroup = 2491,\n/*\n****************************************************************\n* Used in pricing a group of individual Trade at Settlement    *\n* (TAS) and Trade At Marker (TAM) contracts as an atomic unit. *\n* The value is the negotiated currency offset either at        *\n* settlement (TAS) or at the time specified in the product     *\n* definition (TAM). The final contract price is reported in    *\n* LegLastPx(637).                                              *\n****************************************************************\n*/\n  LegDifferentialPrice = 2492,\n/*\n**************************************************************\n* Encoded (non-ASCII characters) representation of the       *\n* LegDocumentationText(2505) field in the encoded format     *\n* specified via the MessageEncoding(347) field. If used, the *\n* ASCII (English) representation should also be specified in *\n* the LegDocumentationText(2505) field.                      *\n**************************************************************\n*/\n  EncodedLegDocumentationText = 2493,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedLegDocumentationText(2493) field.      *\n*************************************************\n*/\n  EncodedLegDocumentationTextLen = 2494,\n/*\n***********************************************************\n* Contractual currency forming the basis of a financing   *\n* agreement and associated transactions. Usually, but not *\n* always, the same as the trade currency.                 *\n***********************************************************\n*/\n  LegAgreementCurrency = 2495,\n/*\n**************************************************************\n* A reference to the date the underlying agreement specified *\n* by LegAgreementID(2498) and LegAgreementDesc(2497) was     *\n* executed.                                                  *\n**************************************************************\n*/\n  LegAgreementDate = 2496,\n/*\n***************************************************************\n* The full name of the base standard agreement, annexes and   *\n* amendments in place between the principals applicable to a  *\n* financing transaction. See                                  *\n* http://www.fpml.org/coding-scheme/master-agreement-type for *\n* derivative values.                                          *\n***************************************************************\n*/\n  LegAgreementDesc = 2497,\n/*\n***********************************************************\n* A common reference to the applicable standing agreement *\n* between the counterparties to a financing transaction.  *\n***********************************************************\n*/\n  LegAgreementID = 2498,\n/*\n****************************************\n* The version of the master agreement. *\n****************************************\n*/\n  LegAgreementVersion = 2499,\n/*\n**************************************************************\n* Describes the type of broker confirmation executed between *\n* the parties. Can be used as an alternative to              *\n* MasterConfirmationDesc(1962). See                          *\n* http://www.fpml.org/coding-scheme/broker-confirmation-type *\n* for values.                                                *\n**************************************************************\n*/\n  LegBrokerConfirmationDesc = 2500,\n/*\n*************************************************************\n* The date of the ISDA Credit Support Agreement executed    *\n* between the parties and intended to govern collateral     *\n* arrangements for all OTC derivatives transactions between *\n* those parties.                                            *\n*************************************************************\n*/\n  LegCreditSupportAgreementDate = 2501,\n/*\n*******************************************************************\n* The type of ISDA Credit Support Agreement. See                  *\n* http://www.fpml.org/coding-scheme/credit-support-agreement-type *\n* for values.                                                     *\n*******************************************************************\n*/\n  LegCreditSupportAgreementDesc = 2502,\n/*\n****************************************************************\n* A common reference or unique identifier to identify the ISDA *\n* Credit Support Agreement executed between the parties.       *\n****************************************************************\n*/\n  LegCreditSupportAgreementID = 2503,\n/*\n**********************************\n* Identifies type of settlement. *\n**********************************\n*/\n  LegDeliveryType = 2504,\n/*\n****************************************************************\n* A sentence or phrase pertinent to the trade, not a reference *\n* to an external document. E.g. \"To be registered with the     *\n* U.S. Environmental Protection Agency, Acid Rain Division,    *\n* SO2 Allowance Tracking System\".                              *\n****************************************************************\n*/\n  LegDocumentationText = 2505,\n/*\n**********************************************************\n* End date of a financing deal, i.e. the date the seller *\n* reimburses the buyer and takes back control of the     *\n* collateral.                                            *\n**********************************************************\n*/\n  LegEndDate = 2506,\n/*\n***************************************************************\n* Identification of the law governing the transaction. See    *\n* http://www.fpml.org/coding-scheme/governing-law for values. *\n***************************************************************\n*/\n  LegGoverningLaw = 2507,\n/*\n***************************************************************\n* The fraction of the cash consideration that must be         *\n* collateralized, expressed as a percent. A MarginRatio of 2% *\n* indicates that the value of the collateral (after deducting *\n* for \"haircut\") must exceed the cash consideration by 2%.    *\n***************************************************************\n*/\n  LegMarginRatio = 2508,\n/*\n**************************************************************\n* The date that an annexation to the master confirmation was *\n* executed between the parties.                              *\n**************************************************************\n*/\n  LegMasterConfirmationAnnexDate = 2509,\n/*\n*************************************************************\n* Alternative to broker confirmation. The date of the       *\n* confirmation executed between the parties and intended to *\n* govern all relevant transactions between those parties.   *\n*************************************************************\n*/\n  LegMasterConfirmationDate = 2510,\n/*\n**************************************************************\n* The type of master confirmation executed between the       *\n* parties. See                                               *\n* http://www.fpml.org/coding-scheme/master-confirmation-type *\n* for values.                                                *\n**************************************************************\n*/\n  LegMasterConfirmationDesc = 2511,\n/*\n********************************************************************\n* The type of master confirmation annexation executed between      *\n* the parties. See                                                 *\n* http://www.fpml.org/coding-scheme/master-confirmation-annex-type *\n* for values.                                                      *\n********************************************************************\n*/\n  LegMasterConfirmationAnnexDesc = 2512,\n/*\n****************************************************************\n* Start date of a financing deal, i.e. the date the buyer pays *\n* the seller cash and takes control of the collateral.         *\n****************************************************************\n*/\n  LegStartDate = 2513,\n/*\n**********************************\n* Type of financing termination. *\n**********************************\n*/\n  LegTerminationType = 2514,\n/*\n*************************************************************\n* Used for the calculated quantity of the other side of the *\n* currency trade applicable to the allocation instance.     *\n*************************************************************\n*/\n  AllocCalculatedCcyQty = 2515,\n/*\n***************************************************************\n* An encoded collateral request processing instruction to the *\n* receiver.                                                   *\n***************************************************************\n*/\n  CollateralRequestInstruction = 2516,\n/*\n**********************************************************\n* A unique identifier to link together a set or group of *\n* requests.                                              *\n**********************************************************\n*/\n  CollateralRequestLinkID = 2517,\n/*\n**********************************************************\n* Ordinal number of the request within a set or group of *\n* requests.                                              *\n**********************************************************\n*/\n  CollateralRequestNumber = 2518,\n/*\n*************************************************************\n* Total number of request messages within a set or group of *\n* requests.                                                 *\n*************************************************************\n*/\n  TotNumCollateralRequests = 2519,\n/*\n**********************************************************\n* Communicates the underlying condition when the request *\n* response indicates \"warning\".                          *\n**********************************************************\n*/\n  WarningText = 2520,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* WarningText(2520) field in the encoded format specified via  *\n* the MessageEncoding(347) field. If used, the ASCII (English) *\n* representation should also be specified in the               *\n* WarningText(2520) field.                                     *\n****************************************************************\n*/\n  EncodedWarningText = 2521,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedWarningtText(2521) field.              *\n*************************************************\n*/\n  EncodedWarningTextLen = 2522,\n/*\n***************************************************************\n* Indicates whether the order or quote was crossed with       *\n* another order or quote having the same context, e.g. having *\n* accounts with a common ownership.                           *\n***************************************************************\n*/\n  CrossedIndicator = 2523,\n/*\n**********************************************************\n* Used between parties to convey trade reporting status. *\n**********************************************************\n*/\n  TradeReportingIndicator = 2524,\n/*\n****************************************************************\n* Indicates whether the transaction or position was entered    *\n* into between two affiliated firms. I.e. one counterparty has *\n* an ownership interest in the other counterparty but less     *\n* than the majority interest.                                  *\n****************************************************************\n*/\n  AffiliatedFirmsTradeIndicator = 2525,\n/*\n****************************************************************\n* Identifies the swap trade as an \"international\" transaction. *\n****************************************************************\n*/\n  InternationalSwapIndicator = 2526,\n/*\n****************************************************************\n* Indicates a swap that does not have one easily identifiable  *\n* primary underlying asset, but instead involves multiple      *\n* underlying assets within one trade repository's jurisdiction *\n* that belong to different asset classes.                      *\n****************************************************************\n*/\n  MultiAssetSwapIndicator = 2527,\n/*\n******************************\n* Clearing settlement price. *\n******************************\n*/\n  ClearingSettlPrice = 2528,\n/*\n**********************************************************\n* Indicates the type of relative value measurement being *\n* specified.                                             *\n**********************************************************\n*/\n  RelativeValueType = 2530,\n/*\n****************************************************************\n* The valuation of an instrument relative to a base            *\n* measurement specified in RelativeValueType(2530). This value *\n* can be negative.                                             *\n****************************************************************\n*/\n  RelativeValue = 2531,\n/*\n*********************************************\n* Specifies the side of the relative value. *\n*********************************************\n*/\n  RelativeValueSide = 2532,\n/*\n***************************************************************\n* Basis points relative to a benchmark curve on the bid side, *\n* such as LIBOR, or a known security, such as 10Y US Treasury *\n* bond. The benchmark security or curve name is specified in  *\n* the SpreadOrBenchmarkCurveData component.                   *\n***************************************************************\n*/\n  BidSpread = 2533,\n/*\n************************************************************\n* Basis points relative to a benchmark curve on the offer  *\n* side, such as LIBOR, or a known security, such as 10Y US *\n* Treasury bond. The benchmark security or curve name is   *\n* specified in the SpreadOrBenchmarkCurveData component.   *\n************************************************************\n*/\n  OfferSpread = 2534,\n/*\n********************************************\n* Technical event within market data feed. *\n********************************************\n*/\n  MDReportEvent = 2535,\n/*\n***************************************************************\n* Number of reference and market data messages in-between two *\n* MarketDataReport(35=DR) messages.                           *\n***************************************************************\n*/\n  MDReportCount = 2536,\n/*\n*******************************************************\n* Total number of reports related to market segments. *\n*******************************************************\n*/\n  TotNoMarketSegmentReports = 2537,\n/*\n***************************************************\n* Total number of reports related to instruments. *\n***************************************************\n*/\n  TotNoInstrumentReports = 2538,\n/*\n****************************************************************\n* Total number of reports related to party detail information. *\n****************************************************************\n*/\n  TotNoPartyDetailReports = 2539,\n/*\n********************************************************\n* Total number of reports related to party entitlement *\n* information.                                         *\n********************************************************\n*/\n  TotNoEntitlementReports = 2540,\n/*\n*******************************************************\n* Total number of reports related to party risk limit *\n* information.                                        *\n*******************************************************\n*/\n  TotNoRiskLimitReports = 2541,\n/*\n*****************************\n* Status of market segment. *\n*****************************\n*/\n  MarketSegmentStatus = 2542,\n/*\n************************************************\n* Used to classify the type of market segment. *\n************************************************\n*/\n  MarketSegmentType = 2543,\n/*\n*******************************************************\n* Used to further categorize market segments within a *\n* MarketSegmentType(2543).                            *\n*******************************************************\n*/\n  MarketSegmentSubType = 2544,\n/*\n****************************************\n* Identifies a related market segment. *\n****************************************\n*/\n  RelatedMarketSegmentID = 2546,\n/*\n*************************************************************\n* Type of relationship between two or more market segments. *\n*************************************************************\n*/\n  MarketSegmentRelationship = 2547,\n/*\n****************************************************************\n* Identifies an entire suite of products for which the auction *\n* order type rule applies.                                     *\n****************************************************************\n*/\n  AuctionTypeProductComplex = 2549,\n/*\n***********************************\n* Lower boundary for price range. *\n***********************************\n*/\n  StartPriceRange = 2551,\n/*\n***********************************\n* Upper boundary for price range. *\n***********************************\n*/\n  EndPriceRange = 2552,\n/*\n**********************************************\n* Maximum range expressed as absolute value. *\n**********************************************\n*/\n  PriceRangeValue = 2553,\n/*\n******************************************\n* Maximum range expressed as percentage. *\n******************************************\n*/\n  PriceRangePercentage = 2554,\n/*\n************************************************************\n* Identifies an entire suite of products in the context of *\n* trading rules related to price ranges.                   *\n************************************************************\n*/\n  PriceRangeProductComplex = 2555,\n/*\n**************************************\n* Identifier for a price range rule. *\n**************************************\n*/\n  PriceRangeRuleID = 2556,\n/*\n***************************************************************\n* The percentage factor to be applied to trading rule         *\n* parameters (e.g. price ranges, size ranges, etc.) when fast *\n* market conditions are applicable.                           *\n***************************************************************\n*/\n  FastMarketPercentage = 2557,\n/*\n******************************************************\n* Indicates whether single sided quotes are allowed. *\n******************************************************\n*/\n  QuoteSideIndicator = 2559,\n/*\n*************************************************************\n* Identifies an entire suite of products which are eligible *\n* for the creation of flexible securities.                  *\n*************************************************************\n*/\n  FlexProductEligibilityComplex = 2561,\n/*\n**************************************************************\n* Represents the total number of multileg securities or user *\n* defined securities that make up the security.              *\n**************************************************************\n*/\n  NumOfComplexInstruments = 2562,\n/*\n***************************************************************\n* Specifies the time interval used for netting market data in *\n* a price depth feed.                                         *\n***************************************************************\n*/\n  MarketDepthTimeInterval = 2563,\n/*\n**********************************************************\n* The time unit associated with the time interval of the *\n* netting of market data in a price depth feed.          *\n**********************************************************\n*/\n  MarketDepthTimeIntervalUnit = 2564,\n/*\n**************************************************************\n* Specifies the time interval between two repetitions of the *\n* same market data for cyclic recovery feeds.                *\n**************************************************************\n*/\n  MDRecoveryTimeInterval = 2565,\n/*\n***************************************************************\n* The time unit associated with the time interval between two *\n* cycles of the same market data in cyclic data recovery      *\n* feeds.                                                      *\n***************************************************************\n*/\n  MDRecoveryTimeIntervalUnit = 2566,\n/*\n****************************************\n* Primary service location identifier. *\n****************************************\n*/\n  PrimaryServiceLocationID = 2567,\n/*\n*******************************************************\n* Secondary or alternate service location identifier. *\n*******************************************************\n*/\n  SecondaryServiceLocationID = 2568,\n/*\n********************************************************\n* Identifies an entire suite of products for which the *\n* matching rule applies.                               *\n********************************************************\n*/\n  MatchRuleProductComplex = 2569,\n/*\n******************************************************\n* Specifies the kind of priority given to customers. *\n******************************************************\n*/\n  CustomerPriority = 2570,\n/*\n**************************************************************\n* Identifies an entire suite of products for which the price *\n* tick rule applies.                                         *\n**************************************************************\n*/\n  TickRuleProductComplex = 2571,\n/*\n******************************************\n* Previous day's adjusted open interest. *\n******************************************\n*/\n  PreviousAdjustedOpenInterest = 2572,\n/*\n********************************************\n* Previous day's unadjusted open interest. *\n********************************************\n*/\n  PreviousUnadjustedOpenInterest = 2573,\n/*\n***************************************************************\n* Indicates if a given option instrument permits low exercise *\n* prices (LEPO).                                              *\n***************************************************************\n*/\n  LowExercisePriceOptionIndicator = 2574,\n/*\n*********************************************************\n* Indicates if a given instrument is eligible for block *\n* trading.                                              *\n*********************************************************\n*/\n  BlockTradeEligibilityIndicator = 2575,\n/*\n*********************************************************\n* Specifies the number of decimal places for instrument *\n* prices.                                               *\n*********************************************************\n*/\n  InstrumentPricePrecision = 2576,\n/*\n**************************************************************\n* Specifies the number of decimal places for exercise price. *\n**************************************************************\n*/\n  StrikePricePrecision = 2577,\n/*\n********************************************************\n* Original exercise price, e.g. after corporate action *\n* requiring changes.                                   *\n********************************************************\n*/\n  OrigStrikePrice = 2578,\n/*\n**********************************************************\n* Specifies a suitable settlement sub-method for a given *\n* settlement method.                                     *\n**********************************************************\n*/\n  SettlSubMethod = 2579,\n/*\n**********************************************\n* Relative identification of a business day. *\n**********************************************\n*/\n  BusinessDayType = 2581,\n/*\n***************************************************************\n* Constant value required for the calculation of the clearing *\n* price, e.g. for variance futures.                           *\n***************************************************************\n*/\n  ClearingPriceOffset = 2582,\n/*\n***************************************************************\n* Constant value required for the calculation of the clearing *\n* quantity, e.g. for variance futures.                        *\n***************************************************************\n*/\n  VegaMultiplier = 2583,\n/*\n**********************************************\n* Number of trading business days in a year. *\n**********************************************\n*/\n  AnnualTradingBusinessDays = 2584,\n/*\n***********************************************************\n* Number of trading business days over the lifetime of an *\n* instrument.                                             *\n***********************************************************\n*/\n  TotalTradingBusinessDays = 2585,\n/*\n************************************************************\n* Number of actual trading business days of an instrument. *\n************************************************************\n*/\n  TradingBusinessDays = 2586,\n/*\n***********************************************************\n* Actual or realized variance of an instrument used to    *\n* calculate settlement prices, e.g. for variance futures. *\n***********************************************************\n*/\n  RealizedVariance = 2587,\n/*\n**************************************************************\n* Standard variance (over the lifetime of an instrument) or  *\n* initial variance used to calculate settlement prices, e.g. *\n* for variance futures.                                      *\n**************************************************************\n*/\n  StandardVariance = 2588,\n/*\n*************************************************************\n* Closing price of the underlying required to calculate the *\n* RealizedVariance(2587).                                   *\n*************************************************************\n*/\n  RelatedClosePrice = 2589,\n/*\n****************************\n* Overnight interest rate. *\n****************************\n*/\n  OvernightInterestRate = 2590,\n/*\n**************************************************************\n* The economic cost of the variation margin from one trading *\n* day to the next.                                           *\n**************************************************************\n*/\n  AccumulatedReturnModifiedVariationMargin = 2591,\n/*\n***********************************************\n* Specifies how the calculation will be made. *\n***********************************************\n*/\n  CalculationMethod = 2592,\n/*\n********************************\n* The type of order attribute. *\n********************************\n*/\n  OrderAttributeType = 2594,\n/*\n****************************************************************\n* The value associated with the order attribute type specified *\n* in OrderAttributeType(2594).                                 *\n****************************************************************\n*/\n  OrderAttributeValue = 2595,\n/*\n***************************************************************\n* Indicates that the party has taken a position on both a put *\n* and a call on the same underlying asset.                    *\n***************************************************************\n*/\n  DeltaCrossed = 2596,\n/*\n****************************************************************\n* Indicates whether the official settlement price as announced *\n* by the related exchange is applicable, in accordance with    *\n* the ISDA 2002 definitions. Applicable only to futures        *\n* contracts.                                                   *\n****************************************************************\n*/\n  ComplexEventFuturesPriceValuation = 2597,\n/*\n****************************************************************\n* Indicates whether the official settlement price as announced *\n* by the related exchange is applicable, in accordance with    *\n* the ISDA 2002 definitions. Applicable only to options        *\n* contracts.                                                   *\n****************************************************************\n*/\n  ComplexEventOptionsPriceValuation = 2598,\n/*\n**************************************************************\n* Specifies the fallback provisions for the hedging party in *\n* the determination of the final settlement price.           *\n**************************************************************\n*/\n  ComplexEventPVFinalPriceElectionFallback = 2599,\n/*\n***************************************************************\n* The point on the floating rate index curve. Sample values:  *\n* M = combination of a number between 1-12 and an \"M\" for     *\n* month, e.g. 3M                                              *\n* Y = combination of number between 1-100 and a \"Y\" for year, *\n* e.g. 10Y                                                    *\n* 10Y-OLD = see above, then add \"-OLD\" when appropriate       *\n* INTERPOLATED = the point is mathematically derived          *\n* 2/2031 5 3/8 = the point is stated via a combination of     *\n* maturity month / year and coupon.                           *\n***************************************************************\n*/\n  StrikeIndexCurvePoint = 2600,\n/*\n******************************************************\n* The quote side from which the index price is to be *\n* determined.                                        *\n******************************************************\n*/\n  StrikeIndexQuote = 2601,\n/*\n***************************************************************\n* Defines how adjustments will be made to the contract should *\n* one or more of the extraordinary events occur.              *\n***************************************************************\n*/\n  ExtraordinaryEventAdjustmentMethod = 2602,\n/*\n**************************************************************\n* For a share option trade, indicates whether the instrument *\n* is to be treated as an 'exchange look-alike'.              *\n**************************************************************\n*/\n  ExchangeLookAlike = 2603,\n/*\n***************************************************************\n* The point on the floating rate index curve. Sample values:  *\n* M = combination of a number between 1-12 and an \"M\" for     *\n* month, e.g. 3M                                              *\n* Y = combination of number between 1-100 and a \"Y\" for year, *\n* e.g. 10Y                                                    *\n* 10Y-OLD = see above, then add \"-OLD\" when appropriate       *\n* INTERPOLATED = the point is mathematically derived          *\n* 2/2031 5 3/8 = the point is stated via a combination of     *\n* maturity month / year and coupon.                           *\n***************************************************************\n*/\n  LegStrikeIndexCurvePoint = 2604,\n/*\n******************************************************\n* The quote side from which the index price is to be *\n* determined.                                        *\n******************************************************\n*/\n  LegStrikeIndexQuote = 2605,\n/*\n***************************************************************\n* Defines how adjustments will be made to the contract should *\n* one or more of the extraordinary events occur.              *\n***************************************************************\n*/\n  LegExtraordinaryEventAdjustmentMethod = 2606,\n/*\n**************************************************************\n* For a share option trade, indicates whether the instrument *\n* is to be treated as an 'exchange look-alike'.              *\n**************************************************************\n*/\n  LegExchangeLookAlike = 2607,\n/*\n****************************************************************\n* Indicates whether the official settlement price as announced *\n* by the related exchange is applicable, in accordance with    *\n* the ISDA 2002 definitions. Applicable only to futures        *\n* contracts.                                                   *\n****************************************************************\n*/\n  LegComplexEventFuturesPriceValuation = 2608,\n/*\n****************************************************************\n* Indicates whether the official settlement price as announced *\n* by the related exchange is applicable, in accordance with    *\n* the ISDA 2002 definitions. Applicable only to options        *\n* contracts.                                                   *\n****************************************************************\n*/\n  LegComplexEventOptionsPriceValuation = 2609,\n/*\n**************************************************************\n* Specifies the fallback provisions for the hedging party in *\n* the determination of the final settlement price            *\n**************************************************************\n*/\n  LegComplexEventPVFinalPriceElectionFallback = 2610,\n/*\n****************************************************************\n* Indicates whether the official settlement price as announced *\n* by the related exchange is applicable, in accordance with    *\n* the ISDA 2002 definitions. Applicable only to futures        *\n* contracts.                                                   *\n****************************************************************\n*/\n  UnderlyingComplexEventFuturesPriceValuation = 2611,\n/*\n****************************************************************\n* Indicates whether the official settlement price as announced *\n* by the related exchange is applicable, in accordance with    *\n* the ISDA 2002 definitions. Applicable only to options        *\n* contracts.                                                   *\n****************************************************************\n*/\n  UnderlyingComplexEventOptionsPriceValuation = 2612,\n/*\n**************************************************************\n* Specifies the fallback provisions for the hedging party in *\n* the determination of the final settlement price            *\n**************************************************************\n*/\n  UnderlyingComplexEventPVFinalPriceElectionFallback = 2613,\n/*\n****************************************************\n* Notional value for the equity or bond underlier. *\n****************************************************\n*/\n  UnderlyingNotional = 2614,\n/*\n**************************************************************\n* Specifies the currency denomination of the notional value. *\n* Uses ISO 4217 currency codes.                              *\n**************************************************************\n*/\n  UnderlyingNotionalCurrency = 2615,\n/*\n***************************************************************\n* Specifies the method of determining the notional amount.    *\n* See: http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                 *\n***************************************************************\n*/\n  UnderlyingNotionalDeterminationMethod = 2616,\n/*\n**************************************************************\n* Specifies the conditions that govern the adjustment to the *\n* number of units of the return swap.                        *\n**************************************************************\n*/\n  UnderlyingNotionalAdjustments = 2617,\n/*\n************************************************************\n* Unique identifier for a position entity. Refer to        *\n* PosMaintRptID(721) for a unique identifier of a position *\n* report message.                                          *\n************************************************************\n*/\n  PositionID = 2618,\n/*\n**************************************************************\n* Cross reference to another notional amount for duplicating *\n* its properties.                                            *\n**************************************************************\n*/\n  UnderlyingNotionalXIDRef = 2619,\n/*\n**********************************************************\n* In the case of an index underlier specifies the unique *\n* identifier for the referenced futures contract.        *\n**********************************************************\n*/\n  UnderlyingFutureID = 2620,\n/*\n**********************************************************\n* Identifies the source of the UnderlyingFutureID(2620). *\n**********************************************************\n*/\n  UnderlyingFutureIDSource = 2621,\n/*\n***************************************************************\n* The point on the floating rate index curve. Sample values:  *\n* M = combination of a number between 1-12 and an \"M\" for     *\n* month, e.g. 3M                                              *\n* Y = combination of number between 1-100 and a \"Y\" for year, *\n* e.g. 10Y                                                    *\n* 10Y-OLD = see above, then add \"-OLD\" when appropriate       *\n* INTERPOLATED = the point is mathematically derived          *\n* 2/2031 5 3/8 = the point is stated via a combination of     *\n* maturity month / year and coupon.                           *\n***************************************************************\n*/\n  UnderlyingStrikeIndexCurvePoint = 2622,\n/*\n******************************************************\n* The quote side from which the index price is to be *\n* determined.                                        *\n******************************************************\n*/\n  UnderlyingStrikeIndexQuote = 2623,\n/*\n***************************************************************\n* Defines how adjustments will be made to the contract should *\n* one or more of the extraordinary events occur.              *\n***************************************************************\n*/\n  UnderlyingExtraordinaryEventAdjustmentMethod = 2624,\n/*\n**************************************************************\n* For a share option trade, indicates whether the instrument *\n* is to be treated as an 'exchange look-alike'.              *\n**************************************************************\n*/\n  UnderlyingExchangeLookAlike = 2625,\n/*\n************************************************************\n* The limit of average percentage of individual securities *\n* traded in a day or a number of days.                     *\n************************************************************\n*/\n  UnderlyingAverageVolumeLimitationPercentage = 2626,\n/*\n*************************************************************\n* Specifies the limitation period for average daily trading *\n* volume in number of days.                                 *\n*************************************************************\n*/\n  UnderlyingAverageVolumeLimitationPeriodDays = 2627,\n/*\n************************************************************\n* Indicates whether the underlier is a depository receipt. *\n************************************************************\n*/\n  UnderlyingDepositoryReceiptIndicator = 2628,\n/*\n****************************************************************\n* The number of units (units of the index or number of         *\n* securities, par amount of a bond) that constitute the        *\n* underlier. In the case of a basket swap, this is used to     *\n* reference both the number of basket units, and the number of *\n* each asset components of the basket when these are expressed *\n* in absolute terms.                                           *\n****************************************************************\n*/\n  UnderlyingOpenUnits = 2629,\n/*\n***************************************************************\n* Specifies the basket divisor amount. This value is normally *\n* used to adjust the constituent weight for pricing or to     *\n* adjust for dividends, or other corporate actions.           *\n***************************************************************\n*/\n  UnderlyingBasketDivisor = 2630,\n/*\n***************************************************************\n* Identifier for referencing this UnderlyingInstrument from a *\n* parent instrument or a convertible instrument.              *\n***************************************************************\n*/\n  UnderlyingInstrumentXID = 2631,\n/*\n*******************************************************\n* The type of value in CurrentCollateralAmount(1704). *\n*******************************************************\n*/\n  CollateralAmountType = 2632,\n/*\n*******************************************************************\n* Used to provide more granular fee types related to a value      *\n* of MiscFeeType(139).                                            *\n* See                                                             *\n* http://www.fixtradingcommunity.org/codelists#Misc_Fee_Sub_Types *\n* for code list of applicable fees. Other fee sub-types may be    *\n* used by mutual agreement of the counterparties.                 *\n*******************************************************************\n*/\n  MiscFeeSubType = 2634,\n/*\n*****************************************************\n* The amount of the specified MiscFeeSubType(2634). *\n*****************************************************\n*/\n  MiscFeeSubTypeAmt = 2635,\n/*\n*************************************************************\n* Can be used to provide an optional textual description of *\n* the fee sub-type.                                         *\n*************************************************************\n*/\n  MiscFeeSubTypeDesc = 2636,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedMiscFeeSubTypeDesc(2638) field.        *\n*************************************************\n*/\n  EncodedMiscFeeSubTypeDescLen = 2637,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* MiscFeeSubTypeDesc(2636) field in the encoded format        *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the MiscFeeSubTypeDesc(2636) field.                         *\n***************************************************************\n*/\n  EncodedMiscFeeSubTypeDesc = 2638,\n/*\n**************************\n* The commission amount. *\n**************************\n*/\n  CommissionAmount = 2640,\n/*\n***********************************************************\n* Indicates what type of commission is being expressed in *\n* CommissionAmount(2640).                                 *\n***********************************************************\n*/\n  CommissionAmountType = 2641,\n/*\n*****************************************************\n* Specifies the basis or unit used to calculate the *\n* commission.                                       *\n*****************************************************\n*/\n  CommissionBasis = 2642,\n/*\n****************************************************************\n* Specifies the currency denomination of the commission amount *\n* if different from the trade's currency. Uses ISO 4217        *\n* currency codes.                                              *\n****************************************************************\n*/\n  CommissionCurrency = 2643,\n/*\n****************************************\n* The commission rate unit of measure. *\n****************************************\n*/\n  CommissionUnitOfMeasure = 2644,\n/*\n****************************************************************\n* Indicates the currency of the unit of measure. Conditionally *\n* required when CommissionUnitOfMeasure(2644) = Ccy (Amount of *\n* currency).                                                   *\n****************************************************************\n*/\n  CommissionUnitOfMeasureCurrency = 2645,\n/*\n****************************************************************\n* The commission rate when CommissionAmount(2640) is based on  *\n* a percentage of quantity, amount per unit or a factor of     *\n* \"unit of measure\". If the rate is a percentage or expressed  *\n* in basis points, use the decimalized form, e.g. \"0.05\" for a *\n* 5% commission or \"0.005\" for 50 basis points.                *\n****************************************************************\n*/\n  CommissionRate = 2646,\n/*\n****************************************************************\n* Indicates whether the amount in CommissionAmount(2640) is to *\n* be shared with a third party, e.g. as part of a directed     *\n* brokerage commission sharing arrangement.                    *\n****************************************************************\n*/\n  CommissionSharedIndicator = 2647,\n/*\n****************************************************************\n* Commission amount to be shared with a third party, e.g. as   *\n* part of a directed brokerage commission sharing arrangement. *\n* If specified, this amount should not exceed the amount in    *\n* CommissionAmount(2640).                                      *\n****************************************************************\n*/\n  CommissionAmountShared = 2648,\n/*\n***********************************************************\n* Identifies the leg of the trade the entry applies to by *\n* referencing the leg's LegID(1788).                      *\n***********************************************************\n*/\n  CommissionLegRefID = 2649,\n/*\n**********************************\n* Description of the commission. *\n**********************************\n*/\n  CommissionDesc = 2650,\n/*\n*****************************************************\n* Byte length of the encoded (non-ASCII characters) *\n* EncodedCommissionDesc(2652) field.                *\n*****************************************************\n*/\n  EncodedCommissionDescLen = 2651,\n/*\n**************************************************************\n* Encoded (non-ASCII characters) representation of the       *\n* CommissionDesc(2650) field in the encoded format specified *\n* via the MessageEncoding(347) field.  If used, the ASCII    *\n* (English) representation should also be specified in the   *\n* CommissionDesc(2650) field.                                *\n**************************************************************\n*/\n  EncodedCommissionDesc = 2652,\n/*\n**************************\n* The commission amount. *\n**************************\n*/\n  AllocCommissionAmount = 2654,\n/*\n***********************************************************\n* Indicates what type of commission is being expressed in *\n* AllocCommissionAmount(2654).                            *\n***********************************************************\n*/\n  AllocCommissionAmountType = 2655,\n/*\n*****************************************************\n* Specifies the basis or unit used to calculate the *\n* commission.                                       *\n*****************************************************\n*/\n  AllocCommissionBasis = 2656,\n/*\n****************************************************************\n* Specifies the currency denomination of the commission amount *\n* if different from the trade's currency. Uses ISO 4217        *\n* currency codes.                                              *\n****************************************************************\n*/\n  AllocCommissionCurrency = 2657,\n/*\n****************************************\n* The commission rate unit of measure. *\n****************************************\n*/\n  AllocCommissionUnitOfMeasure = 2658,\n/*\n****************************************************************\n* Indicates the currency of the unit of measure. Conditionally *\n* required when AllocCommissionUnitOfMeasure(2658) = Ccy       *\n* (Currency).                                                  *\n****************************************************************\n*/\n  AllocCommissionUnitOfMeasureCurrency = 2659,\n/*\n***************************************************************\n* The commission rate when AllocCommissionAmount(2654) is     *\n* based on a percentage of quantity, amount per unit or a     *\n* factor of \"unit of measure\". If the rate is a percentage or *\n* expressed in basis points, use the decimalized form, e.g.   *\n* \"0.05\" for a 5% commission or \"0.005\" for 50 basis points.  *\n***************************************************************\n*/\n  AllocCommissionRate = 2660,\n/*\n***************************************************************\n* Indicates whether the amount in AllocCommissionAmount(2654) *\n* is to be shared with a third party, e.g. as part of a       *\n* directed brokerage commission sharing arrangement.          *\n***************************************************************\n*/\n  AllocCommissionSharedIndicator = 2661,\n/*\n****************************************************************\n* Commission amount to be shared with a third party, e.g. as   *\n* part of a directed brokerage commission sharing arrangement. *\n* If specified, this amount should not exceed the amount in    *\n* AllocCommissionAmount(2654).                                 *\n****************************************************************\n*/\n  AllocCommissionAmountShared = 2662,\n/*\n***********************************************************\n* Identifies the leg of the trade the entry applies to by *\n* referencing the leg's LegID(1788).                      *\n***********************************************************\n*/\n  AllocCommissionLegRefID = 2663,\n/*\n**********************************\n* Description of the commission. *\n**********************************\n*/\n  AllocCommissionDesc = 2664,\n/*\n*****************************************************\n* Byte length of the encoded (non-ASCII characters) *\n* EncodedAllocCommissionDesc(2666) field.           *\n*****************************************************\n*/\n  EncodedAllocCommissionDescLen = 2665,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* AllocCommissionDesc(2664) field in the encoded format       *\n* specified via the MessageEncoding(347) field.  If used, the *\n* ASCII (English) representation should also be specified in  *\n* the AllocCommissionDesc(2664) field.                        *\n***************************************************************\n*/\n  EncodedAllocCommissionDesc = 2666,\n/*\n****************************************************************\n* Indicates that the order or trade originates from a computer *\n* program or algorithm requiring little-to-no human            *\n* intervention.                                                *\n****************************************************************\n*/\n  AlgorithmicTradeIndicator = 2667,\n/*\n****************************************************************\n* Specifies the type of regulatory trade publication.          *\n* Additional reasons for the publication type may be specified *\n* in TrdRegPublicationReason(2670).                            *\n****************************************************************\n*/\n  TrdRegPublicationType = 2669,\n/*\n*************************************************************\n* Additional reason for trade publication type specified in *\n* TrdRegPublicationType(2669).                              *\n* Reasons may be specific to regulatory trade publication   *\n* rules.                                                    *\n*************************************************************\n*/\n  TrdRegPublicationReason = 2670,\n/*\n**********************************************************\n* Used between parties to convey trade reporting status. *\n**********************************************************\n*/\n  SideTradeReportingIndicator = 2671,\n/*\n****************************************************************\n* Unique message identifier for a cross request as assigned by *\n* the submitter of the request.                                *\n****************************************************************\n*/\n  CrossRequestID = 2672,\n/*\n*************************************************************\n* Identifier assigned by a matching system to a match event *\n* containing multiple executions.                           *\n*************************************************************\n*/\n  FillMatchID = 2673,\n/*\n*************************************************************\n* Identifier assigned by a matching system to a price level *\n* (e.g. match step, clip) within a match event containing   *\n* multiple executions.                                      *\n*************************************************************\n*/\n  FillMatchSubID = 2674,\n/*\n*****************************************\n* Reason for submission of mass action. *\n*****************************************\n*/\n  MassActionReason = 2675,\n/*\n*************************************************************\n* Maximum deviation, in percentage terms, of an execution   *\n* price from a reference price, e.g. the initial price of a *\n* match event.                                              *\n*************************************************************\n*/\n  MaximumPricePercentage = 2676,\n/*\n****************************************************************\n* Reason for order being unaffected by mass action even though *\n* it belongs to the orders covered by MassActionScope(1374).   *\n****************************************************************\n*/\n  NotAffectedReason = 2677,\n/*\n***************************************************\n* Total number of orders unaffected by either the *\n* OrderMassActionRequest(35=CA) or                *\n* OrderMassCancelRequest(35=Q).                   *\n***************************************************\n*/\n  TotalNotAffectedOrders = 2678,\n/*\n********************************************************\n* Change of ownership of an order to a specific party. *\n********************************************************\n*/\n  OrderOwnershipIndicator = 2679,\n/*\n***************************************************************\n* Account mnemonic as agreed between buy and sell sides, e.g. *\n* broker and institution or investor/intermediary and fund    *\n* manager.                                                    *\n***************************************************************\n*/\n  LegAccount = 2680,\n/*\n**************************************************************\n* Specifies an option instrument's \"in the money\" condition. *\n**************************************************************\n*/\n  InTheMoneyCondition = 2681,\n/*\n****************************************************************\n* Specifies an option instrument's \"in the money\" condition in *\n* general terms.                                               *\n****************************************************************\n*/\n  LegInTheMoneyCondition = 2682,\n/*\n****************************************************************\n* Specifies an option instrument's \"in the money\" condition in *\n* general terms.                                               *\n****************************************************************\n*/\n  UnderlyingInTheMoneyCondition = 2683,\n/*\n****************************************************************\n* Specifies an option instrument's \"in the money\" condition in *\n* general terms.                                               *\n****************************************************************\n*/\n  DerivativeInTheMoneyCondition = 2684,\n/*\n**************************************************************\n* Identifies whether the option instrument is eligible for   *\n* contrary instructions at the time of exercise.  The        *\n* contrariness of an instruction will be determined in the   *\n* context of InTheMoneyCondition(2681).  When not specified, *\n* the eligibility is undefined or not applicable.            *\n**************************************************************\n*/\n  ContraryInstructionEligibilityIndicator = 2685,\n/*\n**************************************************************\n* Identifies whether the option instrument is eligible for   *\n* contrary instructions at the time of exercise.  The        *\n* contrariness of an instruction will be determined in the   *\n* context of LegInTheMoneyCondition(2682).  When not         *\n* specified, the eligibility is undefined or not applicable. *\n**************************************************************\n*/\n  LegContraryInstructionEligibilityIndicator = 2686,\n/*\n**************************************************************\n* Identifies whether the option instrument is eligible for   *\n* contrary instructions at the time of exercise.  The        *\n* contrariness of an instruction will be determined in the   *\n* context of UnderlyingInTheMoneyCondition(2683).  When not  *\n* specified, the eligibility is undefined or not applicable. *\n**************************************************************\n*/\n  UnderlyingContraryInstructionEligibilityIndicator = 2687,\n/*\n**************************************************************\n* Identifies whether the option instrument is eligible for   *\n* contrary instructions at the time of exercise.  The        *\n* contrariness of an instruction will be determined in the   *\n* context of DerivativeInTheMoneyCondition(2684).  When not  *\n* specified, the eligibility is undefined or not applicable. *\n**************************************************************\n*/\n  DerivativeContraryInstructionEligibilityIndicator = 2688,\n/*\n**************************************************************\n* Market price of the collateral, either from market sources *\n* or pre-agreed by the counterparties.                       *\n**************************************************************\n*/\n  CollateralMarketPrice = 2689,\n/*\n****************************************************************\n* Percentage of over-collateralization particularly when       *\n* CollateralAmountType(2632) = 4 (Additional collateral value) *\n****************************************************************\n*/\n  CollateralPercentOverage = 2690,\n/*\n*************************************************\n* Market associated with the collateral amount. *\n*************************************************\n*/\n  SideCollateralAmountMarketID = 2692,\n/*\n*********************************************************\n* Market segment associated with the collateral amount. *\n*********************************************************\n*/\n  SideCollateralAmountMarketSegmentID = 2693,\n/*\n*******************************************************\n* The type of value in CurrentCollateralAmount(1704). *\n*******************************************************\n*/\n  SideCollateralAmountType = 2694,\n/*\n****************************************************************\n* Specifies the currency of the collateral; optional, defaults *\n* to the settlement currency if not specified. Uses ISO 4217   *\n* Currency Code.                                               *\n****************************************************************\n*/\n  SideCollateralCurrency = 2695,\n/*\n******************************************************\n* Foreign exchange rate used to compute the          *\n* SideCurrentCollateralAmount(2702) from the         *\n* SideCollateralCurrency(2695) and the Currency(15). *\n******************************************************\n*/\n  SideCollateralFXRate = 2696,\n/*\n**************************************************************\n* Specifies whether or not SideCollateralFXRate(2696) should *\n* be multiplied or divided.                                  *\n**************************************************************\n*/\n  SideCollateralFXRateCalc = 2697,\n/*\n**************************************************************\n* Market price of the collateral, either from market sources *\n* or pre-agreed by the counterparties.                       *\n**************************************************************\n*/\n  SideCollateralMarketPrice = 2698,\n/*\n*************************************************************\n* Percentage of over-collateralization particularly when    *\n* SideCollateralAmountType(2694) = 4 (Additional collateral *\n* value).                                                   *\n*************************************************************\n*/\n  SideCollateralPercentOverage = 2699,\n/*\n**************************************************************\n* Identifier of the collateral portfolio when reporting on a *\n* portfolio basis.                                           *\n**************************************************************\n*/\n  SideCollateralPortfolioID = 2700,\n/*\n*************************************************\n* Type of collateral on deposit being reported. *\n*************************************************\n*/\n  SideCollateralType = 2701,\n/*\n**********************************************************\n* Currency value currently attributed to the collateral. *\n**********************************************************\n*/\n  SideCurrentCollateralAmount = 2702,\n/*\n****************************************************************\n* Indicates, if \"Y\", that a stated valuation includes a        *\n* haircut, e.g. that the stated value reflects the subtraction *\n* of the haircut. Note that a value of \"N\" does not imply a    *\n* haircut is not applicable, only that the haircut (if any) is *\n* not reflected in the stated valuation.                       *\n****************************************************************\n*/\n  SideHaircutIndicator = 2703,\n/*\n***************************************************************\n* Identifies the type of execution destination for the order. *\n***************************************************************\n*/\n  ExDestinationType = 2704,\n/*\n************************************\n* Security identifier of the bond. *\n************************************\n*/\n  AdditionalTermBondSecurityID = 40001,\n/*\n**********************************************\n* Identifies the source scheme of the        *\n* AdditionalTermBondSecurityID(40001) value. *\n**********************************************\n*/\n  AdditionalTermBondSecurityIDSource = 40002,\n/*\n****************************\n* Description of the bond. *\n****************************\n*/\n  AdditionalTermBondDesc = 40003,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedAdditionalTermBondDesc(40005) field.   *\n*************************************************\n*/\n  EncodedAdditionalTermBondDescLen = 40004,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* AdditionalTermBondDesc(40003) field in the encoded format   *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the AdditionalTermBondDesc(40003) field.                    *\n***************************************************************\n*/\n  EncodedAdditionalTermBondDesc = 40005,\n/*\n************************************************************\n* Specifies the currency the bond value is denominated in. *\n* Uses ISO 4217 currency codes.                            *\n************************************************************\n*/\n  AdditionalTermBondCurrency = 40006,\n/*\n***********************\n* Issuer of the bond. *\n***********************\n*/\n  AdditionalTermBondIssuer = 40007,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedAdditionalTermBondIssuer(40009) field. *\n*************************************************\n*/\n  EncodedAdditionalTermBondIssuerLen = 40008,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* AdditionalTermBondIssuer(40007) field in the encoded format *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the AdditionalTermBondIssuer(40007) field.                  *\n***************************************************************\n*/\n  EncodedAdditionalTermBondIssuer = 40009,\n/*\n***********************************************************\n* Specifies the bond's payment priority in the event of a *\n* default.                                                *\n***********************************************************\n*/\n  AdditionalTermBondSeniority = 40010,\n/*\n****************************\n* Coupon type of the bond. *\n****************************\n*/\n  AdditionalTermBondCouponType = 40011,\n/*\n*******************************************************\n* Coupon rate of the bond.  See also CouponRate(223). *\n*******************************************************\n*/\n  AdditionalTermBondCouponRate = 40012,\n/*\n**********************************\n* The maturity date of the bond. *\n**********************************\n*/\n  AdditionalTermBondMaturityDate = 40013,\n/*\n******************************\n* The par value of the bond. *\n******************************\n*/\n  AdditionalTermBondParValue = 40014,\n/*\n************************************\n* Total issued amount of the bond. *\n************************************\n*/\n  AdditionalTermBondCurrentTotalIssuedAmount = 40015,\n/*\n***************************************************************\n* Time unit multiplier for the frequency of the bond's coupon *\n* payment.                                                    *\n***************************************************************\n*/\n  AdditionalTermBondCouponFrequencyPeriod = 40016,\n/*\n****************************************************************\n* Time unit associated with the frequency of the bond's coupon *\n* payment.                                                     *\n****************************************************************\n*/\n  AdditionalTermBondCouponFrequencyUnit = 40017,\n/*\n****************************************************************\n* The day count convention used in interest calculations for a *\n* bond or an interest bearing security.                        *\n****************************************************************\n*/\n  AdditionalTermBondDayCount = 40018,\n/*\n**************************************************************\n* Indicates whether the condition precedent bond is          *\n* applicable. The swap contract is only valid if the bond is *\n* issued and if there is any dispute over the terms of fixed *\n* stream then the bond terms would be used.                  *\n**************************************************************\n*/\n  AdditionalTermConditionPrecedentBondIndicator = 40020,\n/*\n***********************************************************\n* Indicates whether the discrepancy clause is applicable. *\n***********************************************************\n*/\n  AdditionalTermDiscrepancyClauseIndicator = 40021,\n/*\n********************************************************\n* Specifies the currency the CashSettlAmount(40034) is *\n* denominated in.  Uses ISO 4217 currency codes.       *\n********************************************************\n*/\n  CashSettlCurrency = 40023,\n/*\n****************************************************************\n* The number of business days after settlement conditions have *\n* been satisfied, when the calculation agent is to obtain a    *\n* price quotation on the reference obligation for the purpose  *\n* of cash settlement.                                          *\n****************************************************************\n*/\n  CashSettlValuationFirstBusinessDayOffset = 40024,\n/*\n**************************\n* The time of valuation. *\n**************************\n*/\n  CashSettlValuationTime = 40025,\n/*\n*************************************************************\n* Identifies the business center calendar used at valuation *\n* time for cash settlement purposes e.g. \"GBLO\". See        *\n* http://www.fpml.org/coding-scheme/business-center for     *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  CashSettlBusinessCenter = 40026,\n/*\n***********************************************************\n* The type of quote used to determine the cash settlement *\n* price.                                                  *\n***********************************************************\n*/\n  CashSettlQuoteMethod = 40027,\n/*\n***************************************************************\n* When determining the cash settlement amount, if weighted    *\n* average price quotes are to be obtained for the reference   *\n* obligation, this is the upper limit to the outstanding      *\n* principal balance of the reference obligation for which the *\n* quote should be obtained. If not specifed, the ISDA         *\n* definitions provide for a fallback amount equal to floating *\n* rate payer calculation amount.                              *\n***************************************************************\n*/\n  CashSettlQuoteAmount = 40028,\n/*\n*************************************************************\n* Specifies the currency the CashSettlQuoteAmount(40028) is *\n* denominated in.  Uses ISO 4217 Currency Code.             *\n*************************************************************\n*/\n  CashSettlQuoteCurrency = 40029,\n/*\n****************************************************************\n* When determining the cash settlement amount, if weighted     *\n* average price quotes are to be obtained for the reference    *\n* obligation, this is the minimum intended threshold amount of *\n* outstanding principal balance of the reference obligation    *\n* for which the quote should be obtained.  If not specified,   *\n* the ISDA definitions provide for a fallback amount of the    *\n* lower of either USD1,000,000 (or its equivalent in the       *\n* relevent obligation currency) or the (minimum) quoted        *\n* amount.                                                      *\n****************************************************************\n*/\n  CashSettlMinimumQuoteAmount = 40030,\n/*\n***************************************************************\n* Specifies the currency the                                  *\n* CashSettlMinimumQuoteAmount(40030) is denominated in.  Uses *\n* ISO 4217 Currency Code.                                     *\n***************************************************************\n*/\n  CashSettlMinimumQuoteCurrency = 40031,\n/*\n*************************************************************\n* Identifies the dealer from whom price quotations for the  *\n* reference obligation are obtained for the purpose of cash *\n* settlement valuation calculation.                         *\n*************************************************************\n*/\n  CashSettlDealer = 40032,\n/*\n****************************************************************\n* The number of business days used in the determination of the *\n* cash settlement payment date.                                *\n****************************************************************\n*/\n  CashSettlBusinessDays = 40033,\n/*\n************************************************************\n* The amount paid between the trade parties, seller to the *\n* buyer, for cash settlement on the cash settlement date.  *\n************************************************************\n*/\n  CashSettlAmount = 40034,\n/*\n**************************************************************\n* Used for fixed recovery, this specifies the recovery level *\n* as determined at contract inception, to be applied in the  *\n* event of a default. The factor is used to calculate the    *\n* amount paid by the seller to the buyer for cash settlement *\n* on the cash settlement date. The amount calculated is (1 - *\n* CashSettlRecoveryFactor(40035)) x floating rate payer      *\n* calculation amount. The currency is derived from the       *\n* floating rate payer calculation amount.                    *\n**************************************************************\n*/\n  CashSettlRecoveryFactor = 40035,\n/*\n***********************************************************\n* Indicates whether fixed settlement is applicable or not *\n* applicable in a recovery lock.                          *\n***********************************************************\n*/\n  CashSettlFixedTermIndicator = 40036,\n/*\n****************************************************************\n* Indicates whether accrued interest is included or not in the *\n* value provided in CashSettlAmount(40034).  For cash          *\n* settlement this specifies whether quotations should be       *\n* obtained inclusive or not of accrued interest.               *\n* For physical settlement this specifies whether the buyer     *\n* should deliver the obligation with an outstanding principal  *\n* balance that includes or excludes accrued interest.          *\n****************************************************************\n*/\n  CashSettlAccruedInterestIndicator = 40037,\n/*\n****************************************************************\n* The ISDA defined methodology for determining the final price *\n* of the reference obligation for purposes of cash settlement. *\n****************************************************************\n*/\n  CashSettlValuationMethod = 40038,\n/*\n**************************************\n* A named string value referenced by *\n* UnderlyingSettlTermXIDRef(41315).  *\n**************************************\n*/\n  CashSettlTermXID = 40039,\n/*\n****************************************************************\n* Specifies which contract definition, such as those published *\n* by ISDA, will apply for the terms of the trade. See          *\n* http://www.fpml.org/coding-scheme/contractual-definitions    *\n* for values.                                                  *\n****************************************************************\n*/\n  ContractualDefinition = 40041,\n/*\n*************************************************************\n* Identifies the applicable contract matrix. See            *\n* http://www.fpml.org/coding-scheme/matrix-type-1-0.xml for *\n* values.                                                   *\n*************************************************************\n*/\n  ContractualMatrixSource = 40043,\n/*\n***************************************************************\n* The publication date of the applicable version of the       *\n* contract matrix. If not specified, the ISDA Standard Terms  *\n* Supplement defines rules for which version of the matrix is *\n* applicable.                                                 *\n***************************************************************\n*/\n  ContractualMatrixDate = 40044,\n/*\n********************************************************************\n* Specifies the applicable key into the relevent contract          *\n* matrix.  In the case of 2000 ISDA Definitions Settlement         *\n* Matrix for Early Termination and Swaptions, the                  *\n* ContractualMatrixTerm(40045) is not applicable and is to be      *\n* omitted. See                                                     *\n* http://www.fpml.org/coding-scheme/credit-matrix-transaction-type *\n* for values.                                                      *\n********************************************************************\n*/\n  ContractualMatrixTerm = 40045,\n/*\n****************************************************************\n* Identifies the applicable contractual supplement. See        *\n* http://www.fpml.org/coding-scheme/contractual-supplement for *\n* values.                                                      *\n****************************************************************\n*/\n  FinancingTermSupplementDesc = 40047,\n/*\n*********************************************************\n* The publication date of the applicable version of the *\n* contractual supplement.                               *\n*********************************************************\n*/\n  FinancingTermSupplementDate = 40048,\n/*\n************************\n* Type of swap stream. *\n************************\n*/\n  StreamType = 40050,\n/*\n*************************************************************\n* A short descriptive name given to the payment stream. Eg. *\n* CDS, Fixed, Float, Float2, GBP. The description has no    *\n* intrinsic meaning but should be arbitrarily chosen by the *\n* remitter as reference.                                    *\n*************************************************************\n*/\n  StreamDesc = 40051,\n/*\n********************************************\n* The side of the party paying the stream. *\n********************************************\n*/\n  StreamPaySide = 40052,\n/*\n***********************************************\n* The side of the party receiving the stream. *\n***********************************************\n*/\n  StreamReceiveSide = 40053,\n/*\n***************************************************************\n* Notional, or initial notional value for the payment stream. *\n* Use the PaymentScheduleGrp component to specify the rate    *\n* steps.                                                      *\n***************************************************************\n*/\n  StreamNotional = 40054,\n/*\n*******************************************************\n* Specifies the currency the StreamNotional(40054) is *\n* denominated in.  Uses ISO 4217 currency codes.      *\n*******************************************************\n*/\n  StreamCurrency = 40055,\n/*\n**********************************************************\n* Free form text to specify additional information or    *\n* enumeration description when a standard value does not *\n* apply.                                                 *\n**********************************************************\n*/\n  StreamText = 40056,\n/*\n**********************************\n* The unadjusted effective date. *\n**********************************\n*/\n  UnderlyingStreamEffectiveDateUnadjusted = 40057,\n/*\n**************************************************************\n* The business day convention used to adjust the underlying  *\n* instrument's stream's effective, or relative effective,    *\n* date. Used only to override the business day convention    *\n* specified in the UnderlyingDateAdjustment component within *\n* the UnderlyingInstrument component.                        *\n**************************************************************\n*/\n  UnderlyingStreamEffectiveDateBusinessDayConvention = 40058,\n/*\n**************************************************************\n* The business center calendar used to adjust the underlying *\n* instrument's stream's effective, or relative effective,    *\n* date, e.g. \"GBLO\".                                         *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  UnderlyingStreamEffectiveDateBusinessCenter = 40059,\n/*\n*****************************************************************\n* Specifies the anchor date when the effective date is          *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingStreamEffectiveDateRelativeTo = 40060,\n/*\n****************************************************************\n* Time unit multiplier for the relative effective date offset. *\n****************************************************************\n*/\n  UnderlyingStreamEffectiveDateOffsetPeriod = 40061,\n/*\n*********************************************************\n* Time unit associated with the relative effective date *\n* offset.                                               *\n*********************************************************\n*/\n  UnderlyingStreamEffectiveDateOffsetUnit = 40062,\n/*\n*********************************************************\n* Specifies the day type of the relative effective date *\n* offset.                                               *\n*********************************************************\n*/\n  UnderlyingStreamEffectiveDateOffsetDayType = 40063,\n/*\n********************************\n* The adjusted effective date. *\n********************************\n*/\n  UnderlyingStreamEffectiveDateAdjusted = 40064,\n/*\n************************************\n* The unadjusted termination date. *\n************************************\n*/\n  StreamTerminationDateUnadjusted = 40065,\n/*\n***************************************************************\n* The business day convention used to adjust the instrument's *\n* stream's termination, or relative termination, date. Used   *\n* only to override the business day convention specified in   *\n* the DateAdjustment component within the Instrument          *\n* component.                                                  *\n***************************************************************\n*/\n  StreamTerminationDateBusinessDayConvention = 40066,\n/*\n****************************************************************\n* The business center calendar used to adjust the instrument's *\n* stream's termination, or relative termination, date, e.g.    *\n* \"GBLO\".                                                      *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  StreamTerminationDateBusinessCenter = 40067,\n/*\n*****************************************************************\n* Specifies the anchor date when the termination date is        *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  StreamTerminationDateRelativeTo = 40068,\n/*\n**********************************************************\n* Time unit multiplier for the relative termination date *\n* offset.                                                *\n**********************************************************\n*/\n  StreamTerminationDateOffsetPeriod = 40069,\n/*\n***********************************************************\n* Time unit associated with the relative termination date *\n* offset.                                                 *\n***********************************************************\n*/\n  StreamTerminationDateOffsetUnit = 40070,\n/*\n***********************************************************\n* Specifies the day type of the relative termination date *\n* offset.                                                 *\n***********************************************************\n*/\n  StreamTerminationDateOffsetDayType = 40071,\n/*\n**********************************\n* The adjusted termination date. *\n**********************************\n*/\n  StreamTerminationDateAdjusted = 40072,\n/*\n**************************************************************\n* The business day convention used to adjust calculation     *\n* periods. Used only to override the business day convention *\n* specified in the DateAdjustment component within the       *\n* Instrument component.                                      *\n**************************************************************\n*/\n  StreamCalculationPeriodBusinessDayConvention = 40073,\n/*\n*************************************************************\n* The business center calendar used to adjust calculation   *\n* periods, e.g. \"GBLO\".                                     *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  StreamCalculationPeriodBusinessCenter = 40074,\n/*\n****************************************************************\n* The unadjusted first calculation period start date if before *\n* the effective date.                                          *\n****************************************************************\n*/\n  StreamFirstPeriodStartDateUnadjusted = 40075,\n/*\n***************************************************************\n* The business day convention used to adjust the instrument's *\n* stream's first calculation period start date. Used only to  *\n* override the business day convention specified in the       *\n* DateAdjustment component within the Instrument component.   *\n***************************************************************\n*/\n  StreamFirstPeriodStartDateBusinessDayConvention = 40076,\n/*\n****************************************************************\n* The business center calendar used to adjust the instrument's *\n* stream's first calculation period start date, e.g. \"GBLO\".   *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  StreamFirstPeriodStartDateBusinessCenter = 40077,\n/*\n**************************************************************\n* The adjusted first calculation period start date, if it is *\n* before the effective date.                                 *\n**************************************************************\n*/\n  StreamFirstPeriodStartDateAdjusted = 40078,\n/*\n**************************************************************\n* The unadjusted first start date of the regular calculation *\n* period, if there is an initial stub period.                *\n**************************************************************\n*/\n  StreamFirstRegularPeriodStartDateUnadjusted = 40079,\n/*\n**************************************************************\n* The unadjusted end date of the initial compounding period. *\n**************************************************************\n*/\n  StreamFirstCompoundingPeriodEndDateUnadjusted = 40080,\n/*\n*************************************************************\n* The unadjusted last regular period end date if there is a *\n* final stub period.                                        *\n*************************************************************\n*/\n  StreamLastRegularPeriodEndDateUnadjusted = 40081,\n/*\n***************************************************************\n* Time unit multiplier for the frequency at which calculation *\n* period end dates occur.                                     *\n***************************************************************\n*/\n  StreamCalculationFrequencyPeriod = 40082,\n/*\n****************************************************************\n* Time unit associated with the frequency at which calculation *\n* period end dates occur.                                      *\n****************************************************************\n*/\n  StreamCalculationFrequencyUnit = 40083,\n/*\n****************************************************************\n* The convention for determining the sequence of end dates. It *\n* is used in conjunction with a specified frequency. Used only *\n* to override the roll convention specified in the             *\n* DateAdjustment component within the Instrument component.    *\n****************************************************************\n*/\n  StreamCalculationRollConvention = 40084,\n/*\n*************************************************************\n* The maximum number of days to wait for a quote from the   *\n* disrupted settlement rate option before proceding to this *\n* method.                                                   *\n*************************************************************\n*/\n  SettlRatePostponementMaximumDays = 40086,\n/*\n**************************************************\n* Identifies the source of the rate information. *\n**************************************************\n*/\n  LegPaymentStreamNonDeliverableSettlRateSource = 40087,\n/*\n*************************************************************\n* Indicates whether to request a settlement rate quote from *\n* the market.                                               *\n*************************************************************\n*/\n  SettlRatePostponementSurvey = 40088,\n/*\n*****************************************************\n* Used to identify the settlement rate postponement *\n* calculation agent.                                *\n*****************************************************\n*/\n  SettlRatePostponementCalculationAgent = 40089,\n/*\n***********************\n* Type of provisions. *\n***********************\n*/\n  ProvisionType = 40091,\n/*\n*****************************************\n* The unadjusted date of the provision. *\n*****************************************\n*/\n  ProvisionDateUnadjusted = 40092,\n/*\n***************************************************************\n* The business day convention used to adjust the instrument's *\n* provision's dates. Used only to override the business day   *\n* convention specified in the DateAdjustment component within *\n* the Instrument component.                                   *\n***************************************************************\n*/\n  ProvisionDateBusinessDayConvention = 40093,\n/*\n****************************************************************\n* The business center calendar used to adjust the instrument's *\n* provision's dates, e.g. \"GBLO\". See                          *\n* http://www.fpml.org/coding-scheme/business-center for        *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  ProvisionDateBusinessCenter = 40094,\n/*\n***************************************\n* The adjusted date of the provision. *\n***************************************\n*/\n  ProvisionDateAdjusted = 40095,\n/*\n**********************************************************\n* Time unit multiplier for the provision's tenor period. *\n**********************************************************\n*/\n  ProvisionDateTenorPeriod = 40096,\n/*\n***********************************************************\n* Time unit associated with the provision's tenor period. *\n***********************************************************\n*/\n  ProvisionDateTenorUnit = 40097,\n/*\n***************************************************************\n* Used to identify the calculation agent.  The calculation    *\n* agent may be identified in ProvisionCalculationAgent(40098) *\n* or in the ProvisionParties component.                       *\n***************************************************************\n*/\n  ProvisionCalculationAgent = 40098,\n/*\n***********************************************************\n* If optional early termination is not available to both  *\n* parties then this component identifies the buyer of the *\n* option through its side of the trade.                   *\n***********************************************************\n*/\n  ProvisionOptionSinglePartyBuyerSide = 40099,\n/*\n************************************************************\n* If optional early termination is not available to both   *\n* parties then this component identifies the seller of the *\n* option through its side of the trade.                    *\n************************************************************\n*/\n  ProvisionOptionSinglePartySellerSide = 40100,\n/*\n*****************************************************\n* The instrument provision option\u0019s exercise style. *\n*****************************************************\n*/\n  ProvisionOptionExerciseStyle = 40101,\n/*\n****************************************************************\n* A notional amount which restricts the amount of notional     *\n* that can be exercised when partial exercise or multiple      *\n* exercise is applicable. The integral multiple amount defines *\n* a lower limit of notional that can be exercised and also     *\n* defines a unit multiple of notional that can be exercised,   *\n* i.e. only integer multiples of this amount can be exercised. *\n****************************************************************\n*/\n  ProvisionOptionExerciseMultipleNotional = 40102,\n/*\n****************************************************************\n* The minimum notional amount that can be exercised on a given *\n* exercise date.                                               *\n****************************************************************\n*/\n  ProvisionOptionExerciseMinimumNotional = 40103,\n/*\n****************************************************************\n* The maximum notional amount that can be exercised on a given *\n* exercise date.                                               *\n****************************************************************\n*/\n  ProvisionOptionExerciseMaximumNotional = 40104,\n/*\n************************************************************\n* The minimum number of options that can be exercised on a *\n* given exercise date.                                     *\n************************************************************\n*/\n  ProvisionOptionMinimumNumber = 40105,\n/*\n***************************************************************\n* The maximum number of options that can be exercised on a    *\n* given exercise date. If the number is not specified, it     *\n* means that the maximum number of options corresponds to the *\n* remaining unexercised options.                              *\n***************************************************************\n*/\n  ProvisionOptionMaximumNumber = 40106,\n/*\n***************************************************************\n* Used to indicate whether follow-up confirmation of exercise *\n* (written or electronic) is required following telephonic    *\n* notice by the buyer to the seller or seller's agent.        *\n***************************************************************\n*/\n  ProvisionOptionExerciseConfirmation = 40107,\n/*\n***************************************************************\n* An ISDA defined cash settlement method used for the         *\n* determination of the applicable cash settlement amount. The *\n* method is defined in the 2006 ISDA Definitions, Section     *\n* 18.3. Cash Settlement Methods, paragraph (e).               *\n***************************************************************\n*/\n  ProvisionCashSettlMethod = 40108,\n/*\n********************************************************\n* Specifies the currency of settlement.  Uses ISO 4217 *\n* currency codes.                                      *\n********************************************************\n*/\n  ProvisionCashSettlCurrency = 40109,\n/*\n*************************************************************\n* Specifies the currency of settlement for a cross-currency *\n* provision.  Uses ISO 4217 currency codes.                 *\n*************************************************************\n*/\n  ProvisionCashSettlCurrency2 = 40110,\n/*\n********************************************\n* Identifies the type of quote to be used. *\n********************************************\n*/\n  ProvisionCashSettlQuoteType = 40111,\n/*\n***********************************************\n* Identifies the source of quote information. *\n***********************************************\n*/\n  ProvisionCashSettlQuoteSource = 40112,\n/*\n**********************************************************\n* Free form text to specify additional information or    *\n* enumeration description when a standard value does not *\n* apply.                                                 *\n**********************************************************\n*/\n  ProvisionText = 40113,\n/*\n*************************************************************\n* A time specified in 24-hour format, e.g. 11am would be    *\n* represented as 11:00:00. The time of the cash settlement  *\n* valuation date when the cash settlement amount will be    *\n* determined according to the cash settlement method if the *\n* parties have not otherwise been able to agree to the cash *\n* settlement amount.                                        *\n*************************************************************\n*/\n  ProvisionCashSettlValueTime = 40114,\n/*\n*********************************************************\n* Identifies the business center calendar used with the *\n* provision's cash settlement valuation time. See       *\n* http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                     *\n*********************************************************\n*/\n  ProvisionCashSettlValueTimeBusinessCenter = 40115,\n/*\n***************************************************************\n* The cash settlement valuation date adjustment business day  *\n* convention. Used only to override the business day          *\n* convention specified in the DateAdjustment component within *\n* the Instrument component.                                   *\n***************************************************************\n*/\n  ProvisionCashSettlValueDateBusinessDayConvention = 40116,\n/*\n***************************************************************\n* The business center calendar used to adjust the provision's *\n* cash settlement valuation date, e.g. \"GBLO\". See            *\n* http://www.fpml.org/coding-scheme/business-center for       *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  ProvisionCashSettlValueDateBusinessCenter = 40117,\n/*\n*****************************************************************\n* Specifies the anchor date when the cash settlement value      *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values                                                    *\n*****************************************************************\n*/\n  ProvisionCashSettlValueDateRelativeTo = 40118,\n/*\n***************************************************************\n* Time unit multiplier for the relative cash settlement value *\n* date offset.                                                *\n***************************************************************\n*/\n  ProvisionCashSettlValueDateOffsetPeriod = 40119,\n/*\n****************************************************************\n* Time unit associated with the relative cash settlement value *\n* date offset.                                                 *\n****************************************************************\n*/\n  ProvisionCashSettlValueDateOffsetUnit = 40120,\n/*\n***********************************************************\n* Specifies the day type of the provision's relative cash *\n* settlement value date offset.                           *\n***********************************************************\n*/\n  ProvisionCashSettlValueDateOffsetDayType = 40121,\n/*\n********************************************\n* The adjusted cash settlement value date. *\n********************************************\n*/\n  ProvisionCashSettlValueDateAdjusted = 40122,\n/*\n***************************************************************\n* The business day convention used to adjust the instrument's *\n* provision's option exercise date. Used only to override the *\n* business day convention specified in the DateAdjustment     *\n* component within the Instrument component.                  *\n***************************************************************\n*/\n  ProvisionOptionExerciseBusinessDayConvention = 40123,\n/*\n****************************************************************\n* The business center calendar used to adjust the instrument's *\n* provision's option exercise date, e.g. \"GBLO\".               *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  ProvisionOptionExerciseBusinessCenter = 40124,\n/*\n***********************************************************\n* Time unit multiplier for the interval to the first (and *\n* possibly only) exercise date in the exercise period.    *\n***********************************************************\n*/\n  ProvisionOptionExerciseEarliestDateOffsetPeriod = 40125,\n/*\n************************************************************\n* Time unit associated with the interval to the first (and *\n* possibly only) exercise date in the exercise period.     *\n************************************************************\n*/\n  ProvisionOptionExerciseEarliestDateOffsetUnit = 40126,\n/*\n****************************************************************\n* Time unit multiplier for the frequency of subsequent         *\n* exercise dates in the exercise period following the earliest *\n* exercise date. An interval of 1 day should be used to        *\n* indicate an American style exercise period.                  *\n****************************************************************\n*/\n  ProvisionOptionExerciseFrequencyPeriod = 40127,\n/*\n****************************************************************\n* Time unit associated with the frequency of subsequent        *\n* exercise dates in the exercise period following the earliest *\n* exercise date.                                               *\n****************************************************************\n*/\n  ProvisionOptionExerciseFrequencyUnit = 40128,\n/*\n**********************************************************\n* The unadjusted first day of the exercise period for an *\n* American style option.                                 *\n**********************************************************\n*/\n  ProvisionOptionExerciseStartDateUnadjusted = 40129,\n/*\n*****************************************************************\n* Specifies the anchor date when the option exercise start      *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  ProvisionOptionExerciseStartDateRelativeTo = 40130,\n/*\n***************************************************************\n* Time unit multiplier for the relative option exercise start *\n* date offset.                                                *\n***************************************************************\n*/\n  ProvisionOptionExerciseStartDateOffsetPeriod = 40131,\n/*\n****************************************************************\n* Time unit associated with the relative option exercise start *\n* date offset.                                                 *\n****************************************************************\n*/\n  ProvisionOptionExerciseStartDateOffsetUnit = 40132,\n/*\n*************************************************************\n* Specifies the day type of the provision's relative option *\n* exercise start date offset.                               *\n*************************************************************\n*/\n  ProvisionOptionExerciseStartDateOffsetDayType = 40133,\n/*\n********************************************************\n* The adjusted first day of the exercise period for an *\n* American style option.                               *\n********************************************************\n*/\n  ProvisionOptionExerciseStartDateAdjusted = 40134,\n/*\n****************************************************************\n* The number of periods in the referenced date schedule that   *\n* are between each date in the relative date schedule. Thus a  *\n* skip of 2 would mean that dates are relative to every second *\n* date in the referenced schedule. If present this should have *\n* a value greater than 1.                                      *\n****************************************************************\n*/\n  ProvisionOptionExercisePeriodSkip = 40135,\n/*\n****************************************************************\n* The unadjusted first date of a schedule. This can be used to *\n* restrict the range of exercise dates when they are relative. *\n****************************************************************\n*/\n  ProvisionOptionExerciseBoundsFirstDateUnadjusted = 40136,\n/*\n****************************************************************\n* The unadjusted last date of a schedule. This can be used to  *\n* restrict the range of exercise dates when they are relative. *\n****************************************************************\n*/\n  ProvisionOptionExerciseBoundsLastDateUnadjusted = 40137,\n/*\n****************************************************************\n* The earliest time at which notice of exercise can be given   *\n* by the buyer to the seller (or seller's agent) i) on the     *\n* expriation date, in the case of a European style option,     *\n* (ii) on each bermuda option exercise date and the expiration *\n* date, in the case of a Bermuda style option the commencement *\n* date to, and including, the expiration date, in the case of  *\n* an American option.                                          *\n****************************************************************\n*/\n  ProvisionOptionExerciseEarliestTime = 40138,\n/*\n*************************************************************\n* Identifies the business center calendar used with the     *\n* provision's earliest time for notice of exercise.         *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  ProvisionOptionExerciseEarliestTimeBusinessCenter = 40139,\n/*\n**************************************************************\n* For a Bermuda or American style option, the latest time on *\n* an exercise business day (excluding the expiration date)   *\n* within the exercise period that notice can be given by the *\n* buyer to the seller or seller's agent. Notice of exercise  *\n* given after this time will be deemed to have been given on *\n* the next exercise business day.                            *\n**************************************************************\n*/\n  ProvisionOptionExerciseLatestTime = 40140,\n/*\n*************************************************************\n* Identifies the business center calendar used with the     *\n* provision's latest time for notice of exercise.           *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  ProvisionOptionExerciseLatestTimeBusinessCenter = 40141,\n/*\n****************************************************************\n* A predetermined option exercise date, unadjusted or adjusted *\n* depending on ProvisionOptionExerciseFixedDateType(40144).    *\n****************************************************************\n*/\n  ProvisionOptionExerciseFixedDate = 40143,\n/*\n************************************************************\n* Specifies the type of date (e.g. adjusted for holidays). *\n************************************************************\n*/\n  ProvisionOptionExerciseFixedDateType = 40144,\n/*\n****************************************************************\n* The unadjusted last day within an exercise period for an     *\n* American style option. For a European style option it is the *\n* only day within the exercise period.                         *\n****************************************************************\n*/\n  ProvisionOptionExpirationDateUnadjusted = 40145,\n/*\n***************************************************************\n* The business day convention used to adjust the instrument's *\n* provision's option expiration date. Used only to override   *\n* the business day convention specified in the DateAdjustment *\n* component within the Instrument component.                  *\n***************************************************************\n*/\n  ProvisionOptionExpirationDateBusinessDayConvention = 40146,\n/*\n****************************************************************\n* The business center calendar used to adjust the instrument's *\n* provision's option expiration date, e.g. \"GBLO\".             *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  ProvisionOptionExpirationDateBusinessCenter = 40147,\n/*\n*****************************************************************\n* Specifies the anchor date when the option expiration date is  *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  ProvisionOptionExpirationDateRelativeTo = 40148,\n/*\n****************************************************************\n* Time unit multiplier for the relative option expiration date *\n* offset.                                                      *\n****************************************************************\n*/\n  ProvisionOptionExpirationDateOffsetPeriod = 40149,\n/*\n************************************************************\n* Time unit associated with the relative option expiration *\n* date offset.                                             *\n************************************************************\n*/\n  ProvisionOptionExpirationDateOffsetUnit = 40150,\n/*\n*************************************************************\n* Specifies the day type of the provision's relative option *\n* expiration date offset.                                   *\n*************************************************************\n*/\n  ProvisionOptionExpirationDateOffsetDayType = 40151,\n/*\n****************************************************************\n* The adjusted last date within an exercise period for an      *\n* American style option. For a European style option it is the *\n* only date within the exercise period.                        *\n****************************************************************\n*/\n  ProvisionOptionExpirationDateAdjusted = 40152,\n/*\n********************************************************\n* The latest time for exercise on the expiration date. *\n********************************************************\n*/\n  ProvisionOptionExpirationTime = 40153,\n/*\n*************************************************************\n* Identifies the business center calendar used with the     *\n* provision's latest exercise time on expiration date.      *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  ProvisionOptionExpirationTimeBusinessCenter = 40154,\n/*\n****************************************************************\n* The unadjusted date on the underlying set by the exercise of *\n* an option. What this date is depends on the option (e.g. in  *\n* a swaption it is the swap effective date, in an              *\n* extendible/cancelable provision it is the swap termination   *\n* date).                                                       *\n****************************************************************\n*/\n  ProvisionOptionRelevantUnderlyingDateUnadjusted = 40155,\n/*\n***************************************************************\n* The business day convention used to adjust the instrument's *\n* provision's option underlying date. Used only to override   *\n* the business day convention specified in the DateAdjustment *\n* component within the Instrument component.                  *\n***************************************************************\n*/\n  ProvisionOptionRelevantUnderlyingDateBusinessDayConvention = 40156,\n/*\n****************************************************************\n* The business center calendar used to adjust the instrument's *\n* provision's option underlying date, e.g. \"GBLO\".             *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  ProvisionOptionRelevantUnderlyingDateBusinessCenter = 40157,\n/*\n*****************************************************************\n* Specifies the anchor date when the date relevant to the       *\n* underlying trade on exercise is relative to an anchor date.   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  ProvisionOptionRelevantUnderlyingDateRelativeTo = 40158,\n/*\n*********************************************************\n* Time unit multiplier for the relative option relevant *\n* underlying date offset.                               *\n*********************************************************\n*/\n  ProvisionOptionRelevantUnderlyingDateOffsetPeriod = 40159,\n/*\n**********************************************************\n* Time unit associated with the relative option relevant *\n* underlying date offset.                                *\n**********************************************************\n*/\n  ProvisionOptionRelevantUnderlyingDateOffsetUnit = 40160,\n/*\n*************************************************************\n* Specifies the day type of the provision's relative option *\n* relevant underlying date offset.                          *\n*************************************************************\n*/\n  ProvisionOptionRelevantUnderlyingDateOffsetDayType = 40161,\n/*\n***************************************************************\n* The adjusted date on the underlying set by the exercise of  *\n* an option. What this date is depends on the option (e.g. in *\n* a swaption it is the swap effective date, in an             *\n* extendible/cancelable provision it is the swap termination  *\n* date).                                                      *\n***************************************************************\n*/\n  ProvisionOptionRelevantUnderlyingDateAdjusted = 40162,\n/*\n***************************************************************\n* The business day convention used to adjust the provisional  *\n* cash settlement payment's termination or relative           *\n* termination date.  Used only to override the business day   *\n* convention specified in the DateAdjustment component within *\n* the Instrument component.                                   *\n***************************************************************\n*/\n  ProvisionCashSettlPaymentDateBusinessDayConvention = 40163,\n/*\n***************************************************************\n* The business center calendar used to adjust the provisional *\n* cash settlement payment's termination or relative           *\n* termination date, e.g. \"GBLO\".                              *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  ProvisionCashSettlPaymentDateBusinessCenter = 40164,\n/*\n*****************************************************************\n* Specifies the anchor date when the cash settlement payment    *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  ProvisionCashSettlPaymentDateRelativeTo = 40165,\n/*\n*********************************************************\n* Time unit multiplier for the relative cash settlement *\n* payment date offset.                                  *\n*********************************************************\n*/\n  ProvisionCashSettlPaymentDateOffsetPeriod = 40166,\n/*\n**********************************************************\n* Time unit associated with the relative cash settlement *\n* payment date offset.                                   *\n**********************************************************\n*/\n  ProvisionCashSettlPaymentDateOffsetUnit = 40167,\n/*\n***********************************************************\n* Specifies the day type of the provision's relative cash *\n* settlement payment date offset.                         *\n***********************************************************\n*/\n  ProvisionCashSettlPaymentDateOffsetDayType = 40168,\n/*\n*******************************************************\n* First date in range when a settlement date range is *\n* provided.                                           *\n*******************************************************\n*/\n  ProvisionCashSettlPaymentDateRangeFirst = 40169,\n/*\n**********************************************************\n* The last date in range when a settlement date range is *\n* provided.                                              *\n**********************************************************\n*/\n  ProvisionCashSettlPaymentDateRangeLast = 40170,\n/*\n************************************************************\n* The cash settlement payment date, unadjusted or adjusted *\n* depending on ProvisionCashSettlPaymentDateType(40173).   *\n************************************************************\n*/\n  ProvisionCashSettlPaymentDate = 40172,\n/*\n************************************************************\n* Specifies the type of date (e.g. adjusted for holidays). *\n************************************************************\n*/\n  ProvisionCashSettlPaymentDateType = 40173,\n/*\n***************************************************************\n* The party identifier/code for the payment settlement party. *\n***************************************************************\n*/\n  ProvisionPartyID = 40175,\n/*\n*************************************************************\n* Identifies class or source of the ProvisionPartyID(40175) *\n* value.                                                    *\n*************************************************************\n*/\n  ProvisionPartyIDSource = 40176,\n/*\n**********************************************************\n* Identifies the type or role of ProvisionPartyID(40175) *\n* specified.                                             *\n**********************************************************\n*/\n  ProvisionPartyRole = 40177,\n/*\n********************************************\n* Party sub-identifier, if applicable, for *\n* ProvisionPartyID(40175).                 *\n********************************************\n*/\n  ProvisionPartySubID = 40179,\n/*\n*******************************************\n* The type of ProvisionPartySubID(40179). *\n*******************************************\n*/\n  ProvisionPartySubIDType = 40180,\n/*\n***********************************************\n* The notional amount of protection coverage. *\n***********************************************\n*/\n  ProtectionTermNotional = 40182,\n/*\n************************************************************\n* The currency of ProtectionTermNotional(40182).  Uses ISO *\n* 4217 currency codes.                                     *\n************************************************************\n*/\n  ProtectionTermCurrency = 40183,\n/*\n***************************************************************\n* The notifying party is the party that notifies the other    *\n* party when a credit event has occurred by means of a credit *\n* event notice. If more than one party is referenced as being *\n* the notifying party then either party may notify the other  *\n* of a credit event occurring.                                *\n* ProtectionTermSellerNotifies(40184)=Y indicates that the    *\n* seller notifies.                                            *\n***************************************************************\n*/\n  ProtectionTermSellerNotifies = 40184,\n/*\n***************************************************************\n* The notifying party is the party that notifies the other    *\n* party when a credit event has occurred by means of a credit *\n* event notice. If more than one party is referenced as being *\n* the notifying party then either party may notify the other  *\n* of a credit event occurring.                                *\n* ProtectionTermBuyerNotifies(40185)=Y indicates that the     *\n* buyer notifies.                                             *\n***************************************************************\n*/\n  ProtectionTermBuyerNotifies = 40185,\n/*\n**************************************************************\n* When used, the business center indicates the local time of *\n* the business center that replaces the Greenwich Mean Time  *\n* in Section 3.3 of the 2003 ISDA Credit Derivatives         *\n* Definitions. See                                           *\n* http://www.fpml.org/coding-scheme/business-center for      *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  ProtectionTermEventBusinessCenter = 40186,\n/*\n***************************************************************\n* Indicates whether ISDA defined Standard Public Sources are  *\n* applicable (ProtectionTermStandardSources(40187)=Y) or not. *\n***************************************************************\n*/\n  ProtectionTermStandardSources = 40187,\n/*\n**********************************************************\n* The minimum number of the specified public information *\n* sources that must publish information that reasonably  *\n* confirms that a credit event has occurred. The market  *\n* convention is two.                                     *\n**********************************************************\n*/\n  ProtectionTermEventMinimumSources = 40188,\n/*\n*************************************************************\n* Newspaper or electronic news service or source that may   *\n* publish relevant information used in the determination of *\n* whether or not a credit event has occurred.               *\n*************************************************************\n*/\n  ProtectionTermEventNewsSource = 40189,\n/*\n******************************************\n* A named string value referenced by     *\n* UnderlyingProtectionTermXIDRef(41314). *\n******************************************\n*/\n  ProtectionTermXID = 40190,\n/*\n****************************************************************************\n* Specifies the type of credit event applicable to the                     *\n* protection terms.                                                        *\n* See                                                                      *\n* http://www.fixtradingcommunity.org/codelists#Protection_Term_Event_Types *\n* for code list of applicable event types.                                 *\n****************************************************************************\n*/\n  ProtectionTermEventType = 40192,\n/*\n****************************************************************************\n* Protection term event value appropriate to                               *\n* ProtectionTermEvenType(40192).                                           *\n* See                                                                      *\n* http://www.fixtradingcommunity.org/codelists#Protection_Term_Event_Types *\n* for applicable event type values.                                        *\n****************************************************************************\n*/\n  ProtectionTermEventValue = 40193,\n/*\n****************************************************************\n* Applicable currency if ProtectionTermEventValue(40193) is an *\n* amount.  Uses ISO 4217 currency codes.                       *\n****************************************************************\n*/\n  ProtectionTermEventCurrency = 40194,\n/*\n****************************************************\n* Time unit multiplier for protection term events. *\n****************************************************\n*/\n  ProtectionTermEventPeriod = 40195,\n/*\n*****************************************************\n* Time unit associated with protection term events. *\n*****************************************************\n*/\n  ProtectionTermEventUnit = 40196,\n/*\n*******************************************************\n* Day type for events that specify a period and unit. *\n*******************************************************\n*/\n  ProtectionTermEventDayType = 40197,\n/*\n***********************************************************\n* Rate source for events that specify a rate source, e.g. *\n* Floating rate interest shortfall.                       *\n***********************************************************\n*/\n  ProtectionTermEventRateSource = 40198,\n/*\n*************************************************************\n* Protection term event qualifier.  Used to further qualify *\n* ProtectionTermEventType(40192).                           *\n*************************************************************\n*/\n  ProtectionTermEventQualifier = 40200,\n/*\n*********************************************************************************\n* Specifies the type of obligation applicable to the                            *\n* protection terms.                                                             *\n* See                                                                           *\n* http://www.fixtradingcommunity.org/codelists#Protection_Term_Obligation_Types *\n* for code list of applicable obligation types.                                 *\n*********************************************************************************\n*/\n  ProtectionTermObligationType = 40202,\n/*\n*********************************************************************************\n* Protection term obligation value appropriate to                               *\n* ProtectionTermObligationType(40202).                                          *\n* See                                                                           *\n* http://www.fixtradingcommunity.org/codelists#Protection_Term_Obligation_Types *\n* for applicable obligation type values.                                        *\n*********************************************************************************\n*/\n  ProtectionTermObligationValue = 40203,\n/*\n************************************************************\n* Specifies the currency of physical settlement.  Uses ISO *\n* 4217 currency codes.                                     *\n************************************************************\n*/\n  PhysicalSettlCurrency = 40205,\n/*\n****************************************************************\n* The number of business days used in the determination of     *\n* physical settlement. Its precise meaning is dependant on the *\n* context in which this element is used.                       *\n****************************************************************\n*/\n  PhysicalSettlBusinessDays = 40206,\n/*\n*************************************************************\n* A maximum number of business days. Its precise meaning is *\n* dependant on the context in which this element is used.   *\n* Intended to be used to limit a particular ISDA fallback   *\n* provision.                                                *\n*************************************************************\n*/\n  PhysicalSettlMaximumBusinessDays = 40207,\n/*\n**************************************\n* A named string value referenced by *\n* UnderlyingSettlTermXIDRef(41315).  *\n**************************************\n*/\n  PhysicalSettlTermXID = 40208,\n/*\n*****************************************************************************\n* Specifies the type of deliverable obligation applicable for               *\n* physical settlement. See                                                  *\n* http://www.fixtradingcommunity.org/codelists#Deliverable_Obligation_Types *\n* for code list for applicable deliverable obligation types.                *\n*****************************************************************************\n*/\n  PhysicalSettlDeliverableObligationType = 40210,\n/*\n*****************************************************************************\n* Physical settlement deliverable obligation value appropriate              *\n* to PhysicalSettlDeliverableObligationType(40210). See                     *\n* http://www.fixtradingcommunity.org/codelists#Deliverable_Obligation_Types *\n* for applicable obligation type values.                                    *\n*****************************************************************************\n*/\n  PhysicalSettlDeliverableObligationValue = 40211,\n/*\n********************\n* Type of payment. *\n********************\n*/\n  PaymentType = 40213,\n/*\n*********************************************\n* The side of the party paying the payment. *\n*********************************************\n*/\n  PaymentPaySide = 40214,\n/*\n************************************************\n* The side of the party receiving the payment. *\n************************************************\n*/\n  PaymentReceiveSide = 40215,\n/*\n************************************************************\n* Specifies the currency in which PaymentAmount(40217)  is *\n* denominated.  Uses ISO 4271 currency codes.              *\n************************************************************\n*/\n  PaymentCurrency = 40216,\n/*\n*****************************\n* The total payment amount. *\n*****************************\n*/\n  PaymentAmount = 40217,\n/*\n****************************************************************\n* The price determining the payment amount expressed in terms  *\n* specified in PaymentPriceType(40919) and expressed in market *\n* format.                                                      *\n****************************************************************\n*/\n  PaymentPrice = 40218,\n/*\n********************************\n* The unadjusted payment date. *\n********************************\n*/\n  PaymentDateUnadjusted = 40219,\n/*\n****************************************************************\n* The business day convention used to adjust the payment date. *\n* Used only to override the business day convention specified  *\n* in the DateAdjustment component within the Instrument        *\n* component.                                                   *\n****************************************************************\n*/\n  PaymentBusinessDayConvention = 40220,\n/*\n***********************************************************\n* The business center calendar used to adjust the payment *\n* date, e.g. \"GBLO\". See                                  *\n* http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                       *\n***********************************************************\n*/\n  PaymentBusinessCenter = 40221,\n/*\n******************************\n* The adjusted payment date. *\n******************************\n*/\n  PaymentDateAdjusted = 40222,\n/*\n*********************************************************\n* Applicable value for LegMarketDisruptionEvent(41468). *\n*********************************************************\n*/\n  LegMarketDisruptionValue = 40223,\n/*\n****************************************************************\n* The value representing the discount factor used to calculate *\n* the present value of the cash flow.                          *\n****************************************************************\n*/\n  PaymentDiscountFactor = 40224,\n/*\n*************************************************************\n* The amount representing the present value of the forecast *\n* payment.                                                  *\n*************************************************************\n*/\n  PaymentPresentValueAmount = 40225,\n/*\n***************************************************************\n* Specifies the currency the PaymentPresentValueAmount(40225) *\n* is denominated in.  Uses ISO 4217 currency codes.           *\n***************************************************************\n*/\n  PaymentPresentValueCurrency = 40226,\n/*\n*****************************\n* Payment settlement style. *\n*****************************\n*/\n  PaymentSettlStyle = 40227,\n/*\n***************************************************************\n* Identifies the reference \"page\" from the rate source.       *\n* When LegPaymentStreamNonDeliverableSettlRateSource(40087) = *\n* 3 (ISDA Settlement Rate Option) this contains a value from  *\n* the scheme that reflects the terms of the Annex A to the    *\n* ISDA 1998 FX and Currency Option Definitions. See:          *\n* http://www.fpml.org/coding-scheme/settlement-rate-option    *\n***************************************************************\n*/\n  LegPaymentStreamNonDeliverableSettlReferencePage = 40228,\n/*\n***************************************************************\n* Free form text to specify additional information or         *\n* enumeration description when a sdtandard value does not     *\n* apply.  Identifies the payment type when PaymentType(40213) *\n* = 99 (Other).                                               *\n***************************************************************\n*/\n  PaymentText = 40229,\n/*\n**********************************\n* The payment settlement amount. *\n**********************************\n*/\n  PaymentSettlAmount = 40231,\n/*\n***********************************************************\n* Specifies the currency the PaymentSettlAmount(40231) is *\n* denominated in.  Uses ISO 4217 currency codes.          *\n***********************************************************\n*/\n  PaymentSettlCurrency = 40232,\n/*\n********************************************\n* The payment settlement party identifier. *\n********************************************\n*/\n  PaymentSettlPartyID = 40234,\n/*\n****************************************************************\n* Identifies the class or source of PaymentSettlPartyID(40234) *\n* value (e.g. BIC).                                            *\n****************************************************************\n*/\n  PaymentSettlPartyIDSource = 40235,\n/*\n***************************************************************\n* Identifies the role of PaymentSettlPartyID(40234) (e.g. the *\n* beneficiary's bank or depository institution).              *\n***************************************************************\n*/\n  PaymentSettlPartyRole = 40236,\n/*\n********************************************************\n* Qualifies the value of PaymentSettlPartyRole(40236). *\n********************************************************\n*/\n  PaymentSettlPartyRoleQualifier = 40237,\n/*\n********************************************\n* Party sub-identifier, if applicable, for *\n* PaymentSettlPartyRole(40236).            *\n********************************************\n*/\n  PaymentSettlPartySubID = 40239,\n/*\n****************************************************\n* The type of PaymentSettlPartySubID(40239) value. *\n****************************************************\n*/\n  PaymentSettlPartySubIDType = 40240,\n/*\n************************\n* Type of swap stream. *\n************************\n*/\n  LegStreamType = 40242,\n/*\n**************************************************************\n* A short descriptive name given to the payment stream, e.g. *\n* CDS, Fixed, Float, Float2, GBP. The description has no     *\n* intrinsic meaning but should be arbitrarily chosen by the  *\n* remitter as a reference.                                   *\n**************************************************************\n*/\n  LegStreamDesc = 40243,\n/*\n********************************************\n* The side of the party paying the stream. *\n********************************************\n*/\n  LegStreamPaySide = 40244,\n/*\n***********************************************\n* The side of the party receiving the stream. *\n***********************************************\n*/\n  LegStreamReceiveSide = 40245,\n/*\n***************************************************************\n* Notional, or initial notional value for the payment stream. *\n* The LegPaymentSchedule component should be used for         *\n* specifying the steps.                                       *\n***************************************************************\n*/\n  LegStreamNotional = 40246,\n/*\n**********************************************************\n* Specifies the currency the LegStreamNotional(40246) is *\n* denominated in.  Uses ISO 4217 currency codes.         *\n**********************************************************\n*/\n  LegStreamCurrency = 40247,\n/*\n**********************************************************\n* Free form text to specify additional information or    *\n* enumeration description when a standard value does not *\n* apply.                                                 *\n**********************************************************\n*/\n  LegStreamText = 40248,\n/*\n**********************************\n* The unadjusted effective date. *\n**********************************\n*/\n  LegStreamEffectiveDateUnadjusted = 40249,\n/*\n***************************************************************\n* The business day convention used to adjust the instrument   *\n* leg's stream's effective date or relative effective date.   *\n* Used only to override the business day convention specified *\n* in the LegDateAdjustment component within the InstrumentLeg *\n* component.                                                  *\n***************************************************************\n*/\n  LegStreamEffectiveDateBusinessDayConvention = 40250,\n/*\n**************************************************************\n* The business center calendar used to adjust the instrument *\n* leg's stream's effective date or relative effective date,  *\n* e.g. \"GBLO\".                                               *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  LegStreamEffectiveDateBusinessCenter = 40251,\n/*\n*****************************************************************\n* Specifies the anchor date when the effective date is          *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values                                                    *\n*****************************************************************\n*/\n  LegStreamEffectiveDateRelativeTo = 40252,\n/*\n****************************************************************\n* Time unit multiplier for the relative effective date offset. *\n****************************************************************\n*/\n  LegStreamEffectiveDateOffsetPeriod = 40253,\n/*\n*********************************************************\n* Time unit associated with the relative effective date *\n* offset.                                               *\n*********************************************************\n*/\n  LegStreamEffectiveDateOffsetUnit = 40254,\n/*\n*********************************************************\n* Specifies the day type of the relative effective date *\n* offset.                                               *\n*********************************************************\n*/\n  LegStreamEffectiveDateOffsetDayType = 40255,\n/*\n********************************\n* The adjusted effective date. *\n********************************\n*/\n  LegStreamEffectiveDateAdjusted = 40256,\n/*\n************************************\n* The unadjusted termination date. *\n************************************\n*/\n  LegStreamTerminationDateUnadjusted = 40257,\n/*\n***************************************************************\n* The business day convention used to adjust the instrument   *\n* leg's stream's termination, or relative termination, date.  *\n* Used only to override the business day convention specified *\n* in the LegDateAdjustment component within the InstrumentLeg *\n* component.                                                  *\n***************************************************************\n*/\n  LegStreamTerminationDateBusinessDayConvention = 40258,\n/*\n**************************************************************\n* The business center calendar used to adjust the instrument *\n* leg's stream's termination, or relative termination, date, *\n* e.g. \"GBLO\".                                               *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  LegStreamTerminationDateBusinessCenter = 40259,\n/*\n*****************************************************************\n* Specifies the anchor date when the termination date is        *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegStreamTerminationDateRelativeTo = 40260,\n/*\n**********************************************************\n* Time unit multiplier for the relative termination date *\n* offset.                                                *\n**********************************************************\n*/\n  LegStreamTerminationDateOffsetPeriod = 40261,\n/*\n***********************************************************\n* Time unit associated with the relative termination date *\n* offset.                                                 *\n***********************************************************\n*/\n  LegStreamTerminationDateOffsetUnit = 40262,\n/*\n***********************************************************\n* Specifies the day type of the relative termination date *\n* offset.                                                 *\n***********************************************************\n*/\n  LegStreamTerminationDateOffsetDayType = 40263,\n/*\n**********************************\n* The adjusted termination date. *\n**********************************\n*/\n  LegStreamTerminationDateAdjusted = 40264,\n/*\n***************************************************************\n* The business day convention used to adjust calculation      *\n* periods.  Used only to override the business day convention *\n* specified in the LegDateAdjustment component within the     *\n* InstrumentLeg component.                                    *\n***************************************************************\n*/\n  LegStreamCalculationPeriodBusinessDayConvention = 40265,\n/*\n*************************************************************\n* The business center calendar used to adjust calculation   *\n* periods, e.g. \"GLBO\".                                     *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegStreamCalculationPeriodBusinessCenter = 40266,\n/*\n****************************************************************\n* The unadjusted first calculation period start date if before *\n* the effective date.                                          *\n****************************************************************\n*/\n  LegStreamFirstPeriodStartDateUnadjusted = 40267,\n/*\n*************************************************************\n* The business day convention used to adjust the instrument *\n* leg's stream's first calculation period start date. Used  *\n* only to override the business day convention specified in *\n* the LegDateAdjustment component within the InstrumentLeg  *\n* component.                                                *\n*************************************************************\n*/\n  LegStreamFirstPeriodStartDateBusinessDayConvention = 40268,\n/*\n**************************************************************\n* The business center calendar used to adjust the instrument *\n* leg's stream's first calculation period start date, e.g.   *\n* \"GBLO\".                                                    *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  LegStreamFirstPeriodStartDateBusinessCenter = 40269,\n/*\n**************************************************************\n* The adjusted first calculation period start date, if it is *\n* before the effective date.                                 *\n**************************************************************\n*/\n  LegStreamFirstPeriodStartDateAdjusted = 40270,\n/*\n**************************************************************\n* The unadjusted first start date of the regular calculation *\n* period, if there is an initial stub period.                *\n**************************************************************\n*/\n  LegStreamFirstRegularPeriodStartDateUnadjusted = 40271,\n/*\n**************************************************************\n* The unadjusted end date of the initial compounding period. *\n**************************************************************\n*/\n  LegStreamFirstCompoundingPeriodEndDateUnadjusted = 40272,\n/*\n*************************************************************\n* The unadjusted last regular period end date if there is a *\n* final stub period.                                        *\n*************************************************************\n*/\n  LegStreamLastRegularPeriodEndDateUnadjusted = 40273,\n/*\n***************************************************************\n* Time unit multiplier for the frequency at which calculation *\n* period end dates occur.                                     *\n***************************************************************\n*/\n  LegStreamCalculationFrequencyPeriod = 40274,\n/*\n****************************************************************\n* Time unit associated with the frequency at which calculation *\n* period end dates occur.                                      *\n****************************************************************\n*/\n  LegStreamCalculationFrequencyUnit = 40275,\n/*\n****************************************************************\n* The convention for determining the sequence of end dates. It *\n* is used in conjunction with a specified frequency.  Used     *\n* only to override the roll convention specified in the        *\n* LegDateAdjustment component within the InstrumentLeg         *\n* component.                                                   *\n****************************************************************\n*/\n  LegStreamCalculationRollConvention = 40276,\n/*\n****************************************************************\n* Identifies the type of payment stream applicable to the swap *\n* stream associated with the instrument leg.                   *\n****************************************************************\n*/\n  LegPaymentStreamType = 40279,\n/*\n***************************************************************\n* Used only for credit index trade. This contains the credit  *\n* spread (\"fair value\") at which the trade was executed. The  *\n* market rate varies over the life of the index depending on  *\n* market conditions. This is the price of the index as quoted *\n* by trading desks.                                           *\n***************************************************************\n*/\n  LegPaymentStreamMarketRate = 40280,\n/*\n****************************************************************\n* Applicable to credit default swaps on mortgage backed        *\n* securities to specify whether payment delays are applicable  *\n* to the fixed amount.                                         *\n* Residential mortgage backed securities typically have a      *\n* payment delay of 5 days between the coupon date of the       *\n* reference obligation and the payment date of the synthetic   *\n* swap.                                                        *\n* Commercial mortage backed securities  do not typically have  *\n* a payment delay, with both payment dates (the coupon date of *\n* the reference obligation and the payment date of the         *\n* synthetic swap) being on the 25th of each month.             *\n****************************************************************\n*/\n  LegPaymentStreamDelayIndicator = 40281,\n/*\n**************************************************************\n* Specifies the currency that the stream settles in (to      *\n* support swaps that settle in a currency different from the *\n* notional currency).  Uses ISO 4217 currency codes.         *\n**************************************************************\n*/\n  LegPaymentStreamSettlCurrency = 40282,\n/*\n*******************************************************\n* The day count convention used in the payment stream *\n* calculations.                                       *\n*******************************************************\n*/\n  LegPaymentStreamDayCount = 40283,\n/*\n***********************************************************\n* The number of days from the adjusted calculation period *\n* start date to the adjusted value date, calculated in    *\n* accordance with the applicable day count fraction.      *\n***********************************************************\n*/\n  LegPaymentStreamAccrualDays = 40284,\n/*\n*********************************************************\n* The method of calculating discounted payment amounts. *\n*********************************************************\n*/\n  LegPaymentStreamDiscountType = 40285,\n/*\n***************************************************************\n* Discount rate. The rate is expressed in decimal, e.g. 5% is *\n* expressed as 0.05.                                          *\n***************************************************************\n*/\n  LegPaymentStreamDiscountRate = 40286,\n/*\n*******************************************\n* The day count convention applied to the *\n* LegPaymentStreamDiscountRate(40286).    *\n*******************************************\n*/\n  LegPaymentStreamDiscountRateDayCount = 40287,\n/*\n***********************\n* Compounding method. *\n***********************\n*/\n  LegPaymentStreamCompoundingMethod = 40288,\n/*\n***************************************************************\n* Indicates whether there is an initial exchange of principal *\n* on the effective date.                                      *\n***************************************************************\n*/\n  LegPaymentStreamInitialPrincipalExchangeIndicator = 40289,\n/*\n*******************************************************\n* Indicates whether there are intermediate or interim *\n* exchanges of principal during the term of the swap. *\n*******************************************************\n*/\n  LegPaymentStreamInterimPrincipalExchangeIndicator = 40290,\n/*\n***************************************************************\n* Indicates whether there is a final exchange of principal on *\n* the termination date.                                       *\n***************************************************************\n*/\n  LegPaymentStreamFinalPrincipalExchangeIndicator = 40291,\n/*\n***************************************************************\n* The business day convention used to adjust the payment      *\n* stream's payment date. Used only to override the business   *\n* day convention specified in the LegDateAdjustment component *\n* within the InstrumentLeg component.                         *\n***************************************************************\n*/\n  LegPaymentStreamPaymentDateBusinessDayConvention = 40292,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's payment date, e.g. \"GBLO\".                       *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegPaymentStreamPaymentDateBusinessCenter = 40293,\n/*\n*******************************************************\n* Time unit multiplier for the frequency of payments. *\n*******************************************************\n*/\n  LegPaymentStreamPaymentFrequencyPeriod = 40294,\n/*\n********************************************************\n* Time unit associated with the frequency of payments. *\n********************************************************\n*/\n  LegPaymentStreamPaymentFrequencyUnit = 40295,\n/*\n****************************************************************\n* The convention for determining the sequence of end dates. It *\n* is used in conjunction with a specified frequency.  Used     *\n* only to override the roll convention specified in the        *\n* LegDateAdjustment component within the InstrumentLeg         *\n* component.                                                   *\n****************************************************************\n*/\n  LegPaymentStreamPaymentRollConvention = 40296,\n/*\n**************************************\n* The unadjusted first payment date. *\n**************************************\n*/\n  LegPaymentStreamFirstPaymentDateUnadjusted = 40297,\n/*\n*********************************************\n* The unadjusted last regular payment date. *\n*********************************************\n*/\n  LegPaymentStreamLastRegularPaymentDateUnadjusted = 40298,\n/*\n*****************************************************************\n* Specifies the anchor date when payment dates are relative to  *\n* an anchor date.                                               *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStreamPaymentDateRelativeTo = 40299,\n/*\n**************************************************************\n* Time unit multiplier for the relative payment date offset. *\n**************************************************************\n*/\n  LegPaymentStreamPaymentDateOffsetPeriod = 40300,\n/*\n***************************************************************\n* Time unit associated with the relative payment date offset. *\n***************************************************************\n*/\n  LegPaymentStreamPaymentDateOffsetUnit = 40301,\n/*\n***************************************************************\n* Specifies the day type of the relative payment date offset. *\n***************************************************************\n*/\n  LegPaymentStreamPaymentDateOffsetDayType = 40302,\n/*\n*****************************************************************\n* Specifies the anchor date when the reset dates are relative   *\n* to an anchor date.                                            *\n* If the reset frequency is specified as daily this element     *\n* must not be included.                                         *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStreamResetDateRelativeTo = 40303,\n/*\n***************************************************************\n* The business day convention used to adjust the payment      *\n* stream's reset date. Used only to override the business day *\n* convention specified in the LegDateAdjustment component     *\n* within the InstrumentLeg component.                         *\n***************************************************************\n*/\n  LegPaymentStreamResetDateBusinessDayConvention = 40304,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's reset date, e.g. \"GBLO\".                         *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegPaymentStreamResetDateBusinessCenter = 40305,\n/*\n*************************************************\n* Time unit multiplier for frequency of resets. *\n*************************************************\n*/\n  LegPaymentStreamResetFrequencyPeriod = 40306,\n/*\n**************************************************\n* Time unit associated with frequency of resets. *\n**************************************************\n*/\n  LegPaymentStreamResetFrequencyUnit = 40307,\n/*\n**********************************************************\n* Used to specify the day of the week in which the reset *\n* occurs for payments that reset on a weekly basis.      *\n**********************************************************\n*/\n  LegPaymentStreamResetWeeklyRollConvention = 40308,\n/*\n*****************************************************************\n* Specifies the anchor date when the initial fixing date is     *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStreamInitialFixingDateRelativeTo = 40309,\n/*\n**************************************************************\n* The business day convention used to adjust the payment     *\n* stream's initial fixing date. Used only to override the    *\n* business day convention specified in the LegDateAdjustment *\n* component within the InstrumentLeg component.              *\n**************************************************************\n*/\n  LegPaymentStreamInitialFixingDateBusinessDayConvention = 40310,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's initial fixing date, e.g. \"GBLO\".                *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegPaymentStreamInitialFixingDateBusinessCenter = 40311,\n/*\n*************************************************************\n* Time unit multiplier for the relative initial fixing date *\n* offset.                                                   *\n*************************************************************\n*/\n  LegPaymentStreamInitialFixingDateOffsetPeriod = 40312,\n/*\n**************************************************************\n* Time unit associated with the relative initial fixing date *\n* offset.                                                    *\n**************************************************************\n*/\n  LegPaymentStreamInitialFixingDateOffsetUnit = 40313,\n/*\n**************************************************************\n* Specifies the day type of the relative initial fixing date *\n* offset.                                                    *\n**************************************************************\n*/\n  LegPaymentStreamInitialFixingDateOffsetDayType = 40314,\n/*\n*************************************\n* The adjusted initial fixing date. *\n*************************************\n*/\n  LegPaymentStreamInitialFixingDateAdjusted = 40315,\n/*\n*****************************************************************\n* Specifies the anchor date when the fixing date is relative    *\n* to an anchor date.                                            *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStreamFixingDateRelativeTo = 40316,\n/*\n****************************************************************\n* The business day convention used to adjust the payment       *\n* stream's fixing date. Used only to override the business day *\n* convention specified in the LegDateAdjustment component      *\n* within the InstrumentLeg component.                          *\n****************************************************************\n*/\n  LegPaymentStreamFixingDateBusinessDayConvention = 40317,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's fixing date, e.g. \"GBLO\".                        *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegPaymentStreamFixingDateBusinessCenter = 40318,\n/*\n*************************************************************\n* Time unit multiplier for the relative fixing date offset. *\n*************************************************************\n*/\n  LegPaymentStreamFixingDateOffsetPeriod = 40319,\n/*\n**************************************************************\n* Time unit associated with the relative fixing date offset. *\n**************************************************************\n*/\n  LegPaymentStreamFixingDateOffsetUnit = 40320,\n/*\n**************************************************************\n* Specifies the day type of the relative fixing date offset. *\n**************************************************************\n*/\n  LegPaymentStreamFixingDateOffsetDayType = 40321,\n/*\n*****************************\n* The adjusted fixing date. *\n*****************************\n*/\n  LegPaymentStreamFixingDateAdjusted = 40322,\n/*\n***********************************************************\n* Time unit multiplier for the relative rate cut-off date *\n* offset.                                                 *\n***********************************************************\n*/\n  LegPaymentStreamRateCutoffDateOffsetPeriod = 40323,\n/*\n************************************************************\n* Time unit associated with the relative rate cut-off date *\n* offset.                                                  *\n************************************************************\n*/\n  LegPaymentStreamRateCutoffDateOffsetUnit = 40324,\n/*\n************************************************************\n* Specifies the day type of the relative rate cut-off date *\n* offset.                                                  *\n************************************************************\n*/\n  LegPaymentStreamRateCutoffDateOffsetDayType = 40325,\n/*\n*********************************************************\n* The rate applicable to the fixed rate payment stream. *\n*********************************************************\n*/\n  LegPaymentStreamRate = 40326,\n/*\n****************************************************************\n* The leg instrument payment stream's fixed payment amount. In *\n* a CDS, this can be an alternative to                         *\n* LegPaymentStreamRate(40326).                                 *\n****************************************************************\n*/\n  LegPaymentStreamFixedAmount = 40327,\n/*\n**************************************************************\n* Specifies the currency in which                            *\n* LegPaymentStreamFixedAmount(40327) or                      *\n* LegPaymentStreamRate(40326) is denominated.  Uses ISO 4217 *\n* currency codes.                                            *\n**************************************************************\n*/\n  LegPaymentStreamRateOrAmountCurrency = 40328,\n/*\n****************************************************************\n* The future value notional is normally only required for      *\n* certain non-deliverable interest rate swaps (e.g. Brazillian *\n* Real (BRL) vs. CETIP Interbank Deposit Rate (CDI)). The      *\n* value is calculated as follows: Future Value Notional =      *\n* Notional Amount * (1 + Fixed Rate) ^ (Fixed Rate Day Count   *\n* Fraction). The currency is the same as the stream notional.  *\n****************************************************************\n*/\n  LegPaymentStreamFutureValueNotional = 40329,\n/*\n*******************************************************\n* The adjusted value date of the future value amount. *\n*******************************************************\n*/\n  LegPaymentStreamFutureValueDateAdjusted = 40330,\n/*\n*******************************************\n* The payment stream floating rate index. *\n*******************************************\n*/\n  LegPaymentStreamRateIndex = 40331,\n/*\n*********************************************************\n* The source of the payment stream floating rate index. *\n*********************************************************\n*/\n  LegPaymentStreamRateIndexSource = 40332,\n/*\n****************************************************************\n* Time unit associated with the payment stream's floating rate *\n* index curve period.                                          *\n****************************************************************\n*/\n  LegPaymentStreamRateIndexCurveUnit = 40333,\n/*\n***************************************************************\n* Time unit multiplier for the payment stream's floating rate *\n* index curve period.                                         *\n***************************************************************\n*/\n  LegPaymentStreamRateIndexCurvePeriod = 40334,\n/*\n*************************************************************\n* A rate multiplier to apply to the floating rate. The      *\n* multiplier can be less than or greater than 1 (one). This *\n* element should only be included if the multiplier is not  *\n* equal to 1 (one) for the term of the stream.              *\n*************************************************************\n*/\n  LegPaymentStreamRateMultiplier = 40335,\n/*\n*******************************************************\n* The basis points spread from the index specified in *\n* LegPaymentStreamRateIndex(40331).                   *\n*******************************************************\n*/\n  LegPaymentStreamRateSpread = 40336,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  LegPaymentStreamRateSpreadPositionType = 40337,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the index. *\n************************************************************\n*/\n  LegPaymentStreamRateTreatment = 40338,\n/*\n****************************************************************\n* The cap rate, if any, which applies to the floating rate. It *\n* is only required where the floating rate on a swap stream is *\n* capped at a certain level The cap rate is assumed to be      *\n* exclusive of any spread and is a per annum rate, expressed   *\n* as a decimal. A cap rate of 5% would be represented as 0.05. *\n****************************************************************\n*/\n  LegPaymentStreamCapRate = 40339,\n/*\n*************************************************************\n* Reference to the buyer of the cap rate option through its *\n* trade side.                                               *\n*************************************************************\n*/\n  LegPaymentStreamCapRateBuySide = 40340,\n/*\n**************************************************************\n* Reference to the seller of the cap rate option through its *\n* trade side.                                                *\n**************************************************************\n*/\n  LegPaymentStreamCapRateSellSide = 40341,\n/*\n***************************************************************\n* The floor rate, if any, which applies to the floating rate. *\n* The floor rate (strike) is only required where the floating *\n* rate on a swap stream is floored at a certain strike level  *\n* The floor rate is assumed to be exclusive of any spread and *\n* is a per annum rate. The rate is expressed as a decimal,    *\n* e.g. 5% is represented as 0.05.                             *\n***************************************************************\n*/\n  LegPaymentStreamFloorRate = 40342,\n/*\n***************************************************************\n* Reference to the buyer of the floor rate option through its *\n* trade side.                                                 *\n***************************************************************\n*/\n  LegPaymentStreamFloorRateBuySide = 40343,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  LegPaymentStreamFloorRateSellSide = 40344,\n/*\n****************************************************************\n* The initial floating rate reset agreed between the principal *\n* parties involved in the trade. This is assumed to be the     *\n* first required reset rate for the first regular calculation  *\n* period. It should only be included when the rate is not      *\n* equal to the rate published on the source implied by the     *\n* floating rate index. The initial rate is expressed in        *\n* decimal form, e.g. 5% is represented as 0.05.                *\n****************************************************************\n*/\n  LegPaymentStreamInitialRate = 40345,\n/*\n*************************************\n* Specifies the rounding direction. *\n*************************************\n*/\n  LegPaymentStreamFinalRateRoundingDirection = 40346,\n/*\n*************************************************************\n* Specifies the rounding precision in terms of a number of  *\n* decimal places. Note how a percentage rate rounding of 5  *\n* decimal places is expressed as a rounding precision of 7. *\n*************************************************************\n*/\n  LegPaymentStreamFinalRatePrecision = 40347,\n/*\n**************************************************************\n* When averaging is applicable, used to specify whether a    *\n* weighted or unweighted average method of calculation is to *\n* be used.                                                   *\n**************************************************************\n*/\n  LegPaymentStreamAveragingMethod = 40348,\n/*\n***************************************************************\n* The specification of any provisions for calculating payment *\n* obligations when a floating rate is negative (either due to *\n* a quoted negative floating rate or by operation of a spread *\n* that is subtracted from the floating rate).                 *\n***************************************************************\n*/\n  LegPaymentStreamNegativeRateTreatment = 40349,\n/*\n***************************************************************\n* Time unit multiplier for the inflation lag period.  The lag *\n* period is the offsetting period from the payment date which *\n* determineds the reference period for which the inflation    *\n* index is observed.                                          *\n***************************************************************\n*/\n  LegPaymentStreamInflationLagPeriod = 40350,\n/*\n*******************************************************\n* Time unit associated with the inflation lag period. *\n*******************************************************\n*/\n  LegPaymentStreamInflationLagUnit = 40351,\n/*\n**************************************\n* The inflation lag period day type. *\n**************************************\n*/\n  LegPaymentStreamInflationLagDayType = 40352,\n/*\n**************************************************************\n* The method used when calculating the inflation index level *\n* from multiple points. The most common is linear method.    *\n**************************************************************\n*/\n  LegPaymentStreamInflationInterpolationMethod = 40353,\n/*\n*****************************************\n* The inflation index reference source. *\n*****************************************\n*/\n  LegPaymentStreamInflationIndexSource = 40354,\n/*\n***********************************************************\n* The publication source, such as relevant web site, news *\n* publication or a government body, where inflation       *\n* information is obtained.                                *\n***********************************************************\n*/\n  LegPaymentStreamInflationPublicationSource = 40355,\n/*\n***************************************************************\n* Initial known index level for the first calculation period. *\n***************************************************************\n*/\n  LegPaymentStreamInflationInitialIndexLevel = 40356,\n/*\n************************************************************\n* Indicates whether a fallback bond as defined in the 2006 *\n* ISDA Inflation Derivatives Definitions, sections 1.3 and *\n* 1.8, is applicable or not. If not specified, the default *\n* value is \"Y\" (True/Yes).                                 *\n************************************************************\n*/\n  LegPaymentStreamInflationFallbackBondApplicable = 40357,\n/*\n**************************************************************\n* The method of Forward Rate Agreement (FRA) discounting, if *\n* any, that will apply.                                      *\n**************************************************************\n*/\n  LegPaymentStreamFRADiscounting = 40358,\n/*\n************************************************************\n* Non-deliverable settlement reference currency.  Uses ISO *\n* 4217 currency codes.                                     *\n************************************************************\n*/\n  LegPaymentStreamNonDeliverableRefCurrency = 40359,\n/*\n************************************************************\n* The business day convention used to adjust the payment   *\n* stream's fixing date for the non-deliverable settlement  *\n* terms. Used only to override the business day convention *\n* specified in the LegDateAdjustment component within the  *\n* InstrumentLeg component.                                 *\n************************************************************\n*/\n  LegPaymentStreamNonDeliverableFixingDatesBusinessDayConvention = 40360,\n/*\n************************************************************\n* The business center calendar used to adjust the payment  *\n* stream's fixing date for the non-deliverable terms, e.g. *\n* \"GBLO\". See                                              *\n* http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                        *\n************************************************************\n*/\n  LegPaymentStreamNonDeliverableFixingDatesBusinessCenter = 40361,\n/*\n*****************************************************************\n* Specifies the anchor date when the non-deliverable fixing     *\n* dates are relative to an anchor date.                         *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStreamNonDeliverableFixingDatesRelativeTo = 40362,\n/*\n****************************************************************\n* Time unit multiplier for the relative non-deliverable fixing *\n* date offset.                                                 *\n****************************************************************\n*/\n  LegPaymentStreamNonDeliverableFixingDatesOffsetPeriod = 40363,\n/*\n**********************************************************\n* Time unit associated with the relative non-deliverable *\n* fixing date offset.                                    *\n**********************************************************\n*/\n  LegPaymentStreamNonDeliverableFixingDatesOffsetUnit = 40364,\n/*\n**********************************************************\n* Specifies the day type of the relative non-deliverable *\n* fixing date offset.                                    *\n**********************************************************\n*/\n  LegPaymentStreamNonDeliverableFixingDatesOffsetDayType = 40365,\n/*\n**********************************************\n* Identifies the source of rate information. *\n**********************************************\n*/\n  LegSettlRateFallbackRateSource = 40366,\n/*\n***************************************************************\n* The non-deliverable fixing date.  Type of date is specified *\n* in LegNonDeliverableFixingDateType(40369).                  *\n***************************************************************\n*/\n  LegNonDeliverableFixingDate = 40368,\n/*\n************************************************************\n* Specifies the type of date (e.g. adjusted for holidays). *\n************************************************************\n*/\n  LegNonDeliverableFixingDateType = 40369,\n/*\n*************************************************************\n* Identifies the reference \"page\" from the rate source.     *\n* When LegSettlRateFallbackRateSource(40366) = 3(ISDA       *\n* Settlement Rate Option) this contains the value from the  *\n* scheme that reflects the terms of the Annex A to the ISDA *\n* 1998 FX and Currency Option Definitions. See:             *\n* http://www.fpml.org/coding-scheme/settlement-rate-option  *\n*************************************************************\n*/\n  LegSettlRateFallbackReferencePage = 40370,\n/*\n**********************************************\n* Identifies the source of rate information. *\n**********************************************\n*/\n  PaymentStreamNonDeliverableSettlRateSource = 40371,\n/*\n***************************************************************\n* Identifies the reference \"page\" from the rate source.       *\n* When PaymentStreamNonDeliverableSettlRateSource(40371) =    *\n* 3(ISDA Settlement Rate Option) this contains the value from *\n* the scheme that reflects the terms of the Annex A to the    *\n* ISDA 1998 FX and Currency Option Definitions. See:          *\n* http://www.fpml.org/coding-scheme/settlement-rate-option    *\n***************************************************************\n*/\n  PaymentStreamNonDeliverableSettlReferencePage = 40372,\n/*\n**********************************************\n* Identifies the source of rate information. *\n**********************************************\n*/\n  SettlRateFallbackRateSource = 40373,\n/*\n***********************************\n* Specifies the type of schedule. *\n***********************************\n*/\n  LegPaymentScheduleType = 40375,\n/*\n**************************************************\n* Indicates to which stub this schedule applies. *\n**************************************************\n*/\n  LegPaymentScheduleStubType = 40376,\n/*\n***************************************************************\n* The unadjusted date on which the value is adjusted, or      *\n* calculated if a future value notional for certain           *\n* non-deliverable interest rate swaps (e.g. Brazillian Real   *\n* (BRL) vs. CETIP Interbank Deposit Rate (CDI)), or the start *\n* date of a cashflow payment.                                 *\n***************************************************************\n*/\n  LegPaymentScheduleStartDateUnadjusted = 40377,\n/*\n**************************************************\n* The unadjusted end date of a cashflow payment. *\n**************************************************\n*/\n  LegPaymentScheduleEndDateUnadjusted = 40378,\n/*\n***************************************************\n* The side of the party paying the step schedule. *\n***************************************************\n*/\n  LegPaymentSchedulePaySide = 40379,\n/*\n******************************************************\n* The side of the party receiving the step schedule. *\n******************************************************\n*/\n  LegPaymentScheduleReceiveSide = 40380,\n/*\n*************************************************************\n* The notional value for this step schedule, or amount of a *\n* cashflow payment.                                         *\n*************************************************************\n*/\n  LegPaymentScheduleNotional = 40381,\n/*\n****************************************************************\n* The currency for this step schedule.  Uses ISO 4217 currency *\n* codes.                                                       *\n****************************************************************\n*/\n  LegPaymentScheduleCurrency = 40382,\n/*\n******************************************\n* The rate value for this step schedule. *\n******************************************\n*/\n  LegPaymentScheduleRate = 40383,\n/*\n*************************************************************\n* A rate multiplier to apply to the floating rate. The      *\n* multiplier can be less than or greater than 1 (one). This *\n* element should only be included if the multiplier is not  *\n* equal to 1 (one) for the term of the stream.              *\n*************************************************************\n*/\n  LegPaymentScheduleRateMultiplier = 40384,\n/*\n********************************************\n* The spread value for this step schedule. *\n********************************************\n*/\n  LegPaymentScheduleRateSpread = 40385,\n/*\n****************************************************************\n* Identifies whether the rate spread is applied to a long or a *\n* short position.                                              *\n****************************************************************\n*/\n  LegPaymentScheduleRateSpreadPositionType = 40386,\n/*\n**********************************************************\n* Specifies the yield calculation treatment for the step *\n* schedule.                                              *\n**********************************************************\n*/\n  LegPaymentScheduleRateTreatment = 40387,\n/*\n*******************************************************\n* The explicit payment amount for this step schedule. *\n*******************************************************\n*/\n  LegPaymentScheduleFixedAmount = 40388,\n/*\n*************************************************************\n* The currency of the fixed amount.  Uses ISO 4217 currency *\n* codes.                                                    *\n*************************************************************\n*/\n  LegPaymentScheduleFixedCurrency = 40389,\n/*\n************************************************\n* Time unit multiplier for the step frequency. *\n************************************************\n*/\n  LegPaymentScheduleStepFrequencyPeriod = 40390,\n/*\n*************************************************\n* Time unit associated with the step frequency. *\n*************************************************\n*/\n  LegPaymentScheduleStepFrequencyUnit = 40391,\n/*\n**************************************************************\n* The explicit amount that the notional changes on each step *\n* date. This can be a positive or negative amount.           *\n**************************************************************\n*/\n  LegPaymentScheduleStepOffsetValue = 40392,\n/*\n***************************************************************\n* The percentage by which the notional changes on each step   *\n* date. The percentage is either a percentage applied to the  *\n* initial notional amount or the previous outstanding         *\n* notional, depending on the value specified in               *\n* LegPaymentScheduleStepRelativeTo(40395). The percentage can *\n* be either positive or negative.                             *\n***************************************************************\n*/\n  LegPaymentScheduleStepRate = 40393,\n/*\n****************************************************************\n* The explicit amount that the rate changes on each step date. *\n* This can be a positive or negative value.                    *\n****************************************************************\n*/\n  LegPaymentScheduleStepOffsetRate = 40394,\n/*\n****************************************************************\n* Specifies whether the LegPaymentScheduleStepRate(40393) or   *\n* LegPaymentScheduleStepOffsetValue(40392) should be applied   *\n* to the initial notional or the previous notional in order to *\n* calculate the notional step change amount.                   *\n****************************************************************\n*/\n  LegPaymentScheduleStepRelativeTo = 40395,\n/*\n*******************************\n* The unadjusted fixing date. *\n*******************************\n*/\n  LegPaymentScheduleFixingDateUnadjusted = 40396,\n/*\n**********************************************************\n* Floating rate observation weight for cashflow payment. *\n**********************************************************\n*/\n  LegPaymentScheduleWeight = 40397,\n/*\n*****************************************************************\n* Specifies the anchor date when the fixing date is relative    *\n* to an anchor date.                                            *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentScheduleFixingDateRelativeTo = 40398,\n/*\n***************************************************************\n* The business day convention used to adjust the payment      *\n* schedule's fixing date. Used only to override the business  *\n* day convention specified in the LegDateAdjustment component *\n* within the InstrumentLeg component.                         *\n***************************************************************\n*/\n  LegPaymentScheduleFixingDateBusinessDayConvention = 40399,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* schedule's fixing date, e.g. \"GBLO\".                      *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegPaymentScheduleFixingDateBusinessCenter = 40400,\n/*\n*************************************************************\n* Time unit multiplier for the relative fixing date offset. *\n*************************************************************\n*/\n  LegPaymentScheduleFixingDateOffsetPeriod = 40401,\n/*\n**************************************************************\n* Time unit associated with the relative fixing date offset. *\n**************************************************************\n*/\n  LegPaymentScheduleFixingDateOffsetUnit = 40402,\n/*\n**************************************************************\n* Specifies the day type of the relative fixing date offset. *\n**************************************************************\n*/\n  LegPaymentScheduleFixingDateOffsetDayType = 40403,\n/*\n*****************************\n* The adjusted fixing date. *\n*****************************\n*/\n  LegPaymentScheduleFixingDateAdjusted = 40404,\n/*\n*****************************************************\n* The fxing time associated with the step schedule. *\n*****************************************************\n*/\n  LegPaymentScheduleFixingTime = 40405,\n/*\n*************************************************************\n* Business center for determining fixing time.              *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegPaymentScheduleFixingTimeBusinessCenter = 40406,\n/*\n*****************************************************************\n* Specifies the anchor date when the interim exchange payment   *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentScheduleInterimExchangePaymentDateRelativeTo = 40407,\n/*\n***************************************************************\n* The business day convention used to adjust the payment      *\n* schedule's interim exchange date. Used only to override the *\n* business day convention specified in the LegDateAdjustment  *\n* component within the InstrumentLeg component.               *\n***************************************************************\n*/\n  LegPaymentScheduleInterimExchangeDatesBusinessDayConvention = 40408,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* schedule's interim exchange date, e.g. \"GBLO\".            *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegPaymentScheduleInterimExchangeDatesBusinessCenter = 40409,\n/*\n***************************************************************\n* Time unit multiplier for the relative interim exchange date *\n* offset.                                                     *\n***************************************************************\n*/\n  LegPaymentScheduleInterimExchangeDatesOffsetPeriod = 40410,\n/*\n****************************************************************\n* Time unit associated with the relative interim exchange date *\n* offset.                                                      *\n****************************************************************\n*/\n  LegPaymentScheduleInterimExchangeDatesOffsetUnit = 40411,\n/*\n****************************************************************\n* Specifies the day type of the relative interim exchange date *\n* offset.                                                      *\n****************************************************************\n*/\n  LegPaymentScheduleInterimExchangeDatesOffsetDayType = 40412,\n/*\n***************************************\n* The adjusted interim exchange date. *\n***************************************\n*/\n  LegPaymentScheduleInterimExchangeDateAdjusted = 40413,\n/*\n**********************************************\n* Identifies the source of rate information. *\n**********************************************\n*/\n  LegPaymentScheduleRateSource = 40415,\n/*\n*********************\n* Rate source type. *\n*********************\n*/\n  LegPaymentScheduleRateSourceType = 40416,\n/*\n****************************************************************\n* Identifies the reference \"page\" from the rate source.        *\n*                                                              *\n* For FX, the reference page to the spot rate to be used for   *\n* the reference FX spot rate.                                  *\n*                                                              *\n* When RateSource(1446) = 3 (ISDA Settlement Rate Option) this *\n* contains the value from the scheme that reflects the terms   *\n* of the Annex A to the ISDA 1998 FX and Currency Option       *\n* Definitions. See:                                            *\n* http://www.fpml.org/coding-scheme/settlement-rate-option     *\n****************************************************************\n*/\n  LegPaymentScheduleReferencePage = 40417,\n/*\n**************\n* Stub type. *\n**************\n*/\n  LegPaymentStubType = 40419,\n/*\n**************************************************************\n* Optional indication whether stub is shorter or longer than *\n* the regular swap period.                                   *\n**************************************************************\n*/\n  LegPaymentStubLength = 40420,\n/*\n*********************************************\n* The agreed upon fixed rate for this stub. *\n*********************************************\n*/\n  LegPaymentStubRate = 40421,\n/*\n****************************************\n* A fixed payment amount for the stub. *\n****************************************\n*/\n  LegPaymentStubFixedAmount = 40422,\n/*\n************************************************************\n* The currency of the fixed payment amount.  Uses ISO 4217 *\n* currency codes.                                          *\n************************************************************\n*/\n  LegPaymentStubFixedCurrency = 40423,\n/*\n*********************************\n* The stub floating rate index. *\n*********************************\n*/\n  LegPaymentStubIndex = 40424,\n/*\n************************************************\n* The source for the stub floating rate index. *\n************************************************\n*/\n  LegPaymentStubIndexSource = 40425,\n/*\n*****************************************************\n* Time unit multiplier for the floating rate index. *\n*****************************************************\n*/\n  LegPaymentStubIndexCurvePeriod = 40426,\n/*\n******************************************************\n* Time unit associated with the floating rate index. *\n******************************************************\n*/\n  LegPaymentStubIndexCurveUnit = 40427,\n/*\n*************************************************************\n* A rate multiplier to apply to the floating rate. The      *\n* multiplier can be less than or greater than 1 (one). This *\n* element should only be included if the multiplier is not  *\n* equal to 1 (one) for the term of the stream.              *\n*************************************************************\n*/\n  LegPaymentStubIndexRateMultiplier = 40428,\n/*\n************************************\n* Spread from floating rate index. *\n************************************\n*/\n  LegPaymentStubIndexRateSpread = 40429,\n/*\n****************************************************************\n* Identifies whether the rate spread is applied to a long or a *\n* short position.                                              *\n****************************************************************\n*/\n  LegPaymentStubIndexRateSpreadPositionType = 40430,\n/*\n**********************************************************\n* Specifies the yield calculation treatment for the stub *\n* index.                                                 *\n**********************************************************\n*/\n  LegPaymentStubIndexRateTreatment = 40431,\n/*\n***************************************************************\n* The cap rate, if any, which applies to the floating rate.   *\n* The cap rate (strike) is only required where the floating   *\n* rate on a swap stream is capped at a certain level. The cap *\n* rate is assumed to be exclusive of any spread and is a per  *\n* annum rate, expressed as a decimal. A cap rate of 5% would  *\n* be represented as 0.05.                                     *\n***************************************************************\n*/\n  LegPaymentStubIndexCapRate = 40432,\n/*\n*************************************************************\n* Reference to the buyer of the cap rate option through its *\n* trade side.                                               *\n*************************************************************\n*/\n  LegPaymentStubIndexCapRateBuySide = 40433,\n/*\n**************************************************************\n* Reference to the seller of the cap rate option through its *\n* trade side.                                                *\n**************************************************************\n*/\n  LegPaymentStubIndexCapRateSellSide = 40434,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the floating rate.  *\n* The floor rate (strike) is only required where the floating  *\n* rate on a swap stream is floored at a certain strike level.  *\n* The floor rate is assumed to be exclusive of any spread and  *\n* is a per annum rate, expressed as a decimal. A floor rate of *\n* 5% would be represented as 0.05.                             *\n****************************************************************\n*/\n  LegPaymentStubIndexFloorRate = 40435,\n/*\n***************************************************************\n* Reference to the buyer of the floor rate option through its *\n* trade side.                                                 *\n***************************************************************\n*/\n  LegPaymentStubIndexFloorRateBuySide = 40436,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  LegPaymentStubIndexFloorRateSellSide = 40437,\n/*\n****************************************\n* The second stub floating rate index. *\n****************************************\n*/\n  LegPaymentStubIndex2 = 40438,\n/*\n*******************************************************\n* The source for the second stub floating rate index. *\n*******************************************************\n*/\n  LegPaymentStubIndex2Source = 40439,\n/*\n*************************************************************\n* Secondary time unit multiplier for the stub floating rate *\n* index curve.                                              *\n*************************************************************\n*/\n  LegPaymentStubIndex2CurvePeriod = 40440,\n/*\n**************************************************************\n* Secondary time unit associated with the stub floating rate *\n* index curve.                                               *\n**************************************************************\n*/\n  LegPaymentStubIndex2CurveUnit = 40441,\n/*\n***************************************************************\n* A rate multiplier to apply to the second floating rate. The *\n* multiplier can be less than or greater than 1 (one). This   *\n* element should only be included if the multiplier is not    *\n* equal to 1 (one) for the term of the stream.                *\n***************************************************************\n*/\n  LegPaymentStubIndex2RateMultiplier = 40442,\n/*\n***********************************************\n* Spread from the second floating rate index. *\n***********************************************\n*/\n  LegPaymentStubIndex2RateSpread = 40443,\n/*\n****************************************************************\n* Identifies whether the rate spread is applied to a long or a *\n* short position.                                              *\n****************************************************************\n*/\n  LegPaymentStubIndex2RateSpreadPositionType = 40444,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the second *\n* stub index.                                              *\n************************************************************\n*/\n  LegPaymentStubIndex2RateTreatment = 40445,\n/*\n****************************************************************\n* The cap rate, if any, which applies to the second floating   *\n* rate. The cap rate (strike) is only required where the       *\n* floating rate on a swap stream is capped at a certain level. *\n* The cap rate is assumed to be exclusive of any spread and is *\n* a per annum rate, expressed as a decimal. A cap rate of 5%   *\n* would be represented as 0.05.                                *\n****************************************************************\n*/\n  LegPaymentStubIndex2CapRate = 40446,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the second floating *\n* rate. The floor rate (strike) is only required where the     *\n* floating rate on a swap stream is floored at a certain       *\n* strike level. The floor rate is assumed to be exclusive of   *\n* any spread and is a per annum rate, expressed as a decimal.  *\n* A floor rate of 5% would be represented as 0.05.             *\n****************************************************************\n*/\n  LegPaymentStubIndex2FloorRate = 40447,\n/*\n***********************\n* Type of provisions. *\n***********************\n*/\n  LegProvisionType = 40449,\n/*\n*****************************************\n* The unadjusted date of the provision. *\n*****************************************\n*/\n  LegProvisionDateUnadjusted = 40450,\n/*\n***************************************************************\n* The business day convention used to adjust the instrument   *\n* leg's provision's date. Used only to override the business  *\n* day convention specified in the LegDateAdjustment component *\n* within the InstrumentLeg component.                         *\n***************************************************************\n*/\n  LegProvisionDateBusinessDayConvention = 40451,\n/*\n**************************************************************\n* The business center calendar used to adjust the instrument *\n* leg's provision's date, e.g. \"GBLO\". See                   *\n* http://www.fpml.org/coding-scheme/business-center for      *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  LegProvisionDateBusinessCenter = 40452,\n/*\n***************************************\n* The adjusted date of the provision. *\n***************************************\n*/\n  LegProvisionDateAdjusted = 40453,\n/*\n**************************************************************\n* Time unit multiplier for the leg provision's tenor period. *\n**************************************************************\n*/\n  LegProvisionDateTenorPeriod = 40454,\n/*\n***************************************************************\n* Time unit associated with the leg provision's tenor period. *\n***************************************************************\n*/\n  LegProvisionDateTenorUnit = 40455,\n/*\n************************************************************\n* Used to identify the calculation agent.  The calculation *\n* agent may be identified in                               *\n* LegProvisionCalculationAgent(40456) or in the            *\n* ProvisionParties component.                              *\n************************************************************\n*/\n  LegProvisionCalculationAgent = 40456,\n/*\n***********************************************************\n* If optional early termination is not available to both  *\n* parties then this component identifies the buyer of the *\n* option through its side of the trade.                   *\n***********************************************************\n*/\n  LegProvisionOptionSinglePartyBuyerSide = 40457,\n/*\n************************************************************\n* If optional early termination is not available to both   *\n* parties then this component identifies the seller of the *\n* option through its side of the trade.                    *\n************************************************************\n*/\n  LegProvisionOptionSinglePartySellerSide = 40458,\n/*\n***************************************************\n* The instrument provision option exercise style. *\n***************************************************\n*/\n  LegProvisionOptionExerciseStyle = 40459,\n/*\n****************************************************************\n* A notional amount which restricts the amount of notional     *\n* that can be exercised when partial exercise or multiple      *\n* exercise is applicable. The integral multiple amount defines *\n* a lower limit of notional that can be exercised and also     *\n* defines a unit multiple of notional that can be exercised,   *\n* i.e. only integer multiples of this amount can be exercised. *\n****************************************************************\n*/\n  LegProvisionOptionExerciseMultipleNotional = 40460,\n/*\n****************************************************************\n* The minimum notional amount that can be exercised on a given *\n* exercise date.                                               *\n****************************************************************\n*/\n  LegProvisionOptionExerciseMinimumNotional = 40461,\n/*\n****************************************************************\n* The maximum notional amount that can be exercised on a given *\n* exercise date.                                               *\n****************************************************************\n*/\n  LegProvisionOptionExerciseMaximumNotional = 40462,\n/*\n************************************************************\n* The minimum number of options that can be exercised on a *\n* given exercise date.                                     *\n************************************************************\n*/\n  LegProvisionOptionMinimumNumber = 40463,\n/*\n***************************************************************\n* The maximum number of options that can be exercised on a    *\n* given exercise date. If the number is not specified, it     *\n* means that the maximum number of options corresponds to the *\n* remaining unexercised options.                              *\n***************************************************************\n*/\n  LegProvisionOptionMaximumNumber = 40464,\n/*\n***************************************************************\n* Used to indicate whether follow-up confirmation of exercise *\n* (written or electronic) is required following telephonic    *\n* notice by the buyer to the seller or seller's agent.        *\n***************************************************************\n*/\n  LegProvisionOptionExerciseConfirmation = 40465,\n/*\n***************************************************************\n* An ISDA defined cash settlement method used for the         *\n* determination of the applicable cash settlement amount. The *\n* method is defined in the 2006 ISDA Definitions, Section     *\n* 18.3. Cash Settlement Methods, paragraph (e).               *\n***************************************************************\n*/\n  LegProvisionCashSettlMethod = 40466,\n/*\n********************************************************\n* Specifies the currency of settlement.  Uses ISO 4217 *\n* currency codes.                                      *\n********************************************************\n*/\n  LegProvisionCashSettlCurrency = 40467,\n/*\n*************************************************************\n* Specifies the currency of settlement for a cross-currency *\n* provision.  Uses ISO 4217 currency codes.                 *\n*************************************************************\n*/\n  LegProvisionCashSettlCurrency2 = 40468,\n/*\n********************************************\n* Identifies the type of quote to be used. *\n********************************************\n*/\n  LegProvisionCashSettlQuoteType = 40469,\n/*\n***********************************************\n* Identifies the source of quote information. *\n***********************************************\n*/\n  LegProvisionCashSettlQuoteSource = 40470,\n/*\n*********************************************************\n* A business center whose calendar is used for date     *\n* adjustment, e.g. \"GBLO\". See                          *\n* http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                     *\n*********************************************************\n*/\n  BusinessCenter = 40471,\n/*\n**********************************************************\n* Free form text to specify additional information or    *\n* enumeration description when a standard value does not *\n* apply.                                                 *\n**********************************************************\n*/\n  LegProvisionText = 40472,\n/*\n*************************************************************\n* The cash settlement payment date, unadjusted or adjusted  *\n* depending on LegProvisionCashSettlPaymentDateType(40521). *\n*************************************************************\n*/\n  LegProvisionCashSettlPaymentDate = 40474,\n/*\n************************************************************\n* Specifies the type of date (e.g. adjusted for holidays). *\n************************************************************\n*/\n  LegProvisionCashSettlPaymentDateType = 40475,\n/*\n*************************************************************\n* The business day convention used to adjust the instrument *\n* leg's provision's option exercise date. Used only to      *\n* override the business day convention specified in the     *\n* LegDateAdjustment component within the InstrumentLeg      *\n* component.                                                *\n*************************************************************\n*/\n  LegProvisionOptionExerciseBusinessDayConvention = 40476,\n/*\n**************************************************************\n* The business center calendar used to adjust the instrument *\n* leg's provision's option exercise date, e.g. \"GBLO\".       *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  LegProvisionOptionExerciseBusinessCenter = 40477,\n/*\n***********************************************************\n* Time unit multiplier for the interval to the first (and *\n* possibly only) exercise date in the exercise period.    *\n***********************************************************\n*/\n  LegProvisionOptionExerciseEarliestDateOffsetPeriod = 40478,\n/*\n************************************************************\n* Time unit associated with the interval to the first (and *\n* possibly only) exercise date in the exercise period.     *\n************************************************************\n*/\n  LegProvisionOptionExerciseEarliestDateOffsetUnit = 40479,\n/*\n*************************************************************\n* Time unit multiplier for subsequent exercise dates in the *\n* exercise period following the earliest exercise date. An  *\n* interval of 1 day should be used to indicate an American  *\n* style exercise period.                                    *\n*************************************************************\n*/\n  LegProvisionOptionExerciseFrequencyPeriod = 40480,\n/*\n**************************************************************\n* Time unit associated with subsequent exercise dates in the *\n* exercise period following the earliest exercise date.      *\n**************************************************************\n*/\n  LegProvisionOptionExerciseFrequencyUnit = 40481,\n/*\n**********************************************************\n* The unadjusted first day of the exercise period for an *\n* American style option.                                 *\n**********************************************************\n*/\n  LegProvisionOptionExerciseStartDateUnadjusted = 40482,\n/*\n*****************************************************************\n* Specifies the anchor date when the option exercise start      *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegProvisionOptionExerciseStartDateRelativeTo = 40483,\n/*\n***************************************************************\n* Time unit multiplier for the relative option exercise start *\n* date offset.                                                *\n***************************************************************\n*/\n  LegProvisionOptionExerciseStartDateOffsetPeriod = 40484,\n/*\n****************************************************************\n* Time unit associated with the relative option exercise start *\n* date offset.                                                 *\n****************************************************************\n*/\n  LegProvisionOptionExerciseStartDateOffsetUnit = 40485,\n/*\n*************************************************************\n* Specifies the day type of the provision's relative option *\n* exercise start date offset.                               *\n*************************************************************\n*/\n  LegProvisionOptionExerciseStartDateOffsetDayType = 40486,\n/*\n********************************************************\n* The adjusted first day of the exercise period for an *\n* American style option.                               *\n********************************************************\n*/\n  LegProvisionOptionExerciseStartDateAdjusted = 40487,\n/*\n****************************************************************\n* The number of periods in the referenced date schedule that   *\n* are between each date in the relative date schedule. Thus a  *\n* skip of 2 would mean that dates are relative to every second *\n* date in the referenced schedule. If present this should have *\n* a value greater than 1.                                      *\n****************************************************************\n*/\n  LegProvisionOptionExercisePeriodSkip = 40488,\n/*\n****************************************************************\n* The unadjusted first date of a schedule. This can be used to *\n* restrict the range of exercise dates when they are relative. *\n****************************************************************\n*/\n  LegProvisionOptionExerciseBoundsFirstDateUnadjusted = 40489,\n/*\n****************************************************************\n* The unadjusted last date of a schedule. This can be used to  *\n* restrict the range of exercise dates when they are relative. *\n****************************************************************\n*/\n  LegProvisionOptionExerciseBoundsLastDateUnadjusted = 40490,\n/*\n****************************************************************\n* The earliest time at which notice of exercise can be given   *\n* by the buyer to the seller (or seller's agent) (i) on the    *\n* expriation date, in the case of a European style option,     *\n* (ii) on each bermuda option exercise date and the expiration *\n* date, in the case of a Bermuda style option the commencement *\n* date to, and including, the expiration date, in the case of  *\n* an American option.                                          *\n****************************************************************\n*/\n  LegProvisionOptionExerciseEarliestTime = 40491,\n/*\n*************************************************************\n* Identifies the business center calendar used with the     *\n* provision's earliest time for notice of exercise.         *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegProvisionOptionExerciseEarliestTimeBusinessCenter = 40492,\n/*\n**************************************************************\n* For a Bermuda or American style option, the latest time on *\n* an exercise business day (excluding the expiration date)   *\n* within the exercise period that notice can be given by the *\n* buyer to the seller or seller's agent. Notice of exercise  *\n* given after this time will be deemed to have been given on *\n* the next exercise business day.                            *\n**************************************************************\n*/\n  LegProvisionOptionExerciseLatestTime = 40493,\n/*\n*************************************************************\n* Identifies the business center calendar used with the     *\n* provision's latest time for notice of exercise.           *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegProvisionOptionExerciseLatestTimeBusinessCenter = 40494,\n/*\n****************************************************************\n* A predetermined option exercise date unadjusted or adjusted  *\n* depending on LegProvisionOptionExerciseFixedDateType(40497). *\n****************************************************************\n*/\n  LegProvisionOptionExerciseFixedDate = 40496,\n/*\n************************************************************\n* Specifies the type of date (e.g. adjusted for holidays). *\n************************************************************\n*/\n  LegProvisionOptionExerciseFixedDateType = 40497,\n/*\n****************************************************************\n* The unadjusted last day within an exercise period for an     *\n* American style option. For a European style option it is the *\n* only day within the exercise period.                         *\n****************************************************************\n*/\n  LegProvisionOptionExpirationDateUnadjusted = 40498,\n/*\n*************************************************************\n* The business day convention used to adjust the instrument *\n* leg's provision's option expiration date. Used only to    *\n* override the business day convention specified in the     *\n* LegDateAdjustment component within the InstrumentLeg      *\n* component.                                                *\n*************************************************************\n*/\n  LegProvisionOptionExpirationDateBusinessDayConvention = 40499,\n/*\n**************************************************************\n* The business center calendar used to adjust the instrument *\n* leg's provision's option expiration date, e.g. \"GBLO\".     *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  LegProvisionOptionExpirationDateBusinessCenter = 40500,\n/*\n*****************************************************************\n* Specifies the anchor date when the option expiration date is  *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegProvisionOptionExpirationDateRelativeTo = 40501,\n/*\n****************************************************************\n* Time unit multiplier for the relative option expiration date *\n* offset.                                                      *\n****************************************************************\n*/\n  LegProvisionOptionExpirationDateOffsetPeriod = 40502,\n/*\n************************************************************\n* Time unit associated with the relative option expiration *\n* date offset.                                             *\n************************************************************\n*/\n  LegProvisionOptionExpirationDateOffsetUnit = 40503,\n/*\n*************************************************************\n* Specifies the day type of the provision's relative option *\n* expiration date offset.                                   *\n*************************************************************\n*/\n  LegProvisionOptionExpirationDateOffsetDayType = 40504,\n/*\n****************************************************************\n* The adjusted last date within an exercise period for an      *\n* American style option. For a European style option it is the *\n* only date within the exercise period.                        *\n****************************************************************\n*/\n  LegProvisionOptionExpirationDateAdjusted = 40505,\n/*\n********************************************************\n* The latest time for exercise on the expiration date. *\n********************************************************\n*/\n  LegProvisionOptionExpirationTime = 40506,\n/*\n*************************************************************\n* Identifies the business center calendar used with the     *\n* provision's latest exercise time on expiration date.      *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegProvisionOptionExpirationTimeBusinessCenter = 40507,\n/*\n****************************************************************\n* The unadjusted date on the underlying set by the exercise of *\n* an option. What this date is depends on the option (e.g. in  *\n* a swaption it is the swap effective date, in an              *\n* extendible/cancelable provision it is the swap termination   *\n* date).                                                       *\n****************************************************************\n*/\n  LegProvisionOptionRelevantUnderlyingDateUnadjusted = 40508,\n/*\n****************************************************************\n* The business day convention used to adjust the instrument    *\n* leg's provision's option relevant underlying date. Used only *\n* to override the business day convention specified in the     *\n* LegDateAdjustment component within the InstrumentLeg         *\n* component.                                                   *\n****************************************************************\n*/\n  LegProvisionOptionRelevantUnderlyingDateBusinessDayConvention = 40509,\n/*\n**************************************************************\n* The business center calendar used to adjust the instrument *\n* leg's provision's option underlying date, e.g. \"GBLO\".     *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  LegProvisionOptionRelevantUnderlyingDateBusinessCenter = 40510,\n/*\n*****************************************************************\n* Specifies the anchor date when the date relevant to the       *\n* underlying trade on exercise is relative to an anchor date.   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegProvisionOptionRelevantUnderlyingDateRelativeTo = 40511,\n/*\n*********************************************************\n* Time unit multiplier for the relative option relevant *\n* underlying date offset.                               *\n*********************************************************\n*/\n  LegProvisionOptionRelevantUnderlyingDateOffsetPeriod = 40512,\n/*\n**********************************************************\n* Time unit associated with the relative option relevant *\n* underlying date offset.                                *\n**********************************************************\n*/\n  LegProvisionOptionRelevantUnderlyingDateOffsetUnit = 40513,\n/*\n*************************************************************\n* Specifies the day type of the provision's relative option *\n* relevant underlying date offset.                          *\n*************************************************************\n*/\n  LegProvisionOptionRelevantUnderlyingDateOffsetDayType = 40514,\n/*\n***************************************************************\n* The adjusted date on the underlying set by the exercise of  *\n* an option. What this date is depends on the option (e.g. in *\n* a swaption it is the swap effective date, in an             *\n* extendible/cancelable provision it is the swap termination  *\n* date).                                                      *\n***************************************************************\n*/\n  LegProvisionOptionRelevantUnderlyingDateAdjusted = 40515,\n/*\n**************************************************************\n* The business day convention used to adjust the provisional *\n* cash settlement payment's termination, or relative         *\n* termination, date. Used only to override the business day  *\n* convention specified in the LegDateAdjustment component    *\n* within the InstrumentLeg component.                        *\n**************************************************************\n*/\n  LegProvisionCashSettlPaymentDateBusinessDayConvention = 40516,\n/*\n***************************************************************\n* The business center calendar used to adjust the provisional *\n* cash settlement payment's termination, or relative          *\n* termination, date, e.g. \"GBLO\".                             *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  LegProvisionCashSettlPaymentDateBusinessCenter = 40517,\n/*\n*****************************************************************\n* Specifies the anchor date when the cash settlement payment    *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegProvisionCashSettlPaymentDateRelativeTo = 40518,\n/*\n*********************************************************\n* Time unit multiplier for the relative cash settlement *\n* payment date offset.                                  *\n*********************************************************\n*/\n  LegProvisionCashSettlPaymentDateOffsetPeriod = 40519,\n/*\n**********************************************************\n* Time unit associated with the relative cash settlement *\n* payment date offset.                                   *\n**********************************************************\n*/\n  LegProvisionCashSettlPaymentDateOffsetUnit = 40520,\n/*\n***********************************************************\n* Specifies the day type of the provision's relative cash *\n* settlement payment date offset.                         *\n***********************************************************\n*/\n  LegProvisionCashSettlPaymentDateOffsetDayType = 40521,\n/*\n***********************************************************\n* The first date in range when a settlement date range is *\n* provided.                                               *\n***********************************************************\n*/\n  LegProvisionCashSettlPaymentDateRangeFirst = 40522,\n/*\n**********************************************************\n* The last date in range when a settlement date range is *\n* provided.                                              *\n**********************************************************\n*/\n  LegProvisionCashSettlPaymentDateRangeLast = 40523,\n/*\n*************************************************************\n* A time specified in 24-hour format, e.g. 11am would be    *\n* represented as 11:00:00. The time of the cash settlement  *\n* valuation date when the cash settlement amount will be    *\n* determined according to the cash settlement method if the *\n* parties have not otherwise been able to agree to the cash *\n* settlement amount.                                        *\n*************************************************************\n*/\n  LegProvisionCashSettlValueTime = 40524,\n/*\n*************************************************************\n* Identifies the business center calendar used with the     *\n* provision's cash settlement valuation time.               *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegProvisionCashSettlValueTimeBusinessCenter = 40525,\n/*\n**************************************************************\n* The business day convention used to adjust the provision's *\n* cash settlement valuation date. Used only to override the  *\n* business day convention specified in the LegDateAdjustment *\n* component within the InstrumentLeg component.              *\n**************************************************************\n*/\n  LegProvisionCashSettlValueDateBusinessDayConvention = 40526,\n/*\n***************************************************************\n* The business center calendar used to adjust the provision's *\n* cash settlement valuation date, e.g. \"GBLO\".                *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  LegProvisionCashSettlValueDateBusinessCenter = 40527,\n/*\n*****************************************************************\n* Specifies the anchor date when the cash settlement value      *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegProvisionCashSettlValueDateRelativeTo = 40528,\n/*\n***************************************************************\n* Time unit multiplier for the relative cash settlement value *\n* date offset.                                                *\n***************************************************************\n*/\n  LegProvisionCashSettlValueDateOffsetPeriod = 40529,\n/*\n****************************************************************\n* Time unit associated with the relative cash settlement value *\n* date offset.                                                 *\n****************************************************************\n*/\n  LegProvisionCashSettlValueDateOffsetUnit = 40530,\n/*\n***********************************************************\n* Specifies the day type of the provision's relative cash *\n* settlement value date offset.                           *\n***********************************************************\n*/\n  LegProvisionCashSettlValueDateOffsetDayType = 40531,\n/*\n********************************************\n* The adjusted cash settlement value date. *\n********************************************\n*/\n  LegProvisionCashSettlValueDateAdjusted = 40532,\n/*\n***************************************************************\n* The party identifier/code for the payment settlement party. *\n***************************************************************\n*/\n  LegProvisionPartyID = 40534,\n/*\n*************************************\n* Identifies the class or source of *\n* LegProvisionPartyID(40534).       *\n*************************************\n*/\n  LegProvisionPartyIDSource = 40535,\n/*\n*************************************************************\n* Identifies the type or role of LegProvisionPartyID(40534) *\n* specified.                                                *\n*************************************************************\n*/\n  LegProvisionPartyRole = 40536,\n/*\n********************************************\n* Party sub-identifier, if applicable, for *\n* LegProvisionPartyRole(40536).            *\n********************************************\n*/\n  LegProvisionPartySubID = 40538,\n/*\n****************************************************\n* The type of LegProvisionPartySubID(40538) value. *\n****************************************************\n*/\n  LegProvisionPartySubIDType = 40539,\n/*\n************************\n* Type of swap stream. *\n************************\n*/\n  UnderlyingStreamType = 40541,\n/*\n***************************************************************\n* A short descriptive name given to payment stream. Eg. CDS,  *\n* Fixed, Float, Float2, GBP. The description has no intrinsic *\n* meaning but should be arbitrarily chosen by the remitter as *\n* a reference.                                                *\n***************************************************************\n*/\n  UnderlyingStreamDesc = 40542,\n/*\n********************************************\n* The side of the party paying the stream. *\n********************************************\n*/\n  UnderlyingStreamPaySide = 40543,\n/*\n***********************************************\n* The side of the party receiving the stream. *\n***********************************************\n*/\n  UnderlyingStreamReceiveSide = 40544,\n/*\n***************************************************************\n* Notional, or initial notional value for the payment stream. *\n* Use SwapSchedule for steps.                                 *\n***************************************************************\n*/\n  UnderlyingStreamNotional = 40545,\n/*\n**************************************************************\n* Specifies the currency the UnderlyingStreamNotional(40545) *\n* is denominated in.  Uses ISO 4217 currency codes.          *\n**************************************************************\n*/\n  UnderlyingStreamCurrency = 40546,\n/*\n**********************************************************\n* Free form text to specify additional information or    *\n* enumeration description when a standard value does not *\n* apply.                                                 *\n**********************************************************\n*/\n  UnderlyingStreamText = 40547,\n/*\n************************************\n* The unadjusted termination date. *\n************************************\n*/\n  UnderlyingStreamTerminationDateUnadjusted = 40548,\n/*\n***************************************************************\n* The business day convention used to adjust the underlying   *\n* instrument's stream's termination, or relative termination, *\n* date. Used only to override the business day convention     *\n* specified in the UnderlyingDateAdjustment component within  *\n* the UnderlyingInstrument component.                         *\n***************************************************************\n*/\n  UnderlyingStreamTerminationDateBusinessDayConvention = 40549,\n/*\n***************************************************************\n* The business center calendar used to adjust the underlying  *\n* instrument's stream's termination, or relative termination, *\n* date, e.g. \"GBLO\".                                          *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  UnderlyingStreamTerminationDateBusinessCenter = 40550,\n/*\n*****************************************************************\n* Specifies the anchor date when the termination date is        *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingStreamTerminationDateRelativeTo = 40551,\n/*\n**********************************************************\n* Time unit multiplier for the relative termination date *\n* offset.                                                *\n**********************************************************\n*/\n  UnderlyingStreamTerminationDateOffsetPeriod = 40552,\n/*\n***********************************************************\n* Time unit associated with the relative termination date *\n* offset.                                                 *\n***********************************************************\n*/\n  UnderlyingStreamTerminationDateOffsetUnit = 40553,\n/*\n***********************************************************\n* Specifies the day type of the relative termination date *\n* offset.                                                 *\n***********************************************************\n*/\n  UnderlyingStreamTerminationDateOffsetDayType = 40554,\n/*\n**********************************\n* The adjusted termination date. *\n**********************************\n*/\n  UnderlyingStreamTerminationDateAdjusted = 40555,\n/*\n**************************************************************\n* The business day convention used to adjust the calculation *\n* periods. Used only to override the business day convention *\n* specified in the UnderlyingDateAdjustment component within *\n* the UnderlyingInstrument component.                        *\n**************************************************************\n*/\n  UnderlyingStreamCalculationPeriodBusinessDayConvention = 40556,\n/*\n***************************************************************\n* The business center calendar used to adjust the calculation *\n* periods, e.g. \"GBLO\".                                       *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  UnderlyingStreamCalculationPeriodBusinessCenter = 40557,\n/*\n****************************************************************\n* The unadjusted first calculation period start date if before *\n* the effective date.                                          *\n****************************************************************\n*/\n  UnderlyingStreamFirstPeriodStartDateUnadjusted = 40558,\n/*\n***************************************************************\n* The business day convention used to adjust the underlying   *\n* instrument's stream's first calculation period start date.  *\n* Used only to override the business day convention specified *\n* in the UnderlyingDateAdjustment component within the        *\n* UnderlyingInstrument component.                             *\n***************************************************************\n*/\n  UnderlyingStreamFirstPeriodStartDateBusinessDayConvention = 40559,\n/*\n**************************************************************\n* The business center calendar used to adjust the underlying *\n* instrument's stream's first calculation period start date, *\n* e.g. \"GBLO\".                                               *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  UnderlyingStreamFirstPeriodStartDateBusinessCenter = 40560,\n/*\n**************************************************************\n* The adjusted first calculation period start date, if it is *\n* before the effective date.                                 *\n**************************************************************\n*/\n  UnderlyingStreamFirstPeriodStartDateAdjusted = 40561,\n/*\n**************************************************************\n* The unadjusted first start date of the regular calculation *\n* period, if there is an initial stub period.                *\n**************************************************************\n*/\n  UnderlyingStreamFirstRegularPeriodStartDateUnadjusted = 40562,\n/*\n**************************************************************\n* The unadjusted end date of the initial compounding period. *\n**************************************************************\n*/\n  UnderlyingStreamFirstCompoundingPeriodEndDateUnadjusted = 40563,\n/*\n*************************************************************\n* The unadjusted last regular period end date if there is a *\n* final stub period.                                        *\n*************************************************************\n*/\n  UnderlyingStreamLastRegularPeriodEndDateUnadjusted = 40564,\n/*\n***************************************************************\n* Time unit multiplier for the frequency at which calculation *\n* period end dates occur.                                     *\n***************************************************************\n*/\n  UnderlyingStreamCalculationFrequencyPeriod = 40565,\n/*\n****************************************************************\n* Time unit associated with the frequency at which calculation *\n* period end dates occur.                                      *\n****************************************************************\n*/\n  UnderlyingStreamCalculationFrequencyUnit = 40566,\n/*\n****************************************************************\n* The convention for determining the sequence of end dates. It *\n* is used in conjunction with a specified frequency. Used only *\n* to override the roll convention specified in the             *\n* UnderlyingDateAdjustment component within the                *\n* UnderlyingInstrument component.                              *\n****************************************************************\n*/\n  UnderlyingStreamCalculationRollConvention = 40567,\n/*\n****************************************************************\n* Identifies the type of payment stream applicable to the swap *\n* stream associated with the underlying instrument.            *\n****************************************************************\n*/\n  UnderlyingPaymentStreamType = 40568,\n/*\n***************************************************************\n* Used only for credit index trade. This contains the credit  *\n* spread (\"fair value\") at which the trade was executed. The  *\n* market rate varies over the life of the index depending on  *\n* market conditions. This is the price of the index as quoted *\n* by trading desks.                                           *\n***************************************************************\n*/\n  UnderlyingPaymentStreamMarketRate = 40569,\n/*\n****************************************************************\n* Applicable to credit default swaps on mortgage backed        *\n* securities to specify whether payment delays are applicable  *\n* to the fixed amount.                                         *\n* Residential mortgage backed securities typically have a      *\n* payment delay of 5 days between the coupon date of the       *\n* reference obligation and the payment date of the synthetic   *\n* swap.                                                        *\n* Commercial mortage backed securities  do not typically have  *\n* a payment delay, with both payment dates (the coupon date of *\n* the reference obligation and the payment date of the         *\n* synthetic swap) being on the 25th of each month.             *\n****************************************************************\n*/\n  UnderlyingPaymentStreamDelayIndicator = 40570,\n/*\n**************************************************************\n* Specifies the currency that the stream settles in (to      *\n* support swaps that settle in a currency different from the *\n* notional currency).  Uses ISO 4217 currency codes.         *\n**************************************************************\n*/\n  UnderlyingPaymentStreamSettlCurrency = 40571,\n/*\n*******************************************************\n* The day count convention used in the payment stream *\n* calculations.                                       *\n*******************************************************\n*/\n  UnderlyingPaymentStreamDayCount = 40572,\n/*\n***********************************************************\n* The number of days from the adjusted calculation period *\n* start date to the adjusted value date, calculated in    *\n* accordance with the applicable day count fraction.      *\n***********************************************************\n*/\n  UnderlyingPaymentStreamAccrualDays = 40573,\n/*\n********************************************************\n* The method of calculating discounted payment amounts *\n********************************************************\n*/\n  UnderlyingPaymentStreamDiscountType = 40574,\n/*\n****************************************************************\n* Discount rate.  The rate is expressed in decimal, e.g. 5% is *\n* expressed as 0.05.                                           *\n****************************************************************\n*/\n  UnderlyingPaymentStreamDiscountRate = 40575,\n/*\n***********************************************\n* The day count convention applied to the     *\n* UnderlyingPaymentStreamDiscountRate(40575). *\n***********************************************\n*/\n  UnderlyingPaymentStreamDiscountRateDayCount = 40576,\n/*\n***********************\n* Compounding Method. *\n***********************\n*/\n  UnderlyingPaymentStreamCompoundingMethod = 40577,\n/*\n***************************************************************\n* Indicates whether there is an initial exchange of principal *\n* on the effective date.                                      *\n***************************************************************\n*/\n  UnderlyingPaymentStreamInitialPrincipalExchangeIndicator = 40578,\n/*\n*******************************************************\n* Indicates whether there are intermediate or interim *\n* exchanges of principal during the term of the swap. *\n*******************************************************\n*/\n  UnderlyingPaymentStreamInterimPrincipalExchangeIndicator = 40579,\n/*\n***************************************************************\n* Indicates whether there is a final exchange of principal on *\n* the termination date.                                       *\n***************************************************************\n*/\n  UnderlyingPaymentStreamFinalPrincipalExchangeIndicator = 40580,\n/*\n*************************************************************\n* The business day convention used to adjust the payment    *\n* stream's payment date. Used only to override the business *\n* day convention specified in the UnderlyingDateAdjustment  *\n* component within the UnderlyingInstrument component.      *\n*************************************************************\n*/\n  UnderlyingPaymentStreamPaymentDateBusinessDayConvention = 40581,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's payment date, e.g. \"GBLO\".                       *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingPaymentStreamPaymentDateBusinessCenter = 40582,\n/*\n*******************************************************\n* Time unit multiplier for the frequency of payments. *\n*******************************************************\n*/\n  UnderlyingPaymentStreamPaymentFrequencyPeriod = 40583,\n/*\n********************************************************\n* Time unit associated with the frequency of payments. *\n********************************************************\n*/\n  UnderlyingPaymentStreamPaymentFrequencyUnit = 40584,\n/*\n****************************************************************\n* The convention for determining the sequence of end dates. It *\n* is used in conjunction with a specified frequency. Used only *\n* to override the roll convention specified in the             *\n* UnderlyingDateAdjustment component within the                *\n* UnderlyingInstrument component.                              *\n****************************************************************\n*/\n  UnderlyingPaymentStreamPaymentRollConvention = 40585,\n/*\n**************************************\n* The unadjusted first payment date. *\n**************************************\n*/\n  UnderlyingPaymentStreamFirstPaymentDateUnadjusted = 40586,\n/*\n*********************************************\n* The unadjusted last regular payment date. *\n*********************************************\n*/\n  UnderlyingPaymentStreamLastRegularPaymentDateUnadjusted = 40587,\n/*\n*****************************************************************\n* Specifies the anchor date when payment dates are relative to  *\n* an anchor date.                                               *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStreamPaymentDateRelativeTo = 40588,\n/*\n**************************************************************\n* Time unit multiplier for the relative payment date offset. *\n**************************************************************\n*/\n  UnderlyingPaymentStreamPaymentDateOffsetPeriod = 40589,\n/*\n***************************************************************\n* Time unit associated with the relative payment date offset. *\n***************************************************************\n*/\n  UnderlyingPaymentStreamPaymentDateOffsetUnit = 40590,\n/*\n***************************************************************\n* Specifies the day type of the relative payment date offset. *\n***************************************************************\n*/\n  UnderlyingPaymentStreamPaymentDateOffsetDayType = 40591,\n/*\n*****************************************************************\n* Specifies the anchor date when the reset dates are relative   *\n* to an anchor date.                                            *\n* If the reset frequency is specified as daily this element     *\n* must not be included.                                         *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStreamResetDateRelativeTo = 40592,\n/*\n***************************************************************\n* The business day convention used to adjust the payment      *\n* stream's reset date. Used only to override the business day *\n* convention specified in the UnderlyingDateAdjustment        *\n* component within the UnderlyingInstrument component.        *\n***************************************************************\n*/\n  UnderlyingPaymentStreamResetDateBusinessDayConvention = 40593,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's reset date, e.g. \"GBLO\".                         *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingPaymentStreamResetDateBusinessCenter = 40594,\n/*\n*************************************************\n* Time unit multiplier for frequency of resets. *\n*************************************************\n*/\n  UnderlyingPaymentStreamResetFrequencyPeriod = 40595,\n/*\n**************************************************\n* Time unit associated with frequency of resets. *\n**************************************************\n*/\n  UnderlyingPaymentStreamResetFrequencyUnit = 40596,\n/*\n**********************************************************\n* Used to specify the day of the week in which the reset *\n* occurs for payments that reset on a weekly basis.      *\n**********************************************************\n*/\n  UnderlyingPaymentStreamResetWeeklyRollConvention = 40597,\n/*\n*****************************************************************\n* Specifies the anchor date when the initial fixing date is     *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStreamInitialFixingDateRelativeTo = 40598,\n/*\n***********************************************************\n* The business day convention used to adjust the payment  *\n* stream's initial fixing date. Used only to override the *\n* business day convention specified in the                *\n* UnderlyingDateAdjustment component within the           *\n* UnderlyingInstrument component.                         *\n***********************************************************\n*/\n  UnderlyingPaymentStreamInitialFixingDateBusinessDayConvention = 40599,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's initial fixing date, e.g. \"GBLO\".                *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingPaymentStreamInitialFixingDateBusinessCenter = 40600,\n/*\n*************************************************************\n* Time unit multiplier for the relative initial fixing date *\n* offset.                                                   *\n*************************************************************\n*/\n  UnderlyingPaymentStreamInitialFixingDateOffsetPeriod = 40601,\n/*\n**************************************************************\n* Time unit associated with the relative initial fixing date *\n* offset.                                                    *\n**************************************************************\n*/\n  UnderlyingPaymentStreamInitialFixingDateOffsetUnit = 40602,\n/*\n**************************************************************\n* Specifies the day type of the relative initial fixing date *\n* offset.                                                    *\n**************************************************************\n*/\n  UnderlyingPaymentStreamInitialFixingDateOffsetDayType = 40603,\n/*\n*************************************\n* The adjusted initial fixing date. *\n*************************************\n*/\n  UnderlyingPaymentStreamInitialFixingDateAdjusted = 40604,\n/*\n*****************************************************************\n* Specifies the anchor date when the fixing date is relative    *\n* to an anchor date.                                            *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStreamFixingDateRelativeTo = 40605,\n/*\n****************************************************************\n* The business day convention used to adjust the payment       *\n* stream's fixing date. Used only to override the business day *\n* convention specified in the UnderlyingDateAdjustment         *\n* component within the UnderlyingInstrument component.         *\n****************************************************************\n*/\n  UnderlyingPaymentStreamFixingDateBusinessDayConvention = 40606,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's fixing date, e.g. \"GBLO\".                        *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingPaymentStreamFixingDateBusinessCenter = 40607,\n/*\n*************************************************************\n* Time unit multiplier for the relative fixing date offset. *\n*************************************************************\n*/\n  UnderlyingPaymentStreamFixingDateOffsetPeriod = 40608,\n/*\n**************************************************************\n* Time unit associated with the relative fixing date offset. *\n**************************************************************\n*/\n  UnderlyingPaymentStreamFixingDateOffsetUnit = 40609,\n/*\n**************************************************************\n* Specifies the day type of the relative fixing date offset. *\n**************************************************************\n*/\n  UnderlyingPaymentStreamFixingDateOffsetDayType = 40610,\n/*\n*****************************\n* The adjusted fixing date. *\n*****************************\n*/\n  UnderlyingPaymentStreamFixingDateAdjusted = 40611,\n/*\n***********************************************************\n* Time unit multiplier for the relative rate cut-off date *\n* offset.                                                 *\n***********************************************************\n*/\n  UnderlyingPaymentStreamRateCutoffDateOffsetPeriod = 40612,\n/*\n************************************************************\n* Time unit associated with the relative rate cut-off date *\n* offset.                                                  *\n************************************************************\n*/\n  UnderlyingPaymentStreamRateCutoffDateOffsetUnit = 40613,\n/*\n************************************************************\n* Specifies the day type of the relative rate cut-off date *\n* offset.                                                  *\n************************************************************\n*/\n  UnderlyingPaymentStreamRateCutoffDateOffsetDayType = 40614,\n/*\n*********************************************************\n* The rate applicable to the fixed rate payment stream. *\n*********************************************************\n*/\n  UnderlyingPaymentStreamRate = 40615,\n/*\n****************************************************************\n* The underlying payment stream's fixed payment amount. In CDS *\n* an alternative to UnderlyingPaymentStreamRate(40615).        *\n****************************************************************\n*/\n  UnderlyingPaymentStreamFixedAmount = 40616,\n/*\n*************************************************************\n* Specifies the currency in which                           *\n* UnderlyingPaymentStreamFixedAmount(40616) or              *\n* UnderlyingPaymentStreamRate(40615) is denominated.  Users *\n* ISO 4271 currency codes.                                  *\n*************************************************************\n*/\n  UnderlyingPaymentStreamRateOrAmountCurrency = 40617,\n/*\n****************************************************************\n* The future value notional is normally only required for      *\n* certain non-deliverable interest rate swaps (e.g. Brazillian *\n* Real (BRL) vs. CETIP Interbank Deposit Rate (CDI)). The      *\n* value is calculated as follows: Future Value Notional =      *\n* Notional Amount * (1 + Fixed Rate) ^ (Fixed Rate Day Count   *\n* Fraction). The currency is the same as the stream notional.  *\n****************************************************************\n*/\n  UnderlyingPaymentStreamFutureValueNotional = 40618,\n/*\n*******************************************************\n* The adjusted value date of the future value amount. *\n*******************************************************\n*/\n  UnderlyingPaymentStreamFutureValueDateAdjusted = 40619,\n/*\n*********************************************\n* The payment stream's floating rate index. *\n*********************************************\n*/\n  UnderlyingPaymentStreamRateIndex = 40620,\n/*\n*********************************************************\n* The source of the payment stream floating rate index. *\n*********************************************************\n*/\n  UnderlyingPaymentStreamRateIndexSource = 40621,\n/*\n*********************************************************\n* Time unit associated with the underlying instrument\u0019s *\n* floating rate index.                                  *\n*********************************************************\n*/\n  UnderlyingPaymentStreamRateIndexCurveUnit = 40622,\n/*\n********************************************************\n* Time unit multiplier for the underlying instrument\u0019s *\n* floating rate index.                                 *\n********************************************************\n*/\n  UnderlyingPaymentStreamRateIndexCurvePeriod = 40623,\n/*\n****************************************************************\n* A rate multiplier to apply to the floating rate. A           *\n* multiplier schedule is expressed as explicit multipliers and *\n* dates. In the case of a schedule, the step dates may be      *\n* subject to adjustment in accordance with any adjustments     *\n* specified in the calculationPeriodDatesAdjustments. The      *\n* multiplier can be less than or greater than 1 (one). This    *\n* element should only be included if the multiplier is not     *\n* equal to 1 (one) for the term of the stream.                 *\n****************************************************************\n*/\n  UnderlyingPaymentStreamRateMultiplier = 40624,\n/*\n************************************\n* Spread from floating rate index. *\n************************************\n*/\n  UnderlyingPaymentStreamRateSpread = 40625,\n/*\n********************************************\n* Identifies a short or long spread value. *\n********************************************\n*/\n  UnderlyingPaymentStreamRateSpreadPositionType = 40626,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the index. *\n************************************************************\n*/\n  UnderlyingPaymentStreamRateTreatment = 40627,\n/*\n***************************************************************\n* The cap rate, if any, which applies to the floating rate.   *\n* The cap rate (strike) is only required where the floating   *\n* rate on a swap stream is capped at a certain level. The cap *\n* rate is assumed to be exclusive of any spread and is a per  *\n* annum rate, expressed as a decimal. A cap rate of 5% would  *\n* be represented as 0.05.                                     *\n***************************************************************\n*/\n  UnderlyingPaymentStreamCapRate = 40628,\n/*\n*************************************************************\n* Reference to the buyer of the cap rate option through its *\n* trade side.                                               *\n*************************************************************\n*/\n  UnderlyingPaymentStreamCapRateBuySide = 40629,\n/*\n**************************************************************\n* Reference to the seller of the cap rate option through its *\n* trade side.                                                *\n**************************************************************\n*/\n  UnderlyingPaymentStreamCapRateSellSide = 40630,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the floating rate.  *\n* The floor rate (strike) is only required where the floating  *\n* rate on a swap stream is floored at a certain strike level.  *\n* The floor rate is assumed to be exclusive of any spread and  *\n* is a per annum rate, expressed as a decimal. A floor rate of *\n* 5% would be represented as 0.05.                             *\n****************************************************************\n*/\n  UnderlyingPaymentStreamFloorRate = 40631,\n/*\n***************************************************************\n* Reference to the buyer of the floor rate option through its *\n* trade side.                                                 *\n***************************************************************\n*/\n  UnderlyingPaymentStreamFloorRateBuySide = 40632,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  UnderlyingPaymentStreamFloorRateSellSide = 40633,\n/*\n****************************************************************\n* The initial floating rate reset agreed between the principal *\n* parties involved in the trade. This is assumed to be the     *\n* first required reset rate for the first regular calculation  *\n* period. It should only be included when the rate is not      *\n* equal to the rate published on the source implied by the     *\n* floating rate index. An initial rate of 5% would be          *\n* represented as 0.05.                                         *\n****************************************************************\n*/\n  UnderlyingPaymentStreamInitialRate = 40634,\n/*\n*************************************\n* Specifies the rounding direction. *\n*************************************\n*/\n  UnderlyingPaymentStreamFinalRateRoundingDirection = 40635,\n/*\n*************************************************************\n* Specifies the rounding precision in terms of a number of  *\n* decimal places. Note how a percentage rate rounding of 5  *\n* decimal places is expressed as a rounding precision of 7. *\n*************************************************************\n*/\n  UnderlyingPaymentStreamFinalRatePrecision = 40636,\n/*\n****************************************************************\n* When rate averaging is applicable, used to specify whether a *\n* weighted or unweighted average calculation method is to be   *\n* used.                                                        *\n****************************************************************\n*/\n  UnderlyingPaymentStreamAveragingMethod = 40637,\n/*\n***************************************************************\n* The specification of any provisions for calculating payment *\n* obligations when a floating rate is negative (either due to *\n* a quoted negative floating rate or by operation of a spread *\n* that is subtracted from the floating rate).                 *\n***************************************************************\n*/\n  UnderlyingPaymentStreamNegativeRateTreatment = 40638,\n/*\n***************************************************************\n* Time unit multiplier for the inflation lag period.  The lag *\n* period is the offsetting period from the payment date which *\n* determines the reference period for which the inflation     *\n* index is observed.                                          *\n***************************************************************\n*/\n  UnderlyingPaymentStreamInflationLagPeriod = 40639,\n/*\n*******************************************************\n* Time unit associated with the inflation lag period. *\n*******************************************************\n*/\n  UnderlyingPaymentStreamInflationLagUnit = 40640,\n/*\n**************************************\n* The inflation lag period day type. *\n**************************************\n*/\n  UnderlyingPaymentStreamInflationLagDayType = 40641,\n/*\n**************************************************************\n* The method used when calculating the Inflation Index Level *\n* from multiple points - the most common is Linear.          *\n**************************************************************\n*/\n  UnderlyingPaymentStreamInflationInterpolationMethod = 40642,\n/*\n*****************************************\n* The inflation index reference source. *\n*****************************************\n*/\n  UnderlyingPaymentStreamInflationIndexSource = 40643,\n/*\n************************************************************\n* The current main publication source such as relevant web *\n* site or a government body.                               *\n************************************************************\n*/\n  UnderlyingPaymentStreamInflationPublicationSource = 40644,\n/*\n***************************************************************\n* Initial known index level for the first calculation period. *\n***************************************************************\n*/\n  UnderlyingPaymentStreamInflationInitialIndexLevel = 40645,\n/*\n*************************************************************\n* Indicates whether a fallback bond as defined in the 2006  *\n* ISDA Inflation Derivatives Definitions, sections 1.3 and  *\n* 1.8, is applicable or not.  If not specified, the default *\n* value is \"Y\" (True/Yes).                                  *\n*************************************************************\n*/\n  UnderlyingPaymentStreamInflationFallbackBondApplicable = 40646,\n/*\n**************************************************************\n* The method of Forward Rate Agreement (FRA) discounting, if *\n* any, that will apply.                                      *\n**************************************************************\n*/\n  UnderlyingPaymentStreamFRADiscounting = 40647,\n/*\n****************************************************************\n* The non-deliverable settlement reference currency.  Uses ISO *\n* 4217 currency codes.                                         *\n****************************************************************\n*/\n  UnderlyingPaymentStreamNonDeliverableRefCurrency = 40648,\n/*\n*************************************************************\n* The business day convention used to adjust the payment    *\n* stream's fixing date for the non-deliverable terms. Used  *\n* only to override the business day convention specified in *\n* the UnderlyingDateAdjustment component within the         *\n* UnderlyingInstrument component.                           *\n*************************************************************\n*/\n  UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessDayConvention = 40649,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's fixing date for the non-deliverable terms, e.g.  *\n* \"GBLO\".                                                   *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingPaymentStreamNonDeliverableFixingDatesBusinessCenter = 40650,\n/*\n*****************************************************************\n* Specifies the anchor date when the non-deliverable fixing     *\n* dates are relative to an anchor date.                         *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStreamNonDeliverableFixingDatesRelativeTo = 40651,\n/*\n****************************************************************\n* Time unit multiplier for the relative non-deliverable fixing *\n* date offset.                                                 *\n****************************************************************\n*/\n  UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetPeriod = 40652,\n/*\n**********************************************************\n* Time unit associated with the relative non-deliverable *\n* fixing date offset.                                    *\n**********************************************************\n*/\n  UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetUnit = 40653,\n/*\n**********************************************************\n* Specifies the day type of the relative non-deliverable *\n* fixing date offset.                                    *\n**********************************************************\n*/\n  UnderlyingPaymentStreamNonDeliverableFixingDatesOffsetDayType = 40654,\n/*\n****************************************************************\n* Identifies the reference \"page\" from the rate source.        *\n* When SettlRateFallbackRateSource(40373) = 3 (ISDA Settlement *\n* Rate Option) this contains the value from the scheme that    *\n* reflects the terms of the Annex A to the ISDA 1998 FX and    *\n* Currency Option Definitions. See:                            *\n* http://www.fpml.org/coding-scheme/settlement-rate-option     *\n****************************************************************\n*/\n  SettlRateFallbackReferencePage = 40655,\n/*\n***************************************************************\n* The non-deliverable fixing date unadjusted or adjusted      *\n* depending on UnderlyingNonDeliverableFixingDateType(40658). *\n***************************************************************\n*/\n  UnderlyingNonDeliverableFixingDate = 40657,\n/*\n************************************************************\n* Specifies the type of date (e.g. adjusted for holidays). *\n************************************************************\n*/\n  UnderlyingNonDeliverableFixingDateType = 40658,\n/*\n*************************************************************\n* The maximum number of days to wait for a quote from the   *\n* disrupted settlement rate option before proceding to this *\n* method.                                                   *\n*************************************************************\n*/\n  UnderlyingSettlRatePostponementMaximumDays = 40660,\n/*\n**********************************************\n* Identifies the source of rate information. *\n**********************************************\n*/\n  UnderlyingPaymentStreamNonDeliverableSettlRateSource = 40661,\n/*\n*************************************************************\n* Indicates whether to request a settlement rate quote from *\n* the market.                                               *\n*************************************************************\n*/\n  UnderlyingSettlRatePostponementSurvey = 40662,\n/*\n*****************************************************\n* Used to identify the settlement rate postponement *\n* calculation agent.                                *\n*****************************************************\n*/\n  UnderlyingSettlRatePostponementCalculationAgent = 40663,\n/*\n*********************\n* Type of schedule. *\n*********************\n*/\n  UnderlyingPaymentScheduleType = 40665,\n/*\n**************************************************\n* Indicates to which stub this schedule applies. *\n**************************************************\n*/\n  UnderlyingPaymentScheduleStubType = 40666,\n/*\n***************************************************************\n* The unadjusted date on which the value is adjusted, or      *\n* calculated if a future value notional for certain           *\n* non-deliverable interest rate swaps (e.g. Brazillian Real   *\n* (BRL) vs. CETIP Interbank Deposit Rate (CDI)), or the start *\n* date of a cashflow payment.                                 *\n***************************************************************\n*/\n  UnderlyingPaymentScheduleStartDateUnadjusted = 40667,\n/*\n**************************************************\n* The unadjusted end date of a cashflow payment. *\n**************************************************\n*/\n  UnderlyingPaymentScheduleEndDateUnadjusted = 40668,\n/*\n***************************************************\n* The side of the party paying the step schedule. *\n***************************************************\n*/\n  UnderlyingPaymentSchedulePaySide = 40669,\n/*\n******************************************************\n* The side of the party receiving the step schedule. *\n******************************************************\n*/\n  UnderlyingPaymentScheduleReceiveSide = 40670,\n/*\n*************************************************************\n* The notional value for this step, or amount of a cashflow *\n* payment.                                                  *\n*************************************************************\n*/\n  UnderlyingPaymentScheduleNotional = 40671,\n/*\n**************************************************************\n* The currency for this step.  Uses ISO 4217 currency codes. *\n**************************************************************\n*/\n  UnderlyingPaymentScheduleCurrency = 40672,\n/*\n*********************************\n* The rate value for this step. *\n*********************************\n*/\n  UnderlyingPaymentScheduleRate = 40673,\n/*\n*************************************************************\n* A rate multiplier to apply to the floating rate. The      *\n* multiplier can be less than or greater than 1 (one). This *\n* element should only be included if the multiplier is not  *\n* equal to 1 (one) for the term of the stream.              *\n*************************************************************\n*/\n  UnderlyingPaymentScheduleRateMultiplier = 40674,\n/*\n***********************************\n* The spread value for this step. *\n***********************************\n*/\n  UnderlyingPaymentScheduleRateSpread = 40675,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  UnderlyingPaymentScheduleRateSpreadPositionType = 40676,\n/*\n**********************************************************\n* Specifies the yield calculation treatment for the step *\n* schedule.                                              *\n**********************************************************\n*/\n  UnderlyingPaymentScheduleRateTreatment = 40677,\n/*\n**********************************************\n* The explicit payment amount for this step. *\n**********************************************\n*/\n  UnderlyingPaymentScheduleFixedAmount = 40678,\n/*\n*************************************************************\n* The currency of the fixed amount.  Uses ISO 4217 currency *\n* codes.                                                    *\n*************************************************************\n*/\n  UnderlyingPaymentScheduleFixedCurrency = 40679,\n/*\n************************************************\n* Time unit multiplier for the step frequency. *\n************************************************\n*/\n  UnderlyingPaymentScheduleStepFrequencyPeriod = 40680,\n/*\n*************************************************\n* Time unit associated with the step frequency. *\n*************************************************\n*/\n  UnderlyingPaymentScheduleStepFrequencyUnit = 40681,\n/*\n**************************************************************\n* The explicit amount that the notional changes on each step *\n* date. This can be a positive or negative amount.           *\n**************************************************************\n*/\n  UnderlyingPaymentScheduleStepOffsetValue = 40682,\n/*\n**************************************************************\n* The percentage by which the notional changes on each step  *\n* date. The percentage is either a percentage applied to the *\n* initial notional amount or the previous outstanding        *\n* notional, depending on the value specified in              *\n* UnderlyingPaymentScheduleStepRelativeTo(40685). The        *\n* percentage can be either positive or negative.             *\n**************************************************************\n*/\n  UnderlyingPaymentScheduleStepRate = 40683,\n/*\n****************************************************************\n* The explicit amount that the rate changes on each step date. *\n* This can be a positive or negative value.                    *\n****************************************************************\n*/\n  UnderlyingPaymentScheduleStepOffsetRate = 40684,\n/*\n***************************************************************\n* Specifies whether the                                       *\n* UnderlyingPaymentScheduleStepRate(40683) or                 *\n* UnderlyingPaymentScheduleStepOffsetValue(40682) should be   *\n* applied to the initial notional or the previous notional in *\n* order to calculate the notional step change amount.         *\n***************************************************************\n*/\n  UnderlyingPaymentScheduleStepRelativeTo = 40685,\n/*\n*******************************\n* The unadjusted fixing date. *\n*******************************\n*/\n  UnderlyingPaymentScheduleFixingDateUnadjusted = 40686,\n/*\n**********************************************************\n* Floating rate observation weight for cashflow payment. *\n**********************************************************\n*/\n  UnderlyingPaymentScheduleWeight = 40687,\n/*\n*****************************************************************\n* Specifies the anchor date when the fixing date is relative    *\n* to an anchor date.                                            *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentScheduleFixingDateRelativeTo = 40688,\n/*\n**************************************************************\n* The business day convention used to adjust the payment     *\n* schedule's fixing date. Used only to override the business *\n* day convention specified in the UnderlyingDateAdjustment   *\n* component within the UnderlyingInstrument component.       *\n**************************************************************\n*/\n  UnderlyingPaymentScheduleFixingDateBusinessDayCnvtn = 40689,\n/*\n***********************************************************\n* The business center calendar used to adjust the payment *\n* schedule's fixing date, e.g. \"GBLO\". See                *\n* http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                       *\n***********************************************************\n*/\n  UnderlyingPaymentScheduleFixingDateBusinessCenter = 40690,\n/*\n*************************************************************\n* Time unit multiplier for the relative fixing date offset. *\n*************************************************************\n*/\n  UnderlyingPaymentScheduleFixingDateOffsetPeriod = 40691,\n/*\n**************************************************************\n* Time unit associated with the relative fixing date offset. *\n**************************************************************\n*/\n  UnderlyingPaymentScheduleFixingDateOffsetUnit = 40692,\n/*\n**************************************************************\n* Specifies the day type of the relative fixing date offset. *\n**************************************************************\n*/\n  UnderlyingPaymentScheduleFixingDateOffsetDayType = 40693,\n/*\n*****************************\n* The adjusted fixing date. *\n*****************************\n*/\n  UnderlyingPaymentScheduleFixingDateAdjusted = 40694,\n/*\n********************\n* The fixing time. *\n********************\n*/\n  UnderlyingPaymentScheduleFixingTime = 40695,\n/*\n*********************************************************\n* Business center for determining fixing time. See      *\n* http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                     *\n*********************************************************\n*/\n  UnderlyingPaymentScheduleFixingTimeBusinessCenter = 40696,\n/*\n*****************************************************************\n* Specifies the anchor date when the interim exchange payment   *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentScheduleInterimExchangePaymentDateRelativeTo = 40697,\n/*\n***************************************************************\n* The business day convention used to adjust the payment      *\n* schedule's interim exchange date. Used only to override the *\n* business day convention specified in the                    *\n* UnderlyingDateAdjustment component within the               *\n* UnderlyingInstrument component.                             *\n***************************************************************\n*/\n  UnderlyingPaymentScheduleInterimExchangeDatesBusinessDayConvention = 40698,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* schedule's interim exchange date, e.g. \"GBLO\".            *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingPaymentScheduleInterimExchangeDatesBusinessCenter = 40699,\n/*\n***************************************************************\n* Time unit multiplier for the relative interim exchange date *\n* offset.                                                     *\n***************************************************************\n*/\n  UnderlyingPaymentScheduleInterimExchangeDatesOffsetPeriod = 40700,\n/*\n****************************************************************\n* Time unit associated with the relative interim exchange date *\n* offset.                                                      *\n****************************************************************\n*/\n  UnderlyingPaymentScheduleInterimExchangeDatesOffsetUnit = 40701,\n/*\n****************************************************************\n* Specifies the day type of the relative interim exchange date *\n* offset.                                                      *\n****************************************************************\n*/\n  UnderlyingPaymentScheduleInterimExchangeDatesOffsetDayType = 40702,\n/*\n***************************************\n* The adjusted interim exchange date. *\n***************************************\n*/\n  UnderlyingPaymentScheduleInterimExchangeDateAdjusted = 40703,\n/*\n**********************************************\n* Identifies the source of rate information. *\n**********************************************\n*/\n  UnderlyingPaymentScheduleRateSource = 40705,\n/*\n*********************\n* Rate source type. *\n*********************\n*/\n  UnderlyingPaymentScheduleRateSourceType = 40706,\n/*\n****************************************************************\n* Identifies the reference \u001cpage\u001d from the rate source.        *\n*                                                              *\n* For FX, the reference page to the spot rate to be used for   *\n* the reference FX spot rate.                                  *\n*                                                              *\n* When RateSource(1446) = 3 (ISDA Settlement Rate Option) this *\n* contains the value from the scheme that reflects the terms   *\n* of the Annex A to the ISDA 1998 FX and Currency Option       *\n* Definitions. See:                                            *\n* http://www.fpml.org/coding-scheme/settlement-rate-option     *\n****************************************************************\n*/\n  UnderlyingPaymentScheduleReferencePage = 40707,\n/*\n**************\n* Stub type. *\n**************\n*/\n  UnderlyingPaymentStubType = 40709,\n/*\n**************************************************************\n* Optional indication whether stub is shorter or longer than *\n* the regular swap period.                                   *\n**************************************************************\n*/\n  UnderlyingPaymentStubLength = 40710,\n/*\n*********************************************\n* The agreed upon fixed rate for this stub. *\n*********************************************\n*/\n  UnderlyingPaymentStubRate = 40711,\n/*\n****************************************\n* A fixed payment amount for the stub. *\n****************************************\n*/\n  UnderlyingPaymentStubFixedAmount = 40712,\n/*\n************************************************************\n* The currency of the fixed payment amount.  Uses ISO 4217 *\n* currency codes.                                          *\n************************************************************\n*/\n  UnderlyingPaymentStubFixedCurrency = 40713,\n/*\n*********************************\n* The stub floating rate index. *\n*********************************\n*/\n  UnderlyingPaymentStubIndex = 40714,\n/*\n************************************************************\n* The source for the underlying payment stub floating rate *\n* index.                                                   *\n************************************************************\n*/\n  UnderlyingPaymentStubIndexSource = 40715,\n/*\n********************************************************\n* Time unit multiplier for the underlying payment stub *\n* floating rate index.                                 *\n********************************************************\n*/\n  UnderlyingPaymentStubIndexCurvePeriod = 40716,\n/*\n*********************************************************\n* Time unit associated with the underlying payment stub *\n* floating rate index.                                  *\n*********************************************************\n*/\n  UnderlyingPaymentStubIndexCurveUnit = 40717,\n/*\n*************************************************************\n* A rate multiplier to apply to the floating rate. The      *\n* multiplier can be less than or greater than 1 (one). This *\n* element should only be included if the multiplier is not  *\n* equal to 1 (one) for the term of the stream.              *\n*************************************************************\n*/\n  UnderlyingPaymentStubIndexRateMultiplier = 40718,\n/*\n************************************\n* Spread from floating rate index. *\n************************************\n*/\n  UnderlyingPaymentStubIndexRateSpread = 40719,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  UnderlyingPaymentStubIndexRateSpreadPositionType = 40720,\n/*\n**********************************************************\n* Specifies the yield calculation treatment for the stub *\n* index.                                                 *\n**********************************************************\n*/\n  UnderlyingPaymentStubIndexRateTreatment = 40721,\n/*\n***************************************************************\n* The cap rate, if any, which applies to the floating rate.   *\n* The cap rate (strike) is only required where the floating   *\n* rate on a swap stream is capped at a certain level. The cap *\n* rate is assumed to be exclusive of any spread and is a per  *\n* annum rate, expressed as a decimal. A cap rate of 5% would  *\n* be represented as 0.05.                                     *\n***************************************************************\n*/\n  UnderlyingPaymentStubIndexCapRate = 40722,\n/*\n*************************************************************\n* Reference to the buyer of the cap rate option through its *\n* trade side.                                               *\n*************************************************************\n*/\n  UnderlyingPaymentStubIndexCapRateBuySide = 40723,\n/*\n**************************************************************\n* Reference to the seller of the cap rate option through its *\n* trade side.                                                *\n**************************************************************\n*/\n  UnderlyingPaymentStubIndexCapRateSellSide = 40724,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the floating rate.  *\n* The floor rate (strike) is only required where the floating  *\n* rate on a swap stream is floored at a certain strike level.  *\n* The floor rate is assumed to be exclusive of any spread and  *\n* is a per annum rate, expressed as a decimal. A floor rate of *\n* 5% would be represented as 0.05.                             *\n****************************************************************\n*/\n  UnderlyingPaymentStubIndexFloorRate = 40725,\n/*\n***************************************************************\n* Reference to the buyer of the floor rate option through its *\n* trade side.                                                 *\n***************************************************************\n*/\n  UnderlyingPaymentStubIndexFloorRateBuySide = 40726,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  UnderlyingPaymentStubIndexFloorRateSellSide = 40727,\n/*\n****************************************\n* The second stub floating rate index. *\n****************************************\n*/\n  UnderlyingPaymentStubIndex2 = 40728,\n/*\n******************************************************\n* The source of the second stub floating rate index. *\n******************************************************\n*/\n  UnderlyingPaymentStubIndex2Source = 40729,\n/*\n*************************************************************\n* Secondary time unit multiplier for the stub floating rate *\n* index curve.                                              *\n*************************************************************\n*/\n  UnderlyingPaymentStubIndex2CurvePeriod = 40730,\n/*\n**************************************************************\n* Secondary time unit associated with the stub floating rate *\n* index curve.                                               *\n**************************************************************\n*/\n  UnderlyingPaymentStubIndex2CurveUnit = 40731,\n/*\n***************************************************************\n* A rate multiplier to apply to the second floating rate. The *\n* multiplier can be less than or greater than 1 (one). This   *\n* element should only be included if the multiplier is not    *\n* equal to 1 (one) for the term of the stream.                *\n***************************************************************\n*/\n  UnderlyingPaymentStubIndex2RateMultiplier = 40732,\n/*\n***********************************************\n* Spread from the second floating rate index. *\n***********************************************\n*/\n  UnderlyingPaymentStubIndex2RateSpread = 40733,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  UnderlyingPaymentStubIndex2RateSpreadPositionType = 40734,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the second *\n* stub index.                                              *\n************************************************************\n*/\n  UnderlyingPaymentStubIndex2RateTreatment = 40735,\n/*\n****************************************************************\n* The cap rate, if any, which applies to the second floating   *\n* rate. The cap rate (strike) is only required where the       *\n* floating rate on a swap stream is capped at a certain level. *\n* The cap rate is assumed to be exclusive of any spread and is *\n* a per annum rate, expressed as a decimal. A cap rate of 5%   *\n* would be represented as 0.05.                                *\n****************************************************************\n*/\n  UnderlyingPaymentStubIndex2CapRate = 40736,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the second floating *\n* rate. The floor rate (strike) is only required where the     *\n* floating rate on a swap stream is floored at a certain       *\n* strike level. The floor rate is assumed to be exclusive of   *\n* any spread and is a per annum rate, expressed as a decimal.  *\n* A floor rate of 5% would be represented as 0.05.             *\n****************************************************************\n*/\n  UnderlyingPaymentStubIndex2FloorRate = 40737,\n/*\n*************************************************************\n* Identifies the type of payment stream associated with the *\n* swap.                                                     *\n*************************************************************\n*/\n  PaymentStreamType = 40738,\n/*\n***************************************************************\n* Used only for credit index trade. This contains the credit  *\n* spread (\"fair value\") at which the trade was executed. The  *\n* market rate varies over the life of the index depending on  *\n* market conditions. This is the price of the index as quoted *\n* by trading desks.                                           *\n***************************************************************\n*/\n  PaymentStreamMarketRate = 40739,\n/*\n***************************************************************\n* Applicable to credit default swaps on mortgage backed       *\n* securities to specify whether payment delays are applicable *\n* to the fixed amount.                                        *\n* Residential mortgage backed securities typically have a     *\n* payment delay of 5 days between the coupon date of the      *\n* reference obligation and the payment date of the synthetic  *\n* swap.                                                       *\n* Commercial mortgage backed securities do not typically have *\n* a payment delay,  with both payment dates (the coupon date  *\n* of the reference obligation and the payment date of the     *\n* synthetic swap) being on the 25th of each month.            *\n***************************************************************\n*/\n  PaymentStreamDelayIndicator = 40740,\n/*\n**************************************************************\n* Specifies the currency that the stream settles in (to      *\n* support swaps that settle in a currency different from the *\n* notional currency).  Uses ISO 4217 currency codes.         *\n**************************************************************\n*/\n  PaymentStreamSettlCurrency = 40741,\n/*\n*******************************************************\n* The day count convention used in the payment stream *\n* calculations.                                       *\n*******************************************************\n*/\n  PaymentStreamDayCount = 40742,\n/*\n***********************************************************\n* The number of days from the adjusted calculation period *\n* start date to the adjusted value date, calculated in    *\n* accordance with the applicable day count fraction.      *\n***********************************************************\n*/\n  PaymentStreamAccrualDays = 40743,\n/*\n********************************************************\n* The method of calculating discounted payment amounts *\n********************************************************\n*/\n  PaymentStreamDiscountType = 40744,\n/*\n****************************************************************\n* Discount rate.  The rate is expressed in decimal, e.g. 5% is *\n* expressed as 0.05.                                           *\n****************************************************************\n*/\n  PaymentStreamDiscountRate = 40745,\n/*\n*******************************************\n* The day count convention applied to the *\n* PaymentStreamDiscountRate(40745).       *\n*******************************************\n*/\n  PaymentStreamDiscountRateDayCount = 40746,\n/*\n***********************\n* Compounding method. *\n***********************\n*/\n  PaymentStreamCompoundingMethod = 40747,\n/*\n***************************************************************\n* Indicates whether there is an initial exchange of principal *\n* on the effective date.                                      *\n***************************************************************\n*/\n  PaymentStreamInitialPrincipalExchangeIndicator = 40748,\n/*\n*******************************************************\n* Indicates whether there are intermediate or interim *\n* exchanges of principal during the term of the swap. *\n*******************************************************\n*/\n  PaymentStreamInterimPrincipalExchangeIndicator = 40749,\n/*\n***************************************************************\n* Indicates whether there is a final exchange of principal on *\n* the termination date.                                       *\n***************************************************************\n*/\n  PaymentStreamFinalPrincipalExchangeIndicator = 40750,\n/*\n*************************************************************\n* The business day convention used to adjust the payment    *\n* stream's payment date. Used only to override the business *\n* day convention specified in the DateAdjustment component  *\n* within the Instrument component.                          *\n*************************************************************\n*/\n  PaymentStreamPaymentDateBusinessDayConvention = 40751,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's payment date, e.g. \"GBLO\".                       *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  PaymentStreamPaymentDateBusinessCenter = 40752,\n/*\n*******************************************************\n* Time unit multiplier for the frequency of payments. *\n*******************************************************\n*/\n  PaymentStreamPaymentFrequencyPeriod = 40753,\n/*\n********************************************************\n* Time unit associated with the frequency of payments. *\n********************************************************\n*/\n  PaymentStreamPaymentFrequencyUnit = 40754,\n/*\n****************************************************************\n* The convention for determining the sequence of end dates. It *\n* is used in conjunction with a specified frequency. Used only *\n* to override the roll convention specified in the             *\n* DateAdjustment component within the Instrument component.    *\n****************************************************************\n*/\n  PaymentStreamPaymentRollConvention = 40755,\n/*\n**************************************\n* The unadjusted first payment date. *\n**************************************\n*/\n  PaymentStreamFirstPaymentDateUnadjusted = 40756,\n/*\n*********************************************\n* The unadjusted last regular payment date. *\n*********************************************\n*/\n  PaymentStreamLastRegularPaymentDateUnadjusted = 40757,\n/*\n*****************************************************************\n* Specifies the anchor date when payment dates are relative to  *\n* an anchor date.                                               *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStreamPaymentDateRelativeTo = 40758,\n/*\n**************************************************************\n* Time unit multiplier for the relative payment date offset. *\n**************************************************************\n*/\n  PaymentStreamPaymentDateOffsetPeriod = 40759,\n/*\n*************************************************************\n* Time unit multiplier for the relative initial fixing date *\n* offset.                                                   *\n*************************************************************\n*/\n  PaymentStreamPaymentDateOffsetUnit = 40760,\n/*\n*****************************************************************\n* Specifies the anchor date when the reset dates are relative   *\n* to an anchor date.                                            *\n* If the reset frequency is specified as daily this element     *\n* must not be included.                                         *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStreamResetDateRelativeTo = 40761,\n/*\n***************************************************************\n* The business day convention used to adjust the payment      *\n* stream's reset date. Used only to override the business day *\n* convention specified in the DateAdjustment component within *\n* the Instrument component.                                   *\n***************************************************************\n*/\n  PaymentStreamResetDateBusinessDayConvention = 40762,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's reset date, e.g. \"GBLO\".                         *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  PaymentStreamResetDateBusinessCenter = 40763,\n/*\n*****************************************************\n* Time unit multiplier for the frequency of resets. *\n*****************************************************\n*/\n  PaymentStreamResetFrequencyPeriod = 40764,\n/*\n******************************************************\n* Time unit associated with the frequency of resets. *\n******************************************************\n*/\n  PaymentStreamResetFrequencyUnit = 40765,\n/*\n**********************************************************\n* Used to specify the day of the week in which the reset *\n* occurs for payments that reset on a weekly basis.      *\n**********************************************************\n*/\n  PaymentStreamResetWeeklyRollConvention = 40766,\n/*\n*****************************************************************\n* Specifies the anchor date when the initial fixing date is     *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStreamInitialFixingDateRelativeTo = 40767,\n/*\n***********************************************************\n* The business day convention used to adjust the payment  *\n* stream's initial fixing date. Used only to override the *\n* business day convention specified in the DateAdjustment *\n* component within the Instrument component.              *\n***********************************************************\n*/\n  PaymentStreamInitialFixingDateBusinessDayConvention = 40768,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's initial fixing date, e.g. \"GBLO\".                *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  PaymentStreamInitialFixingDateBusinessCenter = 40769,\n/*\n*************************************************************\n* Time unit multiplier for the relative initial fixing date *\n* offset.                                                   *\n*************************************************************\n*/\n  PaymentStreamInitialFixingDateOffsetPeriod = 40770,\n/*\n**************************************************************\n* Time unit associated with the relative initial fixing date *\n* offset.                                                    *\n**************************************************************\n*/\n  PaymentStreamInitialFixingDateOffsetUnit = 40771,\n/*\n**************************************************************\n* Specifies the day type of the relative initial fixing date *\n* offset.                                                    *\n**************************************************************\n*/\n  PaymentStreamInitialFixingDateOffsetDayType = 40772,\n/*\n*************************************\n* The adjusted initial fixing date. *\n*************************************\n*/\n  PaymentStreamInitialFixingDateAdjusted = 40773,\n/*\n*****************************************************************\n* Specifies the anchor date when the fixing date is relative    *\n* to an anchor date.                                            *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStreamFixingDateRelativeTo = 40774,\n/*\n****************************************************************\n* The business day convention used to adjust the payment       *\n* stream's fixing date. Used only to override the business day *\n* convention specified in the DateAdjustment component within  *\n* the Instrument component.                                    *\n****************************************************************\n*/\n  PaymentStreamFixingDateBusinessDayConvention = 40775,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's fixing date, e.g. \"GBLO\".                        *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  PaymentStreamFixingDateBusinessCenter = 40776,\n/*\n*************************************************************\n* Time unit multiplier for the relative fixing date offset. *\n*************************************************************\n*/\n  PaymentStreamFixingDateOffsetPeriod = 40777,\n/*\n**************************************************************\n* Time unit associated with the relative fixing date offset. *\n**************************************************************\n*/\n  PaymentStreamFixingDateOffsetUnit = 40778,\n/*\n**************************************************************\n* Specifies the day type of the relative fixing date offset. *\n**************************************************************\n*/\n  PaymentStreamFixingDateOffsetDayType = 40779,\n/*\n*****************************\n* The adjusted fixing date. *\n*****************************\n*/\n  PaymentStreamFixingDateAdjusted = 40780,\n/*\n***********************************************************\n* Time unit multiplier for the relative rate cut-off date *\n* offset.                                                 *\n***********************************************************\n*/\n  PaymentStreamRateCutoffDateOffsetPeriod = 40781,\n/*\n************************************************************\n* Time unit associated with the relative rate cut-off date *\n* offset.                                                  *\n************************************************************\n*/\n  PaymentStreamRateCutoffDateOffsetUnit = 40782,\n/*\n************************************************************\n* Specifies the day type of the relative rate cut-off date *\n* offset.                                                  *\n************************************************************\n*/\n  PaymentStreamRateCutoffDateOffsetDayType = 40783,\n/*\n*********************************************************\n* The rate applicable to the fixed rate payment stream. *\n*********************************************************\n*/\n  PaymentStreamRate = 40784,\n/*\n********************************************************\n* The payment stream's fixed payment amount. In CDS an *\n* alternative to PaymentStreamRate(40784).             *\n********************************************************\n*/\n  PaymentStreamFixedAmount = 40785,\n/*\n***************************************************************\n* Specifies the currency in which                             *\n* PaymentStreamFixedAmount(40785) or PaymentStreamRate(40784) *\n* is denominated.  Uses ISO 4271 currency codes.              *\n***************************************************************\n*/\n  PaymentStreamRateOrAmountCurrency = 40786,\n/*\n****************************************************************\n* The future value notional is normally only required for      *\n* certain non-deliverable interest rate swaps (e.g. Brazillian *\n* Real (BRL) vs. CETIP Interbank Deposit Rate (CDI)). The      *\n* value is calculated as follows: Future Value Notional =      *\n* Notional Amount * (1 + Fixed Rate) ^ (Fixed Rate Day Count   *\n* Fraction). The currency is the same as the stream notional.  *\n****************************************************************\n*/\n  PaymentStreamFutureValueNotional = 40787,\n/*\n*******************************************************\n* The adjusted value date of the future value amount. *\n*******************************************************\n*/\n  PaymentStreamFutureValueDateAdjusted = 40788,\n/*\n*******************************************\n* The payment stream floating rate index. *\n*******************************************\n*/\n  PaymentStreamRateIndex = 40789,\n/*\n*********************************************************\n* The source of the payment stream floating rate index. *\n*********************************************************\n*/\n  PaymentStreamRateIndexSource = 40790,\n/*\n******************************************************\n* Time unit associated with the floating rate index. *\n******************************************************\n*/\n  PaymentStreamRateIndexCurveUnit = 40791,\n/*\n*****************************************************\n* Time unit multiplier for the floating rate index. *\n*****************************************************\n*/\n  PaymentStreamRateIndexCurvePeriod = 40792,\n/*\n****************************************************************\n* A rate multiplier to apply to the floating rate. A           *\n* multiplier schedule is expressed as explicit multipliers and *\n* dates. In the case of a schedule, the step dates may be      *\n* subject to adjustment in accordance with any adjustments     *\n* specified in the calculationPeriodDatesAdjustments. The      *\n* multiplier can be less than or greater than 1 (one). This    *\n* element should only be included if the multiplier is not     *\n* equal to 1 (one) for the term of the stream.                 *\n****************************************************************\n*/\n  PaymentStreamRateMultiplier = 40793,\n/*\n************************************\n* Spread from floating rate index. *\n************************************\n*/\n  PaymentStreamRateSpread = 40794,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  PaymentStreamRateSpreadPositionType = 40795,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the index. *\n************************************************************\n*/\n  PaymentStreamRateTreatment = 40796,\n/*\n***************************************************************\n* The cap rate, if any, which applies to the floating rate.   *\n* The cap rate (strike) is only required where the floating   *\n* rate on a swap stream is capped at a certain level. The cap *\n* rate is assumed to be exclusive of any spread and is a per  *\n* annum rate, expressed as a decimal. A cap rate of 5% would  *\n* be represented as 0.05.                                     *\n***************************************************************\n*/\n  PaymentStreamCapRate = 40797,\n/*\n*************************************************************\n* Reference to the buyer of the cap rate option through its *\n* trade side.                                               *\n*************************************************************\n*/\n  PaymentStreamCapRateBuySide = 40798,\n/*\n**************************************************************\n* Reference to the seller of the cap rate option through its *\n* trade side.                                                *\n**************************************************************\n*/\n  PaymentStreamCapRateSellSide = 40799,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the floating rate.  *\n* The floor rate (strike) is only required where the floating  *\n* rate on a swap stream is floored at a certain strike level.  *\n* The floor rate is assumed to be exclusive of any spread and  *\n* is a per annum rate, expressed as a decimal. A floor rate of *\n* 5% would be represented as 0.05.                             *\n****************************************************************\n*/\n  PaymentStreamFloorRate = 40800,\n/*\n***************************************************************\n* Reference to the buyer of the floor rate option through its *\n* trade side.                                                 *\n***************************************************************\n*/\n  PaymentStreamFloorRateBuySide = 40801,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  PaymentStreamFloorRateSellSide = 40802,\n/*\n****************************************************************\n* The initial floating rate reset agreed between the principal *\n* parties involved in the trade. This is assumed to be the     *\n* first required reset rate for the first regular calculation  *\n* period. It should only be included when the rate is not      *\n* equal to the rate published on the source implied by the     *\n* floating rate index. An initial rate of 5% would be          *\n* represented as 0.05.                                         *\n****************************************************************\n*/\n  PaymentStreamInitialRate = 40803,\n/*\n*************************************\n* Specifies the rounding direction. *\n*************************************\n*/\n  PaymentStreamFinalRateRoundingDirection = 40804,\n/*\n*************************************************************\n* Specifies the rounding precision in terms of a number of  *\n* decimal places. Note how a percentage rate rounding of 5  *\n* decimal places is expressed as a rounding precision of 7. *\n*************************************************************\n*/\n  PaymentStreamFinalRatePrecision = 40805,\n/*\n****************************************************************\n* When rate averaging is applicable, used to specify whether a *\n* weighted or unweighted average calculation method is to be   *\n* used.                                                        *\n****************************************************************\n*/\n  PaymentStreamAveragingMethod = 40806,\n/*\n***************************************************************\n* The specification of any provisions for calculating payment *\n* obligations when a floating rate is negative (either due to *\n* a quoted negative floating rate or by operation of a spread *\n* that is subtracted from the floating rate).                 *\n***************************************************************\n*/\n  PaymentStreamNegativeRateTreatment = 40807,\n/*\n***************************************************************\n* Time unit multiplier for the inflation lag period.  The lag *\n* period is the offsetting period from the payment date which *\n* determines the reference period for which the inflation     *\n* index is observed.                                          *\n***************************************************************\n*/\n  PaymentStreamInflationLagPeriod = 40808,\n/*\n*******************************************************\n* Time unit associated with the inflation lag period. *\n*******************************************************\n*/\n  PaymentStreamInflationLagUnit = 40809,\n/*\n**************************************\n* The inflation lag period day type. *\n**************************************\n*/\n  PaymentStreamInflationLagDayType = 40810,\n/*\n**************************************************************\n* The method used when calculating the Inflation Index Level *\n* from multiple points - the most common is Linear.          *\n**************************************************************\n*/\n  PaymentStreamInflationInterpolationMethod = 40811,\n/*\n*****************************************\n* The inflation index reference source. *\n*****************************************\n*/\n  PaymentStreamInflationIndexSource = 40812,\n/*\n************************************************************\n* The current main publication source such as relevant web *\n* site or a government body.                               *\n************************************************************\n*/\n  PaymentStreamInflationPublicationSource = 40813,\n/*\n***************************************************************\n* Initial known index level for the first calculation period. *\n***************************************************************\n*/\n  PaymentStreamInflationInitialIndexLevel = 40814,\n/*\n*************************************************************\n* Indicates whether a fallback bond as defined in the 2006  *\n* ISDA Inflation Derivatives Definitions, sections 1.3 and  *\n* 1.8, is applicable or not.  If not specified, the default *\n* value is \"Y\" (True/Yes).                                  *\n*************************************************************\n*/\n  PaymentStreamInflationFallbackBondApplicable = 40815,\n/*\n**************************************************************\n* The method of Forward Rate Agreement (FRA) discounting, if *\n* any, that will apply.                                      *\n**************************************************************\n*/\n  PaymentStreamFRADiscounting = 40816,\n/*\n****************************************************************\n* The non-deliverable settlement reference currency.  Uses ISO *\n* 4217 currency codes.                                         *\n****************************************************************\n*/\n  PaymentStreamNonDeliverableRefCurrency = 40817,\n/*\n************************************************************\n* The business day convention used to adjust the payment   *\n* stream's fixing date for the non-deliverable settlement  *\n* terms. Used only to override the business day convention *\n* specified in the DateAdjustment component within the     *\n* Instrument component                                     *\n************************************************************\n*/\n  PaymentStreamNonDeliverableFixingDatesBusinessDayConvention = 40818,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's fixing date for the non-deliverable terms, e.g.  *\n* \"GBLO\".                                                   *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  PaymentStreamNonDeliverableFixingDatesBusinessCenter = 40819,\n/*\n*****************************************************************\n* Specifies the anchor date when the non-deliverable fixing     *\n* dates are relative to an anchor date.                         *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStreamNonDeliverableFixingDatesRelativeTo = 40820,\n/*\n****************************************************************\n* Time unit multiplier for the relative non-deliverable fixing *\n* date offset.                                                 *\n****************************************************************\n*/\n  PaymentStreamNonDeliverableFixingDatesOffsetPeriod = 40821,\n/*\n**********************************************************\n* Time unit associated with the relative non-deliverable *\n* fixing date offset.                                    *\n**********************************************************\n*/\n  PaymentStreamNonDeliverableFixingDatesOffsetUnit = 40822,\n/*\n**********************************************************\n* Specifies the day type of the relative non-deliverable *\n* fixing date offset.                                    *\n**********************************************************\n*/\n  PaymentStreamNonDeliverableFixingDatesOffsetDayType = 40823,\n/*\n***************************************************************\n* Identifies the reference \"page\" from the rate source.       *\n* When                                                        *\n* UnderlyingPaymentStreamNonDeliverableSettlRateSource(40661) *\n* = 3(ISDA Settlement Rate Option) this contains the value    *\n* from the scheme that reflects the terms of the Annex A to   *\n* the ISDA 1998 FX and Currency Option Definitions. See:      *\n* http://www.fpml.org/coding-scheme/settlement-rate-option    *\n***************************************************************\n*/\n  UnderlyingPaymentStreamNonDeliverableSettlReferencePage = 40824,\n/*\n****************************************************************\n* Non-deliverable fixing date unadjusted or adjusted depending *\n* on NonDeliverableFixingDateType(40827).                      *\n****************************************************************\n*/\n  NonDeliverableFixingDate = 40826,\n/*\n************************************************************\n* Specifies the type of date (e.g. adjusted for holidays). *\n************************************************************\n*/\n  NonDeliverableFixingDateType = 40827,\n/*\n*********************\n* Type of schedule. *\n*********************\n*/\n  PaymentScheduleType = 40829,\n/*\n**************************************************\n* Indicates to which stub this schedule applies. *\n**************************************************\n*/\n  PaymentScheduleStubType = 40830,\n/*\n***************************************************************\n* The date on which the value is adjusted, or calculated if a *\n* future value notional for certain non-deliverable interest  *\n* rate swaps (e.g. Brazillian Real (BRL) vs. CETIP Interbank  *\n* Deposit Rate (CDI)), or the start date of a cashflow        *\n* payment.                                                    *\n***************************************************************\n*/\n  PaymentScheduleStartDateUnadjusted = 40831,\n/*\n***************************************************\n* The unadjusted end date of a cash flow payment. *\n***************************************************\n*/\n  PaymentScheduleEndDateUnadjusted = 40832,\n/*\n***************************************************\n* The side of the party paying the step schedule. *\n***************************************************\n*/\n  PaymentSchedulePaySide = 40833,\n/*\n*******************************************************\n* The side of the party receiving the stepf schedule. *\n*******************************************************\n*/\n  PaymentScheduleReceiveSide = 40834,\n/*\n*************************************************************\n* The notional value for this step, or amount of a cashflow *\n* payment.                                                  *\n*************************************************************\n*/\n  PaymentScheduleNotional = 40835,\n/*\n**************************************************************\n* The currency for this step.  Uses ISO 4217 currency codes. *\n**************************************************************\n*/\n  PaymentScheduleCurrency = 40836,\n/*\n******************************************\n* The rate value for this step schedule. *\n******************************************\n*/\n  PaymentScheduleRate = 40837,\n/*\n*************************************************************\n* A rate multiplier to apply to the floating rate. The      *\n* multiplier can be less than or greater than 1 (one). This *\n* element should only be included if the multiplier is not  *\n* equal to 1 (one) for the term of the stream.              *\n*************************************************************\n*/\n  PaymentScheduleRateMultiplier = 40838,\n/*\n********************************************\n* The spread value for this step schedule. *\n********************************************\n*/\n  PaymentScheduleRateSpread = 40839,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  PaymentScheduleRateSpreadPositionType = 40840,\n/*\n**********************************************************\n* Specifies the yield calculation treatment for the step *\n* schedule.                                              *\n**********************************************************\n*/\n  PaymentScheduleRateTreatment = 40841,\n/*\n*******************************************************\n* The explicit payment amount for this step schedule. *\n*******************************************************\n*/\n  PaymentScheduleFixedAmount = 40842,\n/*\n*************************************************************\n* The currency of the fixed amount.  Uses ISO 4217 currency *\n* codes.                                                    *\n*************************************************************\n*/\n  PaymentScheduleFixedCurrency = 40843,\n/*\n************************************************\n* Time unit multiplier for the step frequency. *\n************************************************\n*/\n  PaymentScheduleStepFrequencyPeriod = 40844,\n/*\n*************************************************\n* Time unit associated with the step frequency. *\n*************************************************\n*/\n  PaymentScheduleStepFrequencyUnit = 40845,\n/*\n**************************************************************\n* The explicit amount that the notional changes on each step *\n* date. This can be a positive or negative amount.           *\n**************************************************************\n*/\n  PaymentScheduleStepOffsetValue = 40846,\n/*\n***************************************************************\n* The percentage by which the notional changes on each step   *\n* date. The percentage is either a percentage applied to the  *\n* initial notional amount or the previous outstanding         *\n* notional, depending on the value specified in               *\n* PaymentScheduleStepRelativeTo(40849). The percentage can be *\n* either positive or negative.                                *\n***************************************************************\n*/\n  PaymentScheduleStepRate = 40847,\n/*\n****************************************************************\n* The explicit amount that the rate changes on each step date. *\n* This can be a positive or negative value.                    *\n****************************************************************\n*/\n  PaymentScheduleStepOffsetRate = 40848,\n/*\n**************************************************************\n* Specifies whether the PaymentScheduleStepRate(40847) or    *\n* PaymentScheduleStepOffsetValue(40846) should be applied to *\n* the initial notional or the previous notional in order to  *\n* calculate the notional step change amount.                 *\n**************************************************************\n*/\n  PaymentScheduleStepRelativeTo = 40849,\n/*\n*******************************\n* The unadjusted fixing date. *\n*******************************\n*/\n  PaymentScheduleFixingDateUnadjusted = 40850,\n/*\n**********************************************************\n* Floating rate observation weight for cashflow payment. *\n**********************************************************\n*/\n  PaymentScheduleWeight = 40851,\n/*\n*****************************************************************\n* Specifies the anchor date when the fixing date is relative    *\n* to an anchor date.                                            *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentScheduleFixingDateRelativeTo = 40852,\n/*\n**************************************************************\n* The business day convention used to adjust the payment     *\n* schedule's fixing date. Used only to override the business *\n* day convention specified in the DateAdjustment component   *\n* within the Instrument component.                           *\n**************************************************************\n*/\n  PaymentScheduleFixingDateBusinessDayConvention = 40853,\n/*\n***********************************************************\n* The business center calendar used to adjust the payment *\n* schedule's fixing date, e.g. \"GBLO\". See                *\n* http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                       *\n***********************************************************\n*/\n  PaymentScheduleFixingDateBusinessCenter = 40854,\n/*\n*************************************************************\n* Time unit multiplier for the relative fixing date offset. *\n*************************************************************\n*/\n  PaymentScheduleFixingDateOffsetPeriod = 40855,\n/*\n**************************************************************\n* Time unit associated with the relative fixing date offset. *\n**************************************************************\n*/\n  PaymentScheduleFixingDateOffsetUnit = 40856,\n/*\n**************************************************************\n* Specifies the day type of the relative fixing date offset. *\n**************************************************************\n*/\n  PaymentScheduleFixingDateOffsetDayType = 40857,\n/*\n*****************************\n* The adjusted fixing date. *\n*****************************\n*/\n  PaymentScheduleFixingDateAdjusted = 40858,\n/*\n******************************************************\n* The fixing time associated with the step schedule. *\n******************************************************\n*/\n  PaymentScheduleFixingTime = 40859,\n/*\n*************************************************************\n* Business center for determining fixing time.              *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  PaymentScheduleFixingTimeBusinessCenter = 40860,\n/*\n*****************************************************************\n* Specifies the anchor date when the interim exchange payment   *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentScheduleInterimExchangePaymentDateRelativeTo = 40861,\n/*\n***************************************************************\n* The business day convention used to adjust the payment      *\n* schedule's interim exchange date. Used only to override the *\n* business day convention specified in the DateAdjustment     *\n* component within the Instrument component.                  *\n***************************************************************\n*/\n  PaymentScheduleInterimExchangeDatesBusinessDayConvention = 40862,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* schedule's interim exchange date, e.g. \"GBLO\".            *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  PaymentScheduleInterimExchangeDatesBusinessCenter = 40863,\n/*\n***************************************************************\n* Time unit multiplier for the relative interim exchange date *\n* offset.                                                     *\n***************************************************************\n*/\n  PaymentScheduleInterimExchangeDatesOffsetPeriod = 40864,\n/*\n****************************************************************\n* Time unit associated with the relative interim exchange date *\n* offset.                                                      *\n****************************************************************\n*/\n  PaymentScheduleInterimExchangeDatesOffsetUnit = 40865,\n/*\n****************************************************************\n* Specifies the day type of the relative interim exchange date *\n* offset.                                                      *\n****************************************************************\n*/\n  PaymentScheduleInterimExchangeDatesOffsetDayType = 40866,\n/*\n***************************************\n* The adjusted interim exchange date. *\n***************************************\n*/\n  PaymentScheduleInterimExchangeDateAdjusted = 40867,\n/*\n**********************************************\n* Identifies the source of rate information. *\n**********************************************\n*/\n  PaymentScheduleRateSource = 40869,\n/*\n*********************\n* Rate source type. *\n*********************\n*/\n  PaymentScheduleRateSourceType = 40870,\n/*\n****************************************************************\n* Identifies the reference \u001cpage\u001d from the rate source.        *\n*                                                              *\n* For FX, the reference page to the spot rate to be used for   *\n* the reference FX spot rate.                                  *\n*                                                              *\n* When RateSource(1446) = 3 (ISDA Settlement Rate Option) this *\n* contains the value from the scheme that reflects the terms   *\n* of the Annex A to the ISDA 1998 FX and Currency Option       *\n* Definitions. See:                                            *\n* http://www.fpml.org/coding-scheme/settlement-rate-option     *\n****************************************************************\n*/\n  PaymentScheduleReferencePage = 40871,\n/*\n**************\n* Stub type. *\n**************\n*/\n  PaymentStubType = 40873,\n/*\n**************************************************************\n* Optional indication whether stub is shorter or longer than *\n* the regular swap period.                                   *\n**************************************************************\n*/\n  PaymentStubLength = 40874,\n/*\n*********************************************\n* The agreed upon fixed rate for this stub. *\n*********************************************\n*/\n  PaymentStubRate = 40875,\n/*\n****************************************\n* A fixed payment amount for the stub. *\n****************************************\n*/\n  PaymentStubFixedAmount = 40876,\n/*\n************************************************************\n* The currency of the fixed payment amount.  Uses ISO 4217 *\n* currency codes.                                          *\n************************************************************\n*/\n  PaymentStubFixedCurrency = 40877,\n/*\n*********************************\n* The stub floating rate index. *\n*********************************\n*/\n  PaymentStubIndex = 40878,\n/*\n***********************************************\n* The source of the stub floating rate index. *\n***********************************************\n*/\n  PaymentStubIndexSource = 40879,\n/*\n**********************************************************\n* Time unit multiplier for the stub floating rate index. *\n**********************************************************\n*/\n  PaymentStubIndexCurvePeriod = 40880,\n/*\n***********************************************************\n* Time unit associated with the stub floating rate index. *\n***********************************************************\n*/\n  PaymentStubIndexCurveUnit = 40881,\n/*\n*************************************************************\n* A rate multiplier to apply to the floating rate. The      *\n* multiplier can be less than or greater than 1 (one). This *\n* element should only be included if the multiplier is not  *\n* equal to 1 (one) for the term of the stream.              *\n*************************************************************\n*/\n  PaymentStubIndexRateMultiplier = 40882,\n/*\n************************************\n* Spread from floating rate index. *\n************************************\n*/\n  PaymentStubIndexRateSpread = 40883,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  PaymentStubIndexRateSpreadPositionType = 40884,\n/*\n*************************************************************\n* Specifies the yield calculation treatment for the payment *\n* stub index.                                               *\n*************************************************************\n*/\n  PaymentStubIndexRateTreatment = 40885,\n/*\n***************************************************************\n* The cap rate, if any, which applies to the floating rate.   *\n* The cap rate (strike) is only required where the floating   *\n* rate on a swap stream is capped at a certain level. The cap *\n* rate is assumed to be exclusive of any spread and is a per  *\n* annum rate, expressed as a decimal. A cap rate of 5% would  *\n* be represented as 0.05.                                     *\n***************************************************************\n*/\n  PaymentStubIndexCapRate = 40886,\n/*\n*************************************************************\n* Reference to the buyer of the cap rate option through its *\n* trade side.                                               *\n*************************************************************\n*/\n  PaymentStubIndexCapRateBuySide = 40887,\n/*\n**************************************************************\n* Reference to the seller of the cap rate option through its *\n* trade side.                                                *\n**************************************************************\n*/\n  PaymentStubIndexCapRateSellSide = 40888,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the floating rate.  *\n* The floor rate (strike) is only required where the floating  *\n* rate on a swap stream is floored at a certain strike level.  *\n* The floor rate is assumed to be exclusive of any spread and  *\n* is a per annum rate, expressed as a decimal. A floor rate of *\n* 5% would be represented as 0.05.                             *\n****************************************************************\n*/\n  PaymentStubIndexFloorRate = 40889,\n/*\n***************************************************************\n* Reference to the buyer of the floor rate option through its *\n* trade side.                                                 *\n***************************************************************\n*/\n  PaymentStubIndexFloorRateBuySide = 40890,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  PaymentStubIndexFloorRateSellSide = 40891,\n/*\n****************************************\n* The second stub floating rate index. *\n****************************************\n*/\n  PaymentStubIndex2 = 40892,\n/*\n******************************************************\n* The source of the second stub floating rate index. *\n******************************************************\n*/\n  PaymentStubIndex2Source = 40893,\n/*\n*************************************************************\n* Secondary time unit multiplier for the stub floating rate *\n* index curve.                                              *\n*************************************************************\n*/\n  PaymentStubIndex2CurvePeriod = 40894,\n/*\n**************************************************************\n* Secondary time unit associated with the stub floating rate *\n* index curve.                                               *\n**************************************************************\n*/\n  PaymentStubIndex2CurveUnit = 40895,\n/*\n***************************************************************\n* A rate multiplier to apply to the second floating rate. The *\n* multiplier can be less than or greater than 1 (one). This   *\n* element should only be included if the multiplier is not    *\n* equal to 1 (one) for the term of the stream.                *\n***************************************************************\n*/\n  PaymentStubIndex2RateMultiplier = 40896,\n/*\n***********************************************\n* Spread from the second floating rate index. *\n***********************************************\n*/\n  PaymentStubIndex2RateSpread = 40897,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  PaymentStubIndex2RateSpreadPositionType = 40898,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the second *\n* stub index.                                              *\n************************************************************\n*/\n  PaymentStubIndex2RateTreatment = 40899,\n/*\n****************************************************************\n* The cap rate, if any, which applies to the second floating   *\n* rate. The cap rate (strike) is only required where the       *\n* floating rate on a swap stream is capped at a certain level. *\n* The cap rate is assumed to be exclusive of any spread and is *\n* a per annum rate, expressed as a decimal. A cap rate of 5%   *\n* would be represented as 0.05.                                *\n****************************************************************\n*/\n  PaymentStubIndex2CapRate = 40900,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the second floating *\n* rate. The floor rate (strike) is only required where the     *\n* floating rate on a swap stream is floored at a certain       *\n* strike level. The floor rate is assumed to be exclusive of   *\n* any spread and is a per annum rate, expressed as a decimal.  *\n* A floor rate of 5% would be represented as 0.05.             *\n****************************************************************\n*/\n  PaymentStubIndex2FloorRate = 40901,\n/*\n*************************************************************\n* The maximum number of days to wait for a quote from the   *\n* disrupted settlement rate option before proceding to this *\n* method.                                                   *\n*************************************************************\n*/\n  LegSettlRatePostponementMaximumDays = 40903,\n/*\n**********************************************\n* Identifies the source of rate information. *\n**********************************************\n*/\n  UnderlyingSettlRateFallbackRateSource = 40904,\n/*\n*************************************************************\n* Indicates whether to request a settlement rate quote from *\n* the market.                                               *\n*************************************************************\n*/\n  LegSettlRatePostponementSurvey = 40905,\n/*\n*****************************************************\n* Used to identify the settlement rate postponement *\n* calculation agent.                                *\n*****************************************************\n*/\n  LegSettlRatePostponementCalculationAgent = 40906,\n/*\n**********************************\n* The unadjusted effective date. *\n**********************************\n*/\n  StreamEffectiveDateUnadjusted = 40907,\n/*\n***************************************************************\n* The business day convention used to adjust the instrument's *\n* stream's effective, or relative effective, date. Used only  *\n* to override the business day convention specified in the    *\n* DateAdjustment component within the Instrument component.   *\n***************************************************************\n*/\n  StreamEffectiveDateBusinessDayConvention = 40908,\n/*\n****************************************************************\n* The business center calendar used to adjust the instrument's *\n* stream's effective, or relative effective, date, e.g.        *\n* \"GBLO\".                                                      *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  StreamEffectiveDateBusinessCenter = 40909,\n/*\n*****************************************************************\n* Specifies the anchor date when the effective date is          *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  StreamEffectiveDateRelativeTo = 40910,\n/*\n****************************************************************\n* Time unit multiplier for the relative effective date offset. *\n****************************************************************\n*/\n  StreamEffectiveDateOffsetPeriod = 40911,\n/*\n*********************************************************\n* Time unit associated with the relative effective date *\n* offset.                                               *\n*********************************************************\n*/\n  StreamEffectiveDateOffsetUnit = 40912,\n/*\n*********************************************************\n* Specifies the day type of the relative effective date *\n* offset.                                               *\n*********************************************************\n*/\n  StreamEffectiveDateOffsetDayType = 40913,\n/*\n********************************\n* The adjusted effective date. *\n********************************\n*/\n  StreamEffectiveDateAdjusted = 40914,\n/*\n**************************************************************\n* Identifies the reference \"page\" from the rate source.      *\n* When UnderlyingSettlRateFallbackRateSource(40904) = 3(ISDA *\n* Settlement Rate Option) this contains the value from the   *\n* scheme that reflects the terms of the Annex A to the ISDA  *\n* 1998 FX and Currency Option Definitions. See:              *\n* http://www.fpml.org/coding-scheme/settlement-rate-option   *\n**************************************************************\n*/\n  UnderlyingSettlRateFallbackReferencePage = 40915,\n/*\n***************************************************************\n* The number of business days between successive valuation    *\n* dates when multiple valuation dates are applicable for cash *\n* settlement.                                                 *\n***************************************************************\n*/\n  CashSettlValuationSubsequentBusinessDaysOffset = 40916,\n/*\n****************************************************************\n* Where multiple valuation dates are specified as being        *\n* applicable for cash settlement, this specifies the number of *\n* applicable valuation dates.                                  *\n****************************************************************\n*/\n  CashSettlNumOfValuationDates = 40917,\n/*\n****************************************\n* Used to further qualify the value of *\n* UnderlyingProvisionPartyRole(42176). *\n****************************************\n*/\n  UnderlyingProvisionPartyRoleQualifier = 40918,\n/*\n********************************************************\n* Specifies the type of price for PaymentPrice(40218). *\n********************************************************\n*/\n  PaymentPriceType = 40919,\n/*\n***************************************************************\n* Specifies the day type of the relative payment date offset. *\n***************************************************************\n*/\n  PaymentStreamPaymentDateOffsetDayType = 40920,\n/*\n*************************************************************\n* The business day convention used for adjusting dates. The *\n* value defined here applies to all adjustable dates in the *\n* instrument unless specifically overridden.                *\n*************************************************************\n*/\n  BusinessDayConvention = 40921,\n/*\n****************************************************************\n* The convention for determining a sequence of dates. It is    *\n* used in conjunction with a specified frequency. The value    *\n* defined here applies to all adjustable dates in the          *\n* instrument unless specifically overridden. Additional values *\n* may be used by mutual agreement of the counterparties.       *\n****************************************************************\n*/\n  DateRollConvention = 40922,\n/*\n*************************************************************\n* A business center whose calendar is used for date         *\n* adjustment, e.g. \"GBLO\".                                  *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegBusinessCenter = 40924,\n/*\n*************************************************************\n* The business day convention used for adjusting dates. The *\n* value defined here applies to all adjustable dates in the *\n* instrument leg unless specifically overridden.            *\n*************************************************************\n*/\n  LegBusinessDayConvention = 40925,\n/*\n*************************************************************\n* The convention for determining a sequence of dates. It is *\n* used in conjunction with a specified frequency. The value *\n* defined here applies to all adjustable dates in the       *\n* instrument leg unless specifically overridden.            *\n*************************************************************\n*/\n  LegDateRollConvention = 40926,\n/*\n*********************************************************\n* A business center whose calendar is used for date     *\n* adjustment, e.g. \"GBLO\". See                          *\n* http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                     *\n*********************************************************\n*/\n  UnderlyingBusinessCenter = 40963,\n/*\n*************************************************************\n* The business day convention used for adjusting dates. The *\n* value defined here applies to all adjustable dates in the *\n* underlying instrument unless specifically overridden.     *\n*************************************************************\n*/\n  UnderlyingBusinessDayConvention = 40964,\n/*\n*************************************************************\n* The convention for determining a sequence of dates. It is *\n* used in conjunction with a specified frequency. The value *\n* defined here applies to all adjustable dates in the       *\n* underlying instrument unless specifically overridden.     *\n*************************************************************\n*/\n  UnderlyingDateRollConvention = 40965,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedLegStreamText(40979) field.            *\n*************************************************\n*/\n  EncodedLegStreamTextLen = 40978,\n/*\n**************************************************************\n* Encoded (non-ASCII characters) representation of the       *\n* LegStreamText(40248) field in the encoded format specified *\n* via the MessageEncoding (347) field. If used, the ASCII    *\n* (English) representation should also be specified in the   *\n* LegStreamText(40248) field.                                *\n**************************************************************\n*/\n  EncodedLegStreamText = 40979,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedLegProvisionText(40472) field.         *\n*************************************************\n*/\n  EncodedLegProvisionTextLen = 40980,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* LegProvisionText(40472) field in the encoded format         *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the LegProvisionText(40472) field.                          *\n***************************************************************\n*/\n  EncodedLegProvisionText = 40981,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedStreamText(40983) field.               *\n*************************************************\n*/\n  EncodedStreamTextLen = 40982,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* StreamText(40056) field in the encoded format specified via *\n* the MessageEncoding (347) field. If used, the ASCII         *\n* (English) representation should also be specified in the    *\n* StreamText(40056) field.                                    *\n***************************************************************\n*/\n  EncodedStreamText = 40983,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedPaymentText(40985) field.              *\n*************************************************\n*/\n  EncodedPaymentTextLen = 40984,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* PaymentText(40229) field in the encoded format specified via *\n* the MessageEncoding (347) field. If used, the ASCII          *\n* (English) representation should also be specified in the     *\n* PaymentText(40229) field.                                    *\n****************************************************************\n*/\n  EncodedPaymentText = 40985,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedProvisionText(40987) field.            *\n*************************************************\n*/\n  EncodedProvisionTextLen = 40986,\n/*\n**************************************************************\n* Encoded (non-ASCII characters) representation of the       *\n* ProvisionText(40113) field in the encoded format specified *\n* via the MessageEncoding (347) field. If used, the ASCII    *\n* (English) representation should also be specified in the   *\n* ProvisionText(40113) field.                                *\n**************************************************************\n*/\n  EncodedProvisionText = 40987,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedUnderlyingStreamText(40989) field.     *\n*************************************************\n*/\n  EncodedUnderlyingStreamTextLen = 40988,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* UnderlyingStreamText(40547) field in the encoded format     *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the UnderlyingStreamText(40547) field.                      *\n***************************************************************\n*/\n  EncodedUnderlyingStreamText = 40989,\n/*\n****************************************************************\n* Applicable value for LegMarketDisruptionFallbackType(41470). *\n****************************************************************\n*/\n  LegMarketDisruptionFallbackValue = 40990,\n/*\n******************************************************\n* Applicable value for MarketDisruptionEvent(41093). *\n******************************************************\n*/\n  MarketDisruptionValue = 40991,\n/*\n*************************************************************\n* Applicable value for MarketDisruptionFallbackType(41095). *\n*************************************************************\n*/\n  MarketDisruptionFallbackValue = 40992,\n/*\n************************************************************\n* Used to further clarify the value of PaymentType(40213). *\n************************************************************\n*/\n  PaymentSubType = 40993,\n/*\n***********************************************************\n* Cross reference to the ordinal observation as specified *\n* either in the ComplexEventScheduleGrp or                *\n* ComplexEventPeriodDateGrp components.                   *\n***********************************************************\n*/\n  ComplexEventAveragingObservationNumber = 40995,\n/*\n*******************************************************\n* The weight factor to be applied to the observation. *\n*******************************************************\n*/\n  ComplexEventAveragingWeight = 40996,\n/*\n*******************************************************************\n* Specifies the type of credit event.                             *\n* See                                                             *\n* http://www.fixtradingcommunity.org/codelists#Credit_Event_Types *\n* for code list of applicable event types.                        *\n*******************************************************************\n*/\n  ComplexEventCreditEventType = 40998,\n/*\n*******************************************************************\n* The credit event value appropriate to                           *\n* ComplexEventCreditEventType(40998).                             *\n* See                                                             *\n* http://www.fixtradingcommunity.org/codelists#Credit_Event_Types *\n* for applicable event type values.                               *\n*******************************************************************\n*/\n  ComplexEventCreditEventValue = 40999,\n/*\n**************************************************************\n* Specifies the applicable currency when                     *\n* ComplexEventCreditEventValue(40999) is an amount. Uses ISO *\n* 4217 currency codes.                                       *\n**************************************************************\n*/\n  ComplexEventCreditEventCurrency = 41000,\n/*\n***************************************************\n* Time unit multiplier for complex credit events. *\n***************************************************\n*/\n  ComplexEventCreditEventPeriod = 41001,\n/*\n****************************************************\n* Time unit associated with complex credit events. *\n****************************************************\n*/\n  ComplexEventCreditEventUnit = 41002,\n/*\n*********************************************************\n* Specifies the day type for the complex credit events. *\n*********************************************************\n*/\n  ComplexEventCreditEventDayType = 41003,\n/*\n*************************************************************************\n* Identifies the source of rate information used for credit             *\n* events.                                                               *\n* See                                                                   *\n* http://www.fixtradingcommunity.org/codelists#Credit_Event_Rate_Source *\n* for code list of applicable sources.                                  *\n*************************************************************************\n*/\n  ComplexEventCreditEventRateSource = 41004,\n/*\n****************************************************************\n* Specifies a complex event qualifier. Used to further qualify *\n* ComplexEventCreditEventType(40998).                          *\n****************************************************************\n*/\n  ComplexEventCreditEventQualifier = 41006,\n/*\n***************************************************\n* The averaging date for an Asian option.         *\n* The trigger date for a Barrier or Knock option. *\n***************************************************\n*/\n  ComplexEventPeriodDate = 41008,\n/*\n*******************************************\n* The averaging time for an Asian option. *\n*******************************************\n*/\n  ComplexEventPeriodTime = 41009,\n/*\n******************************\n* Specifies the period type. *\n******************************\n*/\n  ComplexEventPeriodType = 41011,\n/*\n****************************************************************\n* The business center used to determine dates and times in the *\n* schedule or date-time group.                                 *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  ComplexEventBusinessCenter = 41012,\n/*\n**********************************************\n* Identifies the source of rate information. *\n**********************************************\n*/\n  ComplexEventRateSource = 41014,\n/*\n***************************************************************\n* Indicates whether the rate source specified is a primary or *\n* secondary source.                                           *\n***************************************************************\n*/\n  ComplexEventRateSourceType = 41015,\n/*\n****************************************************************\n* Identifies the reference page from the rate source.          *\n* For FX, the reference page to the spot rate is to be used    *\n* for the reference FX spot rate.                              *\n* When ComplexEventRateSource(41014) = 3 (ISDA Settlement Rate *\n* Option) this contains the value from the scheme that         *\n* reflects the terms of the Annex A to the ISDA 1998 FX and    *\n* Currency Option Definitions. See:                            *\n* http://www.fpml.org/coding-scheme/settlement-rate-option.    *\n****************************************************************\n*/\n  ComplexEventReferencePage = 41016,\n/*\n***************************************************************\n* Identifies the reference page heading from the rate source. *\n***************************************************************\n*/\n  ComplexEventReferencePageHeading = 41017,\n/*\n*************************************************************\n* The business center calendar used to adjust the complex   *\n* event date, e.g. \"GBLO\".                                  *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  ComplexEventDateBusinessCenter = 41019,\n/*\n**************************************\n* The unadjusted complex event date. *\n**************************************\n*/\n  ComplexEventDateUnadjusted = 41020,\n/*\n*****************************************************************\n* Specifies the anchor date when the complex event date is      *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  ComplexEventDateRelativeTo = 41021,\n/*\n******************************************************\n* Time unit multiplier for the relative date offset. *\n******************************************************\n*/\n  ComplexEventDateOffsetPeriod = 41022,\n/*\n*******************************************************\n* Time unit associated with the relative date offset. *\n*******************************************************\n*/\n  ComplexEventDateOffsetUnit = 41023,\n/*\n*******************************************************\n* Specifies the day type of the relative date offset. *\n*******************************************************\n*/\n  ComplexEventDateOffsetDayType = 41024,\n/*\n****************************************************************\n* The business day convention used to adjust the complex event *\n* date. Used only to override the business day convention      *\n* specified in the DateAdjustment component within the         *\n* Instrument component.                                        *\n****************************************************************\n*/\n  ComplexEventDateBusinessDayConvention = 41025,\n/*\n************************************\n* The adjusted complex event date. *\n************************************\n*/\n  ComplexEventDateAdjusted = 41026,\n/*\n*********************************\n* The local market fixing time. *\n*********************************\n*/\n  ComplexEventFixingTime = 41027,\n/*\n*************************************************************\n* The business center calendar used to determine the actual *\n* fixing times.                                             *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  ComplexEventFixingTimeBusinessCenter = 41028,\n/*\n****************************************************************\n* A newspaper or electronic news service that may publish      *\n* relevant information used in the determination of whether or *\n* not a credit event has occurred.                             *\n****************************************************************\n*/\n  ComplexEventCreditEventSource = 41030,\n/*\n***********************************\n* The start date of the schedule. *\n***********************************\n*/\n  ComplexEventScheduleStartDate = 41032,\n/*\n*********************************\n* The end date of the schedule. *\n*********************************\n*/\n  ComplexEventScheduleEndDate = 41033,\n/*\n*********************************************************\n* Time unit multiplier for the schedule date frequency. *\n*********************************************************\n*/\n  ComplexEventScheduleFrequencyPeriod = 41034,\n/*\n**********************************************************\n* Time unit associated with the schedule date frequency. *\n**********************************************************\n*/\n  ComplexEventScheduleFrequencyUnit = 41035,\n/*\n****************************************************************\n* The convention for determining the sequence of dates.  It is *\n* used in conjunction with a specified frequency.  Used only   *\n* to override the roll convention defined in the               *\n* DateAdjustment component in Instrument.                      *\n****************************************************************\n*/\n  ComplexEventScheduleRollConvention = 41036,\n/*\n********************************************\n* Specifies the type of delivery schedule. *\n********************************************\n*/\n  DeliveryScheduleType = 41038,\n/*\n***************************************************************\n* Identifier for this instance of delivery schedule for cross *\n* referencing elsewhere in the message.                       *\n***************************************************************\n*/\n  DeliveryScheduleXID = 41039,\n/*\n*******************************\n* Physical delivery quantity. *\n*******************************\n*/\n  DeliveryScheduleNotional = 41040,\n/*\n**********************************************************\n* Specifies the delivery quantity unit of measure (UOM). *\n**********************************************************\n*/\n  DeliveryScheduleNotionalUnitOfMeasure = 41041,\n/*\n***************************************\n* The frequency of notional delivery. *\n***************************************\n*/\n  DeliveryScheduleNotionalCommodityFrequency = 41042,\n/*\n****************************************************************\n* Specifies the negative tolerance value.  The value may be an *\n* absolute quantity or a percentage, as specified in           *\n* DeliveryScheduleToleranceType(41046).  Percentage value is   *\n* to be expressed relative to \"1.0\" representing 100% (e.g. a  *\n* value of \"0.0575\" represents 5.75%).                         *\n****************************************************************\n*/\n  DeliveryScheduleNegativeTolerance = 41043,\n/*\n***************************************************************\n* Specifies the positive tolerance value. The value may be an *\n* absolute quantity or a percentage, as specified in          *\n* DeliveryScheduleToleranceType(41046). Value may exceed      *\n* agreed upon value. Percentage value is to be expressed      *\n* relative to \"1.0\" representing 100% (e.g. a value of        *\n* \"0.0575\" represents 5.75%).                                 *\n***************************************************************\n*/\n  DeliverySchedulePositiveTolerance = 41044,\n/*\n**********************************************************\n* Specifies the tolerance value's unit of measure (UOM). *\n**********************************************************\n*/\n  DeliveryScheduleToleranceUnitOfMeasure = 41045,\n/*\n***************************************\n* Specifies the tolerance value type. *\n***************************************\n*/\n  DeliveryScheduleToleranceType = 41046,\n/*\n**************************************************************\n* Specifies the country where delivery takes place. Uses ISO *\n* 3166 2-character country code.                             *\n**************************************************************\n*/\n  DeliveryScheduleSettlCountry = 41047,\n/*\n*********************************************************************\n* Delivery timezone specified as \"prevailing\" rather than           *\n* \"standard\" or \"daylight\".                                         *\n* See                                                               *\n* http://www.fixtradingcommunity.org/codelists#Prevailing_Timezones *\n* for code list of applicable prevailing timezones.                 *\n*********************************************************************\n*/\n  DeliveryScheduleSettlTimeZone = 41048,\n/*\n***********************************************\n* Specifies the commodity delivery flow type. *\n***********************************************\n*/\n  DeliveryScheduleSettlFlowType = 41049,\n/*\n*************************************************************\n* Indicates whether holidays are included in the settlement *\n* periods. Required for electricity contracts.              *\n*************************************************************\n*/\n  DeliveryScheduleSettlHolidaysProcessingInstruction = 41050,\n/*\n****************************************************\n* Specifies the day or group of days for delivery. *\n****************************************************\n*/\n  DeliveryScheduleSettlDay = 41052,\n/*\n***********************************************\n* The sum of the total hours specified in the *\n* DeliveryScheduleSettlTimeGrp component.     *\n***********************************************\n*/\n  DeliveryScheduleSettlTotalHours = 41053,\n/*\n**************************************************************\n* The scheduled start time for the delivery of the commodity *\n* where delivery occurs over specified times. The format of  *\n* the time value is specified in                             *\n* DeliveryScheduleSettlTimeType(41057).                      *\n**************************************************************\n*/\n  DeliveryScheduleSettlStart = 41055,\n/*\n*************************************************************\n* The scheduled end time for the delivery of the commodity  *\n* where delivery occurs over specified times. The format of *\n* the time value is specified in                            *\n* DeliveryScheduleSettlTimeType(41057).                     *\n*************************************************************\n*/\n  DeliveryScheduleSettlEnd = 41056,\n/*\n***********************************************************\n* Specifies the format of the delivery start and end time *\n* values.                                                 *\n***********************************************************\n*/\n  DeliveryScheduleSettlTimeType = 41057,\n/*\n******************************************\n* Specifies the type of delivery stream. *\n******************************************\n*/\n  DeliveryStreamType = 41058,\n/*\n******************************************\n* The name of the oil delivery pipeline. *\n******************************************\n*/\n  DeliveryStreamPipeline = 41059,\n/*\n************************************************************\n* The point at which the commodity will enter the delivery *\n* mechanism or pipeline.                                   *\n************************************************************\n*/\n  DeliveryStreamEntryPoint = 41060,\n/*\n**************************************************************\n* The point at which the commodity product will be withdrawn *\n* prior to delivery.                                         *\n**************************************************************\n*/\n  DeliveryStreamWithdrawalPoint = 41061,\n/*\n***************************************************************\n* The point at which the commodity product will be delivered  *\n* and received. Value specified should follow market          *\n* convention appropriate for the commodity product.           *\n* For bullion, see                                            *\n* http://www.fpml.org/coding-scheme/bullion-delivery-location *\n* for values.                                                 *\n***************************************************************\n*/\n  DeliveryStreamDeliveryPoint = 41062,\n/*\n***************************************************************\n* Specifies under what conditions the buyer and seller should *\n* be excused of their delivery obligations.                   *\n***************************************************************\n*/\n  DeliveryStreamDeliveryRestriction = 41063,\n/*\n**************************************************************************\n* Specifies the electricity delivery contingency.                        *\n* See                                                                    *\n* http://www.fpml.org/coding-scheme/electricity-transmission-contingency *\n* for values.                                                            *\n**************************************************************************\n*/\n  DeliveryStreamDeliveryContingency = 41064,\n/*\n*****************************************************\n* The trade side value of the party responsible for *\n* electricity delivery contingency.                 *\n*****************************************************\n*/\n  DeliveryStreamDeliveryContingentPartySide = 41065,\n/*\n**************************************************************\n* When this element is specified and set to 'Y', delivery of *\n* the coal product is to be at its source.                   *\n**************************************************************\n*/\n  DeliveryStreamDeliverAtSourceIndicator = 41066,\n/*\n*******************************************************************\n* Specifies how the parties to the trade apportion                *\n* responsibility for the delivery of the commodity product.       *\n* See                                                             *\n* http://www.fixtradingcommunity.org/codelists#Risk_Apportionment *\n* for the details of the external code list.                      *\n*******************************************************************\n*/\n  DeliveryStreamRiskApportionment = 41067,\n/*\n******************************************\n* Specifies the title transfer location. *\n******************************************\n*/\n  DeliveryStreamTitleTransferLocation = 41068,\n/*\n**********************************************\n* Specifies the condition of title transfer. *\n**********************************************\n*/\n  DeliveryStreamTitleTransferCondition = 41069,\n/*\n**************************************************************\n* A party, not necessarily of the trade, who is the Importer *\n* of Record for the purposes of paying customs duties and    *\n* applicable taxes or costs related to importation.          *\n**************************************************************\n*/\n  DeliveryStreamImporterOfRecord = 41070,\n/*\n****************************************************************\n* Specifies the negative tolerance value.  The value may be an *\n* absolute quantity or a percentage, as specified in           *\n* DeliveryStreamToleranceType(41074).  Percentage value is to  *\n* be expressed relative to \"1.0\" representing 100% (e.g. a     *\n* value of \"0.0575\" represents 5.75%).                         *\n****************************************************************\n*/\n  DeliveryStreamNegativeTolerance = 41071,\n/*\n****************************************************************\n* Specifies the positive tolerance value. The value may be an  *\n* absolute quantity or a percentage, as specified in           *\n* DeliveryStreamToleranceType(41074). Value may exceed agreed  *\n* upon value. Percentage value is to be expressed relative to  *\n* \"1.0\" representing 100% (e.g. a value of \"0.0575\" represents *\n* 5.75%).                                                      *\n****************************************************************\n*/\n  DeliveryStreamPositiveTolerance = 41072,\n/*\n**********************************************************\n* Specifies the tolerance value's unit of measure (UOM). *\n**********************************************************\n*/\n  DeliveryStreamToleranceUnitOfMeasure = 41073,\n/*\n***************************************\n* Specifies the tolerance value type. *\n***************************************\n*/\n  DeliveryStreamToleranceType = 41074,\n/*\n*********************************************************\n* Indicates whether the tolerance is at the seller's or *\n* buyer's option.                                       *\n*********************************************************\n*/\n  DeliveryStreamToleranceOptionSide = 41075,\n/*\n*************************************************************\n* The positive percent tolerance which applies to the total *\n* quantity delivered over all shipment periods.             *\n* Percentage value is to be expressed relative to \"1.0\"     *\n* representing 100% (e.g. a value of \"0.0575\" represents    *\n* 5.75%.).                                                  *\n*************************************************************\n*/\n  DeliveryStreamTotalPositiveTolerance = 41076,\n/*\n*************************************************************\n* The negative percent tolerance which applies to the total *\n* quantity delivered over all shipment periods.             *\n* Percentage value is to be expressed relative to \"1.0\"     *\n* representing 100% (e.g. a value of \"0.0575\" represents    *\n* 5.75%.).                                                  *\n*************************************************************\n*/\n  DeliveryStreamTotalNegativeTolerance = 41077,\n/*\n****************************************************************\n* If the notional quantity is specified in a unit that does    *\n* not match the unit in which the commodity reference price is *\n* quoted, the scaling or conversion factor used to convert the *\n* commodity reference price unit into the notional quantity    *\n* unit should be stated here. If there is no conversion, this  *\n* field is not intended to be used.                            *\n****************************************************************\n*/\n  DeliveryStreamNotionalConversionFactor = 41078,\n/*\n*********************************************************\n* The transportation equipment with which the commodity *\n* product will be delivered and received.               *\n*********************************************************\n*/\n  DeliveryStreamTransportEquipment = 41079,\n/*\n**************************************************************\n* A reference to the party able to choose whether the gas is *\n* delivered for a particular period as found in a swing or   *\n* interruptible contract.                                    *\n**************************************************************\n*/\n  DeliveryStreamElectingPartySide = 41080,\n/*\n************************************************************\n* The delivery cycles during which the oil product will be *\n* transported in the pipeline.                             *\n************************************************************\n*/\n  DeliveryStreamCycleDesc = 41082,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedDeliveryStreamCycleDesc(41084) field.  *\n*************************************************\n*/\n  EncodedDeliveryStreamCycleDescLen = 41083,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* DeliveryStreamCycleDesc(41082) field in the encoded format  *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the DeliveryStreamCycleDesc(41082) field.                   *\n***************************************************************\n*/\n  EncodedDeliveryStreamCycleDesc = 41084,\n/*\n*******************************************************************\n* The SCoTA coal cargo origin, mining region, mine(s), mining     *\n* complex(es), loadout(s) or river dock(s) or other point(s)      *\n* of origin that seller and buyer agree are acceptable origins    *\n* for the coal product. For international coal transactions,      *\n* this is the origin of the coal product.                         *\n* See                                                             *\n* http://www.fpml.org/coding-scheme/commodity-coal-product-source *\n* for values.                                                     *\n*******************************************************************\n*/\n  DeliveryStreamCommoditySource = 41086,\n/*\n*************************************************\n* The consequences of market disruption events. *\n*************************************************\n*/\n  MarketDisruptionProvision = 41087,\n/*\n****************************************************\n* Specifies the location of the fallback provision *\n* documentation.                                   *\n****************************************************\n*/\n  MarketDisruptionFallbackProvision = 41088,\n/*\n**************************************************************\n* Specifies the maximum number of market disruption days     *\n* (commodity or bullion business days) in a contract or      *\n* confirmation. If none are specified, the maximum number of *\n* market disruption days is five (5).                        *\n**************************************************************\n*/\n  MarketDisruptionMaximumDays = 41089,\n/*\n***********************************************************\n* Used when a price materiality percentage applies to the *\n* price source disruption event and this event has been   *\n* specified.                                              *\n***********************************************************\n*/\n  MarketDisruptionMaterialityPercentage = 41090,\n/*\n***************************************************************\n* Specifies the minimum futures contracts level that dictates *\n* whether or not a 'De Minimis Trading' event has occurred.   *\n***************************************************************\n*/\n  MarketDisruptionMinimumFuturesContracts = 41091,\n/*\n************************************************************************\n* Specifies the market disruption event.                               *\n* For commodities see                                                  *\n* http://www.fpml.org/coding-scheme/commodity-market-disruption        *\n* for values.                                                          *\n* For foreign exchange, see                                            *\n* http://www.fixtradingcommunity.org/codelists#Market_Disruption_Event *\n* for code list of applicable event types.                             *\n************************************************************************\n*/\n  MarketDisruptionEvent = 41093,\n/*\n**************************************************************************\n* Specifies the type of disruption fallback.                             *\n* See                                                                    *\n* http://www.fpml.org/coding-scheme/commodity-market-disruption-fallback *\n* for values.                                                            *\n**************************************************************************\n*/\n  MarketDisruptionFallbackType = 41095,\n/*\n******************************************\n* The type of reference price underlier. *\n******************************************\n*/\n  MarketDisruptionFallbackUnderlierType = 41097,\n/*\n***************************************************\n* Specifies the identifier value of the security. *\n***************************************************\n*/\n  MarketDisruptionFallbackUnderlierSecurityID = 41098,\n/*\n********************************************************\n* Specifies the class or source scheme of the security *\n* identifier.                                          *\n********************************************************\n*/\n  MarketDisruptionFallbackUnderlierSecurityIDSource = 41099,\n/*\n*********************************************************\n* Specifies the description of the underlying security. *\n*********************************************************\n*/\n  MarketDisruptionFallbackUnderlierSecurityDesc = 41100,\n/*\n***************************************************************\n* Byte length of encoded (non-ASCII characters)               *\n* EncodedMarketDisruptionFallbackUnderlierSecurityDesc(41102) *\n* field.                                                      *\n***************************************************************\n*/\n  EncodedMarketDisruptionFallbackUnderlierSecurityDescLen = 41101,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* MarketDisruptionFallbackUnderlierSecurityDesc(41100) field  *\n* in the encoded format specified via the MessageEncoding     *\n* (347) field. If used, the ASCII (English) representation    *\n* should also be specified in the                             *\n* MarketDisruptionFallbackUnderlierSecurityDesc(41100) field. *\n***************************************************************\n*/\n  EncodedMarketDisruptionFallbackUnderlierSecurityDesc = 41102,\n/*\n****************************************************************\n* If there are multiple underlying assets, this specifies the  *\n* number of units (index or securities) that constitute the    *\n* underlier of the swap. In the case of a basket swap, this is *\n* used to reference both the number of basket units, and the   *\n* number of each asset components of the basket when these are *\n* expressed in absolute terms.                                 *\n****************************************************************\n*/\n  MarketDisruptionFallbackOpenUnits = 41103,\n/*\n*************************************************************\n* Specifies the currency if the underlier is a basket. Uses *\n* ISO 4217 currency codes.                                  *\n*************************************************************\n*/\n  MarketDisruptionFallbackBasketCurrency = 41104,\n/*\n***************************************************************\n* Specifies the basket divisor amount. This value is normally *\n* used to adjust the constituent weight for pricing or to     *\n* adjust for dividends, or other corporate actions.           *\n***************************************************************\n*/\n  MarketDisruptionFallbackBasketDivisor = 41105,\n/*\n*****************************************\n* A description of the option exercise. *\n*****************************************\n*/\n  ExerciseDesc = 41106,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedExerciseDesc(41102) field.             *\n*************************************************\n*/\n  EncodedExerciseDescLen = 41107,\n/*\n*************************************************************\n* Encoded (non-ASCII characters) representation of the      *\n* ExerciseDesc(41106) field in the encoded format specified *\n* via the MessageEncoding (347) field. If used, the ASCII   *\n* (English) representation should also be specified in the  *\n* ExerciseDesc(41106) field.                                *\n*************************************************************\n*/\n  EncodedExerciseDesc = 41108,\n/*\n*************************************************************\n* Indicates (when 'Y') that exercise is automatic when the  *\n* strike price is crossed or the underlying trade is in the *\n* money.                                                    *\n*************************************************************\n*/\n  AutomaticExerciseIndicator = 41109,\n/*\n*********************************************************\n* The threshold rate for triggering automatic exercise. *\n*********************************************************\n*/\n  AutomaticExerciseThresholdRate = 41110,\n/*\n************************************************************\n* Indicates whether follow-up confirmation of exercise     *\n* (written or electronic) is required following telephonic *\n* notice by the buyer to the seller or seller's agent.     *\n************************************************************\n*/\n  ExerciseConfirmationMethod = 41111,\n/*\n**************************************************************\n* Identifies the business center used for adjusting the time *\n* for manual exercise notice.                                *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  ManualNoticeBusinessCenter = 41112,\n/*\n****************************************************************\n* Indicates whether the notional amount of the underlying      *\n* swap, not previously exercised under the option, will be     *\n* automatically exercised at the expiration time on the        *\n* expiration date if at such time the buyer is in-the-money,   *\n* provided that the difference between the settlement rate and *\n* the fixed rate under the relevant underlying swap is not     *\n* less than one tenth of a percentage point (0.10% or 0.001).  *\n****************************************************************\n*/\n  FallbackExerciseIndicator = 41113,\n/*\n***************************************************************\n* Indicates whether the Seller may request the Buyer to       *\n* confirm its intent to exercise if not done on or before the *\n* expiration time on the expiration date. If true (\"Y\")       *\n* specific rules will apply in relation to the settlement     *\n* mode.                                                       *\n***************************************************************\n*/\n  LimitedRightToConfirmIndicator = 41114,\n/*\n****************************************************************\n* Indicates in physical settlement of bond and convertible     *\n* bond options whether the party required to deliver the bonds *\n* will divide those to be delivered as notifying party desires *\n* to facilitate delivery obligations.                          *\n****************************************************************\n*/\n  ExerciseSplitTicketIndicator = 41115,\n/*\n*************************************************************\n* The business center calendar used to adjust the option    *\n* exercise dates, e.g. \"GBLO\".                              *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  OptionExerciseBusinessCenter = 41117,\n/*\n***************************************************************\n* The business day convention used to adjust the option       *\n* exercise dates. Used only to override the business day      *\n* convention specified in the DateAdjustment component within *\n* the Instrument component.                                   *\n***************************************************************\n*/\n  OptionExerciseBusinessDayConvention = 41118,\n/*\n**********************************************************\n* Specifies the day type of the relative earliest option *\n* exercise date offset.                                  *\n**********************************************************\n*/\n  OptionExerciseEarliestDateOffsetDayType = 41119,\n/*\n****************************************************************\n* Time unit multiplier for the relative earliest exercise date *\n* offset.                                                      *\n****************************************************************\n*/\n  OptionExerciseEarliestDateOffsetPeriod = 41120,\n/*\n************************************************************\n* Time unit associated with the relative earliest exercise *\n* date offset.                                             *\n************************************************************\n*/\n  OptionExerciseEarliestDateOffsetUnit = 41121,\n/*\n*************************************************************\n* Time unit multiplier for the frequency of exercise dates. *\n*************************************************************\n*/\n  OptionExerciseFrequencyPeriod = 41122,\n/*\n**************************************************************\n* Time unit associated with the frequency of exercise dates. *\n**************************************************************\n*/\n  OptionExerciseFrequencyUnit = 41123,\n/*\n***************************************************************\n* The unadjusted start date for calculating periodic exercise *\n* dates.                                                      *\n***************************************************************\n*/\n  OptionExerciseStartDateUnadjusted = 41124,\n/*\n*****************************************************************\n* Specifies the anchor date when the option exercise start      *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  OptionExerciseStartDateRelativeTo = 41125,\n/*\n*************************************************************\n* Time unit multiplier for the relative exercise start date *\n* offset.                                                   *\n*************************************************************\n*/\n  OptionExerciseStartDateOffsetPeriod = 41126,\n/*\n**************************************************************\n* Time unit associated with the relative exercise start date *\n* offset.                                                    *\n**************************************************************\n*/\n  OptionExerciseStartDateOffsetUnit = 41127,\n/*\n****************************************************************\n* Specifies the day type of the relative option exercise start *\n* date offset.                                                 *\n****************************************************************\n*/\n  OptionExerciseStartDateOffsetDayType = 41128,\n/*\n*************************************************************\n* The adjusted start date for calculating periodic exercise *\n* dates.                                                    *\n*************************************************************\n*/\n  OptionExerciseStartDateAdjusted = 41129,\n/*\n****************************************************************\n* The number of periods in the referenced date schedule that   *\n* are between each date in the relative date schedule. Thus a  *\n* skip of 2 would mean that dates are relative to every second *\n* date in the referenced schedule. If present this should have *\n* a value greater than 1.                                      *\n****************************************************************\n*/\n  OptionExerciseSkip = 41130,\n/*\n*************************************************************\n* Last date (adjusted) for establishing the option exercise *\n* terms.                                                    *\n*************************************************************\n*/\n  OptionExerciseNominationDeadline = 41131,\n/*\n***************************************\n* The unadjusted first exercise date. *\n***************************************\n*/\n  OptionExerciseFirstDateUnadjusted = 41132,\n/*\n**************************************\n* The unadjusted last exercise date. *\n**************************************\n*/\n  OptionExerciseLastDateUnadjusted = 41133,\n/*\n****************************************************************\n* The earliest time at which notice of exercise can be given   *\n* by the buyer to the seller (or seller's agent) (i) on the    *\n* expriation date, in the case of a European style option,     *\n* (ii) on each Bermuda option exercise date and the expiration *\n* date, in the case of a Bermuda style option, (iii) the       *\n* commencement date to, and including, the expiration date, in *\n* the case of an American option.                              *\n****************************************************************\n*/\n  OptionExerciseEarliestTime = 41134,\n/*\n***************************************\n* The latest exercise time.  See also *\n* OptionExerciseEarliestTime(41134).  *\n***************************************\n*/\n  OptionExerciseLatestTime = 41135,\n/*\n***************************************************************\n* The business center used to determine the locale for option *\n* exercise time, e.g. \"GBLO\".                                 *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values                            *\n***************************************************************\n*/\n  OptionExerciseTimeBusinessCenter = 41136,\n/*\n**********************************************************\n* The option exercise fixed date, unadjusted or adjusted *\n* depending on OptionExerciseDateType(41139).            *\n**********************************************************\n*/\n  OptionExerciseDate = 41138,\n/*\n***************************************************************\n* Specifies the type of date. When specified it applies not   *\n* only to the current date but to all subsequent dates in the *\n* group until overridden with a new type.                     *\n***************************************************************\n*/\n  OptionExerciseDateType = 41139,\n/*\n*************************************************************\n* The business center calendar used to adjust the option    *\n* exercise expiration dates, e.g. \"GBLO\".                   *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  OptionExerciseExpirationDateBusinessCenter = 41141,\n/*\n***********************************************************\n* The business day convention used to adjust the option   *\n* exercise expiration dates. Used only to override the    *\n* business day convention specified in the DateAdjustment *\n* component within the Instrument component.              *\n***********************************************************\n*/\n  OptionExerciseExpirationDateBusinessDayConvention = 41142,\n/*\n*****************************************************************\n* Specifies the anchor date when the option exercise            *\n* expiration date is relative to an anchor date.                *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  OptionExerciseExpirationDateRelativeTo = 41143,\n/*\n*************************************************************\n* Time unit multiplier for the relative exercise expiration *\n* date offset.                                              *\n*************************************************************\n*/\n  OptionExerciseExpirationDateOffsetPeriod = 41144,\n/*\n**************************************************************\n* Time unit associated with the relative exercise expiration *\n* date offset.                                               *\n**************************************************************\n*/\n  OptionExerciseExpirationDateOffsetUnit = 41145,\n/*\n******************************************************\n* Time unit multiplier for the frequency of exercise *\n* expiration dates.                                  *\n******************************************************\n*/\n  OptionExerciseExpirationFrequencyPeriod = 41146,\n/*\n*******************************************************\n* Time unit associated with the frequency of exercise *\n* expiration dates.                                   *\n*******************************************************\n*/\n  OptionExerciseExpirationFrequencyUnit = 41147,\n/*\n****************************************************************\n* The convention for determining the sequence of exercise      *\n* expiration dates. It is used in conjunction with a specified *\n* frequency. Used only to override the roll convention defined *\n* in the DateAdjustment component in Instrument.               *\n****************************************************************\n*/\n  OptionExerciseExpirationRollConvention = 41148,\n/*\n**********************************************************\n* Specifies the day type of the relative option exercise *\n* expiration date offset.                                *\n**********************************************************\n*/\n  OptionExerciseExpirationDateOffsetDayType = 41149,\n/*\n****************************************\n* The option exercise expiration time. *\n****************************************\n*/\n  OptionExerciseExpirationTime = 41150,\n/*\n***************************************************************\n* The business center used to determine the locale for option *\n* exercise expiration time, e.g. \"GBLO\".                      *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  OptionExerciseExpirationTimeBusinessCenter = 41151,\n/*\n**************************************************************\n* An adjusted or unadjusted fixed option exercise expiration *\n* date.                                                      *\n**************************************************************\n*/\n  OptionExerciseExpirationDate = 41153,\n/*\n****************************************************************\n* Specifies the type of option exercise expiration date. When  *\n* specified it applies not only to the current date but to all *\n* subsequent dates in the group until overridden with a new    *\n* type.                                                        *\n****************************************************************\n*/\n  OptionExerciseExpirationDateType = 41154,\n/*\n************************************************************\n* Used to express the unit of measure (UOM) of the payment *\n* amount if not in the currency of the trade.              *\n************************************************************\n*/\n  PaymentUnitOfMeasure = 41155,\n/*\n*****************************************************************\n* Specifies the anchor date when the payment date is relative   *\n* to an anchor date.                                            *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentDateRelativeTo = 41156,\n/*\n**************************************************************\n* Time unit multiplier for the relative payment date offset. *\n**************************************************************\n*/\n  PaymentDateOffsetPeriod = 41157,\n/*\n***************************************************************\n* Time unit associated with the relative payment date offset. *\n***************************************************************\n*/\n  PaymentDateOffsetUnit = 41158,\n/*\n***************************************************************\n* Specifies the day type of the relative payment date offset. *\n***************************************************************\n*/\n  PaymentDateOffsetDayType = 41159,\n/*\n*******************************\n* Forward start premium type. *\n*******************************\n*/\n  PaymentForwardStartType = 41160,\n/*\n********************************************************\n* The day of the week on which fixing will take place. *\n********************************************************\n*/\n  PaymentScheduleFixingDayOfWeek = 41162,\n/*\n***********************************************************\n* The occurrence of the day of week on which fixing takes *\n* place.                                                  *\n***********************************************************\n*/\n  PaymentScheduleFixingDayNumber = 41163,\n/*\n************************************************************\n* Identifier of this PaymentSchedule for cross referencing *\n* elsewhere in the message.                                *\n************************************************************\n*/\n  PaymentScheduleXID = 41164,\n/*\n***********************************************************\n* Reference to payment schedule elsewhere in the message. *\n***********************************************************\n*/\n  PaymentScheduleXIDRef = 41165,\n/*\n*************************************************************\n* The currency of the schedule rate. Uses ISO 4217 currency *\n* codes.                                                    *\n*************************************************************\n*/\n  PaymentScheduleRateCurrency = 41166,\n/*\n********************************************\n* The schedule rate unit of measure (UOM). *\n********************************************\n*/\n  PaymentScheduleRateUnitOfMeasure = 41167,\n/*\n****************************************************************\n* The number to be multiplied by the derived floating rate of  *\n* the payment schedule in order to arrive at the payment rate. *\n* If omitted, the schedule rate conversion factor is 1.        *\n****************************************************************\n*/\n  PaymentScheduleRateConversionFactor = 41168,\n/*\n**************************************************************\n* Identifies whether the rate spread is an absolute value to *\n* be added to the index rate or a percentage of the index    *\n* rate.                                                      *\n**************************************************************\n*/\n  PaymentScheduleRateSpreadType = 41169,\n/*\n*****************************************\n* The schedule settlement period price. *\n*****************************************\n*/\n  PaymentScheduleSettlPeriodPrice = 41170,\n/*\n************************************************************\n* Specifies the currency of the schedule settlement period *\n* price.  Uses ISO 4217 currency codes.                    *\n************************************************************\n*/\n  PaymentScheduleSettlPeriodPriceCurrency = 41171,\n/*\n******************************************************\n* The settlement period price unit of measure (UOM). *\n******************************************************\n*/\n  PaymentScheduleSettlPeriodPriceUnitOfMeasure = 41172,\n/*\n********************************************\n* The schedule step unit of measure (UOM). *\n********************************************\n*/\n  PaymentScheduleStepUnitOfMeasure = 41173,\n/*\n************************************\n* The distribution of fixing days. *\n************************************\n*/\n  PaymentScheduleFixingDayDistribution = 41174,\n/*\n***********************************************************\n* The number of days over which fixing should take place. *\n***********************************************************\n*/\n  PaymentScheduleFixingDayCount = 41175,\n/*\n*****************************************************\n* Time unit multiplier for the fixing lag duration. *\n*****************************************************\n*/\n  PaymentScheduleFixingLagPeriod = 41176,\n/*\n******************************************************\n* Time unit associated with the fixing lag duration. *\n******************************************************\n*/\n  PaymentScheduleFixingLagUnit = 41177,\n/*\n****************************************************************\n* Time unit multiplier for the relative first observation date *\n* offset.                                                      *\n****************************************************************\n*/\n  PaymentScheduleFixingFirstObservationDateOffsetPeriod = 41178,\n/*\n************************************************************\n* Time unit associated with the relative first observation *\n* date offset.                                             *\n************************************************************\n*/\n  PaymentScheduleFixingFirstObservationDateOffsetUnit = 41179,\n/*\n****************************************************************\n* When this element is specified and set to 'Y', the Flat Rate *\n* is the New Worldwide Tanker Nominal Freight Scale for the    *\n* Freight Index Route taken at the Trade Date of the           *\n* transaction \u001cFixed\u001d. If  'N' it is taken on each Pricing     *\n* Date \u001cFloating\u001d.                                             *\n****************************************************************\n*/\n  PaymentStreamFlatRateIndicator = 41180,\n/*\n*************************************************************\n* Specifies the actual monetary value of the flat rate when *\n* PaymentStreamFlatRateIndicator(41180) = 'Y'.              *\n*************************************************************\n*/\n  PaymentStreamFlatRateAmount = 41181,\n/*\n*************************************************************\n* Specifies the currency of the actual flat rate.  Uses ISO *\n* 4217 currency codes.                                      *\n*************************************************************\n*/\n  PaymentStreamFlatRateCurrency = 41182,\n/*\n****************************************************\n* Specifies the limit on the total payment amount. *\n****************************************************\n*/\n  PaymentStreamMaximumPaymentAmount = 41183,\n/*\n***************************************************************\n* Specifies the currency of total payment amount limit.  Uses *\n* ISO 4217 currency codes.                                    *\n***************************************************************\n*/\n  PaymentStreamMaximumPaymentCurrency = 41184,\n/*\n**************************************************************\n* Specifies the limit on the payment amount that goes out in *\n* any particular calculation period.                         *\n**************************************************************\n*/\n  PaymentStreamMaximumTransactionAmount = 41185,\n/*\n**************************************************************\n* Specifies the currency of the period payment amount limit. *\n* Uses ISO 4217 currency codes.                              *\n**************************************************************\n*/\n  PaymentStreamMaximumTransactionCurrency = 41186,\n/*\n*************************************************************\n* Specifies the fixed payment amount unit of measure (UOM). *\n*************************************************************\n*/\n  PaymentStreamFixedAmountUnitOfMeasure = 41187,\n/*\n*********************************************\n* Specifies the total fixed payment amount. *\n*********************************************\n*/\n  PaymentStreamTotalFixedAmount = 41188,\n/*\n**********************************************************\n* The number of Worldscale points for purposes of the    *\n* calculation of a fixed amount for a wet voyage charter *\n* commodity swap.                                        *\n**********************************************************\n*/\n  PaymentStreamWorldScaleRate = 41189,\n/*\n***************************************************************\n* The price per relevant unit for purposes of the calculation *\n* of a fixed amount for a dry voyage charter or time charter  *\n* commodity swap.                                             *\n***************************************************************\n*/\n  PaymentStreamContractPrice = 41190,\n/*\n****************************************************************\n* Specifies the currency of PaymentStreamContractPrice(41190). *\n* Uses ISO 4217 currency codes.                                *\n****************************************************************\n*/\n  PaymentStreamContractPriceCurrency = 41191,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's pricing dates, e.g. \"GBLO\".                      *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  PaymentStreamPricingBusinessCenter = 41193,\n/*\n***********************************************************\n* Secondary time unit multiplier for the payment stream's *\n* floating rate index curve.                              *\n***********************************************************\n*/\n  PaymentStreamRateIndex2CurvePeriod = 41194,\n/*\n************************************************************\n* Secondary time unit associated with the payment stream's *\n* floating rate index curve.                               *\n************************************************************\n*/\n  PaymentStreamRateIndex2CurveUnit = 41195,\n/*\n******************************************************\n* Specifies the location of the floating rate index. *\n******************************************************\n*/\n  PaymentStreamRateIndexLocation = 41196,\n/*\n****************************************************************\n* This is the weather Cooling Degree Days (CDD), Heating       *\n* Degree Days (HDD) or HDD index level specified as the number *\n* of (amount of) weather index units specified by the parties  *\n* in the related confirmation.                                 *\n****************************************************************\n*/\n  PaymentStreamRateIndexLevel = 41197,\n/*\n******************************************************\n* The unit of measure (UOM) of the rate index level. *\n******************************************************\n*/\n  PaymentStreamRateIndexUnitOfMeasure = 41198,\n/*\n***********************************************************\n* Specifies how weather index units are to be calculated. *\n***********************************************************\n*/\n  PaymentStreamSettlLevel = 41199,\n/*\n**************************************************************\n* This is the weather Cooling Degree Days (CDD), Heating     *\n* Degree Days (HDD) or HDD reference level specified as the  *\n* number of (amount of) weather index units specified by the *\n* parties in the related confirmation.                       *\n**************************************************************\n*/\n  PaymentStreamReferenceLevel = 41200,\n/*\n**********************************************************\n* The unit of measure (UOM) of the rate reference level. *\n**********************************************************\n*/\n  PaymentStreamReferenceLevelUnitOfMeasure = 41201,\n/*\n*************************************************************\n* When set to 'Y', it indicates the weather reference level *\n* equals zero.                                              *\n*************************************************************\n*/\n  PaymentStreamReferenceLevelEqualsZeroIndicator = 41202,\n/*\n****************************************************************\n* Specifies the currency of the floating rate spread. Uses ISO *\n* 4217 currency codes.                                         *\n****************************************************************\n*/\n  PaymentStreamRateSpreadCurrency = 41203,\n/*\n**********************************************************\n* Species the unit of measure (UOM) of the floating rate *\n* spread.                                                *\n**********************************************************\n*/\n  PaymentStreamRateSpreadUnitOfMeasure = 41204,\n/*\n***************************************************************\n* The number to be multiplied by the derived floating rate of *\n* the payment stream in order to arrive at the payment rate.  *\n* If omitted, the floating rate conversion factor is 1.       *\n***************************************************************\n*/\n  PaymentStreamRateConversionFactor = 41205,\n/*\n**************************************************************\n* Identifies whether the rate spread is an absolute value to *\n* be added to the index rate or a percentage of the index    *\n* rate.                                                      *\n**************************************************************\n*/\n  PaymentStreamRateSpreadType = 41206,\n/*\n****************************************************************\n* The floating rate determined at the most recent reset. The   *\n* rate is expressed in decimal form, e.g. 5% is represented as *\n* 0.05.                                                        *\n****************************************************************\n*/\n  PaymentStreamLastResetRate = 41207,\n/*\n****************************************************************\n* The floating rate determined at the final reset. The rate is *\n* expressed in decimal form, e.g. 5% is represented as 0.05.   *\n****************************************************************\n*/\n  PaymentStreamFinalRate = 41208,\n/*\n**********************************************************\n* Time unit multiplier for the calculation lag duration. *\n**********************************************************\n*/\n  PaymentStreamCalculationLagPeriod = 41209,\n/*\n***********************************************************\n* Time unit associated with the calculation lag duration. *\n***********************************************************\n*/\n  PaymentStreamCalculationLagUnit = 41210,\n/*\n****************************************************************\n* Time unit multiplier for the relative first observation date *\n* offset.                                                      *\n****************************************************************\n*/\n  PaymentStreamFirstObservationDateOffsetPeriod = 41211,\n/*\n************************************************************\n* Time unit associated with the relative first observation *\n* date offset.                                             *\n************************************************************\n*/\n  PaymentStreamFirstObservationDateOffsetUnit = 41212,\n/*\n*********************************************\n* Specifies the commodity pricing day type. *\n*********************************************\n*/\n  PaymentStreamPricingDayType = 41213,\n/*\n*************************************\n* The distribution of pricing days. *\n*************************************\n*/\n  PaymentStreamPricingDayDistribution = 41214,\n/*\n************************************************************\n* The number of days over which pricing should take place. *\n************************************************************\n*/\n  PaymentStreamPricingDayCount = 41215,\n/*\n*****************************************************************\n* Specifies the business calendar to use for pricing.           *\n* See                                                           *\n* http://www.fpml.org/coding-scheme/commodity-business-calendar *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStreamPricingBusinessCalendar = 41216,\n/*\n**************************************************************\n* The business day convention used to adjust the payent      *\n* stream's pricing dates. Used only to override the business *\n* day convention specified in the DateAdjustment component   *\n* within the Instrument component.                           *\n**************************************************************\n*/\n  PaymentStreamPricingBusinessDayConvention = 41217,\n/*\n**************************************************************************\n* Specifies the source or legal framework for the risk                   *\n* apportionment.                                                         *\n* See                                                                    *\n* http://www.fixtradingcommunity.org/codelists#Risk_Apportionment_Source *\n* for the details of the external code list.                             *\n**************************************************************************\n*/\n  DeliveryStreamRiskApportionmentSource = 41218,\n/*\n**************************************************************************\n* Specifies the source or legal framework for the risk                   *\n* apportionment.                                                         *\n* See                                                                    *\n* http://www.fixtradingcommunity.org/codelists#Risk_Apportionment_Source *\n* for the details of the external code list.                             *\n**************************************************************************\n*/\n  LegDeliveryStreamRiskApportionmentSource = 41219,\n/*\n*********************************************************\n* The adjusted or unadjusted fixed stream payment date. *\n*********************************************************\n*/\n  PaymentStreamPaymentDate = 41221,\n/*\n**************************************************************\n* Specifies the type of payment date. When specified it      *\n* applies not only to the current date but to all subsequent *\n* dates in the group until overridden with a new type.       *\n**************************************************************\n*/\n  PaymentStreamPaymentDateType = 41222,\n/*\n********************************************************\n* When set to 'Y', it indicates that payment dates are *\n* specified in the relevant master agreement.          *\n********************************************************\n*/\n  PaymentStreamMasterAgreementPaymentDatesIndicator = 41223,\n/*\n*********************************************************\n* The adjusted or unadjusted fixed stream pricing date. *\n*********************************************************\n*/\n  PaymentStreamPricingDate = 41225,\n/*\n**************************************************************\n* Specifies the type of pricing date. When specified it      *\n* applies not only to the current date but to all subsequent *\n* dates in the group until overridden with a new type.       *\n**************************************************************\n*/\n  PaymentStreamPricingDateType = 41226,\n/*\n*****************************************************\n* The day of the week on which pricing takes place. *\n*****************************************************\n*/\n  PaymentStreamPricingDayOfWeek = 41228,\n/*\n************************************************************\n* The occurrence of the day of week on which pricing takes *\n* place.                                                   *\n************************************************************\n*/\n  PaymentStreamPricingDayNumber = 41229,\n/*\n*************************************************************\n* The business center calendar used to adjust pricing or    *\n* fixing dates, e.g. \"GBLO\".                                *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  PricingDateBusinessCenter = 41231,\n/*\n******************************************\n* The unadjusted pricing or fixing date. *\n******************************************\n*/\n  PricingDateUnadjusted = 41232,\n/*\n****************************************************************\n* The business day convention used to adjust pricing or fixing *\n* dates. Used only to override the business day convention     *\n* defined in the DateAdjustment component within the           *\n* Instrument component.                                        *\n****************************************************************\n*/\n  PricingDateBusinessDayConvention = 41233,\n/*\n****************************************\n* The adjusted pricing or fixing date. *\n****************************************\n*/\n  PricingDateAdjusted = 41234,\n/*\n*************************************************************\n* Specifies the local market time of the pricing or fixing. *\n*************************************************************\n*/\n  PricingTime = 41235,\n/*\n****************************************************************\n* Specifies the business center for determining the pricing or *\n* fixing time. See                                             *\n* http://www.fpml.org/coding-scheme/business-center for        *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  PricingTimeBusinessCenter = 41236,\n/*\n**********************************************************************\n* Specifies the name of the attribute.                               *\n* See                                                                *\n* http://www.fixtradingcommunity.org/codelists#Asset_Attribute_Types *\n* for code list of applicable asset attribute types.                 *\n**********************************************************************\n*/\n  StreamAssetAttributeType = 41238,\n/*\n*****************************************\n* Specifies the value of the attribute. *\n*****************************************\n*/\n  StreamAssetAttributeValue = 41239,\n/*\n*****************************************************\n* Limit or lower acceptable value of the attribute. *\n*****************************************************\n*/\n  StreamAssetAttributeLimit = 41240,\n/*\n*************************************************************\n* The adjusted or unadjusted fixed calculation period date. *\n*************************************************************\n*/\n  StreamCalculationPeriodDate = 41242,\n/*\n****************************************************************\n* Specifies the type of fixed calculation period date. When    *\n* specified it applies not only to the current date but to all *\n* subsequent dates in the group until overridden with a new    *\n* type.                                                        *\n****************************************************************\n*/\n  StreamCalculationPeriodDateType = 41243,\n/*\n***************************************************************\n* Identifier of this calculation period for cross referencing *\n* elsewhere in the message.                                   *\n***************************************************************\n*/\n  StreamCalculationPeriodDatesXID = 41244,\n/*\n*****************************************************\n* Cross reference to another calculation period for *\n* duplicating its properties.                       *\n*****************************************************\n*/\n  StreamCalculationPeriodDatesXIDRef = 41245,\n/*\n****************************************************************\n* When specified and set to 'Y', it indicates that the first   *\n* calculation period should run from the effective date to the *\n* end of the calendar period in which the effective date falls *\n* (e.g. Jan 15 - Jan 31 if the calculation periods are one     *\n* month long and effective date is Jan 15.). If 'N' or not     *\n* specified, it indicates that the first calculation period    *\n* should run from the effective date for one whole period      *\n* (e.g. Jan 15 to Feb 14 if the calculation periods are one    *\n* month long and the effective date is Jan 15.).               *\n****************************************************************\n*/\n  StreamCalculationBalanceOfFirstPeriod = 41246,\n/*\n*********************************************************\n* Time unit multiplier for the length of time after the *\n* publication of the data when corrections can be made. *\n*********************************************************\n*/\n  StreamCalculationCorrectionPeriod = 41247,\n/*\n**********************************************************\n* Time unit associated with the length of time after the *\n* publication of the data when corrections can be made.  *\n**********************************************************\n*/\n  StreamCalculationCorrectionUnit = 41248,\n/*\n*************************************************************\n* The business center calendar used to adjust the commodity *\n* delivery date, e.g. \"GBLO\".                               *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  StreamCommoditySettlBusinessCenter = 41250,\n/*\n************************************************************\n* Specifies the general base type of the commodity traded. *\n* Where possible, this should follow the naming convention *\n* used in the 2005 ISDA Commodity Definitions.             *\n************************************************************\n*/\n  StreamCommodityBase = 41251,\n/*\n******************************************************************\n* Specifies the type of commodity product.                       *\n* For coal see                                                   *\n* http://www.fpml.org/coding-scheme/commodity-coal-product-type  *\n* for values.                                                    *\n* For metals see                                                 *\n* http://www.fpml.org/coding-scheme/commodity-metal-product-type *\n* for values.                                                    *\n* For bullion see                                                *\n* http://www.fixtradingcommunity.org/codelists#Bullion_Types     *\n* for the external code list of bullion types.                   *\n******************************************************************\n*/\n  StreamCommodityType = 41252,\n/*\n******************************************************\n* Specifies the market identifier for the commodity. *\n******************************************************\n*/\n  StreamCommoditySecurityID = 41253,\n/*\n*************************************************\n* Identifies the class or source of the         *\n* StreamCommoditySecurityIDSource(41253) value. *\n*************************************************\n*/\n  StreamCommoditySecurityIDSource = 41254,\n/*\n***************************************\n* Description of the commodity asset. *\n***************************************\n*/\n  StreamCommodityDesc = 41255,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedStreamCommodityDesc(41257) field.      *\n*************************************************\n*/\n  EncodedStreamCommodityDescLen = 41256,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* StreamCommodityDesc(41255) field in the encoded format      *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the StreamCommodityDesc(41255) field.                       *\n***************************************************************\n*/\n  EncodedStreamCommodityDesc = 41257,\n/*\n*****************************************************\n* The unit of measure (UOM) of the commodity asset. *\n*****************************************************\n*/\n  StreamCommodityUnitOfMeasure = 41258,\n/*\n************************************************************\n* Identifies the currency of the commodity asset. Uses ISO *\n* 4217 currency codes.                                     *\n************************************************************\n*/\n  StreamCommodityCurrency = 41259,\n/*\n**********************************************************\n* Identifies the exchange where the commodity is traded. *\n**********************************************************\n*/\n  StreamCommodityExchange = 41260,\n/*\n**********************************************************************\n* Identifies the source of rate information used for                 *\n* commodities.                                                       *\n* See                                                                *\n* http://www.fixtradingcommunity.org/codelists#Commodity_Rate_Source *\n* for code list of applicable sources.                               *\n**********************************************************************\n*/\n  StreamCommodityRateSource = 41261,\n/*\n*********************************************************\n* Identifies the reference \"page\" from the rate source. *\n*********************************************************\n*/\n  StreamCommodityRateReferencePage = 41262,\n/*\n*****************************************************\n* Identifies the page heading from the rate source. *\n*****************************************************\n*/\n  StreamCommodityRateReferencePageHeading = 41263,\n/*\n********************************************************************\n* Specifies the commodity data or information provider.            *\n* See                                                              *\n* http://www.fpml.org/coding-scheme/commodity-information-provider *\n* for values.                                                      *\n********************************************************************\n*/\n  StreamDataProvider = 41264,\n/*\n****************************************************************************\n* Specifies how the pricing or rate setting of the trade is to             *\n* be determined or based upon.                                             *\n* See                                                                      *\n* http://www.fixtradingcommunity.org/codelists#Commodity_Rate_Pricing_Type *\n* for code list of applicable commodity pricing types.                     *\n****************************************************************************\n*/\n  StreamCommodityPricingType = 41265,\n/*\n*******************************************************\n* Time unit multiplier for the nearby settlement day. *\n*******************************************************\n*/\n  StreamCommodityNearbySettlDayPeriod = 41266,\n/*\n********************************************************\n* Time unit associated with the nearby settlement day. *\n********************************************************\n*/\n  StreamCommodityNearbySettlDayUnit = 41267,\n/*\n*******************************************\n* The unadjusted commodity delivery date. *\n*******************************************\n*/\n  StreamCommoditySettlDateUnadjusted = 41268,\n/*\n***************************************************************\n* The business day convention used to adjust the commodity    *\n* delivery date. Used only to override the business day       *\n* convention specified in the DateAdjustment component within *\n* the Instrument component.                                   *\n***************************************************************\n*/\n  StreamCommoditySettlDateBusinessDayConvention = 41269,\n/*\n*****************************************\n* The adjusted commodity delivery date. *\n*****************************************\n*/\n  StreamCommoditySettlDateAdjusted = 41270,\n/*\n**********************************************************\n* Specifies a fixed single month for commodity delivery. *\n**********************************************************\n*/\n  StreamCommoditySettlMonth = 41271,\n/*\n**************************************************************\n* Time unit multiplier for the commodity delivery date roll. *\n**************************************************************\n*/\n  StreamCommoditySettlDateRollPeriod = 41272,\n/*\n***************************************************************\n* Time unit associated with the commodity delivery date roll. *\n***************************************************************\n*/\n  StreamCommoditySettlDateRollUnit = 41273,\n/*\n***************************************************\n* Specifies the commodity delivery roll day type. *\n***************************************************\n*/\n  StreamCommoditySettlDayType = 41274,\n/*\n*************************************************************\n* Identifier of this stream commodity for cross referencing *\n* elsewhere in the message.                                 *\n*************************************************************\n*/\n  StreamCommodityXID = 41275,\n/*\n*************************************************************\n* Reference to a stream commodity elsewhere in the message. *\n*************************************************************\n*/\n  StreamCommodityXIDRef = 41276,\n/*\n**********************************************************\n* Alternate security identifier value for the commodity. *\n**********************************************************\n*/\n  StreamCommodityAltID = 41278,\n/*\n*************************************************************\n* Identifies the class or source of the alternate commodity *\n* security identifier.                                      *\n*************************************************************\n*/\n  StreamCommodityAltIDSource = 41279,\n/*\n***************************\n* Data source identifier. *\n***************************\n*/\n  StreamCommodityDataSourceID = 41281,\n/*\n***********************************\n* Type of data source identifier. *\n***********************************\n*/\n  StreamCommodityDataSourceIDType = 41282,\n/*\n****************************************************\n* Specifies the day or group of days for delivery. *\n****************************************************\n*/\n  StreamCommoditySettlDay = 41284,\n/*\n**************************************************************\n* Sum of the hours specified in StreamCommoditySettlTimeGrp. *\n**************************************************************\n*/\n  StreamCommoditySettlTotalHours = 41285,\n/*\n************************************************************\n* The start time for commodities settlement where delivery *\n* occurs over time. The time format is specified by the    *\n* settlement time type.                                    *\n************************************************************\n*/\n  StreamCommoditySettlStart = 41287,\n/*\n**********************************************************\n* The end time for commodities settlement where delivery *\n* occurs over time. The time format is specified by the  *\n* settlement time type.                                  *\n**********************************************************\n*/\n  StreamCommoditySettlEnd = 41288,\n/*\n**************************************************************\n* Specifies the country where delivery takes place. Uses ISO *\n* 3166 2-character country code.                             *\n**************************************************************\n*/\n  StreamCommoditySettlCountry = 41290,\n/*\n*********************************************************************\n* Commodity delivery timezone specified as \"prevailing\" rather      *\n* than \"standard\" or \"daylight\".                                    *\n* See                                                               *\n* http://www.fixtradingcommunity.org/codelists#Prevailing_Timezones *\n* for code list of applicable prevailing timezones.                 *\n*********************************************************************\n*/\n  StreamCommoditySettlTimeZone = 41291,\n/*\n***********************************************\n* Specifies the commodity delivery flow type. *\n***********************************************\n*/\n  StreamCommoditySettlFlowType = 41292,\n/*\n********************************************************\n* Specifies the delivery quantity associated with this *\n* settlement period.                                   *\n********************************************************\n*/\n  StreamCommoditySettlPeriodNotional = 41293,\n/*\n****************************************************************\n* Specifies the unit of measure (UOM) of the delivery quantity *\n* associated with this settlement period.                      *\n****************************************************************\n*/\n  StreamCommoditySettlPeriodNotionalUnitOfMeasure = 41294,\n/*\n*************************************************************\n* Time unit multiplier for the settlement period frequency. *\n*************************************************************\n*/\n  StreamCommoditySettlPeriodFrequencyPeriod = 41295,\n/*\n**************************************************************\n* Time unit associated with the settlement period frequency. *\n**************************************************************\n*/\n  StreamCommoditySettlPeriodFrequencyUnit = 41296,\n/*\n********************************\n* The settlement period price. *\n********************************\n*/\n  StreamCommoditySettlPeriodPrice = 41297,\n/*\n****************************************************************\n* Specifies the settlement period price unit of measure (UOM). *\n****************************************************************\n*/\n  StreamCommoditySettlPeriodPriceUnitOfMeasure = 41298,\n/*\n**************************************************************\n* The currency of the settlement period price. Uses ISO 4217 *\n* currency codes.                                            *\n**************************************************************\n*/\n  StreamCommoditySettlPeriodPriceCurrency = 41299,\n/*\n*************************************************************\n* Indicates whether holidays are included in the settlement *\n* periods. Required for electricity contracts.              *\n*************************************************************\n*/\n  StreamCommoditySettlHolidaysProcessingInstruction = 41300,\n/*\n**************************************************************\n* Identifier of this settlement period for cross referencing *\n* elsewhere in the message.                                  *\n**************************************************************\n*/\n  StreamCommoditySettlPeriodXID = 41301,\n/*\n****************************************************************\n* Cross reference to another settlement period for duplicating *\n* its properties.                                              *\n****************************************************************\n*/\n  StreamCommoditySettlPeriodXIDRef = 41302,\n/*\n****************************************************************\n* Identifier of this Stream for cross referencing elsewhere in *\n* the message.                                                 *\n****************************************************************\n*/\n  StreamXID = 41303,\n/*\n***************************************************************\n* Identifies the instrument leg in which this payment applies *\n* to by referencing the leg's LegID(1788).                    *\n***************************************************************\n*/\n  PaymentLegRefID = 41304,\n/*\n**************************************************************\n* Cross reference to another Stream notional for duplicating *\n* its properties.                                            *\n**************************************************************\n*/\n  StreamNotionalXIDRef = 41305,\n/*\n*******************************************************\n* Time unit multiplier for the swap stream's notional *\n* frequency.                                          *\n*******************************************************\n*/\n  StreamNotionalFrequencyPeriod = 41306,\n/*\n********************************************************\n* Time unit associated with the swap stream's notional *\n* frequency.                                           *\n********************************************************\n*/\n  StreamNotionalFrequencyUnit = 41307,\n/*\n************************************************************\n* The commodity's notional or quantity delivery frequency. *\n************************************************************\n*/\n  StreamNotionalCommodityFrequency = 41308,\n/*\n**********************************************************\n* Specifies the delivery stream quantity unit of measure *\n* (UOM).                                                 *\n**********************************************************\n*/\n  StreamNotionalUnitOfMeasure = 41309,\n/*\n************************************************************\n* Total notional or delivery quantity over the term of the *\n* contract.                                                *\n************************************************************\n*/\n  StreamTotalNotional = 41310,\n/*\n**************************************************************\n* Specifies the unit of measure (UOM) for the total notional *\n* or delivery quantity over the term of the contract.        *\n**************************************************************\n*/\n  StreamTotalNotionalUnitOfMeasure = 41311,\n/*\n***********************************************************\n* Identifier of the regulatory jurisdiction requiring the *\n* trade to be cleared.                                    *\n***********************************************************\n*/\n  MandatoryClearingJurisdiction = 41313,\n/*\n***************************************************************\n* Reference to the protection terms applicable to this entity *\n* or obligation. Contains the same XID named string value of  *\n* the instance in the ProtectionTerms repeating group that    *\n* applies to this Underlying.                                 *\n***************************************************************\n*/\n  UnderlyingProtectionTermXIDRef = 41314,\n/*\n**************************************************************\n* Reference to the cash or physical settlement terms         *\n* applicable to this entity or obligation. Contains the same *\n* XID named string value of the instance in the appropriate  *\n* repeating group that applies to this Underlying.           *\n**************************************************************\n*/\n  UnderlyingSettlTermXIDRef = 41315,\n/*\n************************************\n* Security identifier of the bond. *\n************************************\n*/\n  LegAdditionalTermBondSecurityID = 41317,\n/*\n*************************************************\n* Identifies the source scheme of the           *\n* LegAdditionalTermBondSecurityID(41317) value. *\n*************************************************\n*/\n  LegAdditionalTermBondSecurityIDSource = 41318,\n/*\n****************************\n* Description of the bond. *\n****************************\n*/\n  LegAdditionalTermBondDesc = 41319,\n/*\n**************************************************\n* Byte length of encoded (non-ASCII characters)  *\n* EncodedLegAdditionalTermBondDesc(41321) field. *\n**************************************************\n*/\n  EncodedLegAdditionalTermBondDescLen = 41320,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* LegAdditionalTermBondDesc(41319) field in the encoded format *\n* specified via the MessageEncoding (347) field. If used, the  *\n* ASCII (English) representation should also be specified in   *\n* the LegAdditionalTermBondDesc(41319) field.                  *\n****************************************************************\n*/\n  EncodedLegAdditionalTermBondDesc = 41321,\n/*\n************************************************************\n* Specifies the currency the bond value is denominated in. *\n* Uses ISO 4217 currency codes.                            *\n************************************************************\n*/\n  LegAdditionalTermBondCurrency = 41322,\n/*\n***********************\n* Issuer of the bond. *\n***********************\n*/\n  LegAdditionalTermBondIssuer = 41323,\n/*\n****************************************************\n* Byte length of encoded (non-ASCII characters)    *\n* EncodedLegAdditionalTermBondIssuer(41325) field. *\n****************************************************\n*/\n  EncodedLegAdditionalTermBondIssuerLen = 41324,\n/*\n**************************************************************\n* Encoded (non-ASCII characters) representation of the       *\n* LegAdditionalTermBondIssuer(41323) field in the encoded    *\n* format specified via the MessageEncoding (347) field. If   *\n* used, the ASCII (English) representation should also be    *\n* specified in the LegAdditionalTermBondIssuer(41323) field. *\n**************************************************************\n*/\n  EncodedLegAdditionalTermBondIssuer = 41325,\n/*\n***********************************************************\n* Specifies the bond's payment priority in the event of a *\n* default.                                                *\n***********************************************************\n*/\n  LegAdditionalTermBondSeniority = 41326,\n/*\n******************************************\n* Specifies the coupon type of the bond. *\n******************************************\n*/\n  LegAdditionalTermBondCouponType = 41327,\n/*\n*******************************************************\n* Coupon rate of the bond.  See also CouponRate(223). *\n*******************************************************\n*/\n  LegAdditionalTermBondCouponRate = 41328,\n/*\n**********************************\n* The maturity date of the bond. *\n**********************************\n*/\n  LegAdditionalTermBondMaturityDate = 41329,\n/*\n******************************\n* The par value of the bond. *\n******************************\n*/\n  LegAdditionalTermBondParValue = 41330,\n/*\n************************************\n* Total issued amount of the bond. *\n************************************\n*/\n  LegAdditionalTermBondCurrentTotalIssuedAmount = 41331,\n/*\n***************************************************************\n* Time unit multiplier for the frequency of the bond's coupon *\n* payment.                                                    *\n***************************************************************\n*/\n  LegAdditionalTermBondCouponFrequencyPeriod = 41332,\n/*\n****************************************************************\n* Time unit associated with the frequency of the bond's coupon *\n* payment.                                                     *\n****************************************************************\n*/\n  LegAdditionalTermBondCouponFrequencyUnit = 41333,\n/*\n****************************************************************\n* The day count convention used in interest calculations for a *\n* bond or an interest bearing security.                        *\n****************************************************************\n*/\n  LegAdditionalTermBondDayCount = 41334,\n/*\n**************************************************************\n* Indicates whether the condition precedent bond is          *\n* applicable. The swap contract is only valid if the bond is *\n* issued and if there is any dispute over the terms of fixed *\n* stream then the bond terms would be used.                  *\n**************************************************************\n*/\n  LegAdditionalTermConditionPrecedentBondIndicator = 41336,\n/*\n***********************************************************\n* Indicates whether the discrepancy clause is applicable. *\n***********************************************************\n*/\n  LegAdditionalTermDiscrepancyClauseIndicator = 41337,\n/*\n****************************************************************\n* Applicable value for UnderlyingMarketDisruptionEvent(41865). *\n****************************************************************\n*/\n  UnderlyingMarketDisruptionValue = 41338,\n/*\n**************************************************\n* Applicable value for                           *\n* UnderlyingMarketDisruptionFallbackType(41867). *\n**************************************************\n*/\n  UnderlyingMarketDisruptionFallbackValue = 41339,\n/*\n************************************\n* Security identifier of the bond. *\n************************************\n*/\n  UnderlyingAdditionalTermBondSecurityID = 41341,\n/*\n*************************************************************\n* Identifies the dealer from whom price quotations for the  *\n* reference obligation are obtained for the purpose of cash *\n* settlement valuation calculation.                         *\n*************************************************************\n*/\n  LegCashSettlDealer = 41343,\n/*\n***********************************************************\n* Specifies the currency the LegCashSettlAmount(41357) is *\n* denominated in.  Uses ISO 4217 currency codes.          *\n***********************************************************\n*/\n  LegCashSettlCurrency = 41345,\n/*\n****************************************************************\n* The number of business days after settlement conditions have *\n* been satisfied, when the calculation agent is to obtain a    *\n* price quotation on the reference obligation for purposes of  *\n* cash settlement.                                             *\n****************************************************************\n*/\n  LegCasSettlValuationFirstBusinessDayOffset = 41346,\n/*\n***************************************************************\n* The number of business days between successive valuation    *\n* dates when multiple valuation dates are applicable for cash *\n* settlement.                                                 *\n***************************************************************\n*/\n  LegCashSettlValuationSubsequentBusinessDaysOffset = 41347,\n/*\n**************************************************************\n* Where multiple valuation dates are specified as being      *\n* applicable for cash settlement, this element specifies the *\n* number of applicable valuation dates.                      *\n**************************************************************\n*/\n  LegCashSettlNumOfValuationDates = 41348,\n/*\n**********************\n* Time of valuation. *\n**********************\n*/\n  LegCashSettlValuationTime = 41349,\n/*\n*************************************************************\n* Identifies the business center calendar used at valuation *\n* time for cash settlement purposes e.g. \"GBLO\".            *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegCashSettlBusinessCenter = 41350,\n/*\n***********************************************************\n* The type of quote used to determine the cash settlement *\n* price.                                                  *\n***********************************************************\n*/\n  LegCashSettlQuoteMethod = 41351,\n/*\n***************************************************************\n* When determining the cash settlement amount, if weighted    *\n* average price quotes are to be obtained for the reference   *\n* obligation, this is the upper limit to the outstanding      *\n* principal balance of the reference obligation for which the *\n* quote should be obtained.  If not specifed, the ISDA        *\n* definitions provide for a fallback amount equal to floating *\n* rate payer calculation amount.                              *\n***************************************************************\n*/\n  LegCashSettlQuoteAmount = 41352,\n/*\n****************************************************************\n* Specifies the currency the LegCashSettlQuoteAmount(41352) is *\n* denominated in.  Uses ISO 4217 Currency Code.                *\n****************************************************************\n*/\n  LegCashSettlQuoteCurrency = 41353,\n/*\n****************************************************************\n* When determining the cash settlement amount, if weighted     *\n* average price quotes are to be obtained for the reference    *\n* obligation, this is the minimum intended threshold amount of *\n* outstanding principal balance of the reference obligation    *\n* for which the quote should be obtained.  If not specified,   *\n* the ISDA definitions provide for a fallback amount of the    *\n* lower of either USD1,000,000 (or its equivalent in the       *\n* relevent obligation currency) or the (minimum) quoted        *\n* amount.                                                      *\n****************************************************************\n*/\n  LegCashSettlMinimumQuoteAmount = 41354,\n/*\n************************************************************\n* Specifies the currency the                               *\n* LegCashSettlQuoteMinimumAmount(41354) is denominated in. *\n* Uses ISO 4217 Currency Code.                             *\n************************************************************\n*/\n  LegCashSettlMinimumQuoteCurrency = 41355,\n/*\n****************************************************************\n* The number of business days used in the determination of the *\n* cash settlement payment date.                                *\n****************************************************************\n*/\n  LegCashSettlBusinessDays = 41356,\n/*\n************************************************************\n* The amount paid between the trade parties, seller to the *\n* buyer, for cash settlement on the cash settlement date.  *\n************************************************************\n*/\n  LegCashSettlAmount = 41357,\n/*\n***************************************************************\n* Used for fixed recovery, this specifies the recovery level  *\n* as determined at contract inception, to be applied in the   *\n* event of a default.  The factor is used to calculate the    *\n* amount paid by the seller to the buyer for cash settlement  *\n* on the cash settlement date.  The amount calculated is (1 - *\n* LegCashSettlRecoveryFactor(41358)) x floating rate payer    *\n* calculation amount.  The currency is derived from the       *\n* floating rate payer calculation amount.                     *\n***************************************************************\n*/\n  LegCashSettlRecoveryFactor = 41358,\n/*\n***********************************************************\n* Indicates whether fixed settlement is applicable or not *\n* applicable in a recovery lock.                          *\n***********************************************************\n*/\n  LegCashSettlFixedTermIndicator = 41359,\n/*\n****************************************************************\n* Indicates whether accrued interest is included or not in the *\n* value provided in LegCashSettlAmount(41357).                 *\n* For cash settlement this specifies whether quotations should *\n* be obtained inclusive or not of accrued interest.            *\n* For physical settlement this specifies whether the buyer     *\n* should deliver the obligation with an outstanding principal  *\n* balance that includes or excludes accrued interest.          *\n****************************************************************\n*/\n  LegCashSettlAccruedInterestIndicator = 41360,\n/*\n****************************************************************\n* The ISDA defined methodology for determining the final price *\n* of the reference obligation for purposes of cash settlement. *\n****************************************************************\n*/\n  LegCashSettlValuationMethod = 41361,\n/*\n**************************************\n* A named string value referenced by *\n* UnderlyingSettlTermXIDRef(41315).  *\n**************************************\n*/\n  LegCashSettlTermXID = 41362,\n/*\n***********************************************************\n* Cross reference to the ordinal observation as specified *\n* either in the LegComplexEventScheduleGrp or             *\n* LegComplexEventPeriodDateGrp components.                *\n***********************************************************\n*/\n  LegComplexEventAveragingObservationNumber = 41364,\n/*\n*******************************************************\n* The weight factor to be applied to the observation. *\n*******************************************************\n*/\n  LegComplexEventAveragingWeight = 41365,\n/*\n*******************************************************************\n* Specifies the type of credit event.                             *\n* See                                                             *\n* http://www.fixtradingcommunity.org/codelists#Credit_Event_Types *\n* for code list of applicable event types.                        *\n*******************************************************************\n*/\n  LegComplexEventCreditEventType = 41367,\n/*\n*******************************************************************\n* The credit event value appropriate to                           *\n* LegComplexEventCreditEventType(41367).                          *\n* See                                                             *\n* http://www.fixtradingcommunity.org/codelists#Credit_Event_Types *\n* for applicable event type values.                               *\n*******************************************************************\n*/\n  LegComplexEventCreditEventValue = 41368,\n/*\n****************************************************************\n* Specifies the applicable currency when                       *\n* LegComplexEventCreditEventCurrency(41368) is an amount. Uses *\n* ISO 4217 currency codes.                                     *\n****************************************************************\n*/\n  LegComplexEventCreditEventCurrency = 41369,\n/*\n***************************************************\n* Time unit multiplier for complex credit events. *\n***************************************************\n*/\n  LegComplexEventCreditEventPeriod = 41370,\n/*\n****************************************************\n* Time unit associated with complex credit events. *\n****************************************************\n*/\n  LegComplexEventCreditEventUnit = 41371,\n/*\n*********************************************************\n* Specifies the day type for the complex credit events. *\n*********************************************************\n*/\n  LegComplexEventCreditEventDayType = 41372,\n/*\n*************************************************************************\n* Identifies the source of rate information used for credit             *\n* events.                                                               *\n* See                                                                   *\n* http://www.fixtradingcommunity.org/codelists#Credit_Event_Rate_Source *\n* for code list of applicable sources.                                  *\n*************************************************************************\n*/\n  LegComplexEventCreditEventRateSource = 41373,\n/*\n****************************************************************\n* Specifies a complex event qualifier. Used to further qualify *\n* LegComplexEventCreditEventType(41367).                       *\n****************************************************************\n*/\n  LegComplexEventCreditEventQualifier = 41375,\n/*\n***********************************************\n* Averaging date for an Asian option.         *\n* Trigger date for a Barrier or Knock option. *\n***********************************************\n*/\n  LegComplexEventPeriodDate = 41377,\n/*\n***************************************\n* Averaging time for an Asian option. *\n***************************************\n*/\n  LegComplexEventPeriodTime = 41378,\n/*\n******************************\n* Specifies the period type. *\n******************************\n*/\n  LegComplexEventPeriodType = 41380,\n/*\n*************************************************************\n* The business center for adjusting dates and times in the  *\n* schedule or date-time group.                              *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegComplexEventBusinessCenter = 41381,\n/*\n***********************************************************\n* Identifies the source of rate information.              *\n* For FX, the reference source to be used for the FX spot *\n* rate.                                                   *\n***********************************************************\n*/\n  LegComplexEventRateSource = 41383,\n/*\n***************************************************************\n* Indicates whether the rate source specified is a primary or *\n* secondary source.                                           *\n***************************************************************\n*/\n  LegComplexEventRateSourceType = 41384,\n/*\n**************************************************************\n* Identifies the reference page from the rate source.        *\n* For FX, the reference page to the spot rate is to be used  *\n* for the reference FX spot rate.                            *\n* When LegComplexEventRateSource(41383) = 3 (ISDA Settlement *\n* Rate Option) this contains the value from the scheme that  *\n* reflects the terms of the Annex A to the ISDA 1998 FX and  *\n* Currency Option Definitions. See:                          *\n* http://www.fpml.org/coding-scheme/settlement-rate-option.  *\n**************************************************************\n*/\n  LegComplexEventReferencePage = 41385,\n/*\n***************************************************************\n* Identifies the reference page heading from the rate source. *\n***************************************************************\n*/\n  LegComplexEvenReferencePageHeading = 41386,\n/*\n***************************************************************\n* The business center calendar used to adjust the event date, *\n* e.g. \"GBLO\".                                                *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  LegComplexEventDateBusinessCenter = 41388,\n/*\n**************************************\n* The unadjusted complex event date. *\n**************************************\n*/\n  LegComplexEventDateUnadjusted = 41389,\n/*\n*****************************************************************\n* Specifies the anchor date when the complex event date is      *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegComplexEventDateRelativeTo = 41390,\n/*\n******************************************************\n* Time unit multiplier for the relative date offset. *\n******************************************************\n*/\n  LegComplexEventDateOffsetPeriod = 41391,\n/*\n*******************************************************\n* Time unit associated with the relative date offset. *\n*******************************************************\n*/\n  LegComplexEventDateOffsetUnit = 41392,\n/*\n*******************************************************\n* Specifies the day type of the relative date offset. *\n*******************************************************\n*/\n  LegComplexEventDateOffsetDayType = 41393,\n/*\n***************************************************************\n* The business day convention used to adjust the event date.  *\n* Used only to override the business day convention specified *\n* in the LegDateAdjustment component within the InstrumentLeg *\n* component.                                                  *\n***************************************************************\n*/\n  LegComplexEventDateBusinessDayConvention = 41394,\n/*\n************************************\n* The adjusted complex event date. *\n************************************\n*/\n  LegComplexEventDateAdjusted = 41395,\n/*\n*********************************\n* The local market fixing time. *\n*********************************\n*/\n  LegComplexEventFixingTime = 41396,\n/*\n****************************************************************\n* The business center for determining the actual fixing times. *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegComplexEventFixingTimeBusinessCenter = 41397,\n/*\n****************************************************************\n* A newspaper or electronic news service that may publish      *\n* relevant information used in the determination of whether or *\n* not a credit event has occurred.                             *\n****************************************************************\n*/\n  LegComplexEventCreditEventSource = 41399,\n/*\n***********************************\n* The start date of the schedule. *\n***********************************\n*/\n  LegComplexEventScheduleStartDate = 41401,\n/*\n*********************************\n* The end date of the schedule. *\n*********************************\n*/\n  LegComplexEventScheduleEndDate = 41402,\n/*\n*********************************************************\n* Time unit multiplier for the schedule date frequency. *\n*********************************************************\n*/\n  LegComplexEventScheduleFrequencyPeriod = 41403,\n/*\n**********************************************************\n* Time unit associated with the schedule date frequency. *\n**********************************************************\n*/\n  LegComplexEventScheduleFrequencyUnit = 41404,\n/*\n****************************************************************\n* The convention for determining the sequence of dates. It is  *\n* used in conjunction with a specified frequency. Used only to *\n* override the roll convention defined in the                  *\n* LegDateAdjustment component in InstrumentLeg.                *\n****************************************************************\n*/\n  LegComplexEventScheduleRollConvention = 41405,\n/*\n**********************************************************\n* Identifies the reference \"page\" from the quote source. *\n**********************************************************\n*/\n  ProvisionCashSettlQuoteReferencePage = 41406,\n/*\n**********************************************************\n* Identifies the reference \"page\" from the quote source. *\n**********************************************************\n*/\n  LegProvisionCashSettlQuoteReferencePage = 41407,\n/*\n********************************************\n* Specifies the type of delivery schedule. *\n********************************************\n*/\n  LegDeliveryScheduleType = 41409,\n/*\n***************************************************************\n* Identifier for this instance of delivery schedule for cross *\n* referencing elsewhere in the message.                       *\n***************************************************************\n*/\n  LegDeliveryScheduleXID = 41410,\n/*\n*******************************\n* Physical delivery quantity. *\n*******************************\n*/\n  LegDeliveryScheduleNotional = 41411,\n/*\n**********************************************************\n* Specifies the delivery quantity unit of measure (UOM). *\n**********************************************************\n*/\n  LegDeliveryScheduleNotionalUnitOfMeasure = 41412,\n/*\n***************************************\n* The frequency of notional delivery. *\n***************************************\n*/\n  LegDeliveryScheduleNotionalCommodityFrequency = 41413,\n/*\n****************************************************************\n* Specifies the negative tolerance value.  The value may be an *\n* absolute quantity or a percentage, as specified in           *\n* LegDeliveryScheduleToleranceType(41417).  Percentage value   *\n* is to be expressed relative to \"1.0\" representing 100% (e.g. *\n* a value of \"0.0575\" represents 5.75%).                       *\n****************************************************************\n*/\n  LegDeliveryScheduleNegativeTolerance = 41414,\n/*\n***************************************************************\n* Specifies the positive tolerance value. The value may be an *\n* absolute quantity or a percentage, as specified in          *\n* LegDeliveryScheduleToleranceType(41417). Value may exceed   *\n* agreed upon value. Percentage value is to be expressed      *\n* relative to \"1.0\" representing 100% (e.g. a value of        *\n* \"0.0575\" represents 5.75%).                                 *\n***************************************************************\n*/\n  LegDeliverySchedulePositiveTolerance = 41415,\n/*\n**********************************************************\n* Specifies the tolerance value's unit of measure (UOM). *\n**********************************************************\n*/\n  LegDeliveryScheduleToleranceUnitOfMeasure = 41416,\n/*\n***************************************\n* Specifies the tolerance value type. *\n***************************************\n*/\n  LegDeliveryScheduleToleranceType = 41417,\n/*\n**************************************************************\n* Specifies the country where delivery takes place. Uses ISO *\n* 3166 2-character country code.                             *\n**************************************************************\n*/\n  LegDeliveryScheduleSettlCountry = 41418,\n/*\n*********************************************************************\n* Delivery timezone specified as \"prevailing\" rather than           *\n* \"standard\" or \"daylight\".                                         *\n* See                                                               *\n* http://www.fixtradingcommunity.org/codelists#Prevailing_Timezones *\n* for code list of applicable prevailing timezones.                 *\n*********************************************************************\n*/\n  LegDeliveryScheduleSettlTimeZone = 41419,\n/*\n*************************************\n* Specifies the delivery flow type. *\n*************************************\n*/\n  LegDeliveryScheduleSettlFlowType = 41420,\n/*\n*************************************************************\n* Indicates whether holidays are included in the settlement *\n* periods. Required for electricity contracts.              *\n*************************************************************\n*/\n  LegDeliveryScheduleSettlHolidaysProcessingInstruction = 41421,\n/*\n****************************************************\n* Specifies the day or group of days for delivery. *\n****************************************************\n*/\n  LegDeliveryScheduleSettlDay = 41423,\n/*\n***********************************************\n* The sum of the total hours specified in the *\n* LegDeliveryScheduleSettlTimeGrp component.  *\n***********************************************\n*/\n  LegDeliveryScheduleSettlTotalHours = 41424,\n/*\n**************************************************************\n* The scheduled start time for the delivery of the commodity *\n* where delivery occurs over specified times. The format of  *\n* the time value is specified in                             *\n* LegDeliveryScheduleSettlTimeType(41428).                   *\n**************************************************************\n*/\n  LegDeliveryScheduleSettlStart = 41426,\n/*\n*************************************************************\n* The scheduled end time for the delivery of the commodity  *\n* where delivery occurs over specified times. The format of *\n* the time value is specified in                            *\n* LegDeliveryScheduleSettlTimeType(41428).                  *\n*************************************************************\n*/\n  LegDeliveryScheduleSettlEnd = 41427,\n/*\n***********************************************************\n* Specifies the format of the delivery start and end time *\n* values.                                                 *\n***********************************************************\n*/\n  LegDeliveryScheduleSettlTimeType = 41428,\n/*\n******************************************\n* Specifies the type of delivery stream. *\n******************************************\n*/\n  LegDeliveryStreamType = 41429,\n/*\n******************************************\n* The name of the oil delivery pipeline. *\n******************************************\n*/\n  LegDeliveryStreamPipeline = 41430,\n/*\n************************************************************\n* The point at which the commodity will enter the delivery *\n* mechanism or pipeline.                                   *\n************************************************************\n*/\n  LegDeliveryStreamEntryPoint = 41431,\n/*\n**************************************************************\n* The point at which the commodity product will be withdrawn *\n* prior to delivery.                                         *\n**************************************************************\n*/\n  LegDeliveryStreamWithdrawalPoint = 41432,\n/*\n***************************************************************\n* The point at which the commodity product will be delivered  *\n* and received. Value specified should follow market          *\n* convention appropriate for the commodity product.           *\n* For bullion, see                                            *\n* http://www.fpml.org/coding-scheme/bullion-delivery-location *\n* for values.                                                 *\n***************************************************************\n*/\n  LegDeliveryStreamDeliveryPoint = 41433,\n/*\n***************************************************************\n* Specifies under what conditions the buyer and seller should *\n* be excused of their delivery obligations.                   *\n***************************************************************\n*/\n  LegDeliveryStreamDeliveryRestriction = 41434,\n/*\n**************************************************************************\n* Specifies the electricity delivery contingency. See                    *\n* http://www.fpml.org/coding-scheme/electricity-transmission-contingency *\n* for values.                                                            *\n**************************************************************************\n*/\n  LegDeliveryStreamDeliveryContingency = 41435,\n/*\n*****************************************************\n* The trade side value of the party responsible for *\n* electricity delivery contingency.                 *\n*****************************************************\n*/\n  LegDeliveryStreamDeliveryContingentPartySide = 41436,\n/*\n**************************************************************\n* When this element is specified and set to 'Y', delivery of *\n* the coal product is to be at its source.                   *\n**************************************************************\n*/\n  LegDeliveryStreamDeliverAtSourceIndicator = 41437,\n/*\n*******************************************************************\n* Specifies how the parties to the trade apportion                *\n* responsibility for the delivery of the commodity product.       *\n* See                                                             *\n* http://www.fixtradingcommunity.org/codelists#Risk_Apportionment *\n* for the details of the external code list.                      *\n*******************************************************************\n*/\n  LegDeliveryStreamRiskApportionment = 41438,\n/*\n******************************************\n* Specifies the title transfer location. *\n******************************************\n*/\n  LegDeliveryStreamTitleTransferLocation = 41439,\n/*\n**********************************************\n* Specifies the condition of title transfer. *\n**********************************************\n*/\n  LegDeliveryStreamTitleTransferCondition = 41440,\n/*\n**************************************************************\n* A party, not necessarily of the trade, who is the Importer *\n* of Record for the purposes of paying customs duties and    *\n* applicable taxes or costs related to importation.          *\n**************************************************************\n*/\n  LegDeliveryStreamImporterOfRecord = 41441,\n/*\n****************************************************************\n* Specifies the negative tolerance value.  The value may be an *\n* absolute quantity or a percentage, as specified in           *\n* LegDeliveryStreamToleranceType(41445).  Percentage value is  *\n* to be expressed relative to \"1.0\" representing 100% (e.g. a  *\n* value of \"0.0575\" represents 5.75%).                         *\n****************************************************************\n*/\n  LegDeliveryStreamNegativeTolerance = 41442,\n/*\n***************************************************************\n* Specifies the positive tolerance value. The value may be an *\n* absolute quantity or a percentage, as specified in          *\n* LegDeliveryStreamToleranceType(41445). Value may exceed     *\n* agreed upon value. Percentage value is to be expressed      *\n* relative to \"1.0\" representing 100% (e.g. a value of        *\n* \"0.0575\" represents 5.75%).                                 *\n***************************************************************\n*/\n  LegDeliveryStreamPositiveTolerance = 41443,\n/*\n**********************************************************\n* Specifies the tolerance value's unit of measure (UOM). *\n**********************************************************\n*/\n  LegDeliveryStreamToleranceUnitOfMeasure = 41444,\n/*\n***************************************\n* Specifies the tolerance value type. *\n***************************************\n*/\n  LegDeliveryStreamToleranceType = 41445,\n/*\n*********************************************************\n* Indicates whether the tolerance is at the seller's or *\n* buyer's option.                                       *\n*********************************************************\n*/\n  LegDeliveryStreamToleranceOptionSide = 41446,\n/*\n*************************************************************\n* The positive percent tolerance which applies to the total *\n* quantity delivered over all shipment periods.             *\n* Percentage value is to be expressed relative to \"1.0\"     *\n* representing 100% (e.g. a value of \"0.0575\" represents    *\n* 5.75%.).                                                  *\n*************************************************************\n*/\n  LegDeliveryStreamTotalPositiveTolerance = 41447,\n/*\n*************************************************************\n* The negative percent tolerance which applies to the total *\n* quantity delivered over all shipment periods.             *\n* Percentage value is to be expressed relative to \"1.0\"     *\n* representing 100% (e.g. a value of \"0.0575\" represents    *\n* 5.75%.).                                                  *\n*************************************************************\n*/\n  LegDeliveryStreamTotalNegativeTolerance = 41448,\n/*\n****************************************************************\n* If the notional quantity is specified in a unit that does    *\n* not match the unit in which the commodity reference price is *\n* quoted, the scaling or conversion factor used to convert the *\n* commodity reference price unit into the notional quantity    *\n* unit should be stated here. If there is no conversion, this  *\n* field is not intended to be used.                            *\n****************************************************************\n*/\n  LegDeliveryStreamNotionalConversionFactor = 41449,\n/*\n*********************************************************\n* The transportation equipment with which the commodity *\n* product will be delivered and received.               *\n*********************************************************\n*/\n  LegDeliveryStreamTransportEquipment = 41450,\n/*\n**************************************************************\n* A reference to the party able to choose whether the gas is *\n* delivered for a particular period e.g. a swing or          *\n* interruptible contract.                                    *\n**************************************************************\n*/\n  LegDeliveryStreamElectingPartySide = 41451,\n/*\n**********************************************************************\n* Specifies the name of the attribute.                               *\n* See                                                                *\n* http://www.fixtradingcommunity.org/codelists#Asset_Attribute_Types *\n* for code list of applicable asset attribute types.                 *\n**********************************************************************\n*/\n  LegStreamAssetAttributeType = 41453,\n/*\n*****************************************\n* Specifies the value of the attribute. *\n*****************************************\n*/\n  LegStreamAssetAttributeValue = 41454,\n/*\n*****************************************************\n* Limit or lower acceptable value of the attribute. *\n*****************************************************\n*/\n  LegStreamAssetAttributeLimit = 41455,\n/*\n************************************************************\n* The delivery cycles during which the oil product will be *\n* transported in the pipeline.                             *\n************************************************************\n*/\n  LegDeliveryStreamCycleDesc = 41457,\n/*\n***************************************************\n* Byte length of encoded (non-ASCII characters)   *\n* EncodedLegDeliveryStreamCycleDesc(41459) field. *\n***************************************************\n*/\n  EncodedLegDeliveryStreamCycleDescLen = 41458,\n/*\n************************************************************\n* Encoded (non-ASCII characters) representation of the     *\n* LegDeliveryStreamCycleDesc(41457) field in the encoded   *\n* format specified via the MessageEncoding (347) field. If *\n* used, the ASCII (English) representation should also be  *\n* specified in the LegLeg DeliveryStream(41457) field.     *\n************************************************************\n*/\n  EncodedLegDeliveryStreamCycleDesc = 41459,\n/*\n*******************************************************************\n* The SCoTA coal cargo origin, mining region, mine(s), mining     *\n* complex(es), loadout(s) or river dock(s) or other point(s)      *\n* of origin that seller and buyer agree are acceptable origins    *\n* for the coal product. For international coal transactions,      *\n* this is the origin of the coal product.                         *\n* See                                                             *\n* http://www.fpml.org/coding-scheme/commodity-coal-product-source *\n* for values.                                                     *\n*******************************************************************\n*/\n  LegDeliveryStreamCommoditySource = 41461,\n/*\n*************************************************\n* The consequences of market disruption events. *\n*************************************************\n*/\n  LegMarketDisruptionProvision = 41462,\n/*\n****************************************************\n* Specifies the location of the fallback provision *\n* documentation.                                   *\n****************************************************\n*/\n  LegMarketDisruptionFallbackProvision = 41463,\n/*\n**************************************************************\n* Specifies the maximum number of market disruption days     *\n* (commodity or bullion business days) in a contract or      *\n* confirmation. If none are specified, the maximum number of *\n* market disruption days is five (5).                        *\n**************************************************************\n*/\n  LegMarketDisruptionMaximumDays = 41464,\n/*\n***********************************************************\n* Used when a price materiality percentage applies to the *\n* price source disruption event and this event has been   *\n* specified.                                              *\n***********************************************************\n*/\n  LegMarketDisruptionMaterialityPercentage = 41465,\n/*\n***************************************************************\n* Specifies the minimum futures contracts level that dictates *\n* whether or not a 'De Minimis Trading' event has occurred.   *\n***************************************************************\n*/\n  LegMarketDisruptionMinimumFuturesContracts = 41466,\n/*\n************************************************************************\n* Specifies the market disruption event.                               *\n* For commodities see                                                  *\n* http://www.fpml.org/coding-scheme/commodity-market-disruption        *\n* for values.                                                          *\n* For foreign exchange, see                                            *\n* http://www.fixtradingcommunity.org/codelists#Market_Disruption_Event *\n* for code list of applicable event types.                             *\n************************************************************************\n*/\n  LegMarketDisruptionEvent = 41468,\n/*\n**************************************************************************\n* Specifies the type of disruption fallback.                             *\n* See                                                                    *\n* http://www.fpml.org/coding-scheme/commodity-market-disruption-fallback *\n* for values.                                                            *\n**************************************************************************\n*/\n  LegMarketDisruptionFallbackType = 41470,\n/*\n******************************************\n* The type of reference price underlier. *\n******************************************\n*/\n  LegMarketDisruptionFallbackUnderlierType = 41472,\n/*\n***************************************************\n* Specifies the identifier value of the security. *\n***************************************************\n*/\n  LegMarketDisruptionFallbackUnderlierSecurityID = 41473,\n/*\n********************************************************\n* Specifies the class or source scheme of the security *\n* identifier.                                          *\n********************************************************\n*/\n  LegMarketDisruptionFallbackUnderlierSecurityIDSource = 41474,\n/*\n*********************************************************\n* Specifies the description of the underlying security. *\n*********************************************************\n*/\n  LegMarketDisruptionFallbackUnderlierSecurityDesc = 41475,\n/*\n***********************************************************\n* Byte length of encoded (non-ASCII characters)           *\n* EncodedLegMarketDisruptionFallbackUnderlierSecurityDesc *\n* (41477) field.                                          *\n***********************************************************\n*/\n  EncodedLegMarketDisruptionFallbackUnderlierSecurityDescLen = 41476,\n/*\n*************************************************************\n* Encoded (non-ASCII characters) representation of the      *\n* LegMarketDisruptionFallbackUnderlierSecurityDesc(41475)   *\n* field in the encoded format specified via the             *\n* MessageEncoding (347) field. If used, the ASCII (English) *\n* representation should also be specified in the            *\n* LegMarketDisruptionFallbackUnderlierSecurityDesc(41475)   *\n* field.                                                    *\n*************************************************************\n*/\n  EncodedLegMarketDisruptionFallbackUnderlierSecurityDesc = 41477,\n/*\n****************************************************************\n* If there are multiple underlying assets, this specifies the  *\n* number of units (index or securities) that constitute the    *\n* underlier of the swap. In the case of a basket swap, this is *\n* used to reference both the number of basket units, and the   *\n* number of each asset components of the basket when these are *\n* expressed in absolute terms.                                 *\n****************************************************************\n*/\n  LegMarketDisruptionFallbackOpenUnits = 41478,\n/*\n**************************************************************\n* Specifies the currency if the underlier is a basket.  Uses *\n* ISO 4217 currency codes.                                   *\n**************************************************************\n*/\n  LegMarketDisruptionFallbackBasketCurrency = 41479,\n/*\n***************************************************************\n* Specifies the basket divisor amount. This value is normally *\n* used to adjust the constituent weight for pricing or to     *\n* adjust for dividends, or other corporate actions.           *\n***************************************************************\n*/\n  LegMarketDisruptionFallbackBasketDivisor = 41480,\n/*\n*****************************************\n* A description of the option exercise. *\n*****************************************\n*/\n  LegExerciseDesc = 41481,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedLegExerciseDesc(41483) field.          *\n*************************************************\n*/\n  EncodedLegExerciseDescLen = 41482,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* LegExerciseDesc(41481) field in the encoded format specified *\n* via the MessageEncoding (347) field. If used, the ASCII      *\n* (English) representation should also be specified in the     *\n* LegExerciseDesc(41481) field.                                *\n****************************************************************\n*/\n  EncodedLegExerciseDesc = 41483,\n/*\n*************************************************************\n* Indicates (when 'Y') that exercise is automatic when the  *\n* strike price is crossed or the underlying trade is in the *\n* money.                                                    *\n*************************************************************\n*/\n  LegAutomaticExerciseIndicator = 41484,\n/*\n*********************************************************\n* The threshold rate for triggering automatic exercise. *\n*********************************************************\n*/\n  LegAutomaticExerciseThresholdRate = 41485,\n/*\n************************************************************\n* Indicates whether follow-up confirmation of exercise     *\n* (written or electronic) is required following telephonic *\n* notice by the buyer to the seller or seller's agent.     *\n************************************************************\n*/\n  LegExerciseConfirmationMethod = 41486,\n/*\n**************************************************************\n* Identifies the business center used for adjusting the time *\n* for manual exercise notice.                                *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  LegManualNoticeBusinessCenter = 41487,\n/*\n****************************************************************\n* Indicates whether the notional amount of the underlying      *\n* swap, not previously exercised under the option, will be     *\n* automatically exercised at the expiration time on the        *\n* expiration date if at such time the buyer is in-the-money,   *\n* provided that the difference between the settlement rate and *\n* the fixed rate under the relevant underlying swap is not     *\n* less than one tenth of a percentage point (0.10% or 0.001).  *\n****************************************************************\n*/\n  LegFallbackExerciseIndicator = 41488,\n/*\n***************************************************************\n* Indicates whether the Seller may request the Buyer to       *\n* confirm its intent to exercise if not done on or before the *\n* expiration time on the expiration date. If true (\"Y\")       *\n* specific rules will apply in relation to the settlement     *\n* mode.                                                       *\n***************************************************************\n*/\n  LegLimitRightToConfirmIndicator = 41489,\n/*\n****************************************************************\n* Indicates in physical settlement of bond and convertible     *\n* bond options whether the party required to deliver the bonds *\n* will divide those to be delivered as notifying party desires *\n* to facilitate delivery obligations.                          *\n****************************************************************\n*/\n  LegExerciseSplitTicketIndicator = 41490,\n/*\n*************************************************************\n* The business center calendar used to adjust the option    *\n* exercise dates, e.g. \"GBLO\".                              *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegOptionExerciseBusinessCenter = 41492,\n/*\n***********************************************************\n* The business day convention used to adjust the option   *\n* exercise dates. Used only to override the business day  *\n* convention specified in the LegDateAdjustment component *\n* within the InstrumentLeg component.                     *\n***********************************************************\n*/\n  LegOptionExerciseBusinessDayConvention = 41493,\n/*\n************************************************************\n* Specifies the day type of the relative earliest exercise *\n* date offset.                                             *\n************************************************************\n*/\n  LegOptionExerciseEarliestDateOffsetDayType = 41494,\n/*\n****************************************************************\n* Time unit multiplier for the relative earliest exercise date *\n* offset.                                                      *\n****************************************************************\n*/\n  LegOptionExerciseEarliestDateOffsetPeriod = 41495,\n/*\n************************************************************\n* Time unit associated with the relative earliest exercise *\n* date offset.                                             *\n************************************************************\n*/\n  LegOptionExerciseEarliestDateOffsetUnit = 41496,\n/*\n*************************************************************\n* Time unit multiplier for the frequency of exercise dates. *\n*************************************************************\n*/\n  LegOptionExerciseFrequencyPeriod = 41497,\n/*\n**************************************************************\n* Time unit associated with the frequency of exercise dates. *\n**************************************************************\n*/\n  LegOptionExerciseFrequencyUnit = 41498,\n/*\n***************************************************************\n* The unadjusted start date for calculating periodic exercise *\n* dates.                                                      *\n***************************************************************\n*/\n  LegOptionExerciseStartDateUnadjusted = 41499,\n/*\n*****************************************************************\n* Specifies the anchor date when the option exercise start      *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegOptionExerciseStartDateRelativeTo = 41500,\n/*\n*************************************************************\n* Time unit multiplier for the relative exercise start date *\n* offset.                                                   *\n*************************************************************\n*/\n  LegOptionExerciseStartDateOffsetPeriod = 41501,\n/*\n**************************************************************\n* Time unit associated with the relative exercise start date *\n* offset.                                                    *\n**************************************************************\n*/\n  LegOptionExerciseStartDateOffsetUnit = 41502,\n/*\n****************************************************************\n* Specifies the day type of the relative option exercise start *\n* date offset.                                                 *\n****************************************************************\n*/\n  LegOptionExerciseStartDateOffsetDayType = 41503,\n/*\n*************************************************************\n* The adjusted start date for calculating periodic exercise *\n* dates.                                                    *\n*************************************************************\n*/\n  LegOptionExerciseStartDateAdjusted = 41504,\n/*\n****************************************************************\n* The number of periods in the referenced date schedule that   *\n* are between each date in the relative date schedule. Thus a  *\n* skip of 2 would mean that dates are relative to every second *\n* date in the referenced schedule. If present this should have *\n* a value greater than 1.                                      *\n****************************************************************\n*/\n  LegOptionExerciseSkip = 41505,\n/*\n********************************************************\n* The last date (adjusted) for establishing the option *\n* exercise terms.                                      *\n********************************************************\n*/\n  LegOptionExerciseNominationDeadline = 41506,\n/*\n***************************************\n* The unadjusted first exercise date. *\n***************************************\n*/\n  LegOptionExerciseFirstDateUnadjusted = 41507,\n/*\n**************************************\n* The unadjusted last exercise date. *\n**************************************\n*/\n  LegOptionExerciseLastDateUnadjusted = 41508,\n/*\n****************************************************************\n* The earliest time at which notice of exercise can be given   *\n* by the buyer to the seller (or seller's agent) (i) on the    *\n* expriation date, in the case of a European style option,     *\n* (ii) on each Bermuda option exercise date and the expiration *\n* date, in the case of a Bermuda style option, (iii) the       *\n* commencement date to, and including, the expiration date, in *\n* the case of an American option.                              *\n****************************************************************\n*/\n  LegOptionExerciseEarliestTime = 41509,\n/*\n*****************************************\n* The latest exercise time.  See also   *\n* LegOptionExerciseEarliestTime(41509). *\n*****************************************\n*/\n  LegOptionExerciseLatestTime = 41510,\n/*\n***************************************************************\n* The business center used to determine the locale for option *\n* exercise time, e.g. \"GBLO\".                                 *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  LegOptionExerciseTimeBusinessCenter = 41511,\n/*\n**********************************************************\n* The adjusted or unadjusted option exercise fixed date. *\n**********************************************************\n*/\n  LegOptionExerciseDate = 41513,\n/*\n**************************************************************\n* Specifies the type of option exercise date. When specified *\n* it applies not only to the current date but to all         *\n* subsequent dates in the group until overridden with a new  *\n* type.                                                      *\n**************************************************************\n*/\n  LegOptionExerciseDateType = 41514,\n/*\n*************************************************************\n* The business center calendar used to adjust the option    *\n* exercise expiration dates, e.g. \"GBLO\".                   *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegOptionExerciseExpirationDateBusinessCenter = 41516,\n/*\n**************************************************************\n* The business day convention used to adjust the option      *\n* exercise expiration dates. Used only to override the       *\n* business day convention specified in the LegDateAdjustment *\n* component within the InstrumentLeg component.              *\n**************************************************************\n*/\n  LegOptionExerciseExpirationDateBusinessDayConvention = 41517,\n/*\n*****************************************************************\n* Specifies the anchor date when the option exercise            *\n* expiration date is relative to an anchor date.                *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegOptionExerciseExpirationDateRelativeTo = 41518,\n/*\n*************************************************************\n* Time unit multiplier for the relative exercise expiration *\n* date offset.                                              *\n*************************************************************\n*/\n  LegOptionExerciseExpirationDateOffsetPeriod = 41519,\n/*\n**************************************************************\n* Time unit associated with the relative exercise expiration *\n* date offset.                                               *\n**************************************************************\n*/\n  LegOptionExerciseExpirationDateOffsetUnit = 41520,\n/*\n******************************************************\n* Time unit multiplier for the frequency of exercise *\n* expiration dates.                                  *\n******************************************************\n*/\n  LegOptionExerciseExpirationFrequencyPeriod = 41521,\n/*\n*******************************************************\n* Time unit associated with the frequency of exercise *\n* expiration dates.                                   *\n*******************************************************\n*/\n  LegOptionExerciseExpirationFrequencyUnit = 41522,\n/*\n****************************************************************\n* The convention for determining the sequence of exercise      *\n* expiration dates. It is used in conjunction with a specified *\n* frequency. Used only to override the roll convention defined *\n* in the LegDateAdjustment component in InstrumentLeg.         *\n****************************************************************\n*/\n  LegOptionExerciseExpirationRollConvention = 41523,\n/*\n**********************************************************\n* Specifies the day type of the relative option exercise *\n* expiration date offset.                                *\n**********************************************************\n*/\n  LegOptionExerciseExpirationDateOffsetDayType = 41524,\n/*\n****************************************\n* The option exercise expiration time. *\n****************************************\n*/\n  LegOptionExerciseExpirationTime = 41525,\n/*\n***************************************************************\n* The business center used to determine the locale for option *\n* exercise expiration time, e.g. \"GBLO\".                      *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  LegOptionExerciseExpirationTimeBusinessCenter = 41526,\n/*\n***************************************************************\n* The adjusted or unadjusted option exercise expiration fixed *\n* date.                                                       *\n***************************************************************\n*/\n  LegOptionExerciseExpirationDate = 41528,\n/*\n****************************************************************\n* Specifies the type of option exercise expiration date. When  *\n* specified it applies not only to the current date but to all *\n* subsequent dates in the group until overridden with a new    *\n* type.                                                        *\n****************************************************************\n*/\n  LegOptionExerciseExpirationDateType = 41529,\n/*\n****************************************************\n* The day of the week on which fixing takes place. *\n****************************************************\n*/\n  LegPaymentScheduleFixingDayOfWeek = 41531,\n/*\n***********************************************************\n* The occurrence of the day of week on which fixing takes *\n* place.                                                  *\n***********************************************************\n*/\n  LegPaymentScheduleFixingDayNumber = 41532,\n/*\n***************************************************************\n* Identifier of this LegPaymentSchedule for cross referencing *\n* elsewhere in the message.                                   *\n***************************************************************\n*/\n  LegPaymentScheduleXID = 41533,\n/*\n***********************************************************\n* Reference to payment schedule elsewhere in the message. *\n***********************************************************\n*/\n  LegPaymentScheduleXIDRef = 41534,\n/*\n**************************************************************\n* The currency of the schedule rate.  Uses ISO 4217 currency *\n* codes.                                                     *\n**************************************************************\n*/\n  LegPaymentScheduleRateCurrency = 41535,\n/*\n********************************************\n* The schedule rate unit of measure (UOM). *\n********************************************\n*/\n  LegPaymentScheduleRateUnitOfMeasure = 41536,\n/*\n***************************************************************\n* The number multipled by the derived floating rate of the    *\n* leg's payment schedule in order to arrive at the payment    *\n* rate. If omitted, the schedule rate conversion factor is 1. *\n***************************************************************\n*/\n  LegPaymentScheduleRateConversionFactor = 41537,\n/*\n**************************************************************\n* Identifies whether the rate spread is an absolute value to *\n* be added to the index rate or a percentage of the index    *\n* rate.                                                      *\n**************************************************************\n*/\n  LegPaymentScheduleRateSpreadType = 41538,\n/*\n*****************************************\n* The schedule settlement period price. *\n*****************************************\n*/\n  LegPaymentScheduleSettlPeriodPrice = 41539,\n/*\n**************************************************************\n* The currency of the schedule settlement period price. Uses *\n* ISO 4217 currency codes.                                   *\n**************************************************************\n*/\n  LegPaymentScheduleSettlPeriodPriceCurrency = 41540,\n/*\n******************************************************\n* The settlement period price unit of measure (UOM). *\n******************************************************\n*/\n  LegPaymentScheduleSettlPeriodPriceUnitOfMeasure = 41541,\n/*\n********************************************\n* The schedule step unit of measure (UOM). *\n********************************************\n*/\n  LegPaymentScheduleStepUnitOfMeasure = 41542,\n/*\n************************************\n* The distribution of fixing days. *\n************************************\n*/\n  LegPaymentScheduleFixingDayDistribution = 41543,\n/*\n***********************************************************\n* The number of days over which fixing should take place. *\n***********************************************************\n*/\n  LegPaymentScheduleFixingDayCount = 41544,\n/*\n*****************************************************\n* Time unit multiplier for the fixing lag duration. *\n*****************************************************\n*/\n  LegPaymentScheduleFixingLagPeriod = 41545,\n/*\n******************************************************\n* Time unit associated with the fixing lag duration. *\n******************************************************\n*/\n  LegPaymentScheduleFixingLagUnit = 41546,\n/*\n****************************************************************\n* Time unit multiplier for the relative first observation date *\n* offset.                                                      *\n****************************************************************\n*/\n  LegPaymentScheduleFixingFirstObservationDateOffsetPeriod = 41547,\n/*\n************************************************************\n* Time unit associated with the relative first observation *\n* date offset.                                             *\n************************************************************\n*/\n  LegPaymentScheduleFixingFirstObservationDateOffsetUnit = 41548,\n/*\n****************************************************************\n* When this element is specified and set to 'Y', the Flat Rate *\n* is the New Worldwide Tanker Nominal Freight Scale for the    *\n* Freight Index Route taken at the trade date of the           *\n* transaction \"Fixed\". If 'N' it is taken on each pricing date *\n* \"Floating\".                                                  *\n****************************************************************\n*/\n  LegPaymentStreamFlatRateIndicator = 41549,\n/*\n*************************************************************\n* Specifies the actual monetary value of the flat rate when *\n* LegPaymentStreamFlatRateIndicator(41549) = 'Y'.           *\n*************************************************************\n*/\n  LegPaymentStreamFlatRateAmount = 41550,\n/*\n*************************************************************\n* Specifies the currency of the actual flat rate.  Uses ISO *\n* 4217 currency codes.                                      *\n*************************************************************\n*/\n  LegPaymentStreamFlatRateCurrency = 41551,\n/*\n****************************************************\n* Specifies the limit on the total payment amount. *\n****************************************************\n*/\n  LegStreamMaximumPaymentAmount = 41552,\n/*\n***************************************************************\n* Specifies the currency of total payment amount limit.  Uses *\n* ISO 4217 currency codes.                                    *\n***************************************************************\n*/\n  LegStreamMaximumPaymentCurrency = 41553,\n/*\n**************************************************************\n* Specifies the limit on the payment amount that goes out in *\n* any particular calculation period.                         *\n**************************************************************\n*/\n  LegStreamMaximumTransactionAmount = 41554,\n/*\n**************************************************************\n* Specifies the currency of the period payment amount limit. *\n* Uses ISO 4217 currency codes.                              *\n**************************************************************\n*/\n  LegStreamMaximumTransactionCurrency = 41555,\n/*\n***************************************************\n* The fixed payment amount unit of measure (UOM). *\n***************************************************\n*/\n  LegPaymentStreamFixedAmountUnitOfMeasure = 41556,\n/*\n*********************************************\n* Specifies the total fixed payment amount. *\n*********************************************\n*/\n  LegPaymentStreamTotalFixedAmount = 41557,\n/*\n**********************************************************\n* The number of Worldscale points for purposes of the    *\n* calculation of a fixed amount for a wet voyage charter *\n* commodity swap.                                        *\n**********************************************************\n*/\n  LegPaymentStreamWorldScaleRate = 41558,\n/*\n***************************************************************\n* The price per relevant unit for purposes of the calculation *\n* of a fixed amount for a dry voyage charter or time charter  *\n* commodity swap.                                             *\n***************************************************************\n*/\n  LegPaymentStreamContractPrice = 41559,\n/*\n****************************************************************\n* Specifies the currency of                                    *\n* LegPaymentStreamContractPrice(41559). Uses ISO 4217 currency *\n* codes.                                                       *\n****************************************************************\n*/\n  LegPaymentStreamContractPriceCurrency = 41560,\n/*\n*************************************************************\n* The business center calendar used to adjust the pricing   *\n* dates, e.g. \"GBLO\".                                       *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegPaymentStreamPricingBusinessCenter = 41562,\n/*\n************************************************************\n* Secondary time unit associated with the payment stream's *\n* floating rate index curve.                               *\n************************************************************\n*/\n  LegPaymentStreamRateIndex2CurveUnit = 41563,\n/*\n***********************************************************\n* Secondary time unit multiplier for the payment stream's *\n* floating rate index curve.                              *\n***********************************************************\n*/\n  LegPaymentStreamRateIndex2CurvePeriod = 41564,\n/*\n******************************************************\n* Specifies the location of the floating rate index. *\n******************************************************\n*/\n  LegPaymentStreamRateIndexLocation = 41565,\n/*\n****************************************************************\n* This is the weather Cooling Degree Days (CDD), Heating       *\n* Degree Days (HDD) or HDD index level specified as the number *\n* of (amount of) weather index units specified by the parties  *\n* in the related confirmation.                                 *\n****************************************************************\n*/\n  LegPaymentStreamRateIndexLevel = 41566,\n/*\n******************************************************\n* The unit of measure (UOM) of the rate index level. *\n******************************************************\n*/\n  LegPaymentStreamRateIndexUnitOfMeasure = 41567,\n/*\n***********************************************************\n* Specifies how weather index units are to be calculated. *\n***********************************************************\n*/\n  LegPaymentStreamSettlLevel = 41568,\n/*\n**************************************************************\n* This is the weather Cooling Degree Days (CDD), Heating     *\n* Degree Days (HDD) or HDD reference level specified as the  *\n* number of (amount of) weather index units specified by the *\n* parties in the related confirmation.                       *\n**************************************************************\n*/\n  LegPaymentStreamReferenceLevel = 41569,\n/*\n**********************************************************\n* The unit of measure (UOM) of the rate reference level. *\n**********************************************************\n*/\n  LegPaymentStreamReferenceLevelUnitOfMeasure = 41570,\n/*\n************************************************************\n* When set to 'Y', it indicates that the weather reference *\n* level equals zero.                                       *\n************************************************************\n*/\n  LegPaymentStreamReferenceLevelEqualsZeroIndicator = 41571,\n/*\n****************************************************************\n* Specifies the currency of the floating rate spread. Uses ISO *\n* 4217 currency codes.                                         *\n****************************************************************\n*/\n  LegPaymentStreamRateSpreadCurrency = 41572,\n/*\n************************************************************\n* Specifies the unit of measure (UOM) of the floating rate *\n* spread.                                                  *\n************************************************************\n*/\n  LegPaymentStreamRateSpreadUnitOfMeasure = 41573,\n/*\n***************************************************************\n* The number to be multiplied by the derived floating rate of *\n* the leg's payment stream in order to arrive at the payment  *\n* rate. If omitted, the floating rate conversion factor is 1. *\n***************************************************************\n*/\n  LegPaymentStreamRateConversionFactor = 41574,\n/*\n**************************************************************\n* Identifies whether the rate spread is an absolute value to *\n* be added to the index rate or a percentage of the index    *\n* rate.                                                      *\n**************************************************************\n*/\n  LegPaymentStreamRateSpreadType = 41575,\n/*\n****************************************************************\n* The floating rate determined at the most recent reset. The   *\n* rate is expressed in decimal form, e.g. 5% is represented as *\n* 0.05.                                                        *\n****************************************************************\n*/\n  LegPaymentStreamLastResetRate = 41576,\n/*\n****************************************************************\n* The floating rate determined at the final reset. The rate is *\n* expressed in decimal form, e.g. 5% is represented as 0.05.   *\n****************************************************************\n*/\n  LegPaymentStreamFinalRate = 41577,\n/*\n**********************************************************\n* Time unit multiplier for the calculation lag duration. *\n**********************************************************\n*/\n  LegPaymentStreamCalculationLagPeriod = 41578,\n/*\n***********************************************************\n* Time unit associated with the calculation lag duration. *\n***********************************************************\n*/\n  LegPaymentStreamCalculationLagUnit = 41579,\n/*\n****************************************************************\n* Time unit multiplier for the relative first observation date *\n* offset.                                                      *\n****************************************************************\n*/\n  LegPaymentStreamFirstObservationDateOffsetPeriod = 41580,\n/*\n************************************************************\n* Time unit associated with the relative first observation *\n* date offset.                                             *\n************************************************************\n*/\n  LegPaymentStreamFirstObservationDateOffsetUnit = 41581,\n/*\n*********************************************\n* Specifies the commodity pricing day type. *\n*********************************************\n*/\n  LegPaymentStreamPricingDayType = 41582,\n/*\n*************************************\n* The distribution of pricing days. *\n*************************************\n*/\n  LegPaymentStreamPricingDayDistribution = 41583,\n/*\n************************************************************\n* The number of days over which pricing should take place. *\n************************************************************\n*/\n  LegPaymentStreamPricingDayCount = 41584,\n/*\n*****************************************************************\n* Specifies the business calendar to use for pricing.           *\n* See                                                           *\n* http://www.fpml.org/coding-scheme/commodity-business-calendar *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStreamPricingBusinessCalendar = 41585,\n/*\n***************************************************************\n* The business day convention used to adjust the payment      *\n* stream's pricing dates. Used only to override the business  *\n* day convention specified in the LegDateAdjustment component *\n* within the InstrumentLeg component.                         *\n***************************************************************\n*/\n  LegPaymentStreamPricingBusinessDayConvention = 41586,\n/*\n**************************************************************************\n* Specifies the source or legal framework for the risk                   *\n* apportionment.                                                         *\n* See                                                                    *\n* http://www.fixtradingcommunity.org/codelists#Risk_Apportionment_Source *\n* for the details of the external code list.                             *\n**************************************************************************\n*/\n  UnderlyingDeliveryStreamRiskApportionmentSource = 41587,\n/*\n****************************************************************\n* Specifies the format of the commodities settlement start and *\n* end times.                                                   *\n****************************************************************\n*/\n  StreamCommoditySettlTimeType = 41588,\n/*\n*********************************************************\n* The adjusted or unadjusted fixed stream payment date. *\n*********************************************************\n*/\n  LegPaymentStreamPaymentDate = 41590,\n/*\n**************************************************************\n* Specifies the type of payment date. When specified it      *\n* applies not only to the current date but to all subsequent *\n* dates in the group until overridden with a new type.       *\n**************************************************************\n*/\n  LegPaymentStreamPaymentDateType = 41591,\n/*\n********************************************************\n* When set to 'Y', it indicates that payment dates are *\n* specified in the relevant master agreement.          *\n********************************************************\n*/\n  LegPaymentStreamMasterAgreementPaymentDatesIndicator = 41592,\n/*\n********************************************************\n* The adjusted or unadusted fixed stream pricing date. *\n********************************************************\n*/\n  LegPaymentStreamPricingDate = 41594,\n/*\n**************************************************************\n* Specifies the type of pricing date. When specified it      *\n* applies not only to the current date but to all subsequent *\n* dates in the group until overridden with a new type.       *\n**************************************************************\n*/\n  LegPaymentStreamPricingDateType = 41595,\n/*\n******************************************************\n* The day of the week on which pricing takes place.. *\n******************************************************\n*/\n  LegPaymentStreamPricingDayOfWeek = 41597,\n/*\n************************************************************\n* The occurrence of the day of week on which pricing takes *\n* place.                                                   *\n************************************************************\n*/\n  LegPaymentStreamPricingDayNumber = 41598,\n/*\n**************************************\n* A named string value referenced by *\n* UnderlyingSettlTermXIDRef(41315).  *\n**************************************\n*/\n  LegPhysicalSettlTermXID = 41600,\n/*\n************************************************************\n* Specifies the currency of physical settlement.  Uses ISO *\n* 4217 currency codes.                                     *\n************************************************************\n*/\n  LegPhysicalSettlCurency = 41601,\n/*\n****************************************************************\n* The number of business days used in the determination of     *\n* physical settlement. Its precise meaning is dependant on the *\n* context in which this is used.                               *\n****************************************************************\n*/\n  LegPhysicalSettlBusinessDays = 41602,\n/*\n*************************************************************\n* A maximum number of business days. Its precise meaning is *\n* dependant on the context in which this element is used.   *\n* Intended to be used to limit a particular ISDA fallback   *\n* provision.                                                *\n*************************************************************\n*/\n  LegPhysicalSettlMaximumBusinessDays = 41603,\n/*\n******************************************************************************\n* Specifies the type of delivery obligation applicable for                   *\n* physical settlement.                                                       *\n* See                                                                        *\n* http://www.fixptradingcommunity.org/codelists#Deliverable_Obligation_Types *\n* for code list for applicable deliverable obligation types.                 *\n******************************************************************************\n*/\n  LegPhysicalSettlDeliverableObligationType = 41605,\n/*\n*****************************************************************************\n* Physical settlement delivery obligation value appropriate to              *\n* LegPhysicalSettlDeliverableObligationType(41605).                         *\n* See                                                                       *\n* http://www.fixtradingcommunity.org/codelists#Deliverable_Obligation_Types *\n* for code list for applicable deliverable obligation types.                *\n*****************************************************************************\n*/\n  LegPhysicalSettlDeliverableObligationValue = 41606,\n/*\n**************************************************************\n* The business center calendar used to adjust the pricing or *\n* fixing date, e.g. \"GBLO\".                                  *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  LegPricingDateBusinessCenter = 41608,\n/*\n******************************************\n* The unadjusted pricing or fixing date. *\n******************************************\n*/\n  LegPricingDateUnadjusted = 41609,\n/*\n*************************************************************\n* The business day convention used to adjust the pricing or *\n* fixing date. Used only to override the business day       *\n* convention specified in the LegDateAdjustment component   *\n* within the InstrumentLeg component.                       *\n*************************************************************\n*/\n  LegPricingDateBusinessDayConvention = 41610,\n/*\n****************************************\n* The adjusted pricing or fixing date. *\n****************************************\n*/\n  LegPricingDateAdjusted = 41611,\n/*\n********************************************\n* The local market pricing or fixing time. *\n********************************************\n*/\n  LegPricingTime = 41612,\n/*\n****************************************************************\n* Specifies the business center for determining the pricing or *\n* fixing time. See                                             *\n* http://www.fpml.org/coding-scheme/business-center for        *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegPricingTimeBusinessCenter = 41613,\n/*\n****************************************************************\n* A newspaper or electronic news service that may publish      *\n* relevant information used in the determination of whether or *\n* not a credit event has occurred.                             *\n****************************************************************\n*/\n  LegProtectionTermEventNewsSource = 41615,\n/*\n*********************************************\n* A named string value referenced from      *\n* UnderlyingLegProtectionTermXIDRef(41314). *\n*********************************************\n*/\n  LegProtectionTermXID = 41617,\n/*\n***********************************************\n* The notional amount of protection coverage. *\n***********************************************\n*/\n  LegProtectionTermNotional = 41618,\n/*\n**************************************************************\n* The currency of LegProtectionTermNotional(41618). Uses ISO *\n* 4217 currency codes.                                       *\n**************************************************************\n*/\n  LegProtectionTermCurrency = 41619,\n/*\n***************************************************************\n* The notifying party is the party that notifies the other    *\n* party when a credit event has occurred by means of a credit *\n* event notice. If more than one party is referenced as being *\n* the notifying party then either party may notify the other  *\n* of a credit event occurring.                                *\n* LegProtectionTermSellerNotifies(41620)=Y indicates that the *\n* seller notifies.                                            *\n***************************************************************\n*/\n  LegProtectionTermSellerNotifies = 41620,\n/*\n***************************************************************\n* The notifying party is the party that notifies the other    *\n* party when a credit event has occurred by means of a credit *\n* event notice. If more than one party is referenced as being *\n* the notifying party then either party may notify the other  *\n* of a credit event occurring.                                *\n* LegProtectionTermBuyerNotifies(41621)=Y indicates that the  *\n* buyer notifies.                                             *\n***************************************************************\n*/\n  LegProtectionTermBuyerNotifies = 41621,\n/*\n****************************************************************\n* When used, the business center indicates the local time of   *\n* the business center that replaces the Greenwich Mean Time in *\n* Section 3.3 of the 2003 ISDA Credit Derivatives Definitions. *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegProtectionTermEventBusinessCenter = 41622,\n/*\n**************************************************************\n* Indicates whether ISDA defined Standard Public Sources are *\n* applicable (LegProtectionTermStandardSources(41623)=Y) or  *\n* not.                                                       *\n**************************************************************\n*/\n  LegProtectionTermStandardSources = 41623,\n/*\n**********************************************************\n* The minimum number of the specified public information *\n* sources that must publish information that reasonably  *\n* confirms that a credit event has occurred. The market  *\n* convention is two.                                     *\n**********************************************************\n*/\n  LegProtectionTermEventMinimumSources = 41624,\n/*\n****************************************************************************\n* Specifies the type of credit event applicable to the                     *\n* protection terms.                                                        *\n* See                                                                      *\n* http://www.fixtradingcommunity.org/codelists#Protection_Term_Event_Types *\n* for code list of applicable event types.                                 *\n****************************************************************************\n*/\n  LegProtectionTermEventType = 41626,\n/*\n*****************************************************************************\n* Specifies the protection term event value appropriate to                  *\n* LegProtectionTermEventType(41626).  See                                   *\n* http:///www.fixtradingcommunity.org/codelists#Protection_Term_Event_Types *\n* for applicable event type values.                                         *\n*****************************************************************************\n*/\n  LegProtectionTermEventValue = 41627,\n/*\n*************************************************************\n* Applicable currency if the event value is an amount. Uses *\n* ISO 4217 currency codes.                                  *\n*************************************************************\n*/\n  LegProtectionTermEventCurrency = 41628,\n/*\n****************************************************\n* Time unit multiplier for protection term events. *\n****************************************************\n*/\n  LegProtectionTermEventPeriod = 41629,\n/*\n*****************************************************\n* Time unit associated with protection term events. *\n*****************************************************\n*/\n  LegProtectionTermEventUnit = 41630,\n/*\n******************************************************\n* Specifies the day type for protection term events. *\n******************************************************\n*/\n  LegProtectionTermEventDayType = 41631,\n/*\n***********************************************************\n* Rate source for events that specify a rate source, e.g. *\n* floating rate interest shortfall.                       *\n***********************************************************\n*/\n  LegProtectionTermEventRateSource = 41632,\n/*\n**********************************************************\n* Specifies the protection term event qualifier. Used to *\n* further qualify LegProtectionTermEventType(41626).     *\n**********************************************************\n*/\n  LegProtectionTermEventQualifier = 41634,\n/*\n*********************************************************************************\n* Specifies the type of obligation applicable to the                            *\n* protection terms.                                                             *\n* See                                                                           *\n* http://www.fixtradingcommunity.org/codelists#Protection_Term_Obligation_Types *\n* for code list of applicable obligation types.                                 *\n*********************************************************************************\n*/\n  LegProtectionTermObligationType = 41636,\n/*\n*********************************************************************************\n* The value associated with the protection term obligation                      *\n* specified in LegProtectionTermObligationType(41636). See                      *\n* http://www.fixtradingcommunity.org/codelists#Protection_Term_Obligation_Types *\n* for applicable obligation type values.                                        *\n*********************************************************************************\n*/\n  LegProtectionTermObligationValue = 41637,\n/*\n*************************************************************\n* The adjusted or unadjusted fixed calculation period date. *\n*************************************************************\n*/\n  LegStreamCalculationPeriodDate = 41639,\n/*\n****************************************************************\n* Specifies the type of fixed calculation period date. When    *\n* specified it applies not only to the current date but to all *\n* subsequent dates in the group until overridden with a new    *\n* type.                                                        *\n****************************************************************\n*/\n  LegStreamCalculationPeriodDateType = 41640,\n/*\n***************************************************************\n* Identifier of this calculation period for cross referencing *\n* elsewhere in the message.                                   *\n***************************************************************\n*/\n  LegStreamCalculationPeriodDatesXID = 41641,\n/*\n*****************************************************\n* Cross reference to another calculation period for *\n* duplicating its properties.                       *\n*****************************************************\n*/\n  LegStreamCalculationPeriodDatesXIDRef = 41642,\n/*\n****************************************************************\n* When specified and set to 'Y', it indicates that the first   *\n* calculation period should run from the effective date to the *\n* end of the calendar period in which the effective date falls *\n* (e.g. Jan 15 - Jan 31 if the calculation periods are one     *\n* month long and effective date is Jan 15.). If 'N' or not     *\n* specified, it indicates that the first calculation period    *\n* should run from the effective date for one whole period      *\n* (e.g. Jan 15 to Feb 14 if the calculation periods are one    *\n* month long and the effective date is Jan 15.).               *\n****************************************************************\n*/\n  LegStreamCalculationBalanceOfFirstPeriod = 41643,\n/*\n*********************************************************\n* Time unit multiplier for the length of time after the *\n* publication of the data when corrections can be made. *\n*********************************************************\n*/\n  LegStreamCalculationCorrectionPeriod = 41644,\n/*\n**********************************************************\n* Time unit associated with the length of time after the *\n* publication of the data when corrections can be made.  *\n**********************************************************\n*/\n  LegStreamCalculationCorrectionUnit = 41645,\n/*\n*************************************************************\n* The business center calendar used to adjust the commodity *\n* delivery date, e.g. \"GBLO\".                               *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  LegStreamCommoditySettlBusinessCenter = 41647,\n/*\n************************************************************\n* Specifies the general base type of the commodity traded. *\n* Where possible, this should follow the naming convention *\n* used in the 2005 ISDA Commodity Definitions.             *\n************************************************************\n*/\n  LegStreamCommodityBase = 41648,\n/*\n******************************************************************\n* Specifies the type of commodity product.                       *\n* For coal see                                                   *\n* http://www.fpml.org/coding-scheme/commodity-coal-product-type  *\n* for values.                                                    *\n* For metals see                                                 *\n* http://www.fpml.org/coding-scheme/commodity-metal-product-type *\n* for values.                                                    *\n* For bullion see                                                *\n* http://www.fixtradingcommunity.org/codelists#Bullion_Types     *\n* for the external code list of bullion types.                   *\n******************************************************************\n*/\n  LegStreamCommodityType = 41649,\n/*\n******************************************************\n* Specifies the market identifier for the commodity. *\n******************************************************\n*/\n  LegStreamCommoditySecurityID = 41650,\n/*\n****************************************************\n* Identifies the class or source of the            *\n* LegStreamCommoditySecurityIDSource(41650) value. *\n****************************************************\n*/\n  LegStreamCommoditySecurityIDSource = 41651,\n/*\n***************************************\n* Description of the commodity asset. *\n***************************************\n*/\n  LegStreamCommodityDesc = 41652,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedLegStreamCommodityDesc(41654) field.   *\n*************************************************\n*/\n  EncodedLegStreamCommodityDescLen = 41653,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* LegStreamCommodityDesc(41652) field in the encoded format   *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the LegStreamCommodityDesc(41652) field.                    *\n***************************************************************\n*/\n  EncodedLegStreamCommodityDesc = 41654,\n/*\n*****************************************************\n* The unit of measure (UOM) of the commodity asset. *\n*****************************************************\n*/\n  LegStreamCommodityUnitOfMeasure = 41655,\n/*\n************************************************************\n* Identifies the currency of the commodity asset. Uses ISO *\n* 4217 currency codes.                                     *\n************************************************************\n*/\n  LegStreamCommodityCurrency = 41656,\n/*\n**********************************************************\n* Identifies the exchange where the commodity is traded. *\n**********************************************************\n*/\n  LegStreamCommodityExchange = 41657,\n/*\n**********************************************************************\n* Identifies the source of rate information used for                 *\n* commodities.                                                       *\n* See                                                                *\n* http://www.fixtradingcommunity.org/codelists#Commodity_Rate_Source *\n* for code list of applicable sources.                               *\n**********************************************************************\n*/\n  LegStreamCommodityRateSource = 41658,\n/*\n*********************************************************\n* Identifies the reference \"page\" from the rate source. *\n*********************************************************\n*/\n  LegStreamCommodityRateReferencePage = 41659,\n/*\n*****************************************************\n* Identifies the page heading from the rate source. *\n*****************************************************\n*/\n  LegStreamCommodityRateReferencePageHeading = 41660,\n/*\n********************************************************************\n* Specifies the commodity data or information provider.            *\n* See                                                              *\n* http://www.fpml.org/coding-scheme/commodity-information-provider *\n* for values.                                                      *\n********************************************************************\n*/\n  LegStreamDataProvider = 41661,\n/*\n****************************************************************************\n* Specifies how the pricing or rate setting of the trade is to             *\n* be determined or based upon.                                             *\n* See                                                                      *\n* http://www.fixtradingcommunity.org/codelists#Commodity_Rate_Pricing_Type *\n* for code list of applicable commodity pricing types.                     *\n****************************************************************************\n*/\n  LegStreamCommodityPricingType = 41662,\n/*\n*******************************************************\n* Time unit multiplier for the nearby settlement day. *\n*******************************************************\n*/\n  LegStreamCommodityNearbySettlDayPeriod = 41663,\n/*\n********************************************************\n* Time unit associated with the nearby settlement day. *\n********************************************************\n*/\n  LegStreamCommodityNearbySettlDayUnit = 41664,\n/*\n*******************************************\n* The unadjusted commodity delivery date. *\n*******************************************\n*/\n  LegStreamCommoditySettlDateUnadjusted = 41665,\n/*\n************************************************************\n* The business day convention used to adjust the commodity *\n* delivery date. Used only to override the business day    *\n* convention specified in the LegDateAdjustment component  *\n* within the InstrumentLeg component.                      *\n************************************************************\n*/\n  LegStreamCommoditySettlDateBusinessDayConvention = 41666,\n/*\n*****************************************\n* The adjusted commodity delivery date. *\n*****************************************\n*/\n  LegStreamCommoditySettlDateAdjusted = 41667,\n/*\n**********************************************************\n* Specifies a fixed single month for commodity delivery. *\n**********************************************************\n*/\n  LegStreamCommoditySettlMonth = 41668,\n/*\n**************************************************************\n* Time unit multiplier for the commodity delivery date roll. *\n**************************************************************\n*/\n  LegStreamCommoditySettlDateRollPeriod = 41669,\n/*\n***************************************************************\n* Time unit associated with the commodity delivery date roll. *\n***************************************************************\n*/\n  LegStreamCommoditySettlDateRollUnit = 41670,\n/*\n***************************************************\n* Specifies the commodity delivery roll day type. *\n***************************************************\n*/\n  LegStreamCommoditySettlDayType = 41671,\n/*\n*************************************************************\n* Identifier of this stream commodity for cross referencing *\n* elsewhere in the message.                                 *\n*************************************************************\n*/\n  LegStreamCommodityXID = 41672,\n/*\n*************************************************************\n* Reference to a stream commodity elsewhere in the message. *\n*************************************************************\n*/\n  LegStreamCommodityXIDRef = 41673,\n/*\n**********************************************************\n* Alternate security identifier value for the commodity. *\n**********************************************************\n*/\n  LegStreamCommodityAltID = 41675,\n/*\n*************************************************************\n* Identifies the class or source of the alternate commodity *\n* security identifier.                                      *\n*************************************************************\n*/\n  LegStreamCommodityAltIDSource = 41676,\n/*\n*****************************************\n* Specifies the data source identifier. *\n*****************************************\n*/\n  LegStreamCommodityDataSourceID = 41678,\n/*\n*************************************************\n* Specifies the type of data source identifier. *\n*************************************************\n*/\n  LegStreamCommodityDataSourceIDType = 41679,\n/*\n****************************************************\n* Specifies the day or group of days for delivery. *\n****************************************************\n*/\n  LegStreamCommoditySettlDay = 41681,\n/*\n***********************************\n* Sum of the hours specified in   *\n* LegStreamCommoditySettlTimeGrp. *\n***********************************\n*/\n  LegStreamCommoditySettlTotalHours = 41682,\n/*\n**********************************************************\n* The start time for commodity settlement where delivery *\n* occurs over time. The time format is specified by the  *\n* settlement time type.                                  *\n**********************************************************\n*/\n  LegStreamCommoditySettlStart = 41684,\n/*\n***************************************************************\n* The end time for commodity settlement where delivery occurs *\n* over time. The time format is specified by the settlement   *\n* time type.                                                  *\n***************************************************************\n*/\n  LegStreamCommoditySettlEnd = 41685,\n/*\n**************************************************************\n* Specifies the country where delivery takes place. Uses ISO *\n* 3166 2-character country code.                             *\n**************************************************************\n*/\n  LegStreamCommoditySettlCountry = 41687,\n/*\n*********************************************************************\n* Commodity delivery timezone specified as \"prevailing\" rather      *\n* than \"standard\" or \"daylight\".                                    *\n* See                                                               *\n* http://www.fixtradingcommunity.org/codelists#Prevailing_Timezones *\n* for code list of applicable prevailing timezones.                 *\n*********************************************************************\n*/\n  LegStreamCommoditySettlTimeZone = 41688,\n/*\n***********************************************\n* Specifies the commodity delivery flow type. *\n***********************************************\n*/\n  LegStreamCommoditySettlFlowType = 41689,\n/*\n*************************************************************\n* Delivery quantity associated with this settlement period. *\n*************************************************************\n*/\n  LegStreamCommoditySettlPeriodNotional = 41690,\n/*\n****************************************************************\n* Specifies the unit of measure (UOM) of the delivery quantity *\n* associated with this settlement period.                      *\n****************************************************************\n*/\n  LegStreamCommoditySettlPeriodNotionalUnitOfMeasure = 41691,\n/*\n*************************************************************\n* Time unit multiplier for the settlement period frequency. *\n*************************************************************\n*/\n  LegStreamCommoditySettlPeriodFrequencyPeriod = 41692,\n/*\n**************************************************************\n* Time unit associated with the settlement period frequency. *\n**************************************************************\n*/\n  LegStreamCommoditySettlPeriodFrequencyUnit = 41693,\n/*\n********************************\n* The settlement period price. *\n********************************\n*/\n  LegStreamCommoditySettlPeriodPrice = 41694,\n/*\n******************************************************\n* The settlement period price unit of measure (UOM). *\n******************************************************\n*/\n  LegStreamCommoditySettlPeriodPriceUnitOfMeasure = 41695,\n/*\n**************************************************************\n* The currency of the settlement period price. Uses ISO 4217 *\n* currency codes.                                            *\n**************************************************************\n*/\n  LegStreamCommoditySettlPeriodPriceCurrency = 41696,\n/*\n*************************************************************\n* Indicates whether holidays are included in the settlement *\n* periods. Required for electricity contracts.              *\n*************************************************************\n*/\n  LegStreamCommoditySettlHolidaysProcessingInstruction = 41697,\n/*\n**************************************************************\n* Identifier of this settlement period for cross referencing *\n* elsewhere in the message.                                  *\n**************************************************************\n*/\n  LegStreamCommoditySettlPeriodXID = 41698,\n/*\n****************************************************************\n* Cross reference to another settlement period for duplicating *\n* its properties.                                              *\n****************************************************************\n*/\n  LegStreamCommoditySettlPeriodXIDRef = 41699,\n/*\n****************************************************************\n* Identifier of this LegStream for cross referencing elsewhere *\n* in the message.                                              *\n****************************************************************\n*/\n  LegStreamXID = 41700,\n/*\n********************************************************\n* Identifies the source scheme of the                  *\n* UnderlyingAdditionalTermBondSecurityID(41341) value. *\n********************************************************\n*/\n  UnderlyingAdditionalTermBondSecurityIDSource = 41701,\n/*\n*****************************************************\n* Cross reference to another LegStream notional for *\n* duplicating its properties.                       *\n*****************************************************\n*/\n  LegStreamNotionalXIDRef = 41702,\n/*\n*******************************************************\n* Time unit multiplier for the swap stream's notional *\n* frequency.                                          *\n*******************************************************\n*/\n  LegStreamNotionalFrequencyPeriod = 41703,\n/*\n********************************************************\n* Time unit associated with the swap stream's notional *\n* frequency.                                           *\n********************************************************\n*/\n  LegStreamNotionalFrequencyUnit = 41704,\n/*\n************************************************************\n* The commodity's notional or quantity delivery frequency. *\n************************************************************\n*/\n  LegStreamNotionalCommodityFrequency = 41705,\n/*\n**********************************************************\n* Specifies the delivery quantity unit of measure (UOM). *\n**********************************************************\n*/\n  LegStreamNotionalUnitOfMeasure = 41706,\n/*\n**************************************************************\n* Specifies the total notional or delivery quantity over the *\n* term of the contract.                                      *\n**************************************************************\n*/\n  LegStreamTotalNotional = 41707,\n/*\n**************************************************************\n* Specifies the unit of measure (UOM) for the total notional *\n* or delivery quantity over the term of the contract.        *\n**************************************************************\n*/\n  LegStreamTotalNotionalUnitOfMeasure = 41708,\n/*\n****************************\n* Description of the bond. *\n****************************\n*/\n  UnderlyingAdditionalTermBondDesc = 41709,\n/*\n*********************************************************\n* Byte length of encoded (non-ASCII characters)         *\n* EncodedUnderlyingAdditionalTermBondDesc(41711) field. *\n*********************************************************\n*/\n  EncodedUnderlyingAdditionalTermBondDescLen = 41710,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* UnderlyingAdditionalTermBondDesc(41709) field in the encoded *\n* format specified via the MessageEncoding (347) field. If     *\n* used, the ASCII (English) representation should also be      *\n* specified in the UnderlyingAdditionalTermBondDesc(41709)     *\n* field.                                                       *\n****************************************************************\n*/\n  EncodedUnderlyingAdditionalTermBondDesc = 41711,\n/*\n************************************************************\n* Specifies the currency the bond value is denominated in. *\n* Uses ISO 4217 currency codes.                            *\n************************************************************\n*/\n  UnderlyingAdditionalTermBondCurrency = 41712,\n/*\n***********************************************************\n* Cross reference to the ordinal observation as specified *\n* either in the UnderlyingComplexEventScheduleGrp or      *\n* UnderlyingComplexEventPeriodDateGrp components.         *\n***********************************************************\n*/\n  UnderlyingComplexEventAveragingObservationNumber = 41714,\n/*\n*******************************************************\n* The weight factor to be applied to the observation. *\n*******************************************************\n*/\n  UnderlyingComplexEventAveragingWeight = 41715,\n/*\n*******************************************************************\n* Specifies the type of credit event.                             *\n* See                                                             *\n* http://www.fixtradingcommunity.org/codelists#Credit_Event_Types *\n* for code list of applicable event types.                        *\n*******************************************************************\n*/\n  UnderlyingComplexEventCreditEventType = 41717,\n/*\n*******************************************************************\n* The credit event value appropriate to                           *\n* UnderlyingComplexEventCreditEventType(41717).                   *\n* See                                                             *\n* http://www.fixtradingcommunity.org/codelists#Credit_Event_Types *\n* for applicable event type values.                               *\n*******************************************************************\n*/\n  UnderlyingComplexEventCreditEventValue = 41718,\n/*\n***************************************************************\n* Specifies the applicable currency when                      *\n* UnderlyingComplexEventCreditEventValue(41718) is an amount. *\n* Uses ISO 4217 currency codes.                               *\n***************************************************************\n*/\n  UnderlyingComplexEventCreditEventCurrency = 41719,\n/*\n***************************************************\n* Time unit multiplier for complex credit events. *\n***************************************************\n*/\n  UnderlyingComplexEventCreditEventPeriod = 41720,\n/*\n****************************************************\n* Time unit associated with complex credit events. *\n****************************************************\n*/\n  UnderlyingComplexEventCreditEventUnit = 41721,\n/*\n*********************************************************\n* Specifies the day type for the complex credit events. *\n*********************************************************\n*/\n  UnderlyingComplexEventCreditEventDayType = 41722,\n/*\n*************************************************************************\n* Identifies the source of rate information used for credit             *\n* events.                                                               *\n* See                                                                   *\n* http://www.fixtradingcommunity.org/codelists#Credit_Event_Rate_Source *\n* for code list of applicable sources.                                  *\n*************************************************************************\n*/\n  UnderlyingComplexEventCreditEventRateSource = 41723,\n/*\n****************************************************************\n* Specifies a complex event qualifier. Used to further qualify *\n* UnderlyingComplexEventCreditEventType(41717).                *\n****************************************************************\n*/\n  UnderlyingComplexEventCreditEventQualifier = 41725,\n/*\n***************************************************\n* The averaging date for an Asian option.         *\n* The trigger date for a Barrier or Knock option. *\n***************************************************\n*/\n  UnderlyingComplexEventPeriodDate = 41727,\n/*\n*******************************************\n* The averaging time for an Asian option. *\n*******************************************\n*/\n  UnderlyingComplexEventPeriodTime = 41728,\n/*\n******************************\n* Specifies the period type. *\n******************************\n*/\n  UnderlyingComplexEventPeriodType = 41730,\n/*\n*************************************************************\n* The business center for adjusting dates and times in the  *\n* schedule or date-time group.                              *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingComplexEventBusinessCenter = 41731,\n/*\n**********************************************\n* Identifies the source of rate information. *\n**********************************************\n*/\n  UnderlyingComplexEventRateSource = 41733,\n/*\n***************************************************************\n* Indicates whether the rate source specified is a primary or *\n* secondary source.                                           *\n***************************************************************\n*/\n  UnderlyingComplexEventRateSourceType = 41734,\n/*\n*************************************************************\n* Identifies the reference page from the rate source.       *\n* For FX, the reference page to the spot rate is to be used *\n* for the reference FX spot rate.                           *\n* When UnderlyingComplexEventRateSource(41733) = 3 (ISDA    *\n* Settlement Rate Option) this contains the value from the  *\n* scheme that reflects the terms of the Annex A to the ISDA *\n* 1998 FX and Currency Option Definitions. See:             *\n* http://www.fpml.org/coding-scheme/settlement-rate-option. *\n*************************************************************\n*/\n  UnderlyingComplexEventReferencePage = 41735,\n/*\n***************************************************************\n* Identifies the reference page heading from the rate source. *\n***************************************************************\n*/\n  UnderlyingComplexEventReferencePageHeading = 41736,\n/*\n*************************************************************\n* The business center calendar is used to adjust the event  *\n* date, e.g. \"GBLO\".                                        *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingComplexEventDateBusinessCenter = 41738,\n/*\n**************************************\n* The unadjusted complex event date. *\n**************************************\n*/\n  UnderlyingComplexEventDateUnadjusted = 41739,\n/*\n*****************************************************************\n* Specifies the anchor date when the complex event date is      *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingComplexEventDateRelativeTo = 41740,\n/*\n******************************************************\n* Time unit multiplier for the relative date offset. *\n******************************************************\n*/\n  UnderlyingComplexEventDateOffsetPeriod = 41741,\n/*\n*******************************************************\n* Time unit associated with the relative date offset. *\n*******************************************************\n*/\n  UnderlyingComplexEventDateOffsetUnit = 41742,\n/*\n*******************************************************\n* Specifies the day type of the relative date offset. *\n*******************************************************\n*/\n  UnderlyingComplexEventDateOffsetDayType = 41743,\n/*\n***************************************************************\n* The business day convention used to adjust the event date.  *\n* Used only to override the business day convention specified *\n* in the UnderlyingDateAdjustment component within the        *\n* UnderlyingInstrument component.                             *\n***************************************************************\n*/\n  UnderlyingComplexEventDateBusinessDayConvention = 41744,\n/*\n************************************\n* The adjusted complex event date. *\n************************************\n*/\n  UnderlyingComplexEventDateAdjusted = 41745,\n/*\n*********************************\n* The local market fixing time. *\n*********************************\n*/\n  UnderlyingComplexEventFixingTime = 41746,\n/*\n****************************************************************\n* The business center for determining the actual fixing times. *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingComplexEventFixingTimeBusinessCenter = 41747,\n/*\n****************************************************************\n* A newspaper or electronic news service that may publish      *\n* relevant information used in the determination of whether or *\n* not a credit event has occurred.                             *\n****************************************************************\n*/\n  UnderlyingComplexEventCreditEventSource = 41749,\n/*\n***********************************\n* The start date of the schedule. *\n***********************************\n*/\n  UnderlyingComplexEventScheduleStartDate = 41751,\n/*\n*********************************\n* The end date of the schedule. *\n*********************************\n*/\n  UnderlyingComplexEventScheduleEndDate = 41752,\n/*\n*********************************************************\n* Time unit multiplier for the schedule date frequency. *\n*********************************************************\n*/\n  UnderlyingComplexEventScheduleFrequencyPeriod = 41753,\n/*\n**********************************************************\n* Time unit associated with the schedule date frequency. *\n**********************************************************\n*/\n  UnderlyingComplexEventScheduleFrequencyUnit = 41754,\n/*\n****************************************************************\n* The convention for determining the sequence of dates. It is  *\n* used in conjunction with a specified frequency. Used only to *\n* override the roll convention defined in the                  *\n* UnderlyingDateAdjustment component in UnderlyingInstrument.  *\n****************************************************************\n*/\n  UnderlyingComplexEventScheduleRollConvention = 41755,\n/*\n********************************************\n* Specifies the type of delivery schedule. *\n********************************************\n*/\n  UnderlyingDeliveryScheduleType = 41757,\n/*\n***************************************************************\n* Identifier for this instance of delivery schedule for cross *\n* referencing elsewhere in the message.                       *\n***************************************************************\n*/\n  UnderlyingDeliveryScheduleXID = 41758,\n/*\n*******************************\n* Physical delivery quantity. *\n*******************************\n*/\n  UnderlyingDeliveryScheduleNotional = 41759,\n/*\n**********************************************************\n* Specifies the delivery quantity unit of measure (UOM). *\n**********************************************************\n*/\n  UnderlyingDeliveryScheduleNotionalUnitOfMeasure = 41760,\n/*\n***************************************\n* The frequency of notional delivery. *\n***************************************\n*/\n  UnderlyingDeliveryScheduleNotionalCommodityFrequency = 41761,\n/*\n****************************************************************\n* Specifies the negative tolerance value.  The value may be an *\n* absolute quantity or a percentage, as specified in           *\n* UnderlyingDeliveryScheduleToleranceType(41765).  Percentage  *\n* value is to be expressed relative to \"1.0\" representing 100% *\n* (e.g. a value of \"0.0575\" represents 5.75%).                 *\n****************************************************************\n*/\n  UnderlyingDeliveryScheduleNegativeTolerance = 41762,\n/*\n***************************************************************\n* Specifies the positive tolerance value. The value may be an *\n* absolute quantity or a percentage, as specified in          *\n* UnderlyingDeliveryScheduleToleranceType(41765). Value may   *\n* exceed agreed upon value. Percentage value is to be         *\n* expressed relative to \"1.0\" representing 100% (e.g. a value *\n* of \"0.0575\" represents 5.75%).                              *\n***************************************************************\n*/\n  UnderlyingDeliverySchedulePositiveTolerance = 41763,\n/*\n**********************************************************\n* Specifies the tolerance value's unit of measure (UOM). *\n**********************************************************\n*/\n  UnderlyingDeliveryScheduleToleranceUnitOfMeasure = 41764,\n/*\n***************************************\n* Specifies the tolerance value type. *\n***************************************\n*/\n  UnderlyingDeliveryScheduleToleranceType = 41765,\n/*\n**************************************************************\n* Specifies the country where delivery takes place. Uses ISO *\n* 3166 2-character country code.                             *\n**************************************************************\n*/\n  UnderlyingDeliveryScheduleSettlCountry = 41766,\n/*\n*********************************************************************\n* Delivery timezone specified as \"prevailing\" rather than           *\n* \"standard\" or \"daylight\".                                         *\n* See                                                               *\n* http://www.fixtradingcommunity.org/codelists#Prevailing_Timezones *\n* for code list of applicable prevailing timezones.                 *\n*********************************************************************\n*/\n  UnderlyingDeliveryScheduleSettlTimeZone = 41767,\n/*\n*************************************\n* Specifies the delivery flow type. *\n*************************************\n*/\n  UnderlyingDeliveryScheduleSettlFlowType = 41768,\n/*\n*************************************************************\n* Indicates whether holidays are included in the settlement *\n* periods. Required for electricity contracts.              *\n*************************************************************\n*/\n  UnderlyingDeliveryScheduleSettlHolidaysProcessingInstruction = 41769,\n/*\n****************************************************\n* Specifies the day or group of days for delivery. *\n****************************************************\n*/\n  UnderlyingDeliveryScheduleSettlDay = 41771,\n/*\n*****************************************************\n* The sum of the total hours specified in the       *\n* UnderlyingDeliveryScheduleSettlTimeGrp component. *\n*****************************************************\n*/\n  UnderlyingDeliveryScheduleSettlTotalHours = 41772,\n/*\n**************************************************************\n* The scheduled start time for the delivery of the commodity *\n* where delivery occurs over specified times. The format of  *\n* the time value is specified in                             *\n* UnderlyingDeliveryScheduleSettlTimeType(41776).            *\n**************************************************************\n*/\n  UnderlyingDeliveryScheduleSettlStart = 41774,\n/*\n*************************************************************\n* The scheduled end time for the delivery of the commodity  *\n* where delivery occurs over specified times. The format of *\n* the time value is specified in                            *\n* UnderlyingDeliveryScheduleSettlTimeType(41776).           *\n*************************************************************\n*/\n  UnderlyingDeliveryScheduleSettlEnd = 41775,\n/*\n***********************************************************\n* Specifies the format of the delivery start and end time *\n* values.                                                 *\n***********************************************************\n*/\n  UnderlyingDeliveryScheduleSettlTimeType = 41776,\n/*\n******************************************\n* Specifies the type of delivery stream. *\n******************************************\n*/\n  UnderlyingDeliveryStreamType = 41777,\n/*\n******************************************\n* The name of the oil delivery pipeline. *\n******************************************\n*/\n  UnderlyingDeliveryStreamPipeline = 41778,\n/*\n************************************************************\n* The point at which the commodity will enter the delivery *\n* mechanism or pipeline.                                   *\n************************************************************\n*/\n  UnderlyingDeliveryStreamEntryPoint = 41779,\n/*\n**************************************************************\n* The point at which the commodity product will be withdrawn *\n* prior to delivery.                                         *\n**************************************************************\n*/\n  UnderlyingDeliveryStreamWithdrawalPoint = 41780,\n/*\n***************************************************************\n* The point at which the commodity product will be delivered  *\n* and received. Value specified should follow market          *\n* convention appropriate for the commodity product.           *\n* For bullion see                                             *\n* http://www.fpml.org/coding-scheme/bullion-delivery-location *\n* for values.                                                 *\n***************************************************************\n*/\n  UnderlyingDeliveryStreamDeliveryPoint = 41781,\n/*\n***************************************************************\n* Specifies under what conditions the buyer and seller should *\n* be excused of their delivery obligations.                   *\n***************************************************************\n*/\n  UnderlyingDeliveryStreamDeliveryRestriction = 41782,\n/*\n**************************************************************************\n* Specifies the electricity delivery contingency.                        *\n* See                                                                    *\n* http://www.fpml.org/coding-scheme/electricity-transmission-contingency *\n* for values.                                                            *\n**************************************************************************\n*/\n  UnderlyingDeliveryStreamDeliveryContingency = 41783,\n/*\n*****************************************************\n* The trade side value of the party responsible for *\n* electricity delivery contingency.                 *\n*****************************************************\n*/\n  UnderlyingDeliveryStreamDeliveryContingentPartySide = 41784,\n/*\n**************************************************************\n* When this element is specified and set to 'Y', delivery of *\n* the coal product is to be at its source.                   *\n**************************************************************\n*/\n  UnderlyingDeliveryStreamDeliverAtSourceIndicator = 41785,\n/*\n*******************************************************************\n* Specifies how the parties to the trade apportion                *\n* responsibility for the delivery of the commodity product.       *\n* See                                                             *\n* http://www.fixtradingcommunity.org/codelists#Risk_Apportionment *\n* for the details of the external code list.                      *\n*******************************************************************\n*/\n  UnderlyingDeliveryStreamRiskApportionment = 41786,\n/*\n******************************************\n* Specifies the title transfer location. *\n******************************************\n*/\n  UnderlyingDeliveryStreamTitleTransferLocation = 41787,\n/*\n*******************************************\n* Specifies the title transfer condition. *\n*******************************************\n*/\n  UnderlyingDeliveryStreamTitleTransferCondition = 41788,\n/*\n**************************************************************\n* A party, not necessarily of the trade, who is the Importer *\n* of Record for the purposes of paying customs duties and    *\n* applicable taxes or costs related to importation.          *\n**************************************************************\n*/\n  UnderlyingDeliveryStreamImporterOfRecord = 41789,\n/*\n****************************************************************\n* Specifies the negative tolerance value.  The value may be an *\n* absolute quantity or a percentage, as specified in           *\n* UnderlyingDeliveryStreamToleranceType(41793).  Percentage    *\n* value is to be expressed relative to \"1.0\" representing 100% *\n* (e.g. a value of \"0.0575\" represents 5.75%).                 *\n****************************************************************\n*/\n  UnderlyingDeliveryStreamNegativeTolerance = 41790,\n/*\n***************************************************************\n* Specifies the positive tolerance value. The value may be an *\n* absolute quantity or a percentage, as specified in          *\n* UnderlyingDeliveryStreamToleranceType(41793). Value may     *\n* exceed agreed upon value. Percentage value is to be         *\n* expressed relative to \"1.0\" representing 100% (e.g. a value *\n* of \"0.0575\" represents 5.75%).                              *\n***************************************************************\n*/\n  UnderlyingDeliveryStreamPositiveTolerance = 41791,\n/*\n**********************************************************\n* Specifies the tolerance value's unit of measure (UOM). *\n**********************************************************\n*/\n  UnderlyingDeliveryStreamToleranceUnitOfMeasure = 41792,\n/*\n***************************************\n* Specifies the tolerance value type. *\n***************************************\n*/\n  UnderlyingDeliveryStreamToleranceType = 41793,\n/*\n*********************************************************\n* Indicates whether the tolerance is at the seller's or *\n* buyer's option.                                       *\n*********************************************************\n*/\n  UnderlyingDeliveryStreamToleranceOptionSide = 41794,\n/*\n*************************************************************\n* The positive percent tolerance which applies to the total *\n* quantity delivered over all shipment periods.             *\n* Percentage value is to be expressed relative to \"1.0\"     *\n* representing 100% (e.g. a value of \"0.0575\" represents    *\n* 5.75%.).                                                  *\n*************************************************************\n*/\n  UnderlyingDeliveryStreamTotalPositiveTolerance = 41795,\n/*\n*************************************************************\n* The negative percent tolerance which applies to the total *\n* quantity delivered over all shipment periods.             *\n* Percentage value is to be expressed relative to \"1.0\"     *\n* representing 100% (e.g. a value of \"0.0575\" represents    *\n* 5.75%.).                                                  *\n*************************************************************\n*/\n  UnderlyingDeliveryStreamTotalNegativeTolerance = 41796,\n/*\n****************************************************************\n* If the notional quantity is specified in a unit that does    *\n* not match the unit in which the commodity reference price is *\n* quoted, the scaling or conversion factor used to convert the *\n* commodity reference price unit into the notional quantity    *\n* unit should be stated here. If there is no conversion, this  *\n* field is not intended to be used.                            *\n****************************************************************\n*/\n  UnderlyingDeliveryStreamNotionalConversionFactor = 41797,\n/*\n*********************************************************\n* The transportation equipment with which the commodity *\n* product will be delivered and received.               *\n*********************************************************\n*/\n  UnderlyingDeliveryStreamTransportEquipment = 41798,\n/*\n**************************************************************\n* A reference to the party able to choose whether the gas is *\n* delivered for a particular period e.g. a swing or          *\n* interruptible contract.                                    *\n**************************************************************\n*/\n  UnderlyingDeliveryStreamElectingPartySide = 41799,\n/*\n**********************************************************************\n* Specifies the name of the attribute.                               *\n* See                                                                *\n* http://www.fixtradingcommunity.org/codelists#Asset_Attribute_Types *\n* for code list of applicable asset attribute types.                 *\n**********************************************************************\n*/\n  UnderlyingStreamAssetAttributeType = 41801,\n/*\n*****************************************\n* Specifies the value of the attribute. *\n*****************************************\n*/\n  UnderlyingStreamAssetAttributeValue = 41802,\n/*\n*********************************************************\n* The limit or lower acceptable value of the attribute. *\n*********************************************************\n*/\n  UnderlyingStreamAssetAttributeLimit = 41803,\n/*\n************************************************************\n* The delivery cycles during which the oil product will be *\n* transported in the pipeline.                             *\n************************************************************\n*/\n  UnderlyingDeliveryStreamCycleDesc = 41805,\n/*\n**********************************************************\n* Byte length of encoded (non-ASCII characters)          *\n* EncodedUnderlyingDeliveryStreamCycleDesc(41807) field. *\n**********************************************************\n*/\n  EncodedUnderlyingDeliveryStreamCycleDescLen = 41806,\n/*\n*************************************************************\n* Encoded (non-ASCII characters) representation of the      *\n* UnderlyingDeliveryStreamCycleDesc(41805) field in the     *\n* encoded format specified via the MessageEncoding (347)    *\n* field. If used, the ASCII (English) representation should *\n* also be specified in the                                  *\n* UnderlyingDeliveryStreamCycleDesc(41805) field.           *\n*************************************************************\n*/\n  EncodedUnderlyingDeliveryStreamCycleDesc = 41807,\n/*\n*******************************************************************\n* The SCoTA coal cargo origin, mining region, mine(s), mining     *\n* complex(es), loadout(s) or river dock(s) or other point(s)      *\n* of origin that seller and buyer agree are acceptable origins    *\n* for the coal product. For international coal transactions,      *\n* this is the origin of the coal product.                         *\n* See                                                             *\n* http://www.fpml.org/coding-scheme/commodity-coal-product-source *\n* for values.                                                     *\n*******************************************************************\n*/\n  UnderlyingDeliveryStreamCommoditySource = 41809,\n/*\n******************************************\n* A description of  the option exercise. *\n******************************************\n*/\n  UnderlyingExerciseDesc = 41810,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedUnderlyingExerciseDesc(41812) field.   *\n*************************************************\n*/\n  EncodedUnderlyingExerciseDescLen = 41811,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* UnderlyingExerciseDesc(41810) field in the encoded format   *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the UnderlyingExerciseDesc(41810) field.                    *\n***************************************************************\n*/\n  EncodedUnderlyingExerciseDesc = 41812,\n/*\n*************************************************************\n* Indicates (when 'Y') that exercise is automatic when the  *\n* strike price is crossed or the underlying trade is in the *\n* money.                                                    *\n*************************************************************\n*/\n  UnderlyingAutomaticExerciseIndicator = 41813,\n/*\n*********************************************************\n* The threshold rate for triggering automatic exercise. *\n*********************************************************\n*/\n  UnderlyingAutomaticExerciseThresholdRate = 41814,\n/*\n************************************************************\n* Indicates whether follow-up confirmation of exercise     *\n* (written or electronic) is required following telephonic *\n* notice by the buyer to the seller or seller's agent.     *\n************************************************************\n*/\n  UnderlyingExerciseConfirmationMethod = 41815,\n/*\n**************************************************************\n* Identifies the business center used for adjusting the time *\n* for manual exercise notice.                                *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  UnderlyingManualNoticeBusinessCenter = 41816,\n/*\n****************************************************************\n* Indicates whether the notional amount of the underlying      *\n* swap, not previously exercised under the option, will be     *\n* automatically exercised at the expiration time on the        *\n* expiration date if at such time the buyer is in-the-money,   *\n* provided that the difference between the settlement rate and *\n* the fixed rate under the relevant underlying swap is not     *\n* less than one tenth of a percentage point (0.10% or 0.001).  *\n****************************************************************\n*/\n  UnderlyingFallbackExerciseIndicator = 41817,\n/*\n***************************************************************\n* Indicates whether the Seller may request the Buyer to       *\n* confirm its intent to exercise if not done on or before the *\n* expiration time on the Expiration date. If true (\"Y\")       *\n* specific rules will apply in relation to the settlement     *\n* mode.                                                       *\n***************************************************************\n*/\n  UnderlyingLimitedRightToConfirmIndicator = 41818,\n/*\n****************************************************************\n* Indicates in physical settlement of bond and convertible     *\n* bond options whether the party required to deliver the bonds *\n* will divide those to be delivered as notifying party desires *\n* to facilitate delivery obligations.                          *\n****************************************************************\n*/\n  UnderlyingExerciseSplitTicketIndicator = 41819,\n/*\n*************************************************************\n* The business center calendar used to adjust the option    *\n* exercise dates, e.g. \"GBLO\".                              *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingOptionExerciseBusinessCenter = 41821,\n/*\n**********************************************************\n* The business day convention used to adjust the option  *\n* exercise dates. Used only to override the business day *\n* convention specified in the UnderlyingDateAdjustment   *\n* component within the UnderlyingInstrument component.   *\n**********************************************************\n*/\n  UnderlyingOptionExerciseBusinessDayConvention = 41822,\n/*\n************************************************************\n* Specifies the day type of the relative earliest exercise *\n* date offset.                                             *\n************************************************************\n*/\n  UnderlyingOptionExerciseEarliestDateOffsetDayType = 41823,\n/*\n****************************************************************\n* Time unit multiplier for the relative earliest exercise date *\n* offset.                                                      *\n****************************************************************\n*/\n  UnderlyingOptionExerciseEarliestDateOffsetPeriod = 41824,\n/*\n************************************************************\n* Time unit associated with the relative earliest exercise *\n* date offset.                                             *\n************************************************************\n*/\n  UnderlyingOptionExerciseEarliestDateOffsetUnit = 41825,\n/*\n*************************************************************\n* Time unit multiplier for the frequency of exercise dates. *\n*************************************************************\n*/\n  UnderlyingOptionExerciseFrequencyPeriod = 41826,\n/*\n**************************************************************\n* Time unit associated with the frequency of exercise dates. *\n**************************************************************\n*/\n  UnderlyingOptionExerciseFrequencyUnit = 41827,\n/*\n***************************************************************\n* The unadjusted start date for calculating periodic exercise *\n* dates.                                                      *\n***************************************************************\n*/\n  UnderlyingOptionExerciseStartDateUnadjusted = 41828,\n/*\n*****************************************************************\n* Specifies the anchor date when the option exercise start      *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingOptionExerciseStartDateRelativeTo = 41829,\n/*\n*************************************************************\n* Time unit multiplier for the relative exercise start date *\n* offset.                                                   *\n*************************************************************\n*/\n  UnderlyingOptionExerciseStartDateOffsetPeriod = 41830,\n/*\n**************************************************************\n* Time unit associated with the relative exercise start date *\n* offset.                                                    *\n**************************************************************\n*/\n  UnderlyingOptionExerciseStartDateOffsetUnit = 41831,\n/*\n****************************************************************\n* Specifies the day type of the relative option exercise start *\n* date offset.                                                 *\n****************************************************************\n*/\n  UnderlyingOptionExerciseStartDateOffsetDayType = 41832,\n/*\n*************************************************************\n* The adjusted start date for calculating periodic exercise *\n* dates.                                                    *\n*************************************************************\n*/\n  UnderlyingOptionExerciseStartDateAdjusted = 41833,\n/*\n****************************************************************\n* The number of periods in the referenced date schedule that   *\n* are between each date in the relative date schedule. Thus a  *\n* skip of 2 would mean that dates are relative to every second *\n* date in the referenced schedule. If present this should have *\n* a value greater than 1.                                      *\n****************************************************************\n*/\n  UnderlyingOptionExerciseSkip = 41834,\n/*\n********************************************************\n* The last date (adjusted) for establishing the option *\n* exercise terms.                                      *\n********************************************************\n*/\n  UnderlyingOptionExerciseNominationDeadline = 41835,\n/*\n***************************************\n* The unadjusted first exercise date. *\n***************************************\n*/\n  UnderlyingOptionExerciseFirstDateUnadjusted = 41836,\n/*\n**************************************\n* The unadjusted last exercise date. *\n**************************************\n*/\n  UnderlyingOptionExerciseLastDateUnadjusted = 41837,\n/*\n****************************************************************\n* The earliest time at which notice of exercise can be given   *\n* by the buyer to the seller (or seller's agent) (i) on the    *\n* expriation date, in the case of a European style option,     *\n* (ii) on each Bermuda option exercise date and the expiration *\n* date, in the case of a Bermuda style option, (iii) the       *\n* commencement date to, and including, the expiration date, in *\n* the case of an American option.                              *\n****************************************************************\n*/\n  UnderlyingOptionExerciseEarliestTime = 41838,\n/*\n************************************************\n* Latest exercise time.  See also              *\n* UnderlyingOptionExerciseEarliestTime(41838). *\n************************************************\n*/\n  UnderlyingOptionExerciseLatestTime = 41839,\n/*\n***************************************************************\n* The business center used to determine the locale for option *\n* exercise time, e.g. \"GBLO\".                                 *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values                            *\n***************************************************************\n*/\n  UnderlyingOptionExerciseTimeBusinessCenter = 41840,\n/*\n**********************************************************\n* The adjusted or unadjusted option exercise fixed date. *\n**********************************************************\n*/\n  UnderlyingOptionExerciseDate = 41842,\n/*\n**************************************************************\n* Specifies the type of option exercise date. When specified *\n* it applies not only to the current date but to all         *\n* subsequent dates in the group until overridden with a new  *\n* type.                                                      *\n**************************************************************\n*/\n  UnderlyingOptionExerciseDateType = 41843,\n/*\n*************************************************************\n* The business center calendar used to adjust the option    *\n* exercise expiration dates, e.g. \"GBLO\".                   *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingOptionExerciseExpirationDateBusinessCenter = 41845,\n/*\n*********************************************************\n* The business day convention used to adjust the option *\n* exercise expiration dates. Used only to override the  *\n* business day convention specified in the              *\n* UnderlyingDateAdjustment component within the         *\n* UnderlyingInstrument component.                       *\n*********************************************************\n*/\n  UnderlyingOptionExerciseExpirationDateBusinessDayConvention = 41846,\n/*\n*****************************************************************\n* Specifies the anchor date when the option exercise            *\n* expiration date is relative to an anchor date.                *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingOptionExerciseExpirationDateRelativeTo = 41847,\n/*\n*************************************************************\n* Time unit multiplier for the relative exercise expiration *\n* date offset.                                              *\n*************************************************************\n*/\n  UnderlyingOptionExerciseExpirationDateOffsetPeriod = 41848,\n/*\n**************************************************************\n* Time unit associated with the relative exercise expiration *\n* date offset.                                               *\n**************************************************************\n*/\n  UnderlyingOptionExerciseExpirationDateOffsetUnit = 41849,\n/*\n******************************************************\n* Time unit multiplier for the frequency of exercise *\n* expiration dates.                                  *\n******************************************************\n*/\n  UnderlyingOptionExerciseExpirationFrequencyPeriod = 41850,\n/*\n*******************************************************\n* Time unit associated with the frequency of exercise *\n* expiration dates.                                   *\n*******************************************************\n*/\n  UnderlyingOptionExerciseExpirationFrequencyUnit = 41851,\n/*\n****************************************************************\n* The convention for determining the sequence of exercise      *\n* expiration dates. It is used in conjunction with a specified *\n* frequency. Used only to override the roll convention defined *\n* in the UnderlyingDateAdjustment component in                 *\n* UnderlyingInstrument.                                        *\n****************************************************************\n*/\n  UnderlyingOptionExerciseExpirationRollConvention = 41852,\n/*\n**********************************************************\n* Specifies the day type of the relative option exercise *\n* expiration date offset.                                *\n**********************************************************\n*/\n  UnderlyingOptionExerciseExpirationDateOffsetDayType = 41853,\n/*\n****************************************\n* The option exercise expiration time. *\n****************************************\n*/\n  UnderlyingOptionExerciseExpirationTime = 41854,\n/*\n***************************************************************\n* The business center used to determine the locale for option *\n* exercise expiration time, e.g. \"GBLO\".                      *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  UnderlyingOptionExerciseExpirationTimeBusinessCenter = 41855,\n/*\n***************************************************************\n* The adjusted or unadjusted option exercise expiration fixed *\n* date.                                                       *\n***************************************************************\n*/\n  UnderlyingOptionExerciseExpirationDate = 41857,\n/*\n****************************************************************\n* Specifies the type of option exercise expiration date. When  *\n* specified it applies not only to the current date but to all *\n* subsequent dates in the group until overridden with a new    *\n* type.                                                        *\n****************************************************************\n*/\n  UnderlyingOptionExerciseExpirationDateType = 41858,\n/*\n*************************************************\n* The consequences of market disruption events. *\n*************************************************\n*/\n  UnderlyingMarketDisruptionProvision = 41859,\n/*\n****************************************************\n* Specifies the location of the fallback provision *\n* documentation.                                   *\n****************************************************\n*/\n  UnderlyingMarketDisruptionFallbackProvision = 41860,\n/*\n**************************************************************\n* Specifies the maximum number of market disruption days     *\n* (commodity or bullion business days) in a contract or      *\n* confirmation. If none are specified, the maximum number of *\n* market disruption days is five (5).                        *\n**************************************************************\n*/\n  UnderlyingMarketDisruptionMaximumDays = 41861,\n/*\n***********************************************************\n* Used when a price materiality percentage applies to the *\n* price source disruption event and this event has been   *\n* specified.                                              *\n***********************************************************\n*/\n  UnderlyingMarketDisruptionMaterialityPercentage = 41862,\n/*\n***************************************************************\n* Specifies the minimum futures contracts level that dictates *\n* whether or not a 'De Minimis Trading' event has occurred.   *\n***************************************************************\n*/\n  UnderlyingMarketDisruptionMinimumFuturesContracts = 41863,\n/*\n************************************************************************\n* Specifies the market disruption event.                               *\n* For commodities see                                                  *\n* http://www.fpml.org/coding-scheme/commodity-market-disruption        *\n* for values.                                                          *\n* For foreign exchange, see                                            *\n* http://www.fixtradingcommunity.org/codelists#Market_Disruption_Event *\n* for code list of applicable event types.                             *\n************************************************************************\n*/\n  UnderlyingMarketDisruptionEvent = 41865,\n/*\n**************************************************************************\n* Specifies the type of disruption fallback.                             *\n* See                                                                    *\n* http://www.fpml.org/coding-scheme/commodity-market-disruption-fallback *\n* for values.                                                            *\n**************************************************************************\n*/\n  UnderlyingMarketDisruptionFallbackType = 41867,\n/*\n******************************************\n* The type of reference price underlier. *\n******************************************\n*/\n  UnderlyingMarketDisruptionFallbackUnderlierType = 41869,\n/*\n***************************************************\n* Specifies the identifier value of the security. *\n***************************************************\n*/\n  UnderlyingMarketDisruptionFallbackUnderlierSecurityID = 41870,\n/*\n********************************************************\n* Specifies the class or source scheme of the security *\n* identifier.                                          *\n********************************************************\n*/\n  UnderlyingMarketDisruptionFallbackUnderlierSecurityIDSource = 41871,\n/*\n*****************************************************\n* Specifies the description of underlying security. *\n*****************************************************\n*/\n  UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc = 41872,\n/*\n*************************************************************************\n* Byte length of encoded (non-ASCII characters)                         *\n* EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc(41874) *\n* field.                                                                *\n*************************************************************************\n*/\n  EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDescLen = 41873,\n/*\n*******************************************************************\n* Encoded (non-ASCII characters) representation of the            *\n* UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc(41872)  *\n* field in the encoded format specified via the                   *\n* MessageEncoding (347) field. If used, the ASCII (English)       *\n* representation should also be specified in the                  *\n* UnderlyingMarketDisruptionFallbackUnderlierSecurityDesc(41872). *\n*******************************************************************\n*/\n  EncodedUnderlyingMarketDisruptionFallbackUnderlierSecurityDesc = 41874,\n/*\n****************************************************************\n* If there are multiple underlying assets, this specifies the  *\n* number of units (index or securities) that constitute the    *\n* underlier of the swap. In the case of a basket swap, this is *\n* used to reference both the number of basket units, and the   *\n* number of each asset components of the basket when these are *\n* expressed in absolute terms.                                 *\n****************************************************************\n*/\n  UnderlyingMarketDisruptionFallbackOpenUnits = 41875,\n/*\n**************************************************************\n* Specifies the currency if the underlier is a basket.  Uses *\n* ISO 4217 currency codes.                                   *\n**************************************************************\n*/\n  UnderlyingMarketDisruptionFallbackBasketCurrency = 41876,\n/*\n***************************************************************\n* Specifies the basket divisor amount. This value is normally *\n* used to adjust the constituent weight for pricing or to     *\n* adjust for dividends, or other corporate actions.           *\n***************************************************************\n*/\n  UnderlyingMarketDisruptionFallbackBasketDivisor = 41877,\n/*\n****************************************************\n* The day of the week on which fixing takes place. *\n****************************************************\n*/\n  UnderlyingPaymentScheduleFixingDayOfWeek = 41879,\n/*\n***********************************************************\n* The occurrence of the day of week on which fixing takes *\n* place.                                                  *\n***********************************************************\n*/\n  UnderlyingPaymentScheduleFixingDayNumber = 41880,\n/*\n**********************************************************\n* Identifier of this UnderlyingPaymentSchedule for cross *\n* referencing elsewhere in the message.                  *\n**********************************************************\n*/\n  UnderlyingPaymentScheduleXID = 41881,\n/*\n***********************************************************\n* Reference to payment schedule elsewhere in the message. *\n***********************************************************\n*/\n  UnderlyingPaymentScheduleXIDRef = 41882,\n/*\n***************************************************************\n* Specifies the currency of the schedule rate.  Uses ISO 4217 *\n* currency codes.                                             *\n***************************************************************\n*/\n  UnderlyingPaymentScheduleRateCurrency = 41883,\n/*\n********************************************\n* The schedule rate unit of measure (UOM). *\n********************************************\n*/\n  UnderlyingPaymentScheduleRateUnitOfMeasure = 41884,\n/*\n***************************************************************\n* The number to be multiplied by the derived floating rate of *\n* the underlying's payment schedule in order to arrive at the *\n* payment rate. If ommitted, the schedule rate conversion     *\n* factor is 1.                                                *\n***************************************************************\n*/\n  UnderlyingPaymentScheduleRateConversionFactor = 41885,\n/*\n****************************************************************\n* Specifies whether the rate spread is an absolute value to be *\n* added to the index rate or a percentage of the index rate.   *\n****************************************************************\n*/\n  UnderlyingPaymentScheduleRateSpreadType = 41886,\n/*\n*****************************************\n* The schedule settlement period price. *\n*****************************************\n*/\n  UnderlyingPaymentScheduleSettlPeriodPrice = 41887,\n/*\n**************************************************************\n* The currency of the schedule settlement period price. Uses *\n* ISO 4217 currency codes.                                   *\n**************************************************************\n*/\n  UnderlyingPaymentScheduleSettlPeriodPriceCurrency = 41888,\n/*\n******************************************************\n* The settlement period price unit of measure (UOM). *\n******************************************************\n*/\n  UnderlyingPaymentScheduleSettlPeriodPriceUnitOfMeasure = 41889,\n/*\n********************************************\n* The schedule step unit of measure (UOM). *\n********************************************\n*/\n  UnderlyingPaymentScheduleStepUnitOfMeasure = 41890,\n/*\n************************************\n* The distribution of fixing days. *\n************************************\n*/\n  UnderlyingPaymentScheduleFixingDayDistribution = 41891,\n/*\n***********************************************************\n* The number of days over which fixing should take place. *\n***********************************************************\n*/\n  UnderlyingPaymentScheduleFixingDayCount = 41892,\n/*\n*****************************************************\n* Time unit multiplier for the fixing lag duration. *\n*****************************************************\n*/\n  UnderlyingPaymentScheduleFixingLagPeriod = 41893,\n/*\n******************************************************\n* Time unit associated with the fixing lag duration. *\n******************************************************\n*/\n  UnderlyingPaymentScheduleFixingLagUnit = 41894,\n/*\n****************************************************************\n* Time unit multiplier for the relative first observation date *\n* offset.                                                      *\n****************************************************************\n*/\n  UnderlyingPaymentScheduleFixingFirstObservationDateOffsetPeriod = 41895,\n/*\n************************************************************\n* Time unit associated with the relative first observation *\n* date offset.                                             *\n************************************************************\n*/\n  UnderlyingPaymentScheduleFixingFirstObservationDateOffsetUnit = 41896,\n/*\n****************************************************************\n* When this element is specified and set to 'Y', the Flat Rate *\n* is the New Worldwide Tanker Nominal Freight Scale for the    *\n* Freight Index Route taken at the Trade Date of the           *\n* transaction \"Fixed\". If 'N' it is taken on each Pricing Date *\n* \"Floating\".                                                  *\n****************************************************************\n*/\n  UnderlyingPaymentStreamFlatRateIndicator = 41897,\n/*\n*************************************************************\n* Specifies the actual monetary value of the flat rate when *\n* UnderlyingPaymentStreamFlatRateIndicator(41897) = 'Y'.    *\n*************************************************************\n*/\n  UnderlyingPaymentStreamFlatRateAmount = 41898,\n/*\n*************************************************************\n* Specifies the currency of the actual flat rate.  Uses ISO *\n* 4217 currency codes.                                      *\n*************************************************************\n*/\n  UnderlyingPaymentStreamFlatRateCurrency = 41899,\n/*\n****************************************************\n* Specifies the limit on the total payment amount. *\n****************************************************\n*/\n  UnderlyingPaymentStreamMaximumPaymentAmount = 41900,\n/*\n**************************************************************\n* Specifies the currency of total payment amount limit. Uses *\n* ISO 4217 currency codes.                                   *\n**************************************************************\n*/\n  UnderlyingPaymentStreamMaximumPaymentCurrency = 41901,\n/*\n**************************************************************\n* Specifies the limit on the payment amount that goes out in *\n* any particular calculation period.                         *\n**************************************************************\n*/\n  UnderlyingPaymentStreamMaximumTransactionAmount = 41902,\n/*\n**************************************************************\n* Specifies the currency of the period payment amount limit. *\n* Uses ISO 4217 currency codes.                              *\n**************************************************************\n*/\n  UnderlyingPaymentStreamMaximumTransactionCurrency = 41903,\n/*\n***********************************************\n* Fixed payment amount unit of measure (UOM). *\n***********************************************\n*/\n  UnderlyingPaymentStreamFixedAmountUnitOfMeasure = 41904,\n/*\n*********************************************\n* Specifies the total fixed payment amount. *\n*********************************************\n*/\n  UnderlyingPaymentStreamTotalFixedAmount = 41905,\n/*\n**********************************************************\n* The number of Worldscale points for purposes of the    *\n* calculation of a fixed amount for a wet voyage charter *\n* commodity swap.                                        *\n**********************************************************\n*/\n  UnderlyingPaymentStreamWorldScaleRate = 41906,\n/*\n***************************************************************\n* The price per relevant unit for purposes of the calculation *\n* of a fixed amount for a dry voyage charter or time charter  *\n* commodity swap.                                             *\n***************************************************************\n*/\n  UnderlyingPaymentStreamContractPrice = 41907,\n/*\n***************************************************************\n* Specifies the currency of                                   *\n* UnderlyingPaymentStreamContractPrice(41907).  Uses ISO 4217 *\n* currency codes.                                             *\n***************************************************************\n*/\n  UnderlyingPaymentStreamContractPriceCurrency = 41908,\n/*\n*************************************************************\n* The business center calendar used to adjust the payment   *\n* stream's pricing dates, e.g. \"GBLO\".                      *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingPaymentStreamPricingBusinessCenter = 41910,\n/*\n************************************************************\n* Secondary time unit associated with the payment stream\u0019s *\n* floating rate index curve.                               *\n************************************************************\n*/\n  UnderlyingPaymentStreamRateIndex2CurveUnit = 41911,\n/*\n***********************************************************\n* Secondary time unit multiplier for the payment stream\u0019s *\n* floating rate index curve.                              *\n***********************************************************\n*/\n  UnderlyingPaymentStreamRateIndex2CurvePeriod = 41912,\n/*\n******************************************************\n* Specifies the location of the floating rate index. *\n******************************************************\n*/\n  UnderlyingPaymentStreamRateIndexLocation = 41913,\n/*\n****************************************************************\n* This is the weather Cooling Degree Days (CDD), Heating       *\n* Degree Days (HDD) or HDD index level specified as the number *\n* of (amount of) weather index units specified by the parties  *\n* in the related confirmation.                                 *\n****************************************************************\n*/\n  UnderlyingPaymentStreamRateIndexLevel = 41914,\n/*\n******************************************************\n* The unit of measure (UOM) of the rate index level. *\n******************************************************\n*/\n  UnderlyingPaymentStreamRateIndexUnitOfMeasure = 41915,\n/*\n***********************************************************\n* Specifies how weather index units are to be calculated. *\n***********************************************************\n*/\n  UnderlyingPaymentStreamSettlLevel = 41916,\n/*\n**************************************************************\n* This is the weather Cooling Degree Days (CDD), Heating     *\n* Degree Days (HDD) or HDD reference level specified as the  *\n* number of (amount of) weather index units specified by the *\n* parties in the related confirmation.                       *\n**************************************************************\n*/\n  UnderlyingPaymentStreamReferenceLevel = 41917,\n/*\n**********************************************************\n* The unit of measure (UOM) of the rate reference level. *\n**********************************************************\n*/\n  UnderlyingPaymentStreamReferenceLevelUnitOfMeasure = 41918,\n/*\n************************************************************\n* When set to 'Y', it indicates that the weather reference *\n* level equals zero.                                       *\n************************************************************\n*/\n  UnderlyingPaymentStreamReferenceLevelEqualsZeroIndicator = 41919,\n/*\n****************************************************************\n* Specifies the currency of the floating rate spread. Uses ISO *\n* 4217 currency codes.                                         *\n****************************************************************\n*/\n  UnderlyingPaymentStreamRateSpreadCurrency = 41920,\n/*\n************************************************************\n* Specifies the unit of measure (UOM) of the floating rate *\n* spread.                                                  *\n************************************************************\n*/\n  UnderlyingPaymentStreamRateSpreadUnitOfMeasure = 41921,\n/*\n***************************************************************\n* The number to be multiplied by the derived floating rate of *\n* the underlying's payment stream in order to arrive at the   *\n* payment rate. If omitted, the floating rate conversion      *\n* factor is 1.                                                *\n***************************************************************\n*/\n  UnderlyingPaymentStreamRateConversionFactor = 41922,\n/*\n**************************************************************\n* Identifies whether the rate spread is an absolute value to *\n* be added to the index rate or a percentage of the index    *\n* rate.                                                      *\n**************************************************************\n*/\n  UnderlyingPaymentStreamRateSpreadType = 41923,\n/*\n****************************************************************\n* The floating rate determined at the most recent reset. The   *\n* rate is expressed in decimal form, e.g. 5% is represented as *\n* 0.05.                                                        *\n****************************************************************\n*/\n  UnderlyingPaymentStreamLastResetRate = 41924,\n/*\n****************************************************************\n* The floating rate determined at the final reset. The rate is *\n* expressed in decimal form, e.g. 5% is represented as 0.05.   *\n****************************************************************\n*/\n  UnderlyingPaymentStreamFinalRate = 41925,\n/*\n**********************************************************\n* Time unit multiplier for the calculation lag duration. *\n**********************************************************\n*/\n  UnderlyingPaymentStreamCalculationLagPeriod = 41926,\n/*\n***********************************************************\n* Time unit associated with the calculation lag duration. *\n***********************************************************\n*/\n  UnderlyingPaymentStreamCalculationLagUnit = 41927,\n/*\n****************************************************************\n* Time unit multiplier for the relative first observation date *\n* offset.                                                      *\n****************************************************************\n*/\n  UnderlyingPaymentStreamFirstObservationDateOffsetPeriod = 41928,\n/*\n************************************************************\n* Time unit associated with the relative first observation *\n* date offset.                                             *\n************************************************************\n*/\n  UnderlyingPaymentStreamFirstObservationDateOffsetUnit = 41929,\n/*\n*********************************************\n* Specifies the commodity pricing day type. *\n*********************************************\n*/\n  UnderlyingPaymentStreamPricingDayType = 41930,\n/*\n*************************************\n* The distribution of pricing days. *\n*************************************\n*/\n  UnderlyingPaymentStreamPricingDayDistribution = 41931,\n/*\n************************************************************\n* The number of days over which pricing should take place. *\n************************************************************\n*/\n  UnderlyingPaymentStreamPricingDayCount = 41932,\n/*\n*****************************************************************\n* Specifies the business calendar to use for pricing.           *\n* See                                                           *\n* http://www.fpml.org/coding-scheme/commodity-business-calendar *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStreamPricingBusinessCalendar = 41933,\n/*\n**************************************************************\n* The business day convention used to adjust the payment     *\n* stream's pricing dates. Used only to override the business *\n* day convention specified in the UnderlyingDateAdjustment   *\n* component within the UnderlyingInstrument component.       *\n**************************************************************\n*/\n  UnderlyingPaymentStreamPricingBusinessDayConvention = 41934,\n/*\n**************************************************************\n* Specifies the format of the commodity settlement start and *\n* end times.                                                 *\n**************************************************************\n*/\n  LegStreamCommoditySettlTimeType = 41935,\n/*\n**************************************************************\n* Specifies the format of the commodity settlement start and *\n* end times.                                                 *\n**************************************************************\n*/\n  UnderlyingStreamCommoditySettlTimeType = 41936,\n/*\n*********************************************************\n* The adjusted or unadjusted fixed stream payment date. *\n*********************************************************\n*/\n  UnderlyingPaymentStreamPaymentDate = 41938,\n/*\n**************************************************************\n* Specifies the type of payment date. When specified it      *\n* applies not only to the current date but to all subsequent *\n* dates in the group until overridden with a new type.       *\n**************************************************************\n*/\n  UnderlyingPaymentStreamPaymentDateType = 41939,\n/*\n********************************************************\n* When set to 'Y', it indicates that payment dates are *\n* specified in the relevant master agreement.          *\n********************************************************\n*/\n  UnderlyingPaymentStreamMasterAgreementPaymentDatesIndicator = 41940,\n/*\n*************************************************\n* An adjusted or unadjusted fixed pricing date. *\n*************************************************\n*/\n  UnderlyingPaymentStreamPricingDate = 41942,\n/*\n**************************************************************\n* Specifies the type of pricing date. When specified it      *\n* applies not only to the current date but to all subsequent *\n* dates in the group until overridden with a new type.       *\n**************************************************************\n*/\n  UnderlyingPaymentStreamPricingDateType = 41943,\n/*\n*****************************************************\n* The day of the week on which pricing takes place. *\n*****************************************************\n*/\n  UnderlyingPaymentStreamPricingDayOfWeek = 41945,\n/*\n************************************************************\n* The occurrence of the day of week on which pricing takes *\n* place.                                                   *\n************************************************************\n*/\n  UnderlyingPaymentStreamPricingDayNumber = 41946,\n/*\n**************************************************************\n* The business center calendar used to adjust the pricing or *\n* fixing date, e.g. \"GBLO\".                                  *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  UnderlyingPricingDateBusinessCenter = 41948,\n/*\n******************************************\n* The unadjusted pricing or fixing date. *\n******************************************\n*/\n  UnderlyingPricingDateUnadjusted = 41949,\n/*\n*************************************************************\n* The business day convention used to adjust the pricing or *\n* fixing date. Used only to override the business day       *\n* convention specified in the UnderlyingDateAdjustment      *\n* component within the UnderlyingInstrument component.      *\n*************************************************************\n*/\n  UnderlyingPricingDateBusinessDayConvention = 41950,\n/*\n****************************************\n* The adjusted pricing or fixing date. *\n****************************************\n*/\n  UnderlyingPricingDateAdjusted = 41951,\n/*\n********************************************\n* The local market pricing or fixing time. *\n********************************************\n*/\n  UnderlyingPricingTime = 41952,\n/*\n****************************************************************\n* Specifies the business center for determining the pricing or *\n* fixing time. See                                             *\n* http://www.fpml.org/coding-scheme/business-center for        *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingPricingTimeBusinessCenter = 41953,\n/*\n*************************************************************\n* The adjusted or unadjusted fixed calculation period date. *\n*************************************************************\n*/\n  UnderlyingStreamCalculationPeriodDate = 41955,\n/*\n****************************************************************\n* Specifies the type of fixed calculation period date. When    *\n* specified it applies not only to the current date but to all *\n* subsequent dates in the group until overridden with a new    *\n* type.                                                        *\n****************************************************************\n*/\n  UnderlyingStreamCalculationPeriodDateType = 41956,\n/*\n***************************************************************\n* Identifier of this calculation period for cross referencing *\n* elsewhere in the message.                                   *\n***************************************************************\n*/\n  UnderlyingStreamCalculationPeriodDatesXID = 41957,\n/*\n*****************************************************\n* Cross reference to another calculation period for *\n* duplicating its properties.                       *\n*****************************************************\n*/\n  UnderlyingStreamCalculationPeriodDatesXIDRef = 41958,\n/*\n****************************************************************\n* When specified and set to 'Y', it indicates that the first   *\n* calculation period should run from the effective date to the *\n* end of the calendar period in which the effective date falls *\n* (e.g. Jan 15 - Jan 31 if the calculation periods are one     *\n* month long and effective date is Jan 15.). If 'N' or not     *\n* specified, it indicates that the first calculation period    *\n* should run from the effective date for one whole period      *\n* (e.g. Jan 15 to Feb 14 if the calculation periods are one    *\n* month long and the effective date is Jan 15.).               *\n****************************************************************\n*/\n  UnderlyingStreamCalculationBalanceOfFirstPeriod = 41959,\n/*\n*********************************************************\n* Time unit multiplier for the length of time after the *\n* publication of the data when corrections can be made. *\n*********************************************************\n*/\n  UnderlyingStreamCalculationCorrectionPeriod = 41960,\n/*\n**********************************************************\n* Time unit associated with the length of time after the *\n* publication of the data when corrections can be made.  *\n**********************************************************\n*/\n  UnderlyingStreamCalculationCorrectionUnit = 41961,\n/*\n*************************************************************\n* The business center calendar used to adjust the commodity *\n* delivery date, e.g. \"GBLO\".                               *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingStreamCommoditySettlBusinessCenter = 41963,\n/*\n************************************************************\n* Specifies the general base type of the commodity traded. *\n* Where possible, this should follow the naming convention *\n* used in the 2005 ISDA Commodity Definitions.             *\n************************************************************\n*/\n  UnderlyingStreamCommodityBase = 41964,\n/*\n******************************************************************\n* Specifies the type of commodity product.                       *\n* For coal see                                                   *\n* http://www.fpml.org/coding-scheme/commodity-coal-product-type  *\n* for values.                                                    *\n* For metals see                                                 *\n* http://www.fpml.org/coding-scheme/commodity-metal-product-type *\n* for values.                                                    *\n* For bullion see                                                *\n* http://www.fixtradingcommunity.org/codelists#Bullion_Types     *\n* for the external code list of bullion types.                   *\n******************************************************************\n*/\n  UnderlyingStreamCommodityType = 41965,\n/*\n******************************************************\n* Specifies the market identifier for the commodity. *\n******************************************************\n*/\n  UnderlyingStreamCommoditySecurityID = 41966,\n/*\n***********************************************************\n* Identifies the class or source of the                   *\n* UnderlyingStreamCommoditySecurityIDSource(41966) value. *\n***********************************************************\n*/\n  UnderlyingStreamCommoditySecurityIDSource = 41967,\n/*\n***************************************\n* Description of the commodity asset. *\n***************************************\n*/\n  UnderlyingStreamCommodityDesc = 41968,\n/*\n******************************************************\n* Byte length of encoded (non-ASCII characters)      *\n* EncodedUnderlyingStreamCommodityDesc(41970) field. *\n******************************************************\n*/\n  EncodedUnderlyingStreamCommodityDescLen = 41969,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* UnderlyingStreamCommodityDesc(41968) field in the encoded    *\n* format specified via the MessageEncoding (347) field. If     *\n* used, the ASCII (English) representation should also be      *\n* specified in the UnderlyingStreamCommodityDesc(41968) field. *\n****************************************************************\n*/\n  EncodedUnderlyingStreamCommodityDesc = 41970,\n/*\n*****************************************************\n* The unit of measure (UOM) of the commodity asset. *\n*****************************************************\n*/\n  UnderlyingStreamCommodityUnitOfMeasure = 41971,\n/*\n*************************************************************\n* Identifies the currency of the commodity asset.  Uses ISO *\n* 4217 currency codes.                                      *\n*************************************************************\n*/\n  UnderlyingStreamCommodityCurrency = 41972,\n/*\n**********************************************************\n* Identifies the exchange where the commodity is traded. *\n**********************************************************\n*/\n  UnderlyingStreamCommodityExchange = 41973,\n/*\n**********************************************************************\n* Identifies the source of rate information used for                 *\n* commodities.                                                       *\n* See                                                                *\n* http://www.fixtradingcommunity.org/codelists#Commodity_Rate_Source *\n* for code list of applicable sources.                               *\n**********************************************************************\n*/\n  UnderlyingStreamCommodityRateSource = 41974,\n/*\n*********************************************************\n* Identifies the reference \"page\" from the rate source. *\n*********************************************************\n*/\n  UnderlyingStreamCommodityRateReferencePage = 41975,\n/*\n*****************************************************\n* Identifies the page heading from the rate source. *\n*****************************************************\n*/\n  UnderlyingStreamCommodityRateReferencePageHeading = 41976,\n/*\n********************************************************************\n* Specifies the commodity data or information provider.            *\n* See                                                              *\n* http://www.fpml.org/coding-scheme/commodity-information-provider *\n* for values.                                                      *\n********************************************************************\n*/\n  UnderlyingStreamDataProvider = 41977,\n/*\n****************************************************************************\n* Specifies how the pricing or rate setting of the trade is to             *\n* be determined or based upon.                                             *\n* See                                                                      *\n* http://www.fixtradingcommunity.org/codelists#Commodity_Rate_Pricing_Type *\n* for code list of applicable commodity pricing types.                     *\n****************************************************************************\n*/\n  UnderlyingStreamCommodityPricingType = 41978,\n/*\n*******************************************************\n* Time unit multiplier for the nearby settlement day. *\n*******************************************************\n*/\n  UnderlyingStreamCommodityNearbySettlDayPeriod = 41979,\n/*\n********************************************************\n* Time unit associated with the nearby settlement day. *\n********************************************************\n*/\n  UnderlyingStreamCommodityNearbySettlDayUnit = 41980,\n/*\n*******************************************\n* The unadjusted commodity delivery date. *\n*******************************************\n*/\n  UnderlyingStreamCommoditySettlDateUnadjusted = 41981,\n/*\n************************************************************\n* The business day convention used to adjust the commodity *\n* delivery date. Used only to override the business day    *\n* convention specified in the UnderlyingDateAdjustment     *\n* component within the UnderlyingInstrument component.     *\n************************************************************\n*/\n  UnderlyingStreamCommoditySettlDateBusinessDayConvention = 41982,\n/*\n*****************************************\n* The adjusted commodity delivery date. *\n*****************************************\n*/\n  UnderlyingStreamCommoditySettlDateAdjusted = 41983,\n/*\n**********************************************************\n* Specifies a fixed single month for commodity delivery. *\n**********************************************************\n*/\n  UnderlyingStreamCommoditySettlMonth = 41984,\n/*\n**************************************************************\n* Time unit multiplier for the commodity delivery date roll. *\n**************************************************************\n*/\n  UnderlyingStreamCommoditySettlDateRollPeriod = 41985,\n/*\n***************************************************************\n* Time unit associated with the commodity delivery date roll. *\n***************************************************************\n*/\n  UnderlyingStreamCommoditySettlDateRollUnit = 41986,\n/*\n***************************************************\n* Specifies the commodity delivery roll day type. *\n***************************************************\n*/\n  UnderlyingStreamCommoditySettlDayType = 41987,\n/*\n*************************************************************\n* Identifier of this stream commodity for cross referencing *\n* elsewhere in the message.                                 *\n*************************************************************\n*/\n  UnderlyingStreamCommodityXID = 41988,\n/*\n*************************************************************\n* Reference to a stream commodity elsewhere in the message. *\n*************************************************************\n*/\n  UnderlyingStreamCommodityXIDRef = 41989,\n/*\n**********************************************************\n* Alternate security identifier value for the commodity. *\n**********************************************************\n*/\n  UnderlyingStreamCommodityAltID = 41991,\n/*\n*************************************************************\n* Identifies the class or source of the alternate commodity *\n* security identifier.                                      *\n*************************************************************\n*/\n  UnderlyingStreamCommodityAltIDSource = 41992,\n/*\n***************************\n* Data source identifier. *\n***************************\n*/\n  UnderlyingStreamCommodityDataSourceID = 41994,\n/*\n*************************************************\n* Specifies the type of data source identifier. *\n*************************************************\n*/\n  UnderlyingStreamCommodityDataSourceIDType = 41995,\n/*\n****************************************************\n* Specifies the day or group of days for delivery. *\n****************************************************\n*/\n  UnderlyingStreamCommoditySettlDay = 41997,\n/*\n******************************************\n* Sum of the hours specified in          *\n* UnderlyingStreamCommoditySettlTimeGrp. *\n******************************************\n*/\n  UnderlyingStreamCommoditySettlTotalHours = 41998,\n/*\n**********************************************************\n* The start time for commodity settlement where delivery *\n* occurs over time. The time format is specified by the  *\n* settlement time type.                                  *\n**********************************************************\n*/\n  UnderlyingStreamCommoditySettlStart = 42000,\n/*\n***************************************************************\n* The end time for commodity settlement where delivery occurs *\n* over time. The time format is specified by the settlement   *\n* time type.                                                  *\n***************************************************************\n*/\n  UnderlyingStreamCommoditySettlEnd = 42001,\n/*\n**************************************************************\n* Specifies the country where delivery takes place. Uses ISO *\n* 3166 2-character country code.                             *\n**************************************************************\n*/\n  UnderlyingStreamCommoditySettlCountry = 42003,\n/*\n*********************************************************************\n* Commodity delivery timezone specified as \"prevailing\" rather      *\n* than \"standard\" or \"daylight\".                                    *\n* See                                                               *\n* http://www.fixtradingcommunity.org/codelists#Prevailing_Timezones *\n* for code list of applicable prevailing timezones.                 *\n*********************************************************************\n*/\n  UnderlyingStreamCommoditySettlTimeZone = 42004,\n/*\n***********************************************\n* Specifies the commodity delivery flow type. *\n***********************************************\n*/\n  UnderlyingStreamCommoditySettlFlowType = 42005,\n/*\n********************************************************\n* Specifies the delivery quantity associated with this *\n* settlement period.                                   *\n********************************************************\n*/\n  UnderlyingStreamCommoditySettlPeriodNotional = 42006,\n/*\n****************************************************************\n* Specifies the unit of measure (UOM) of the delivery quantity *\n* associated with this settlement period.                      *\n****************************************************************\n*/\n  UnderlyingStreamCommoditySettlPeriodNotionalUnitOfMeasure = 42007,\n/*\n*************************************************************\n* Time unit multiplier for the settlement period frequency. *\n*************************************************************\n*/\n  UnderlyingStreamCommoditySettlPeriodFrequencyPeriod = 42008,\n/*\n**************************************************************\n* Time unit associated with the settlement period frequency. *\n**************************************************************\n*/\n  UnderlyingStreamCommoditySettlPeriodFrequencyUnit = 42009,\n/*\n********************************\n* The settlement period price. *\n********************************\n*/\n  UnderlyingStreamCommoditySettlPeriodPrice = 42010,\n/*\n****************************************************************\n* Specifies the settlement period price unit of measure (UOM). *\n****************************************************************\n*/\n  UnderlyingStreamCommoditySettlPeriodPriceUnitOfMeasure = 42011,\n/*\n***************************************************************\n* The currency of the settlement period price.  Uses ISO 4217 *\n* currency codes.                                             *\n***************************************************************\n*/\n  UnderlyingStreamCommoditySettlPeriodPriceCurrency = 42012,\n/*\n*************************************************************\n* Indicates whether holidays are included in the settlement *\n* periods. Required for electricity contracts.              *\n*************************************************************\n*/\n  UnderlyingStreamCommoditySettlHolidaysProcessingInstruction = 42013,\n/*\n**************************************************************\n* Identifier of this settlement period for cross referencing *\n* elsewhere in the message.                                  *\n**************************************************************\n*/\n  UnderlyingStreamCommoditySettlPeriodXID = 42014,\n/*\n****************************************************************\n* Cross reference to another settlement period for duplicating *\n* its properties.                                              *\n****************************************************************\n*/\n  UnderlyingStreamCommoditySettlPeriodXIDRef = 42015,\n/*\n*************************************************************\n* Identifier of this UnderlyingStream for cross referencing *\n* elsewhere in the message.                                 *\n*************************************************************\n*/\n  UnderlyingStreamXID = 42016,\n/*\n***********************\n* Issuer of the bond. *\n***********************\n*/\n  UnderlyingAdditionalTermBondIssuer = 42017,\n/*\n************************************************************\n* Cross reference to another UnderlyingStream notional for *\n* duplicating its properties.                              *\n************************************************************\n*/\n  UnderlyingStreamNotionalXIDRef = 42018,\n/*\n*******************************************************\n* Time unit multiplier for the swap stream's notional *\n* frequency.                                          *\n*******************************************************\n*/\n  UnderlyingStreamNotionalFrequencyPeriod = 42019,\n/*\n********************************************************\n* Time unit associated with the swap stream's notional *\n* frequency.                                           *\n********************************************************\n*/\n  UnderlyingStreamNotionalFrequencyUnit = 42020,\n/*\n************************************************************\n* The commodity's notional or quantity delivery frequency. *\n************************************************************\n*/\n  UnderlyingStreamNotionalCommodityFrequency = 42021,\n/*\n**********************************************************\n* Specifies the delivery quantity unit of measure (UOM). *\n**********************************************************\n*/\n  UnderlyingStreamNotionalUnitOfMeasure = 42022,\n/*\n**************************************************************\n* Specifies the total notional or delivery quantity over the *\n* term of the contract.                                      *\n**************************************************************\n*/\n  UnderlyingStreamTotalNotional = 42023,\n/*\n**************************************************************\n* Specifies the unit of measure (UOM) for the total notional *\n* or delivery quantity over the term of the contract.        *\n**************************************************************\n*/\n  UnderlyingStreamTotalNotionalUnitOfMeasure = 42024,\n/*\n***********************************************************\n* Byte length of encoded (non-ASCII characters)           *\n* EncodedUnderlyingAdditionalTermBondIssuer(42026) field. *\n***********************************************************\n*/\n  EncodedUnderlyingAdditionalTermBondIssuerLen = 42025,\n/*\n*************************************************************\n* Encoded (non-ASCII characters) representation of the      *\n* UnderlyingAdditionalTermBondIssuer(42017) field in the    *\n* encoded format specified via the MessageEncoding (347)    *\n* field. If used, the ASCII (English) representation should *\n* also be specified in the                                  *\n* UnderlyingAdditionalTermBondIssuer(42017) field.          *\n*************************************************************\n*/\n  EncodedUnderlyingAdditionalTermBondIssuer = 42026,\n/*\n***********************************************************\n* Specifies the bond's payment priority in the event of a *\n* default.                                                *\n***********************************************************\n*/\n  UnderlyingAdditionalTermBondSeniority = 42027,\n/*\n****************************\n* Coupon type of the bond. *\n****************************\n*/\n  UnderlyingAdditionalTermBondCouponType = 42028,\n/*\n*******************************************************\n* Coupon rate of the bond.  See also CouponRate(223). *\n*******************************************************\n*/\n  UnderlyingAdditionalTermBondCouponRate = 42029,\n/*\n**********************************\n* The maturity date of the bond. *\n**********************************\n*/\n  UnderlyingAdditionalTermBondMaturityDate = 42030,\n/*\n******************************\n* The par value of the bond. *\n******************************\n*/\n  UnderlyingAdditionalTermBondParValue = 42031,\n/*\n************************************\n* Total issued amount of the bond. *\n************************************\n*/\n  UnderlyingAdditionalTermBondCurrentTotalIssuedAmount = 42032,\n/*\n***************************************************************\n* Time unit multiplier for the frequency of the bond's coupon *\n* payment.                                                    *\n***************************************************************\n*/\n  UnderlyingAdditionalTermBondCouponFrequencyPeriod = 42033,\n/*\n****************************************************************\n* Time unit associated with the frequency of the bond's coupon *\n* payment.                                                     *\n****************************************************************\n*/\n  UnderlyingAdditionalTermBondCouponFrequencyUnit = 42034,\n/*\n****************************************************************\n* The day count convention used in interest calculations for a *\n* bond or an interest bearing security.                        *\n****************************************************************\n*/\n  UnderlyingAdditionalTermBondDayCount = 42035,\n/*\n**************************************************************\n* Indicates whether the condition precedent bond is          *\n* applicable. The swap contract is only valid if the bond is *\n* issued and if there is any dispute over the terms of fixed *\n* stream then the bond terms would be used.                  *\n**************************************************************\n*/\n  UnderlyingAdditionalTermConditionPrecedentBondIndicator = 42037,\n/*\n***********************************************************\n* Indicates whether the discrepancy clause is applicable. *\n***********************************************************\n*/\n  UnderlyingAdditionalTermDiscrepancyClauseIndicator = 42038,\n/*\n*************************************************************\n* Identifies the dealer from whom price quotations for the  *\n* reference obligation are obtained for the purpose of cash *\n* settlement valuation calculation.                         *\n*************************************************************\n*/\n  UnderlyingCashSettlDealer = 42040,\n/*\n***************************************************************\n* Specifies the currency the UnderlyingCashSettlAmount(42054) *\n* is denominated in.  Uses ISO 4217 currency codes.           *\n***************************************************************\n*/\n  UnderlyingCashSettlCurrency = 42042,\n/*\n****************************************************************\n* The number of business days after settlement conditions have *\n* been satisfied, when the calculation agent is to obtain a    *\n* price quotation on the reference obligation for purposes of  *\n* cash settlement.                                             *\n****************************************************************\n*/\n  UnderlyingCashSettlValuationFirstBusinessDayOffset = 42043,\n/*\n***************************************************************\n* The number of business days between successive valuation    *\n* dates when multiple valuation dates are applicable for cash *\n* settlement.                                                 *\n***************************************************************\n*/\n  UnderlyingCashSettlValuationSubsequentBusinessDaysOffset = 42044,\n/*\n**************************************************************\n* Where multiple valuation dates are specified as being      *\n* applicable for cash settlement, this element specifies the *\n* number of applicable valuation dates.                      *\n**************************************************************\n*/\n  UnderlyingCashSettlNumOfValuationDates = 42045,\n/*\n**********************\n* Time of valuation. *\n**********************\n*/\n  UnderlyingCashSettlValuationTime = 42046,\n/*\n**************************************************************\n* Identifies the business center calendar  used at valuation *\n* time for cash settlement purposes e.g. \"GBLO\".             *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  UnderlyingCashSettlBusinessCenter = 42047,\n/*\n***********************************************************\n* The type of quote used to determine the cash settlement *\n* price.                                                  *\n***********************************************************\n*/\n  UnderlyingCashSettlQuoteMethod = 42048,\n/*\n***************************************************************\n* When determining the cash settlement amount, if weighted    *\n* average price quotes are to be obtained for the reference   *\n* obligation, this is the upper limit to the outstanding      *\n* principal balance of the reference obligation for which the *\n* quote should be obtained.  If not specifed, the ISDA        *\n* definitions provide for a fallback amount equal to floating *\n* rate payer calculation amount.                              *\n***************************************************************\n*/\n  UnderlyingCashSettlQuoteAmount = 42049,\n/*\n************************************************************\n* Specifies the currency the                               *\n* UnderlyingCashSettlQuoteAmount(42049) is denominated in. *\n* Uses ISO 4217 currency codes.                            *\n************************************************************\n*/\n  UnderlyingCashSettlQuoteCurrency = 42050,\n/*\n****************************************************************\n* When determining the cash settlement amount, if weighted     *\n* average price quotes are to be obtained for the reference    *\n* obligation, this is the minimum intended threshold amount of *\n* outstanding principal balance of the reference obligation    *\n* for which the quote should be obtained.  If not specified,   *\n* the ISDA definitions provide for a fallback amount of the    *\n* lower of either USD1,000,000 (or its equivalent in the       *\n* relevent obligation currency) or the (minimum) quoted        *\n* amount.                                                      *\n****************************************************************\n*/\n  UnderlyingCashSettlMinimumQuoteAmount = 42051,\n/*\n************************************************************\n* Specifies the currency the                               *\n* UnderlyingCashSettlQuoteAmount(42049) is denominated in. *\n* Uses ISO 4217 currency codes.                            *\n************************************************************\n*/\n  UnderlyingCashSettlMinimumQuoteCurrency = 42052,\n/*\n****************************************************************\n* The number of business days used in the determination of the *\n* cash settlement payment date.                                *\n****************************************************************\n*/\n  UnderlyingCashSettlBusinessDays = 42053,\n/*\n************************************************************\n* The amount paid between the trade parties, seller to the *\n* buyer, for cash settlement on the cash settlement date.  *\n************************************************************\n*/\n  UnderlyingCashSettlAmount = 42054,\n/*\n****************************************************************\n* Used for fixed recovery, this specifies the recovery level   *\n* as determined at contract inception, to be applied in the    *\n* event of a default.  The factor is used to calculate the     *\n* amount paid by the seller to the buyer for cash settlement   *\n* on the cash settlement date.  The amount is calculated is (1 *\n* - UnderlyingCashSettlRecoveryFactor(42055)) x floating rate  *\n* payer calculation amount.  The currency is derived from the  *\n* floating rate payer calculation amount.                      *\n****************************************************************\n*/\n  UnderlyingCashSettlRecoveryFactor = 42055,\n/*\n***********************************************************\n* Indicates whether fixed settlement is applicable or not *\n* applicable in a recovery lock.                          *\n***********************************************************\n*/\n  UnderlyingCashSettlFixedTermIndicator = 42056,\n/*\n****************************************************************\n* Indicates whether accrued interest is included or not in the *\n* value provided in UnderlyingCashSettlAmount(42054).          *\n* For cash settlement this specifies whether quotations should *\n* be obtained inclusive or not of accrued interest.            *\n* For physical settlement this specifies whether the buyer     *\n* should deliver the obligation with an outstanding principal  *\n* balance that includes or excludes accrued interest.          *\n****************************************************************\n*/\n  UnderlyingCashSettlAccruedInterestIndicator = 42057,\n/*\n****************************************************************\n* The ISDA defined methodology for determining the final price *\n* of the reference obligation for purposes of cash settlement. *\n****************************************************************\n*/\n  UnderlyingCashSettlValuationMethod = 42058,\n/*\n***************************************************************\n* Name referenced from UnderlyingSettlementTermXIDRef(41315). *\n***************************************************************\n*/\n  UnderlyingCashSettlTermXID = 42059,\n/*\n************************************************************\n* Currency of physical settlement.  Uses ISO 4217 currency *\n* codes.                                                   *\n************************************************************\n*/\n  UnderlyingPhysicalSettlCurrency = 42061,\n/*\n***************************************************************\n* A number of business days. Its precise meaning is dependent *\n* on the context in which this element is used.               *\n***************************************************************\n*/\n  UnderlyingPhysicalSettlBusinessDays = 42062,\n/*\n*************************************************************\n* A maximum number of business days. Its precise meaning is *\n* dependent on the context in which this element is used.   *\n* Intended to be used to limit a particular ISDA fallback   *\n* provision.                                                *\n*************************************************************\n*/\n  UnderlyingPhysicalSettlMaximumBusinessDays = 42063,\n/*\n******************************************\n* A named string value referenced by     *\n* UnderlyingSettlementTermXIDRef(41315). *\n******************************************\n*/\n  UnderlyingPhysicalSettlTermXID = 42064,\n/*\n*****************************************************************************\n* Specifies the type of delivery obligation applicable for                  *\n* physical settlement.                                                      *\n* See                                                                       *\n* http://www.fixtradingcommunity.org/codelists#Deliverable_Obligation_Types *\n* for code list for applicable deliverable obligation types.                *\n*****************************************************************************\n*/\n  UnderlyingPhysicalSettlDeliverableObligationType = 42066,\n/*\n*****************************************************************************\n* Physical settlement delivery obligation value appropriate to              *\n* UnderlyingPhysicalSettlDeliverableObligationType(42066).                  *\n* See                                                                       *\n* http://www.fixtradingcommunity.org/codelists#Deliverable_Obligation_Types *\n* for applicable obligation type values.                                    *\n*****************************************************************************\n*/\n  UnderlyingPhysicalSettlDeliverableObligationValue = 42067,\n/*\n*************************************************************\n* The notional amount of protection coverage for a floating *\n* rate.                                                     *\n*************************************************************\n*/\n  UnderlyingProtectionTermNotional = 42069,\n/*\n************************************************************\n* The currency of UnderlyingProtectionTermNotional(42069). *\n* Uses ISO 4217 currency codes.                            *\n************************************************************\n*/\n  UnderlyingProtectionTermCurrency = 42070,\n/*\n***************************************************************\n* The notifying party is the party that notifies the other    *\n* party when a credit event has occurred by means of a credit *\n* event notice. If more than one party is referenced as being *\n* the notifying party then either party may notify the other  *\n* of a credit event occurring.                                *\n* UnderlyingProtectionTermSellerNotifies(42071)=Y indicates   *\n* that the seller notifies.                                   *\n***************************************************************\n*/\n  UnderlyingProtectionTermSellerNotifies = 42071,\n/*\n***************************************************************\n* The notifying party is the party that notifies the other    *\n* party when a credit event has occurred by means of a credit *\n* event notice. If more than one party is referenced as being *\n* the notifying party then either party may notify the other  *\n* of a credit event occurring.                                *\n* UnderlyingProtectionTermBuyerNotifies(42072)=Y indicates    *\n* that the buyer notifies.                                    *\n***************************************************************\n*/\n  UnderlyingProtectionTermBuyerNotifies = 42072,\n/*\n****************************************************************\n* When used, the business center indicates the local time of   *\n* the business center that replaces the Greenwich Mean Time in *\n* Section 3.3 of the 2003 ISDA Credit Derivatives Definitions. *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingProtectionTermEventBusinessCenter = 42073,\n/*\n**************************************************************\n* Indicates whether ISDA defined Standard Public Sources are *\n* applicable                                                 *\n* (UnderlyingProtectionTermStandardSources(42074)=Y) or not. *\n**************************************************************\n*/\n  UnderlyingProtectionTermStandardSources = 42074,\n/*\n**********************************************************\n* The minimum number of the specified public information *\n* sources that must publish information that reasonably  *\n* confirms that a credit event has occurred. The market  *\n* convention is two.                                     *\n**********************************************************\n*/\n  UnderlyingProtectionTermEventMinimumSources = 42075,\n/*\n******************************************\n* A named string value referenced by     *\n* UnderlyingProtectionTermXIDRef(41314). *\n******************************************\n*/\n  UnderlyingProtectionTermXID = 42076,\n/*\n****************************************************************************\n* Specifies the type of credit event applicable to the                     *\n* protection terms.                                                        *\n* See                                                                      *\n* http://www.fixtradingcommunity.org/codelists#Protection_Term_Event_Types *\n* for code list of applicable event types.                                 *\n****************************************************************************\n*/\n  UnderlyingProtectionTermEventType = 42078,\n/*\n****************************************************************************\n* Protection term event value appropriate to                               *\n* UnderlyingProtectionTermEventType(42078).                                *\n* See                                                                      *\n* http://www.fixtradingcommunity.org/codelists#Protection_Term_Event_Types *\n* for applicable event type values.                                        *\n****************************************************************************\n*/\n  UnderlyingProtectionTermEventValue = 42079,\n/*\n****************************************************************\n* Applicable currency if                                       *\n* UnderlyingProtectionTermEventValue(42079) is an amount. Uses *\n* ISO 4217 currency codes.                                     *\n****************************************************************\n*/\n  UnderlyingProtectionTermEventCurrency = 42080,\n/*\n****************************************************\n* Time unit multiplier for protection term events. *\n****************************************************\n*/\n  UnderlyingProtectionTermEventPeriod = 42081,\n/*\n*****************************************************\n* Time unit associated with protection term events. *\n*****************************************************\n*/\n  UnderlyingProtectionTermEventUnit = 42082,\n/*\n*******************************************************\n* Day type for events that specify a period and unit. *\n*******************************************************\n*/\n  UnderlyingProtectionTermEventDayType = 42083,\n/*\n***********************************************************\n* Rate source for events that specify a rate source, e.g. *\n* Floating rate interest shortfall.                       *\n***********************************************************\n*/\n  UnderlyingProtectionTermEventRateSource = 42084,\n/*\n************************************************************\n* Protection term event qualifier. Used to further qualify *\n* UnderlyingProtectionTermEventType(43078).                *\n************************************************************\n*/\n  UnderlyingProtectionTermEventQualifier = 42086,\n/*\n*********************************************************************************\n* Specifies the type of obligation applicable to the                            *\n* protection terms.                                                             *\n* See                                                                           *\n* http://www.fixtradingcommunity.org/codelists#Protection_Term_Obligation_Types *\n* for code list of applicable obligation types.                                 *\n*********************************************************************************\n*/\n  UnderlyingProtectionTermObligationType = 42088,\n/*\n*********************************************************************************\n* Protection term obligation value appropriate to                               *\n* UnderlyingProtectionTermObligationType(42088).                                *\n* See                                                                           *\n* http://www.fixtradingcommunity.org/codelists#Protection_Term_Obligation_Types *\n* for applicable obligation type values.                                        *\n*********************************************************************************\n*/\n  UnderlyingProtectionTermObligationValue = 42089,\n/*\n*************************************************************\n* Newspaper or electronic news service or source that may   *\n* publish relevant information used in the determination of *\n* whether or not a credit event has occurred.               *\n*************************************************************\n*/\n  UnderlyingProtectionTermEventNewsSource = 42091,\n/*\n**************************************************************\n* The business day convention used to adjust the provisional *\n* cash settlement payment's termination, or relative         *\n* termination, date.  Used only to override the business day *\n* convention specified in the UnderlyingDateAdjustment       *\n* component within the UnderlyingInstrument component.       *\n**************************************************************\n*/\n  UnderlyingProvisionCashSettlPaymentDateBusinessDayConvention = 42092,\n/*\n*****************************************************************\n* Specifies the anchor date when the cash settlement payment    *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingProvisionCashSettlPaymentDateRelativeTo = 42093,\n/*\n*********************************************************\n* Time unit multiplier for the relative cash settlement *\n* payment date offset.                                  *\n*********************************************************\n*/\n  UnderlyingProvisionCashSettlPaymentDateOffsetPeriod = 42094,\n/*\n**********************************************************\n* Time unit associated with the relative cash settlement *\n* payment date offset.                                   *\n**********************************************************\n*/\n  UnderlyingProvisionCashSettlPaymentDateOffsetUnit = 42095,\n/*\n***********************************************************\n* Specifies the day type of the provision's relative cash *\n* settlement payment date offset.                         *\n***********************************************************\n*/\n  UnderlyingProvisionCashSettlPaymentDateOffsetDayType = 42096,\n/*\n*******************************************************\n* First date in range when a settlement date range is *\n* provided.                                           *\n*******************************************************\n*/\n  UnderlyingProvisionCashSettlPaymentDateRangeFirst = 42097,\n/*\n****************************************************************\n* Last date in range when a settlement date range is provided. *\n****************************************************************\n*/\n  UnderlyingProvisionCashSettlPaymentDateRangeLast = 42098,\n/*\n************************************************************\n* The cash settlement payment date, unadjusted or adjusted *\n* depending on                                             *\n* UnderlyingProvisionCashSettlPaymentDateType(42101).      *\n************************************************************\n*/\n  UnderlyingProvisionCashSettlPaymentDate = 42100,\n/*\n************************************************************\n* Specifies the type of date (e.g. adjusted for holidays). *\n************************************************************\n*/\n  UnderlyingProvisionCashSettlPaymentDateType = 42101,\n/*\n***********************************************\n* Identifies the source of quote information. *\n***********************************************\n*/\n  UnderlyingProvisionCashSettlQuoteSource = 42102,\n/*\n**********************************************************\n* Identifies the reference \"page\" from the quote source. *\n**********************************************************\n*/\n  UnderlyingProvisionCashSettlQuoteReferencePage = 42103,\n/*\n*************************************************************\n* A time specified in 24-hour format, e.g. 11am would be    *\n* represented as 11:00:00. The time of the cash settlement  *\n* valuation date when the cash settlement amount will be    *\n* determined according to the cash settlement method if the *\n* parties have not otherwise been able to agree to the cash *\n* settlement amount.                                        *\n*************************************************************\n*/\n  UnderlyingProvisionCashSettlValueTime = 42104,\n/*\n*************************************************************\n* Identifies the business center calendar used with the     *\n* provision's cash settlement valuation time.               *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingProvisionCashSettlValueTimeBusinessCenter = 42105,\n/*\n********************************************************\n* The business day convention used to adjust the cash  *\n* settlement valuation date. Used only to override the *\n* business day convention specified in the             *\n* UnderlyingDateAdjustment component within the        *\n* UnderlyingInstrument component.                      *\n********************************************************\n*/\n  UnderlyingProvisionCashSettlValueDateBusinessDayConvention = 42106,\n/*\n*****************************************************************\n* Specifies the anchor date when the cash settlement value      *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingProvisionCashSettlValueDateRelativeTo = 42107,\n/*\n***************************************************************\n* Time unit multiplier for the relative cash settlement value *\n* date offset.                                                *\n***************************************************************\n*/\n  UnderlyingProvisionCashSettlValueDateOffsetPeriod = 42108,\n/*\n****************************************************************\n* Time unit associated with the relative cash settlement value *\n* date offset.                                                 *\n****************************************************************\n*/\n  UnderlyingProvisionCashSettlValueDateOffsetUnit = 42109,\n/*\n***********************************************************\n* Specifies the day type of the provision's relative cash *\n* settlement value date offset.                           *\n***********************************************************\n*/\n  UnderlyingProvisionCashSettlValueDateOffsetDayType = 42110,\n/*\n********************************************\n* The adjusted cash settlement value date. *\n********************************************\n*/\n  UnderlyingProvisionCashSettlValueDateAdjusted = 42111,\n/*\n****************************************************************\n* A predetermined option exercise date, unadjusted or adjusted *\n* depending on                                                 *\n* UnderlyingProvisionOptionExerciseFixedDateType(42114).       *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExerciseFixedDate = 42113,\n/*\n************************************************************\n* Specifies the type of date (e.g. adjusted for holidays). *\n************************************************************\n*/\n  UnderlyingProvisionOptionExerciseFixedDateType = 42114,\n/*\n***************************************************************\n* The business day convention used to adjust the underlying   *\n* instrument's provision's option exercise date. Used only to *\n* override the business day convention specified in the       *\n* UnderlyingDateAdjustment component within the               *\n* UnderlyingInstrument component.                             *\n***************************************************************\n*/\n  UnderlyingProvisionOptionExerciseBusinessDayConvention = 42115,\n/*\n************************************************************\n* Time unit multiplier for  the interval to the first (and *\n* possibly only) exercise date in the exercise period.     *\n************************************************************\n*/\n  UnderlyingProvisionOptionExerciseEarliestDateOffsetPeriod = 42116,\n/*\n************************************************************\n* Time unit associated with the interval to the first (and *\n* possibly only) exercise date in the exercise period.     *\n************************************************************\n*/\n  UnderlyingProvisionOptionExerciseEarliestDateOffsetUnit = 42117,\n/*\n****************************************************************\n* Time unit multiplier for the frequency of subsequent         *\n* exercise dates in the exercise period following the earliest *\n* exercise date. An interval of 1 day should be used to        *\n* indicate an American style exercise frequency.               *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExerciseFrequencyPeriod = 42118,\n/*\n****************************************************************\n* Time unit associated with the frequency of subsequent        *\n* exercise dates in the exercise period following the earliest *\n* exercise date.                                               *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExerciseFrequencyUnit = 42119,\n/*\n**********************************************************\n* The unadjusted first day of the exercise period for an *\n* American style option.                                 *\n**********************************************************\n*/\n  UnderlyingProvisionOptionExerciseStartDateUnadjusted = 42120,\n/*\n*****************************************************************\n* Specifies the anchor date when the option exercise start      *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingProvisionOptionExerciseStartDateRelativeTo = 42121,\n/*\n***************************************************************\n* Time unit multiplier for the relative option exercise start *\n* date offset.                                                *\n***************************************************************\n*/\n  UnderlyingProvisionOptionExerciseStartDateOffsetPeriod = 42122,\n/*\n****************************************************************\n* Time unit associated with the relative option exercise start *\n* date offset.                                                 *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExerciseStartDateOffsetUnit = 42123,\n/*\n*************************************************************\n* Specifies the day type of the provision's relative option *\n* exercise start date offset.                               *\n*************************************************************\n*/\n  UnderlyingProvisionOptionExerciseStartDateOffsetDayType = 42124,\n/*\n********************************************************\n* The adjusted first day of the exercise period for an *\n* American style option.                               *\n********************************************************\n*/\n  UnderlyingProvisionOptionExerciseStartDateAdjusted = 42125,\n/*\n****************************************************************\n* The number of periods in the referenced date schedule that   *\n* are between each date in the relative date schedule. Thus a  *\n* skip of 2 would mean that dates are relative to every second *\n* date in the referenced schedule. If present this should have *\n* a value greater than 1.                                      *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExercisePeriodSkip = 42126,\n/*\n****************************************************************\n* The unadjusted first date of a schedule. This can be used to *\n* restrict the range of exercise dates when they are relative. *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExerciseBoundsFirstDateUnadjusted = 42127,\n/*\n****************************************************************\n* The unadjusted last date of a schedule. This can be used to  *\n* restrict the range of exercise dates when they are relative. *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExerciseBoundsLastDateUnadjusted = 42128,\n/*\n****************************************************************\n* The earliest time at which notice of exercise can be given   *\n* by the buyer to the seller (or seller's agent) i) on the     *\n* expriation date, in the case of a European style option,     *\n* (ii) on each bermuda option exercise date and the expiration *\n* date, in the case of a Bermuda style option the commencement *\n* date to, and including, the expiration date, in the case of  *\n* an American option.                                          *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExerciseEarliestTime = 42129,\n/*\n*************************************************************\n* Identifies the business center calendar used with the     *\n* provision's earliest time for notice of exercise.         *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingProvisionOptionExerciseEarliestTimeBusinessCenter = 42130,\n/*\n**************************************************************\n* For a Bermuda or American style option, the latest time on *\n* an exercise business day (excluding the expiration date)   *\n* within the exercise period that notice can be given by the *\n* buyer to the seller or seller's agent. Notice of exercise  *\n* given after this time will be deemed to have been given on *\n* the next exercise business day.                            *\n**************************************************************\n*/\n  UnderlyingProvisionOptionExerciseLatestTime = 42131,\n/*\n*************************************************************\n* Identifies the business center calendar used with the     *\n* provision's latest time for notice of exercise.           *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingProvisionOptionExerciseLatestTimeBusinessCenter = 42132,\n/*\n****************************************************************\n* The unadjusted last day within an exercise period for an     *\n* American style option. For a European style option it is the *\n* only day within the exercise period.                         *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExpirationDateUnadjusted = 42133,\n/*\n**************************************************************\n* The business day convention used to adjust the underlying  *\n* instrument's provision's option expiration date. Used only *\n* to override the business day convention specified in the   *\n* UnderlyingDateAdjustment component within the              *\n* UnderlyingInstrument component.                            *\n**************************************************************\n*/\n  UnderlyingProvisionOptionExpirationDateBusinessDayConvention = 42134,\n/*\n*****************************************************************\n* Specifies the anchor date when the option expiration date is  *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingProvisionOptionExpirationDateRelativeTo = 42135,\n/*\n****************************************************************\n* Time unit multiplier for the relative option expiration date *\n* offset.                                                      *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExpirationDateOffsetPeriod = 42136,\n/*\n************************************************************\n* Time unit associated with the relative option expiration *\n* date offset.                                             *\n************************************************************\n*/\n  UnderlyingProvisionOptionExpirationDateOffsetUnit = 42137,\n/*\n*************************************************************\n* Specifies the day type of the provision's relative option *\n* expiration date offset.                                   *\n*************************************************************\n*/\n  UnderlyingProvisionOptionExpirationDateOffsetDayType = 42138,\n/*\n****************************************************************\n* The adjusted last date within an exercise period for an      *\n* American style option. For a European style option it is the *\n* only date within the exercise period.                        *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExpirationDateAdjusted = 42139,\n/*\n********************************************************\n* The latest time for exercise on the expiration date. *\n********************************************************\n*/\n  UnderlyingProvisionOptionExpirationTime = 42140,\n/*\n*************************************************************\n* Identifies the business center calendar used with the     *\n* provision's latest exercise time on expiration date.      *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingProvisionOptionExpirationTimeBusinessCenter = 42141,\n/*\n****************************************************************\n* The unadjusted date on the underlying set by the exercise of *\n* an option. What this date is depends on the option (e.g. in  *\n* a swaption it is the swap effective date, in an              *\n* extendible/cancelable provision it is the swap termination   *\n* date).                                                       *\n****************************************************************\n*/\n  UnderlyingProvisionOptionRelevantUnderlyingDateUnadjusted = 42142,\n/*\n***************************************************************\n* The business day convnetion used to adjust the underlying   *\n* instrument provision's option underlying date. Used only to *\n* override the business day convention specified in the       *\n* UnderlyingDateAdjustment component within the               *\n* UnderlyingInstrument component.                             *\n***************************************************************\n*/\n  UnderlyingProvisionOptionRelevantUnderlyingDateBusinessDayConvention = 42143,\n/*\n*****************************************************************\n* Specifies the anchor date when the date relevant to the       *\n* underlying trade on exercise is relative to an anchor date.   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingProvisionOptionRelevantUnderlyingDateRelativeTo = 42144,\n/*\n*********************************************************\n* Time unit multiplier for the relative option relevant *\n* underlying date offset.                               *\n*********************************************************\n*/\n  UnderlyingProvisionOptionRelevantUnderlyingDateOffsetPeriod = 42145,\n/*\n**********************************************************\n* Time unit associated with the relative option relevant *\n* underlying date offset.                                *\n**********************************************************\n*/\n  UnderlyingProvisionOptionRelevantUnderlyingDateOffsetUnit = 42146,\n/*\n*************************************************************\n* Specifies the day type of the provision's relative option *\n* relevant underlying date offset.                          *\n*************************************************************\n*/\n  UnderlyingProvisionOptionRelevantUnderlyingDateOffsetDayType = 42147,\n/*\n***************************************************************\n* The adjusted date on the underlying set by the exercise of  *\n* an option. What this date is depends on the option (e.g. in *\n* a swaption it is the swap effective date, in an             *\n* extendible/cancelable provision it is the swap termination  *\n* date).                                                      *\n***************************************************************\n*/\n  UnderlyingProvisionOptionRelevantUnderlyingDateAdjusted = 42148,\n/*\n**********************\n* Type of provision. *\n**********************\n*/\n  UnderlyingProvisionType = 42150,\n/*\n*****************************************\n* The unadjusted date of the provision. *\n*****************************************\n*/\n  UnderlyingProvisionDateUnadjusted = 42151,\n/*\n*************************************************************\n* The business day convention used to adjust the underlying *\n* instrument's provision's date. Used only to override the  *\n* business day convention specified in the                  *\n* UnderlyingDateAdjustment component within the             *\n* UnderlyingInstrument component.                           *\n*************************************************************\n*/\n  UnderlyingProvisionDateBusinessDayConvention = 42152,\n/*\n***************************************\n* The adjusted date of the provision. *\n***************************************\n*/\n  UnderlyingProvisionDateAdjusted = 42153,\n/*\n**********************************************************\n* Time unit multiplier for the provision's tenor period. *\n**********************************************************\n*/\n  UnderlyingProvisionDateTenorPeriod = 42154,\n/*\n***********************************************************\n* Time unit associated with the provision's tenor period. *\n***********************************************************\n*/\n  UnderlyingProvisionDateTenorUnit = 42155,\n/*\n************************************************************\n* Used to identify the calculation agent.  The calculation *\n* agent may be identified in                               *\n* UnderlyingProvisionCalculationAgent(42156) or in the     *\n* underlying provision parties component.                  *\n************************************************************\n*/\n  UnderlyingProvisionCalculationAgent = 42156,\n/*\n***********************************************************\n* If optional early termination is not available to both  *\n* parties then this component identifies the buyer of the *\n* option through its side of the trade.                   *\n***********************************************************\n*/\n  UnderlyingProvisionOptionSinglePartyBuyerSide = 42157,\n/*\n************************************************************\n* If optional early termination is not available to both   *\n* parties then this component identifies the seller of the *\n* option through its side of the trade.                    *\n************************************************************\n*/\n  UnderlyingProvisionOptionSinglePartySellerSide = 42158,\n/*\n**********************************************\n* The instrument provision's exercise style. *\n**********************************************\n*/\n  UnderlyingProvisionOptionExerciseStyle = 42159,\n/*\n****************************************************************\n* A notional amount which restricts the amount of notional     *\n* that can be exercised when partial exercise or multiple      *\n* exercise is applicable. The integral multiple amount defines *\n* a lower limit of notional that can be exercised and also     *\n* defines a unit multiple of notional that can be exercised,   *\n* i.e. only integer multiples of this amount can be exercised. *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExerciseMultipleNotional = 42160,\n/*\n****************************************************************\n* The minimum notional amount that can be exercised on a given *\n* exercise date.                                               *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExerciseMinimumNotional = 42161,\n/*\n****************************************************************\n* The maximum notional amount that can be exercised on a given *\n* exercise date.                                               *\n****************************************************************\n*/\n  UnderlyingProvisionOptionExerciseMaximumNotional = 42162,\n/*\n************************************************************\n* The minimum number of options that can be exercised on a *\n* given exercise date.                                     *\n************************************************************\n*/\n  UnderlyingProvisionOptionMinimumNumber = 42163,\n/*\n***************************************************************\n* The maximum number of options that can be exercised on a    *\n* given exercise date. If the number is not specified, it     *\n* means that the maximum number of options corresponds to the *\n* remaining unexercised options.                              *\n***************************************************************\n*/\n  UnderlyingProvisionOptionMaximumNumber = 42164,\n/*\n***************************************************************\n* Used to indicate whether follow-up confirmation of exercise *\n* (written or electronic) is required following telephonic    *\n* notice by the buyer to the seller or seller's agent.        *\n***************************************************************\n*/\n  UnderlyingProvisionOptionExerciseConfirmation = 42165,\n/*\n***************************************************************\n* An ISDA defined cash settlement method used for the         *\n* determination of the applicable cash settlement amount. The *\n* method is defined in the 2006 ISDA Definitions, Section     *\n* 18.3. Cash Settlement Methods, paragraph (e).               *\n***************************************************************\n*/\n  UnderlyingProvisionCashSettlMethod = 42166,\n/*\n****************************************************************\n* Specifies the currency of settlement. Uses ISO 4217 currency *\n* codes.                                                       *\n****************************************************************\n*/\n  UnderlyingProvisionCashSettlCurrency = 42167,\n/*\n*************************************************************\n* Specifies the currency of settlement for a cross-currency *\n* provision.  Uses ISO 4217 currency codes.                 *\n*************************************************************\n*/\n  UnderlyingProvisionCashSettlCurrency2 = 42168,\n/*\n********************************************\n* Identifies the type of quote to be used. *\n********************************************\n*/\n  UnderlyingProvisionCashSettlQuoteType = 42169,\n/*\n**********************************************************\n* Free form text to specify additional information or    *\n* enumeration description when a standard value does not *\n* apply.                                                 *\n**********************************************************\n*/\n  UnderlyingProvisionText = 42170,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedUnderlyingProvisionText(42712) field.  *\n*************************************************\n*/\n  EncodedUnderlyingProvisionTextLen = 42171,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* UnderlyingProvisionText(42170) field in the encoded format  *\n* specified via the MessageEncoding (347) field. If used, the *\n* ASCII (English) representation should also be specified in  *\n* the UnderlyingProvisionText(42170) field.                   *\n***************************************************************\n*/\n  EncodedUnderlyingProvisionText = 42172,\n/*\n**********************************************************\n* The party identifier for the payment settlement party. *\n**********************************************************\n*/\n  UnderlyingProvisionPartyID = 42174,\n/*\n********************************************\n* Identifies the class or source of the    *\n* UnderlyingProvisionPartyID(42174) value. *\n********************************************\n*/\n  UnderlyingProvisionPartyIDSource = 42175,\n/*\n************************************************\n* Identifies the type or role of               *\n* UnderlyingProvisionPartyID(42174) specified. *\n************************************************\n*/\n  UnderlyingProvisionPartyRole = 42176,\n/*\n****************************************************************\n* Underlying provision party sub-identifier, if applicable for *\n* UnderlyingProvisionPartyID(42174).                           *\n****************************************************************\n*/\n  UnderlyingProvisionPartySubID = 42178,\n/*\n*****************************************************\n* The type of UnderlyingProvisionPartySubID(42178). *\n*****************************************************\n*/\n  UnderlyingProvisionPartySubIDType = 42179,\n/*\n***************************************************************\n* The business center calendar used to adjust the provision's *\n* cash settlement payment's termination, or relative          *\n* termination, date, e.g. \"GBLO\".                             *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  UnderlyingProvisionCashSettlPaymentDateBusinessCenter = 42181,\n/*\n*************************************************************\n* The business center calendar used to adjust the cash      *\n* settlement valuation date, e.g. \"GBLO\".                   *\n* See http://www.fpml.org/coding-scheme/business-center for *\n* standard 4-character code values.                         *\n*************************************************************\n*/\n  UnderlyingProvisionCashSettlValueDateBusinessCenter = 42183,\n/*\n***************************************************************\n* The business center calendar used to adjust the underlying  *\n* instrument's provision's option exercise date, e.g. \"GBLO\". *\n* See http://www.fpml.org/coding-scheme/business-center for   *\n* standard 4-character code values.                           *\n***************************************************************\n*/\n  UnderlyingProvisionOptionExerciseBusinessCenter = 42185,\n/*\n**************************************************************\n* The business center calendar used to adjust the underlying *\n* instrument's provision's option expiration date, e.g.      *\n* \"GBLO\".                                                    *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  UnderlyingProvisionOptionExpirationDateBusinessCenter = 42187,\n/*\n**************************************************************\n* The business center calendar used to adjust the underlying *\n* instrument's provision's option underlying date, e.g.      *\n* \"GBLO\".                                                    *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  UnderlyingProvisionOptionRelevantUnderlyingDateBusinessCenter = 42189,\n/*\n**************************************************************\n* The business center calendar used to adjust the underlying *\n* instrument's provision's date, e.g. \"GBLO\".                *\n* See http://www.fpml.org/coding-scheme/business-center for  *\n* standard 4-character code values.                          *\n**************************************************************\n*/\n  UnderlyingProvisionDateBusinessCenter = 42191,\n/*\n***************************************\n* Identifies the class or source of   *\n* DeliveryStreamDeliveryPoint(41062). *\n***************************************\n*/\n  DeliveryStreamDeliveryPointSource = 42192,\n/*\n***************************************************\n* Description of the delivery point identified in *\n* DeliveryStreamDeliveryPoint(41062).             *\n***************************************************\n*/\n  DeliveryStreamDeliveryPointDesc = 42193,\n/*\n******************************************\n* Identifies the class or source of      *\n* LegDeliveryStreamDeliveryPoint(41433). *\n******************************************\n*/\n  LegDeliveryStreamDeliveryPointSource = 42194,\n/*\n***************************************************\n* Description of the delivery point identified in *\n* LegDeliveryStreamDeliveryPoint(41433).          *\n***************************************************\n*/\n  LegDeliveryStreamDeliveryPointDesc = 42195,\n/*\n*************************************************\n* Identifies the class or source of             *\n* UnderlyingDeliveryStreamDeliveryPoint(41781). *\n*************************************************\n*/\n  UnderlyingDeliveryStreamDeliveryPointSource = 42196,\n/*\n***************************************************\n* Description of the delivery point identified in *\n* UnderlyingDeliveryStreamDeliveryPoint(41781).   *\n***************************************************\n*/\n  UnderlyingDeliveryStreamDeliveryPointDesc = 42197,\n/*\n****************************************************************\n* Specifies which contract definition, such as those published *\n* by ISDA, will apply for the terms of the trade. See          *\n* http://www.fpml.org/coding-scheme/contractual-definitions    *\n* for values.                                                  *\n****************************************************************\n*/\n  LegContractualDefinition = 42199,\n/*\n****************************************************************\n* Identifies the applicable contractual supplement. See        *\n* http://www.fpml.org/coding-scheme/contractual-supplement for *\n* values.                                                      *\n****************************************************************\n*/\n  LegFinancingTermSupplementDesc = 42201,\n/*\n***************************************************************\n* Specifies the publication date of the applicable version of *\n* the contractual supplement.                                 *\n***************************************************************\n*/\n  LegFinancingTermSupplementDate = 42202,\n/*\n*************************************************************\n* Identifies the applicable contract matrix. See            *\n* http://www.fpml.org/coding-scheme/matrix-type-1-0.xml for *\n* values.                                                   *\n*************************************************************\n*/\n  LegContractualMatrixSource = 42204,\n/*\n***************************************************************\n* Specifies the publication date of the applicable version of *\n* the contract matrix. If not specified, the ISDA Standard    *\n* Terms Supplement defines rules for which version of the     *\n* matrix is applicable.                                       *\n***************************************************************\n*/\n  LegContractualMatrixDate = 42205,\n/*\n********************************************************************\n* Specifies the applicable key into the relevent contract          *\n* matrix. In the case of 2000 ISDA Definitions Settlement          *\n* Matrix for Early Termination and Swaptions, the                  *\n* LegContractualMatrixTerm(42206) is not applicable and is to      *\n* be omitted. See                                                  *\n* http://www.fpml.org/coding-scheme/credit-matrix-transaction-type *\n* for values.                                                      *\n********************************************************************\n*/\n  LegContractualMatrixTerm = 42206,\n/*\n****************************************\n* The unadjusted cash settlement date. *\n****************************************\n*/\n  CashSettlDateUnadjusted = 42207,\n/*\n****************************************************************\n* The business day convention used to adjust the cash          *\n* settlement provision's date. Used only to override the       *\n* business day convention defined in the Instrument component. *\n****************************************************************\n*/\n  CashSettlDateBusinessDayConvention = 42208,\n/*\n*****************************************************************\n* Specifies the anchor date when the cash settlement date is    *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  CashSettlDateRelativeTo = 42209,\n/*\n**************************************************************\n* Time unit multiplier for the relative cash settlement date *\n* offset.                                                    *\n**************************************************************\n*/\n  CashSettlDateOffsetPeriod = 42210,\n/*\n***************************************************************\n* Time unit associated with the relative cash settlement date *\n* offset.                                                     *\n***************************************************************\n*/\n  CashSettlDateOffsetUnit = 42211,\n/*\n***************************************************************\n* Specifies the day type of the relative cash settlement date *\n* offset.                                                     *\n***************************************************************\n*/\n  CashSettlDateOffsetDayType = 42212,\n/*\n**************************************\n* The adjusted cash settlement date. *\n**************************************\n*/\n  CashSettlDateAdjusted = 42213,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* cash settlement unadjusted or relative date, e.g. \"GBLO\".    *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  CashSettlDateBusinessCenter = 42215,\n/*\n*************************************************************\n* The source from which the settlement price is to be       *\n* obtained.                                                 *\n* See                                                       *\n* http://www.fpml.org/coding-scheme/settlement-price-source *\n* for values.                                               *\n*************************************************************\n*/\n  CashSettlPriceSource = 42216,\n/*\n**********************************************************\n* The default election for determining settlement price. *\n**********************************************************\n*/\n  CashSettlPriceDefault = 42217,\n/*\n*********************************************\n* The dividend accrual floating rate index. *\n*********************************************\n*/\n  DividendFloatingRateIndex = 42218,\n/*\n***************************************************************\n* Time unit multiplier for the dividend accrual floating rate *\n* index curve.                                                *\n***************************************************************\n*/\n  DividendFloatingRateIndexCurvePeriod = 42219,\n/*\n****************************************************************\n* Time unit associated with the dividend accrual floating rate *\n* index curve period.                                          *\n****************************************************************\n*/\n  DividendFloatingRateIndexCurveUnit = 42220,\n/*\n***************************************************************\n* A rate multiplier to apply to the floating rate. The        *\n* multiplier can be less than or greater than 1 (one). This   *\n* should only be included if the multiplier is not equal to 1 *\n* (one) for the term of the contract.                         *\n***************************************************************\n*/\n  DividendFloatingRateMultiplier = 42221,\n/*\n*******************************************************\n* The basis points spread from the index specified in *\n* DividendFloatingRateIndex(42218).                   *\n*******************************************************\n*/\n  DividendFloatingRateSpread = 42222,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  DividendFloatingRateSpreadPositionType = 42223,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the index. *\n************************************************************\n*/\n  DividendFloatingRateTreatment = 42224,\n/*\n****************************************************************\n* The cap rate, if any, which applies to the floating rate. It *\n* is only required where the floating rate is capped at a      *\n* certain level. The cap rate is assumed to be exclusive of    *\n* any spread and is a per annum rate, expressed as a decimal.  *\n* A cap rate of 5% would be represented as \"0.05\".             *\n****************************************************************\n*/\n  DividendCapRate = 42225,\n/*\n*************************************************************\n* Reference to the buyer of the cap rate option through its *\n* trade side.                                               *\n*************************************************************\n*/\n  DividendCapRateBuySide = 42226,\n/*\n**************************************************************\n* Reference to the seller of the cap rate option through its *\n* trade side.                                                *\n**************************************************************\n*/\n  DividendCapRateSellSide = 42227,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the floating rate.  *\n* The floor rate (strike) is only required where the floating  *\n* rate is floored at a certain strike level. The floor rate is *\n* assumed to be exclusive of any spread and is a per annum     *\n* rate. The rate is expressed as a decimal, e.g. 5% is         *\n* represented as \"0.05\".                                       *\n****************************************************************\n*/\n  DividendFloorRate = 42228,\n/*\n***************************************************************\n* Reference to the buyer of the floor rate option through its *\n* trade side.                                                 *\n***************************************************************\n*/\n  DividendFloorRateBuySide = 42229,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  DividendFloorRateSellSide = 42230,\n/*\n****************************************************************\n* The initial floating rate reset agreed between the principal *\n* parties involved in the trade. This is assumed to be the     *\n* first required reset rate for the first regular calculation  *\n* period. It should only be included when the rate is not      *\n* equal to the rate published on the source implied by the     *\n* floating rate index. The initial rate is expressed in        *\n* decimal form, e.g. 5% is represented as \"0.05\".              *\n****************************************************************\n*/\n  DividendInitialRate = 42231,\n/*\n*******************************************************\n* Specifies the rounding direction of the final rate. *\n*******************************************************\n*/\n  DividendFinalRateRoundingDirection = 42232,\n/*\n***************************************************************\n* Specifies the rounding precision of the final rate in terms *\n* of a number of decimal places. Note how a percentage rate   *\n* rounding of 5 decimal places is expressed as a rounding     *\n* precision of 7.                                             *\n***************************************************************\n*/\n  DividendFinalRatePrecision = 42233,\n/*\n**************************************************************\n* When averaging is applicable, used to specify whether a    *\n* weighted or unweighted average method of calculation is to *\n* be used.                                                   *\n**************************************************************\n*/\n  DividendAveragingMethod = 42234,\n/*\n***************************************************************\n* The specification of any provisions for calculating payment *\n* obligations when a floating rate is negative (either due to *\n* a quoted negative floating rate or by operation of a spread *\n* that is subtracted from the floating rate).                 *\n***************************************************************\n*/\n  DividendNegativeRateTreatment = 42235,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* instrument's dividend accrual payment date, e.g. \"GBLO\".     *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  DividendAccrualPaymentDateBusinessCenter = 42237,\n/*\n*****************************************************************\n* Specifies the anchor date when the accrual payment date is    *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  DividendAccrualPaymentDateRelativeTo = 42238,\n/*\n**************************************************************\n* Time unit multiplier for the relative accrual payment date *\n* offset.                                                    *\n**************************************************************\n*/\n  DividendAccrualPaymentDateOffsetPeriod = 42239,\n/*\n***************************************************************\n* Time unit associated with the relative accrual payment date *\n* offset.                                                     *\n***************************************************************\n*/\n  DividendAccrualPaymentDateOffsetUnit = 42240,\n/*\n***************************************************************\n* Specifies the day type of the relative accrual payment date *\n* offset.                                                     *\n***************************************************************\n*/\n  DividendAccrualPaymentDateOffsetDayType = 42241,\n/*\n****************************************\n* The unadjusted accrual payment date. *\n****************************************\n*/\n  DividendAccrualPaymentDateUnadjusted = 42242,\n/*\n************************************************************\n* Accrual payment date adjustment business day convention. *\n************************************************************\n*/\n  DividendAccrualPaymeentDateBusinessDayConvention = 42243,\n/*\n**************************************\n* The adjusted accrual payment date. *\n**************************************\n*/\n  DividendAccrualPaymentDateAdjusted = 42244,\n/*\n******************************************************\n* Indicates whether the dividend will be reinvested. *\n******************************************************\n*/\n  DividendReinvestmentIndicator = 42245,\n/*\n********************************************************\n* Defines the contract event which the receiver of the *\n* derivative is entitled to the dividend.              *\n********************************************************\n*/\n  DividendEntitlementEvent = 42246,\n/*\n*************************************************************\n* Indicates how the gross cash dividend amount per share is *\n* determined.                                               *\n*************************************************************\n*/\n  DividendAmountType = 42247,\n/*\n**************************************************************\n* References the dividend underlier through the instrument's *\n* UnderlyingSecurityID(309) which must be fully specified in *\n* an instance of the UnderlyingInstrument component.         *\n**************************************************************\n*/\n  DividendUnderlierRefID = 42248,\n/*\n***************************************************************\n* Reference to the party through its side in the trade who    *\n* makes the determination whether dividends are extraordinary *\n* in relation to normal levels.                               *\n***************************************************************\n*/\n  ExtraordinaryDividendPartySide = 42249,\n/*\n***********************************************************\n* Indicates how the extraordinary gross cash dividend per *\n* share is determined.                                    *\n***********************************************************\n*/\n  ExtraordinaryDividendAmountType = 42250,\n/*\n*************************************************************\n* The currency in which the excess dividend is denominated. *\n* Uses ISO 4217 currency codes.                             *\n*************************************************************\n*/\n  ExtraordinaryDividendCurrency = 42251,\n/*\n**************************************************************\n* Specifies the method in which the excess amount is         *\n* determined.                                                *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  ExtraordinaryDividendDeterminationMethod = 42252,\n/*\n************************************************************\n* The dividend accrual fixed rate per annum expressed as a *\n* decimal.                                                 *\n* A value of 5% would be represented as \"0.05\".            *\n************************************************************\n*/\n  DividendAccrualFixedRate = 42253,\n/*\n********************************************************\n* The compounding method to be used when more than one *\n* dividend period contributes to a single payment.     *\n********************************************************\n*/\n  DividendCompoundingMethod = 42254,\n/*\n******************************************************\n* The number of index units applicable to dividends. *\n******************************************************\n*/\n  DividendNumOfIndexUnits = 42255,\n/*\n*************************************************\n* Declared cash dividend percentage.            *\n* A value of 5% would be represented as \"0.05\". *\n*************************************************\n*/\n  DividendCashPercentage = 42256,\n/*\n*************************************************\n* Declared cash-equivalent dividend percentage. *\n* A value of 5% would be represented as \"0.05\". *\n*************************************************\n*/\n  DividendCashEquivalentPercentage = 42257,\n/*\n************************************************\n* Defines the treatment of non-cash dividends. *\n************************************************\n*/\n  NonCashDividendTreatment = 42258,\n/*\n*****************************************************\n* Defines how the composition of dividends is to be *\n* determined.                                       *\n*****************************************************\n*/\n  DividendComposition = 42259,\n/*\n*******************************************************\n* Indicates whether special dividends are applicable. *\n*******************************************************\n*/\n  SpecialDividendsIndicator = 42260,\n/*\n*****************************************************\n* Indicates whether material non-cash dividends are *\n* applicable.                                       *\n*****************************************************\n*/\n  MaterialDividendsIndicator = 42261,\n/*\n***************************************************************\n* Indicates whether option exchange dividends are applicable. *\n***************************************************************\n*/\n  OptionsExchangeDividendsIndicator = 42262,\n/*\n**********************************************************\n* Indicates whether additional dividends are applicable. *\n**********************************************************\n*/\n  AdditionalDividendsIndicator = 42263,\n/*\n**************************************************************\n* Represents the European Master Confirmation value of 'All  *\n* Dividends' which, when applicable, signifies that, for a   *\n* given Ex-Date, the daily observed share price for that day *\n* is adjusted (reduced) by the cash dividend and/or the cash *\n* value of any non-cash dividend per share (including        *\n* extraordinary dividends) declared by the issuer.           *\n**************************************************************\n*/\n  AllDividendsIndicator = 42264,\n/*\n*****************************************************************\n* Specifies the anchor date when the FX trigger date is         *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  DividendFXTriggerDateRelativeTo = 42265,\n/*\n*********************************************************\n* Time unit multiplier for the relative FX trigger date *\n* offset.                                               *\n*********************************************************\n*/\n  DividendFXTriggerDateOffsetPeriod = 42266,\n/*\n**********************************************************\n* Time unit associated with the relative FX trigger date *\n* offset.                                                *\n**********************************************************\n*/\n  DividendFXTriggerDateOffsetUnit = 42267,\n/*\n**********************************************************\n* Specifies the day type of the relative FX trigger date *\n* offset.                                                *\n**********************************************************\n*/\n  DividendFXTriggerDateOffsetDayType = 42268,\n/*\n***********************************\n* The unadjusted FX trigger date. *\n***********************************\n*/\n  DividendFXTriggerDateUnadjusted = 42269,\n/*\n************************************************************\n* The business day convention used for the FX trigger date *\n* adjustment.                                              *\n************************************************************\n*/\n  DividendFXTriggerDateBusinessDayConvention = 42270,\n/*\n*********************************\n* The adjusted FX trigger date. *\n*********************************\n*/\n  DividendFXTriggerDateAdjusted = 42271,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* instrument's FX trigger date, e.g. \"GBLO\".                   *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  DividendFXTriggerDateBusinessCenter = 42273,\n/*\n***************************************************************\n* Defines the ordinal dividend period. E.g. 1 = First period, *\n* 2 = Second period, etc.                                     *\n***************************************************************\n*/\n  DividendPeriodSequence = 42275,\n/*\n****************************************************************\n* The unadjusted date on which the dividend period will begin. *\n****************************************************************\n*/\n  DividendPeriodStartDateUnadjusted = 42276,\n/*\n**************************************************************\n* The unadjusted date on which the dividend period will end. *\n**************************************************************\n*/\n  DividendPeriodEndDateUnadjusted = 42277,\n/*\n**************************************************************\n* References the dividend underlier through the instrument's *\n* UnderlyingSecurityID(309) which must be fully specified in *\n* an instance of the UnderlyingInstrument component.         *\n**************************************************************\n*/\n  DividendPeriodUnderlierRefID = 42278,\n/*\n************************************************************\n* Specifies the fixed strike price of the dividend period. *\n************************************************************\n*/\n  DividendPeriodStrikePrice = 42279,\n/*\n******************************************************\n* The dividend period dates business day convention. *\n******************************************************\n*/\n  DividendPeriodBusinessDayConvention = 42280,\n/*\n**************************************************\n* The unadjusted dividend period valuation date. *\n**************************************************\n*/\n  DividendPeriodValuationDateUnadjusted = 42281,\n/*\n*****************************************************************\n* Specifies the anchor date when the dividend period valuation  *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  DividendPeriodValuationDateRelativeTo = 42282,\n/*\n*********************************************************\n* Time unit multiplier for the relative dividend period *\n* valuation date offset.                                *\n*********************************************************\n*/\n  DividendPeriodValuationDateOffsetPeriod = 42283,\n/*\n**********************************************************\n* Time unit associated with the relative dividend period *\n* valuation date offset.                                 *\n**********************************************************\n*/\n  DividendPeriodValuationDateOffsetUnit = 42284,\n/*\n**********************************************************\n* Specifies the day type of the relative dividend period *\n* valuation date offset.                                 *\n**********************************************************\n*/\n  DividendPeriodValuationDateOffsetDayType = 42285,\n/*\n************************************************\n* The adjusted dividend period valuation date. *\n************************************************\n*/\n  DividendPeriodValuationDateAdjusted = 42286,\n/*\n************************************************\n* The unadjusted dividend period payment date. *\n************************************************\n*/\n  DividendPeriodPaymentDateUnadjusted = 42287,\n/*\n*****************************************************************\n* Specifies the anchor date when the dividend period payment    *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  DividendPeriodPaymentDateRelativeTo = 42288,\n/*\n*********************************************************\n* Time unit multiplier for the relative dividend period *\n* payment date offset.                                  *\n*********************************************************\n*/\n  DividendPeriodPaymentDateOffsetPeriod = 42289,\n/*\n**********************************************************\n* Time unit associated with the relative dividend period *\n* payment date offset.                                   *\n**********************************************************\n*/\n  DividendPeriodPaymentDateOffsetUnit = 42290,\n/*\n**********************************************************\n* Specifies the day type of the relative dividend period *\n* payment date offset.                                   *\n**********************************************************\n*/\n  DividendPeriodPaymentDateOffsetDayType = 42291,\n/*\n**********************************************\n* The adjusted dividend period payment date. *\n**********************************************\n*/\n  DividendPeriodPaymentDateAdjusted = 42292,\n/*\n************************************************************\n* Identifier for linking this stream dividend period to an *\n* underlier through an instance of RelatedInstrumentGrp.   *\n************************************************************\n*/\n  DividendPeriodXID = 42293,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* instrument's dividend period date, e.g. \"GBLO\".              *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  DividendPeriodBusinessCenter = 42295,\n/*\n*************************************************************************\n* Identifies the type of extraordinary or disruptive event              *\n* applicable to the reference entity.                                   *\n* See                                                                   *\n* http://www.fixtradingcommunity.org/codelists#Extraordinary_Event_Type *\n* for code list of extraordinary event types and values.                *\n*************************************************************************\n*/\n  ExtraordinaryEventType = 42297,\n/*\n*************************************************************************\n* The extraordinary or disruptive event value appropriate to            *\n* ExtraordinaryEventType(42297).                                        *\n* See                                                                   *\n* http://www.fixtradingcommunity.org/codelists#Extraordinary_Event_Type *\n* for code list of extraordinary event types and values.                *\n*************************************************************************\n*/\n  ExtraordinaryEventValue = 42298,\n/*\n****************************************\n* The unadjusted cash settlement date. *\n****************************************\n*/\n  LegCashSettlDateUnadjusted = 42299,\n/*\n***********************************************************\n* The business day convention used to adjust the cash     *\n* settlement provision's date.  Used only to override the *\n* business day convention defined in the InstrumentLeg    *\n* component.                                              *\n***********************************************************\n*/\n  LegCashSettlDateBusinessDayConvention = 42300,\n/*\n*****************************************************************\n* Specifies the anchor date when the cash settlement date is    *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegCashSettlDateRelativeTo = 42301,\n/*\n**************************************************************\n* Time unit multiplier for the relative cash settlement date *\n* offset.                                                    *\n**************************************************************\n*/\n  LegCashSettlDateOffsetPeriod = 42302,\n/*\n***************************************************************\n* Time unit associated with the relative cash settlement date *\n* offset.                                                     *\n***************************************************************\n*/\n  LegCashSettlDateOffsetUnit = 42303,\n/*\n***************************************************************\n* Specifies the day type of the relative cash settlement date *\n* offset.                                                     *\n***************************************************************\n*/\n  LegCashSettlDateOffsetDayType = 42304,\n/*\n**************************************\n* The adjusted cash settlement date. *\n**************************************\n*/\n  LegCashSettlDateAdjusted = 42305,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* cash settlement unadjusted or relative date, e.g. \"GBLO\".    *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegCashSettlDateBusinessCenter = 42307,\n/*\n*************************************************************\n* The source from which the settlement price is to be       *\n* obtained.                                                 *\n* See                                                       *\n* http://www.fpml.org/coding-scheme/settlement-price-source *\n* for values.                                               *\n*************************************************************\n*/\n  LegCashSettlPriceSource = 42308,\n/*\n**********************************************************\n* The default election for determining settlement price. *\n**********************************************************\n*/\n  LegCashSettlPriceDefault = 42309,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* instrument's dividend accrual payment date, e.g. \"GBLO\".     *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegDividendAccrualPaymentDateBusinessCenter = 42311,\n/*\n*********************************************\n* The dividend accrual floating rate index. *\n*********************************************\n*/\n  LegDividendFloatingRateIndex = 42312,\n/*\n***************************************************************\n* Time unit multiplier for the dividend accrual floating rate *\n* index curve.                                                *\n***************************************************************\n*/\n  LegDividendFloatingRateIndexCurvePeriod = 42313,\n/*\n****************************************************************\n* Time unit associated with the dividend accrual floating rate *\n* index curve period.                                          *\n****************************************************************\n*/\n  LegDividendFloatingRateIndexCurveUnit = 42314,\n/*\n***************************************************************\n* A rate multiplier to apply to the floating rate. The        *\n* multiplier can be less than or greater than 1 (one). This   *\n* should only be included if the multiplier is not equal to 1 *\n* (one) for the term of the contract.                         *\n***************************************************************\n*/\n  LegDividendFloatingRateMultiplier = 42315,\n/*\n*******************************************************\n* The basis points spread from the index specified in *\n* LegDividendFloatingRateIndex(42312).                *\n*******************************************************\n*/\n  LegDividendFloatingRateSpread = 42316,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  LegDividendFloatingRateSpreadPositionType = 42317,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the index. *\n************************************************************\n*/\n  LegDividendFloatingRateTreatment = 42318,\n/*\n****************************************************************\n* The cap rate, if any, which applies to the floating rate. It *\n* is only required where the floating rate is capped at a      *\n* certain level. The cap rate is assumed to be exclusive of    *\n* any spread and is a per annum rate, expressed as a decimal.  *\n* A cap rate of 5% would be represented as \"0.05\".             *\n****************************************************************\n*/\n  LegDividendCapRate = 42319,\n/*\n*************************************************************\n* Reference to the buyer of the cap rate option through its *\n* trade side.                                               *\n*************************************************************\n*/\n  LegDividendCapRateBuySide = 42320,\n/*\n**************************************************************\n* Reference to the seller of the cap rate option through its *\n* trade side.                                                *\n**************************************************************\n*/\n  LegDividendCapRateSellSide = 42321,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the floating rate.  *\n* The floor rate (strike) is only required where the floating  *\n* rate is floored at a certain strike level. The floor rate is *\n* assumed to be exclusive of any spread and is a per annum     *\n* rate. The rate is expressed as a decimal, e.g. 5% is         *\n* represented as \"0.05\".                                       *\n****************************************************************\n*/\n  LegDividendFloorRate = 42322,\n/*\n***************************************************************\n* Reference to the buyer of the floor rate option through its *\n* trade side.                                                 *\n***************************************************************\n*/\n  LegDividendFloorRateBuySide = 42323,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  LegDividendFloorRateSellSide = 42324,\n/*\n****************************************************************\n* The initial floating rate reset agreed between the principal *\n* parties involved in the trade. This is assumed to be the     *\n* first required reset rate for the first regular calculation  *\n* period. It should only be included when the rate is not      *\n* equal to the rate published on the source implied by the     *\n* floating rate index. The initial rate is expressed in        *\n* decimal form, e.g. 5% is represented as \"0.05\".              *\n****************************************************************\n*/\n  LegDividendInitialRate = 42325,\n/*\n*******************************************************\n* Specifies the rounding direction of the final rate. *\n*******************************************************\n*/\n  LegDividendFinalRateRoundingDirection = 42326,\n/*\n***************************************************************\n* Specifies the rounding precision of the final rate in terms *\n* of a number of decimal places. Note how a percentage rate   *\n* rounding of 5 decimal places is expressed as a rounding     *\n* precision of 7.                                             *\n***************************************************************\n*/\n  LegDividendFinalRatePrecision = 42327,\n/*\n**************************************************************\n* When averaging is applicable, used to specify whether a    *\n* weighted or unweighted average method of calculation is to *\n* be used.                                                   *\n**************************************************************\n*/\n  LegDividendAveragingMethod = 42328,\n/*\n***************************************************************\n* The specification of any provisions for calculating payment *\n* obligations when a floating rate is negative (either due to *\n* a quoted negative floating rate or by operation of a spread *\n* that is subtracted from the floating rate).                 *\n***************************************************************\n*/\n  LegDividendNegativeRateTreatment = 42329,\n/*\n*****************************************************************\n* Specifies the anchor date when the accrual payment date is    *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegDividendAccrualPaymentDateRelativeTo = 42330,\n/*\n**************************************************************\n* Time unit multiplier for the relative accrual payment date *\n* offset.                                                    *\n**************************************************************\n*/\n  LegDividendAccrualPaymentDateOffsetPeriod = 42331,\n/*\n***************************************************************\n* Time unit associated with the relative accrual payment date *\n* offset.                                                     *\n***************************************************************\n*/\n  LegDividendAccrualPaymentDateOffsetUnit = 42332,\n/*\n***************************************************************\n* Specifies the day type of the relative accrual payment date *\n* offset.                                                     *\n***************************************************************\n*/\n  LegDividendAccrualPaymentDateOffsetDayType = 42333,\n/*\n****************************************\n* The unadjusted accrual payment date. *\n****************************************\n*/\n  LegDividendAccrualPaymentDateUnadjusted = 42334,\n/*\n************************************************************\n* Accrual payment date adjustment business day convention. *\n************************************************************\n*/\n  LegDividendAccrualPaymentDateBusinessDayConvention = 42335,\n/*\n**************************************\n* The adjusted accrual payment date. *\n**************************************\n*/\n  LegDividendAccrualPaymentDateAdjusted = 42336,\n/*\n******************************************************\n* Indicates whether the dividend will be reinvested. *\n******************************************************\n*/\n  LegDividendReinvestmentIndicator = 42337,\n/*\n********************************************************\n* Defines the contract event which the receiver of the *\n* derivative is entitled to the dividend.              *\n********************************************************\n*/\n  LegDividendEntitlementEvent = 42338,\n/*\n*************************************************************\n* Indicates how the gross cash dividend amount per share is *\n* determined.                                               *\n*************************************************************\n*/\n  LegDividendAmountType = 42339,\n/*\n**************************************************************\n* References the dividend underlier through the instrument's *\n* UnderlyingSecurityID(309) which must be fully specified in *\n* an instance of the UnderlyingInstrument component.         *\n**************************************************************\n*/\n  LegDividendUnderlierRefID = 42340,\n/*\n***************************************************************\n* Reference to the party through its side in the trade who    *\n* makes the determination whether dividends are extraordinary *\n* in relation to normal levels.                               *\n***************************************************************\n*/\n  LegExtraordinaryDividendPartySide = 42341,\n/*\n***********************************************************\n* Indicates how the extraordinary gross cash dividend per *\n* share is determined.                                    *\n***********************************************************\n*/\n  LegExtraordinaryDividendAmountType = 42342,\n/*\n*************************************************************\n* The currency in which the excess dividend is denominated. *\n* Uses ISO 4217 currency codes.                             *\n*************************************************************\n*/\n  LegExtraordinaryDividendCurrency = 42343,\n/*\n**************************************************************\n* Specifies the method in which the excess amount is         *\n* determined.                                                *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  LegExtraordinaryDividendDeterminationMethod = 42344,\n/*\n************************************************************\n* The dividend accrual fixed rate per annum expressed as a *\n* decimal.                                                 *\n* A value of 5% would be represented as \"0.05\".            *\n************************************************************\n*/\n  LegDividendAccrualFixedRate = 42345,\n/*\n********************************************************\n* The compounding method to be used when more than one *\n* dividend period contributes to a single payment.     *\n********************************************************\n*/\n  LegDividendCompoundingMethod = 42346,\n/*\n******************************************************\n* The number of index units applicable to dividends. *\n******************************************************\n*/\n  LegDividendNumOfIndexUnits = 42347,\n/*\n*************************************************\n* Declared cash dividend percentage.            *\n* A value of 5% would be represented as \"0.05\". *\n*************************************************\n*/\n  LegDividendCashPercentage = 42348,\n/*\n*************************************************\n* Declared cash-equivalent dividend percentage. *\n* A value of 5% would be represented as \"0.05\". *\n*************************************************\n*/\n  LegDividendCashEquivalentPercentage = 42349,\n/*\n************************************************\n* Defines the treatment of non-cash dividends. *\n************************************************\n*/\n  LegNonCashDividendTreatment = 42350,\n/*\n*****************************************************\n* Defines how the composition of dividends is to be *\n* determined.                                       *\n*****************************************************\n*/\n  LegDividendComposition = 42351,\n/*\n*******************************************************\n* Indicates whether special dividends are applicable. *\n*******************************************************\n*/\n  LegSpecialDividendsIndicator = 42352,\n/*\n*****************************************************\n* Indicates whether material non-cash dividends are *\n* applicable.                                       *\n*****************************************************\n*/\n  LegMaterialDividendsIndicator = 42353,\n/*\n***************************************************************\n* Indicates whether option exchange dividends are applicable. *\n***************************************************************\n*/\n  LegOptionsExchangeDividendsIndicator = 42354,\n/*\n**********************************************************\n* Indicates whether additional dividends are applicable. *\n**********************************************************\n*/\n  LegAdditionalDividendsIndicator = 42355,\n/*\n**************************************************************\n* Represents the European Master Confirmation value of 'All  *\n* Dividends' which, when applicable, signifies that, for a   *\n* given Ex-Date, the daily observed share price for that day *\n* is adjusted (reduced) by the cash dividend and/or the cash *\n* value of any non-cash dividend per share (including        *\n* extraordinary dividends) declared by the issuer.           *\n**************************************************************\n*/\n  LegAllDividendsIndicator = 42356,\n/*\n*****************************************************************\n* Specifies the anchor date when the FX trigger date is         *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegDividendFXTriggerDateRelativeTo = 42357,\n/*\n*********************************************************\n* Time unit multiplier for the relative FX trigger date *\n* offset.                                               *\n*********************************************************\n*/\n  LegDividendFXTriggerDateOffsetPeriod = 42358,\n/*\n**********************************************************\n* Time unit associated with the relative FX trigger date *\n* offset.                                                *\n**********************************************************\n*/\n  LegDividendFXTriggerDateOffsetUnit = 42359,\n/*\n**********************************************************\n* Specifies the day type of the relative FX trigger date *\n* offset.                                                *\n**********************************************************\n*/\n  LegDividendFXTriggerDateOffsetDayType = 42360,\n/*\n***********************************\n* The unadjusted FX trigger date. *\n***********************************\n*/\n  LegDividendFXTriggerDateUnadjusted = 42361,\n/*\n************************************************************\n* The business day convention used for the FX trigger date *\n* adjustment.                                              *\n************************************************************\n*/\n  LegDividendFXTriggerDateBusinessDayConvention = 42362,\n/*\n*********************************\n* The adjusted FX trigger date. *\n*********************************\n*/\n  LegDividendFXTriggerDateAdjusted = 42363,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* instrument's FX trigger date, e.g. \"GBLO\".                   *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegDividendFXTriggerDateBusinessCenter = 42365,\n/*\n***************************************************************\n* Defines the ordinal dividend period. E.g. 1 = First period, *\n* 2 = Second period, etc.                                     *\n***************************************************************\n*/\n  LegDividendPeriodSequence = 42367,\n/*\n****************************************************************\n* The unadjusted date on which the dividend period will begin. *\n****************************************************************\n*/\n  LegDividendPeriodStartDateUnadjusted = 42368,\n/*\n**************************************************************\n* The unadjusted date on which the dividend period will end. *\n**************************************************************\n*/\n  LegDividendPeriodEndDateUnadjusted = 42369,\n/*\n**************************************************************\n* References the dividend underlier through the instrument's *\n* UnderlyingSecurityID(309) which must be fully specified in *\n* an instance of the UnderlyingInstrument component.         *\n**************************************************************\n*/\n  LegDividendPeriodUnderlierRefID = 42370,\n/*\n************************************************************\n* Specifies the fixed strike price of the dividend period. *\n************************************************************\n*/\n  LegDividendPeriodStrikePrice = 42371,\n/*\n******************************************************\n* The dividend period dates business day convention. *\n******************************************************\n*/\n  LegDividendPeriodBusinessDayConvention = 42372,\n/*\n**************************************************\n* The unadjusted dividend period valuation date. *\n**************************************************\n*/\n  LegDividendPeriodValuationDateUnadjusted = 42373,\n/*\n*****************************************************************\n* Specifies the anchor date when the dividend period valuation  *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegDividendPeriodValuationDateRelativeTo = 42374,\n/*\n*********************************************************\n* Time unit multiplier for the relative dividend period *\n* valuation date offset.                                *\n*********************************************************\n*/\n  LegDividendPeriodValuationDateOffsetPeriod = 42375,\n/*\n**********************************************************\n* Time unit associated with the relative dividend period *\n* valuation date offset.                                 *\n**********************************************************\n*/\n  LegDividendPeriodValuationDateOffsetUnit = 42376,\n/*\n**********************************************************\n* Specifies the day type of the relative dividend period *\n* valuation date offset.                                 *\n**********************************************************\n*/\n  LegDividendPeriodValuationDateOffsetDayType = 42377,\n/*\n************************************************\n* The adjusted dividend period valuation date. *\n************************************************\n*/\n  LegDividendPeriodValuationDateAdjusted = 42378,\n/*\n************************************************\n* The unadjusted dividend period payment date. *\n************************************************\n*/\n  LegDividendPeriodPaymentDateUnadjusted = 42379,\n/*\n*****************************************************************\n* Specifies the anchor date when the dividend period payment    *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegDividendPeriodPaymentDateRelativeTo = 42380,\n/*\n*********************************************************\n* Time unit multiplier for the relative dividend period *\n* payment date offset.                                  *\n*********************************************************\n*/\n  LegDividendPeriodPaymentDateOffsetPeriod = 42381,\n/*\n**********************************************************\n* Time unit associated with the relative dividend period *\n* payment date offset.                                   *\n**********************************************************\n*/\n  LegDividendPeriodPaymentDateOffsetUnit = 42382,\n/*\n**********************************************************\n* Specifies the day type of the relative dividend period *\n* payment date offset.                                   *\n**********************************************************\n*/\n  LegDividendPeriodPaymentDateOffsetDayType = 42383,\n/*\n**********************************************\n* The adjusted dividend period payment date. *\n**********************************************\n*/\n  LegDividendPeriodPaymentDateAdjusted = 42384,\n/*\n************************************************************\n* Identifier for linking this stream dividend period to an *\n* underlier through an instance of RelatedInstrumentGrp.   *\n************************************************************\n*/\n  LegDividendPeriodXID = 42385,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* instrument's dividend period date, e.g. \"GBLO\".              *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegDividendPeriodBusinessCenter = 42387,\n/*\n*************************************************************************\n* Identifies the type of extraordinary or disruptive event              *\n* applicable to the reference entity.                                   *\n* See                                                                   *\n* http://www.fixtradingcommunity.org/codelists#Extraordinary_Event_Type *\n* for code list of extraordinary event types and values.                *\n*************************************************************************\n*/\n  LegExtraordinaryEventType = 42389,\n/*\n*************************************************************************\n* The extraordinary or disruptive event value appropriate to            *\n* LegExtraordinaryEventType(42389).                                     *\n* See                                                                   *\n* http://www.fixtradingcommunity.org/codelists#Extraordinary_Event_Type *\n* for code list of extraordinary event types and values.                *\n*************************************************************************\n*/\n  LegExtraordinaryEventValue = 42390,\n/*\n***********************************************************\n* Side value of the party electing the settlement method. *\n***********************************************************\n*/\n  LegSettlMethodElectingPartySide = 42391,\n/*\n*************************************************************\n* The date through which option cannot be exercised without *\n* penalty.                                                  *\n*************************************************************\n*/\n  LegMakeWholeDate = 42392,\n/*\n**************************************************************\n* Amount to be paid by the buyer of the option if the option *\n* is exercised prior to the LegMakeWholeDate(42392).         *\n**************************************************************\n*/\n  LegMakeWholeAmount = 42393,\n/*\n*************************************************\n* Identifies the benchmark floating rate index. *\n*************************************************\n*/\n  LegMakeWholeBenchmarkCurveName = 42394,\n/*\n***************************************************************\n* The point on the floating rate index curve.                 *\n* Sample values:                                              *\n* M = combination of a number between 1-12 and an \"M\" for     *\n* month, e.g. 3M                                              *\n* Y = combination of number between 1-100 and a \"Y\" for year, *\n* e.g. 10Y                                                    *\n* 10Y-OLD = see above, then add \"-OLD\" when appropriate       *\n* INTERPOLATED = the point is mathematically derived          *\n* 2/2031 5 3/8 = the point is stated via a combination of     *\n* maturity month / year and coupon.                           *\n***************************************************************\n*/\n  LegMakeWholeBenchmarkCurvePoint = 42395,\n/*\n****************************************\n* Spread over the floating rate index. *\n****************************************\n*/\n  LegMakeWholeRecallSpread = 42396,\n/*\n**************************************************************\n* The quote side of the benchmark to be used for calculating *\n* the \"make whole\" amount.                                   *\n**************************************************************\n*/\n  LegMakeWholeBenchmarkQuote = 42397,\n/*\n*************************************************************\n* The method used when calculating the \"make whole\" amount. *\n* The most common is linear method.                         *\n*************************************************************\n*/\n  LegMakeWholeInterpolationMethod = 42398,\n/*\n****************************************************\n* Indicates whether cash settlement is applicable. *\n****************************************************\n*/\n  LegPaymentStreamCashSettlIndicator = 42399,\n/*\n***************************************************************\n* Reference to the stream which details the compounding fixed *\n* or floating rate.                                           *\n***************************************************************\n*/\n  LegPaymentStreamCompoundingXIDRef = 42400,\n/*\n****************************************************************\n* The spread to be used for compounding. Used in scenarios     *\n* where the interest payment is based on a compounding formula *\n* that uses a compounding spread in addition to the regular    *\n* spread.                                                      *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingSpread = 42401,\n/*\n***********************************************************\n* The method used when calculating the index rate from    *\n* multiple points on the curve. The most common is linear *\n* method.                                                 *\n***********************************************************\n*/\n  LegPaymentStreamInterpolationMethod = 42402,\n/*\n*************************************************\n* Defines applicable periods for interpolation. *\n*************************************************\n*/\n  LegPaymentStreamInterpolationPeriod = 42403,\n/*\n****************************************************************\n* The compounding fixed rate applicable to the payment stream. *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingFixedRate = 42404,\n/*\n*******************************************************\n* The compounding date.  Type of date is specified in *\n* LegPaymentStreamCompoundingDateType(42407).         *\n*******************************************************\n*/\n  LegPaymentStreamCompoundingDate = 42406,\n/*\n********************************************************\n* Specifies the type of payment compounding date (e.g. *\n* adjusted for holidays).                              *\n********************************************************\n*/\n  LegPaymentStreamCompoundingDateType = 42407,\n/*\n**************************************************\n* The compounding dates business day convention. *\n**************************************************\n*/\n  LegPaymentStreamCompoundingDatesBusinessDayConvention = 42408,\n/*\n*****************************************************************\n* Specifies the anchor date when the compounding dates are      *\n* relative to an anchor  date.                                  *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStreamCompoundingDatesRelativeTo = 42409,\n/*\n**********************************************************\n* Time unit multiplier for the relative compounding date *\n* offset.                                                *\n**********************************************************\n*/\n  LegPaymentStreamCompoundingDatesOffsetPeriod = 42410,\n/*\n***********************************************************\n* Time unit associated with the relative compounding date *\n* offset.                                                 *\n***********************************************************\n*/\n  LegPaymentStreamCompoundingDatesOffsetUnit = 42411,\n/*\n***********************************************************\n* Specifies the day type of the relative compounding date *\n* offset.                                                 *\n***********************************************************\n*/\n  LegPaymentStreamCompoundingDatesOffsetDayType = 42412,\n/*\n***************************************************************\n* The number of periods in the \"RelativeTo\" schedule that are *\n* between each date in the compounding schedule. A skip of 2  *\n* would mean that compounding dates are relative to every     *\n* second date in the \"RelativeTo\" schedule. If present this   *\n* should have a value greater than 1.                         *\n***************************************************************\n*/\n  LegPaymentStreamCompoundingPeriodSkip = 42413,\n/*\n***************************************************************\n* Time unit multiplier for the frequency at which compounding *\n* dates occur.                                                *\n***************************************************************\n*/\n  LegPaymentStreamCompoundingFrequencyPeriod = 42414,\n/*\n****************************************************************\n* Time unit associated with the frequency at which compounding *\n* dates occur.                                                 *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingFrequencyUnit = 42415,\n/*\n****************************************************************\n* The convention for determining the sequence of compounding   *\n* dates. It is used in conjunction with a specified frequency. *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingRollConvention = 42416,\n/*\n***************************************************************\n* The unadjusted first date of the compounding schedule. This *\n* can be used to restrict the range of dates when they are    *\n* relative.                                                   *\n***************************************************************\n*/\n  LegPaymentStreamBoundsFirstDateUnadjusted = 42417,\n/*\n**************************************************************\n* The unadjusted last date of the compounding schedule. This *\n* can be used to restrict the range of dates when they are   *\n* relative.                                                  *\n**************************************************************\n*/\n  LegPaymentStreamBoundsLastDateUnadjusted = 42418,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* payment stream compounding dates, e.g. \"GBLO\".               *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingDatesBusinessCenter = 42420,\n/*\n****************************************\n* The unadjusted compounding end date. *\n****************************************\n*/\n  LegPaymentStreamCompoundingEndDateUnadjusted = 42421,\n/*\n*****************************************************************\n* Specifies the anchor date when the compounding end date is    *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStreamCompoundingEndDateRelativeTo = 42422,\n/*\n**************************************************************\n* Time unit multiplier for the relative compounding end date *\n* offset.                                                    *\n**************************************************************\n*/\n  LegPaymentStreamCompoundingEndDateOffsetPeriod = 42423,\n/*\n***************************************************************\n* Time unit associated with the relative compounding end date *\n* offset.                                                     *\n***************************************************************\n*/\n  LegPaymentStreamCompoundingEndDateOffsetUnit = 42424,\n/*\n***************************************************************\n* Specifies the day type of the relative compounding end date *\n* offset.                                                     *\n***************************************************************\n*/\n  LegPaymentStreamCompoundingEndDateOffsetDayType = 42425,\n/*\n**************************************\n* The adjusted compounding end date. *\n**************************************\n*/\n  LegPaymentStreamCompoundingEndDateAdjusted = 42426,\n/*\n*********************************************************\n* The payment stream's compounding floating rate index. *\n*********************************************************\n*/\n  LegPaymentStreamCompoundingRateIndex = 42427,\n/*\n*************************************************************\n* Time unit multiplier for the payment stream's compounding *\n* floating rate index curve period.                         *\n*************************************************************\n*/\n  LegPaymentStreamCompoundingRateIndexCurvePeriod = 42428,\n/*\n**************************************************************\n* Time unit associated with the payment stream's compounding *\n* floating rate index curve period.                          *\n**************************************************************\n*/\n  LegPaymentStreamCompoundingRateIndexCurveUnit = 42429,\n/*\n****************************************************************\n* A rate multiplier to apply to the compounding floating rate. *\n* The multiplier can be less than or greater than 1 (one).     *\n* This should only be included if the multiplier is not equal  *\n* to 1 (one) for the term of the stream.                       *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingRateMultiplier = 42430,\n/*\n*******************************************************\n* The basis points spread from the index specified in *\n* LegPaymentStreamCompoundingRateIndex(42427).        *\n*******************************************************\n*/\n  LegPaymentStreamCompoundingRateSpread = 42431,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  LegPaymentStreamCompoundingRateSpreadPositionType = 42432,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the index. *\n************************************************************\n*/\n  LegPaymentStreamCompoundingRateTreatment = 42433,\n/*\n****************************************************************\n* The cap rate, if any, which applies to the compounding       *\n* floating rate. It is only required where the compounding     *\n* floating rate on a swap stream is capped at a certain level. *\n* The cap rate is assumed to be exclusive of any spread and is *\n* a per annum rate, expressed as a decimal. A cap rate of 5%   *\n* would be represented as \"0.05\".                              *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingCapRate = 42434,\n/*\n*************************************************************\n* Reference to the buyer of the compounding cap rate option *\n* through its trade side.                                   *\n*************************************************************\n*/\n  LegPaymentStreamCompoundingCapRateBuySide = 42435,\n/*\n**************************************************************\n* Reference to the seller of the compounding cap rate option *\n* through its trade side.                                    *\n**************************************************************\n*/\n  LegPaymentStreamCompoundingCapRateSellSide = 42436,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the compounding     *\n* floating rate. The floor rate (strike) is only required      *\n* where the compounding floating rate on a swap stream is      *\n* floored at a certain strike level. The floor rate is assumed *\n* to be exclusive of any spread and is a per annum rate. The   *\n* rate is expressed as a decimal, e.g. 5% is represented as    *\n* \"0.05\".                                                      *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingFloorRate = 42437,\n/*\n***************************************************************\n* Reference to the buyer of the compounding floor rate option *\n* through its trade side.                                     *\n***************************************************************\n*/\n  LegPaymentStreamCompoundingFloorRateBuySide = 42438,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingFloorRateSellSide = 42439,\n/*\n****************************************************************\n* The initial compounding floating rate reset agreed between   *\n* the principal parties involved in the trade. It should only  *\n* be included when the rate is not equal to the rate published *\n* on the source implied by the floating rate index. The        *\n* initial rate is expressed in decimal form, e.g. 5% is        *\n* represented as \"0.05\".                                       *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingInitialRate = 42440,\n/*\n********************************************************\n* Specifies the rounding direction for the compounding *\n* floating rate.                                       *\n********************************************************\n*/\n  LegPaymentStreamCompoundingFinalRateRoundingDirection = 42441,\n/*\n****************************************************************\n* Specifies the compounding floating rate rounding precision   *\n* in terms of a number of decimal places. Note how a           *\n* percentage rate rounding of 5 decimal places is expressed as *\n* a rounding precision of 7.                                   *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingFinalRatePrecision = 42442,\n/*\n***************************************************************\n* Specifies the averaging method when compounding floating    *\n* rate averaging is applicable (e.g. weighted or unweighted). *\n***************************************************************\n*/\n  LegPaymentStreamCompoundingAveragingMethod = 42443,\n/*\n***************************************************************\n* Specifies the method for calculating payment obligations    *\n* when a compounding floating rate is negative (either due to *\n* a quoted negative floating rate or by operation of a spread *\n* that is subtracted from the floating rate).                 *\n***************************************************************\n*/\n  LegPaymentStreamCompoundingNegativeRateTreatment = 42444,\n/*\n******************************************\n* The unadjusted compounding start date. *\n******************************************\n*/\n  LegPaymentStreamCompoundingStartDateUnadjusted = 42445,\n/*\n*****************************************************************\n* Specifies the anchor date when the compounding start date is  *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStreamCompoundingStartDateRelativeTo = 42446,\n/*\n****************************************************************\n* Time unit multiplier for the relative compounding start date *\n* offset.                                                      *\n****************************************************************\n*/\n  LegPaymentStreamCompoundingStartDateOffsetPeriod = 42447,\n/*\n************************************************************\n* Time unit associated with the relative compounding start *\n* date offset.                                             *\n************************************************************\n*/\n  LegPaymentStreamCompoundingStartDateOffsetUnit = 42448,\n/*\n************************************************************\n* Specifies the day type of the relative compounding start *\n* date offset.                                             *\n************************************************************\n*/\n  LegPaymentStreamCompoundingStartDateOffsetDayType = 42449,\n/*\n****************************************\n* The adjusted compounding start date. *\n****************************************\n*/\n  LegPaymentStreamCompoundingStartDateAdjusted = 42450,\n/*\n**************************************************************\n* Length in bytes of the LegPaymentStreamFormulaImage(42452) *\n* field.                                                     *\n**************************************************************\n*/\n  LegPaymentStreamFormulaImageLength = 42451,\n/*\n**********************************************************\n* Image of the formula image when represented through an *\n* encoded clip in base64Binary.                          *\n**********************************************************\n*/\n  LegPaymentStreamFormulaImage = 42452,\n/*\n********************************************\n* The unadjusted final price payment date. *\n********************************************\n*/\n  LegPaymentStreamFinalPricePaymentDateUnadjusted = 42453,\n/*\n*****************************************************************\n* Specifies the anchor date when the final price payment date   *\n* is relative to an anchor date.                                *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStreamFinalPricePaymentDateRelativeTo = 42454,\n/*\n*************************************************************\n* Time unit multiplier for the relative final price payment *\n* date offset.                                              *\n*************************************************************\n*/\n  LegPaymentStreamFinalPricePaymentDateOffsetPeriod = 42455,\n/*\n**************************************************************\n* Time unit associated with the relative final price payment *\n* date offset.                                               *\n**************************************************************\n*/\n  LegPaymentStreamFinalPricePaymentDateOffsetUnit = 42456,\n/*\n**************************************************************\n* Specifies the day type of the relative final price payment *\n* date offset.                                               *\n**************************************************************\n*/\n  LegPaymentStreamFinalPricePaymentDateOffsetDayType = 42457,\n/*\n******************************************\n* The adjusted final price payment date. *\n******************************************\n*/\n  LegPaymentStreamFinalPricePaymentDateAdjusted = 42458,\n/*\n**************************************************\n* The fixing date.  Type of date is specified in *\n* LegPaymentStreamFixingDateType(42461).         *\n**************************************************\n*/\n  LegPaymentStreamFixingDate = 42460,\n/*\n********************************************************\n* Specifies the type of fixing date (e.g. adjusted for *\n* holidays).                                           *\n********************************************************\n*/\n  LegPaymentStreamFixingDateType = 42461,\n/*\n**************************************************\n* The unadjusted initial price observation date. *\n**************************************************\n*/\n  LegPaymentStreamFirstObservationDateUnadjusted = 42462,\n/*\n*****************************************************************\n* Specifies the anchor date when the initial price observation  *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStreamFirstObservationDateRelativeTo = 42463,\n/*\n****************************************************************\n* Specifies the day type of the initial price observation date *\n* offset.                                                      *\n****************************************************************\n*/\n  LegPaymentStreamFirstObservationDateOffsetDayType = 42464,\n/*\n************************************************\n* The adjusted initial price observation date. *\n************************************************\n*/\n  LegPaymentStreamFirstObservationDateAdjusted = 42465,\n/*\n**************************************************************\n* References the dividend underlier through the instrument's *\n* UnderlyingSecurityID(309) which must be fully specified in *\n* an instance of the UnderlyingInstrument component.         *\n**************************************************************\n*/\n  LegPaymentStreamUnderlierRefID = 42466,\n/*\n**************************************************************\n* Indicates whether the term \"Equity Notional Reset\" as      *\n* defined in the ISDA 2002 Equity Derivatives Definitions is *\n* applicable (\"Y\") or not.                                   *\n**************************************************************\n*/\n  LegReturnRateNotionalReset = 42467,\n/*\n*********************************************************\n* Price level at which the correlation or variance swap *\n* contract will strike.                                 *\n*********************************************************\n*/\n  LegPaymentStreamLinkInitialLevel = 42468,\n/*\n***************************************************************\n* Indicates whether the correlation or variance swap contract *\n* will (\"Y\") strike off the closing level of the default      *\n* exchange traded contract or not.                            *\n***************************************************************\n*/\n  LegPaymentStreamLinkClosingLevelIndicator = 42469,\n/*\n***************************************************************\n* Indicates whether the correlation or variance swap contract *\n* will (\"Y\") strike off the expiring level of the default     *\n* exchange traded contract or not.                            *\n***************************************************************\n*/\n  LegPaymentStreamLinkExpiringLevelIndicator = 42470,\n/*\n**********************************************************\n* The expected number of trading days in the variance or *\n* correlation swap stream.                               *\n**********************************************************\n*/\n  LegPaymentStreamLinkEstimatedTradingDays = 42471,\n/*\n**************************************************************\n* The strike price of a correlation or variance swap stream. *\n**************************************************************\n*/\n  LegPaymentStreamLinkStrikePrice = 42472,\n/*\n********************************************************\n* For a variance swap specifies how                    *\n* LegPaymentStreamLinkStrikePrice(42472) is expressed. *\n********************************************************\n*/\n  LegPaymentStreamLinkStrikePriceType = 42473,\n/*\n***************************************************************\n* Specifies the maximum or upper boundary for variance or     *\n* strike determination.                                       *\n* For a variation swap stream all observations above this     *\n* price level will be excluded from the variance calculation. *\n* For a correlation swap stream the maximum boundary is a     *\n* percentage of the strike price.                             *\n***************************************************************\n*/\n  LegPaymentStreamLinkMaximumBoundary = 42474,\n/*\n***************************************************************\n* Specifies the minimum or lower boundary for variance or     *\n* strike determination.                                       *\n* For a variation swap stream all observations below this     *\n* price level will be excluded from the variance calculation. *\n* For a correlation swap stream the minimum boundary is a     *\n* percentage of the strike price.                             *\n***************************************************************\n*/\n  LegPaymentStreamLinkMinimumBoundary = 42475,\n/*\n****************************************************************\n* Number of data series for a correlation swap.  Normal market *\n* practice is that correlation data sets are drawn from        *\n* geographic market areas, such as America, Europe and Asia    *\n* Pacific.  Each of these geographic areas will have its own   *\n* data series to avoid contagion.                              *\n****************************************************************\n*/\n  LegPaymentStreamLinkNumberOfDataSeries = 42476,\n/*\n********************************************************\n* Indicates the scaling factor to be multiplied by the *\n* variance strike price thereby making variance cap    *\n* applicable.                                          *\n********************************************************\n*/\n  LegPaymentStreamVarianceUnadjustedCap = 42477,\n/*\n********************************************************\n* Indicates which price to use to satisfy the boundary *\n* condition.                                           *\n********************************************************\n*/\n  LegPaymentStreamRealizedVarianceMethod = 42478,\n/*\n**************************************************************\n* Indicates whether the contract specifies that the notional *\n* should be scaled by the number of days in range divided by *\n* the estimate trading days or not. The number of \"days in   *\n* range\" refers to the number of returns that contribute to  *\n* the realized volatility.                                   *\n**************************************************************\n*/\n  LegPaymentStreamDaysAdjustmentIndicator = 42479,\n/*\n**************************************************************\n* References a contract listed on an exchange through the    *\n* instrument's UnderlyingSecurityID(309) which must be fully *\n* specified in an instance of the UnderlyingInstrument       *\n* component.                                                 *\n**************************************************************\n*/\n  LegPaymentStreamNearestExchangeContractRefID = 42480,\n/*\n*********************************************************\n* Vega Notional represents the approximate gain/loss at *\n* maturity for a 1% difference between RVol (realized   *\n* volatility) and KVol (strike volatility). It does not *\n* necessarily represent the Vega risk of the trade.     *\n*********************************************************\n*/\n  LegPaymentStreamVegaNotionalAmount = 42481,\n/*\n************************************************************\n* The currency in which the formula amount is denominated. *\n* Uses ISO 4217 currency codes.                            *\n************************************************************\n*/\n  LegPaymentStreamFormulaCurrency = 42482,\n/*\n**************************************************************\n* Specifies the method according to which the formula amount *\n* currency is determined.                                    *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  LegPaymentStreamFormulaCurrencyDeterminationMethod = 42483,\n/*\n***************************************************************************\n* Specifies the reference amount when this term either                    *\n* corresponds to the standard ISDA Definition (either the 2002            *\n* Equity Definition for the Equity Amount, or the 2000                    *\n* Definition for the Interest Amount), or refers to a term                *\n* defined elsewhere in the swap document.                                 *\n* See                                                                     *\n* http://www.fixtradingcommunity.org/codelists#Payment_Amount_Relative_To *\n* for code list of reference amounts.                                     *\n***************************************************************************\n*/\n  LegPaymentStreamFormulaReferenceAmount = 42484,\n/*\n****************************************\n* A description of the math formula in *\n* LegPaymentStreamFormula(42486).      *\n****************************************\n*/\n  LegPaymentStreamFormulaDesc = 42487,\n/*\n*********************************\n* The unadjusted stub end date. *\n*********************************\n*/\n  LegPaymentStubEndDateUnadjusted = 42488,\n/*\n**********************************************\n* The stub end date business day convention. *\n**********************************************\n*/\n  LegPaymentStubEndDateBusinessDayConvention = 42489,\n/*\n*****************************************************************\n* Specifies the anchor date when the stub end date is relative  *\n* to an anchor date.                                            *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStubEndDateRelativeTo = 42490,\n/*\n***************************************************************\n* Time unit multiplier for the relative stub end date offset. *\n***************************************************************\n*/\n  LegPaymentStubEndDateOffsetPeriod = 42491,\n/*\n****************************************************************\n* Time unit associated with the relative stub end date offset. *\n****************************************************************\n*/\n  LegPaymentStubEndDateOffsetUnit = 42492,\n/*\n****************************************************************\n* Specifies the day type of the relative stub end date offset. *\n****************************************************************\n*/\n  LegPaymentStubEndDateOffsetDayType = 42493,\n/*\n*******************************\n* The adjusted stub end date. *\n*******************************\n*/\n  LegPaymentStubEndDateAdjusted = 42494,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* payment stub end date, e.g. \"GBLO\".                          *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegPaymentStubEndDateBusinessCenter = 42496,\n/*\n***********************************\n* The unadjusted stub start date. *\n***********************************\n*/\n  LegPaymentStubStartDateUnadjusted = 42497,\n/*\n************************************************\n* The stub start date business day convention. *\n************************************************\n*/\n  LegPaymentStubStartDateBusinessDayConvention = 42498,\n/*\n*****************************************************************\n* Specifies the anchor date when the stub start date is         *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegPaymentStubStartDateRelativeTo = 42499,\n/*\n*********************************************************\n* Time unit multiplier for the relative stub start date *\n* offset.                                               *\n*********************************************************\n*/\n  LegPaymentStubStartDateOffsetPeriod = 42500,\n/*\n**********************************************************\n* Time unit associated with the relative stub start date *\n* offset.                                                *\n**********************************************************\n*/\n  LegPaymentStubStartDateOffsetUnit = 42501,\n/*\n**********************************************************\n* Specifies the day type of the relative stub start date *\n* offset.                                                *\n**********************************************************\n*/\n  LegPaymentStubStartDateOffsetDayType = 42502,\n/*\n*********************************\n* The adjusted stub start date. *\n*********************************\n*/\n  LegPaymentStubStartDateAdjusted = 42503,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* payment stub start date, e.g. \"GBLO\".                        *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegPaymentStubStartDateBusinessCenter = 42505,\n/*\n************************************************\n* Type of fee elected for the break provision. *\n************************************************\n*/\n  LegProvisionBreakFeeElection = 42506,\n/*\n**************************************************************\n* Break fee election rate when the break fee is proportional *\n* to the notional. A fee rate of 5% would be represented as  *\n* \"0.05\".                                                    *\n**************************************************************\n*/\n  LegProvisionBreakFeeRate = 42507,\n/*\n**************************************************************\n* Specifies the valuation type applicable to the return rate *\n* date.                                                      *\n**************************************************************\n*/\n  LegReturnRateDateMode = 42509,\n/*\n*****************************************************************\n* Specifies the anchor date when the return rate valuation      *\n* dates are relative to an anchor date.                         *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegReturnRateValuationDateRelativeTo = 42510,\n/*\n***************************************************************\n* Time unit multiplier for the relative return rate valuation *\n* date offset.                                                *\n***************************************************************\n*/\n  LegReturnRateValuationDateOffsetPeriod = 42511,\n/*\n****************************************************************\n* Time unit associated with the relative return rate valuation *\n* date offset.                                                 *\n****************************************************************\n*/\n  LegReturnRateValuationDateOffsetUnit = 42512,\n/*\n****************************************************************\n* Specifies the day type of the relative return rate valuation *\n* date offset.                                                 *\n****************************************************************\n*/\n  LegReturnRateValuationDateOffsetDayType = 42513,\n/*\n*************************************************************\n* The unadjusted start date for return rate valuation. This *\n* can be used to restrict the range of dates when they are  *\n* relative.                                                 *\n*************************************************************\n*/\n  LegReturnRateValuationStartDateUnadjusted = 42514,\n/*\n*****************************************************************\n* Specifies the anchor date when the return rate valuation      *\n* start date is relative to an anchor date.                     *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegReturnRateValuationStartDateRelativeTo = 42515,\n/*\n***************************************************************\n* Time unit multiplier for the relative return rate valuation *\n* start date offset.                                          *\n***************************************************************\n*/\n  LegReturnRateValuationStartDateOffsetPeriod = 42516,\n/*\n****************************************************************\n* Time unit associated with the relative return rate valuation *\n* start date offset.                                           *\n****************************************************************\n*/\n  LegReturnRateValuationStartDateOffsetUnit = 42517,\n/*\n****************************************************************\n* Specifies the day type of the relative return rate valuation *\n* start date offset.                                           *\n****************************************************************\n*/\n  LegReturnRateValuationStartDateOffsetDayType = 42518,\n/*\n***************************************************************\n* The adjusted start date for return rate valuation. This can *\n* be used to restrict the range of dates when they are        *\n* relative.                                                   *\n***************************************************************\n*/\n  LegReturnRateValuationStartDateAdjusted = 42519,\n/*\n***************************************************************\n* The unadjusted end date for return rate valuation. This can *\n* be used to restrict the range of dates when they are        *\n* relative.                                                   *\n***************************************************************\n*/\n  LegReturnRateValuationEndDateUnadjusted = 42520,\n/*\n*****************************************************************\n* Specifies the anchor date when the return rate valuation end  *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegReturnRateValuationEndDateRelativeTo = 42521,\n/*\n***************************************************************\n* Time unit multiplier for the relative return rate valuation *\n* end date offset.                                            *\n***************************************************************\n*/\n  LegReturnRateValuationEndDateOffsetPeriod = 42522,\n/*\n****************************************************************\n* Time unit associated with the relative return rate valuation *\n* end date offset.                                             *\n****************************************************************\n*/\n  LegReturnRateValuationEndDateOffsetUnit = 42523,\n/*\n****************************************************************\n* Specifies the day type of the relative return rate valuation *\n* end date offset.                                             *\n****************************************************************\n*/\n  LegReturnRateValuationEndDateOffsetDayType = 42524,\n/*\n****************************************************************\n* The adjusted end date for return rate valuation. This can be *\n* used to restrict the range of dates when they are relative.  *\n****************************************************************\n*/\n  LegReturnRateValuationEndDateAdjusted = 42525,\n/*\n***************************************************************\n* Time unit multiplier for the frequency at which return rate *\n* valuation dates occur.                                      *\n***************************************************************\n*/\n  LegReturnRateValuationFrequencyPeriod = 42526,\n/*\n****************************************************************\n* Time unit associated with the frequency at which return rate *\n* valuation dates occur.                                       *\n****************************************************************\n*/\n  LegReturnRateValuationFrequencyUnit = 42527,\n/*\n***************************************************************\n* The convention for determining the sequence of return rate  *\n* valuation dates. It is used in conjunction with a specified *\n* frequency.                                                  *\n***************************************************************\n*/\n  LegReturnRateValuationFrequencyRollConvention = 42528,\n/*\n************************************************************\n* The return rate valuation dates business day convention. *\n************************************************************\n*/\n  LegReturnRateValuationDateBusinessDayConvention = 42529,\n/*\n***************************************************************\n* Specifies the currency pair for the FX conversion expressed *\n* using the CCY1/CCY2 convention.  Uses ISO 4217 currency     *\n* codes.                                                      *\n***************************************************************\n*/\n  LegReturnRateFXCurrencySymbol = 42531,\n/*\n****************************************************************\n* The rate of exchange between the two currencies specified in *\n* LegReturnRateFXCurrencySymbol(42531).                        *\n****************************************************************\n*/\n  LegReturnRateFXRate = 42532,\n/*\n****************************************************************\n* The rate of exchange between the two currencies specified in *\n* LegReturnRateFXCurrencySymbol(42531).                        *\n****************************************************************\n*/\n  LegReturnRateFXRateCalc = 42533,\n/*\n************************************************************\n* Specifies the type of price sequence of the return rate. *\n************************************************************\n*/\n  LegReturnRatePriceSequence = 42535,\n/*\n*****************************************************\n* Specifies the basis or unit used to calculate the *\n* commission.                                       *\n*****************************************************\n*/\n  LegReturnRateCommissionBasis = 42536,\n/*\n**************************\n* The commission amount. *\n**************************\n*/\n  LegReturnRateCommissionAmount = 42537,\n/*\n***************************************************************\n* Specifies the currency the commission amount is denominated *\n* in. Uses ISO 4217 currency codes.                           *\n***************************************************************\n*/\n  LegReturnRateCommissionCurrency = 42538,\n/*\n***********************************\n* The total commission per trade. *\n***********************************\n*/\n  LegReturnRateTotalCommissionPerTrade = 42539,\n/*\n**************************************************************\n* Specifies the method by which the underlier prices are     *\n* determined.                                                *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  LegReturnRateDeterminationMethod = 42540,\n/*\n*******************************************************************\n* Specifies the reference amount when the return rate amount      *\n* is relative to another amount in the trade.                     *\n* See                                                             *\n* http://www.fixtradingcommunity.org/codelists#Amount_Relative_To *\n* for code list of relative amounts.                              *\n*******************************************************************\n*/\n  LegReturnRateAmountRelativeTo = 42541,\n/*\n**************************************************************\n* Specifies the type of the measure applied to the return    *\n* rate's asset, e.g. valuation, sensitivity risk. This could *\n* be an NPV, a cash flow, a clean price, etc.                *\n* See http://www.fpml.org/coding-scheme/asset-measure for    *\n* values.                                                    *\n**************************************************************\n*/\n  LegReturnRateQuoteMeasureType = 42542,\n/*\n****************************************************************\n* Specifies the units that the measure is expressed in. If not *\n* specified, the default is a price/value in currency units.   *\n* See http://www.fpml.org/coding-scheme/price-quote-units for  *\n* values.                                                      *\n****************************************************************\n*/\n  LegReturnRateQuoteUnits = 42543,\n/*\n************************************************************\n* Specifies the type of quote used to determine the return *\n* rate of the swap.                                        *\n************************************************************\n*/\n  LegReturnRateQuoteMethod = 42544,\n/*\n***************************************************************\n* Specifies the currency the return rate quote is denominated *\n* in.  Uses ISO 4217 Currency Code.                           *\n***************************************************************\n*/\n  LegReturnRateQuoteCurrency = 42545,\n/*\n*************************************************************\n* Specifies the type of currency, e.g. settlement currency, *\n* base currency, etc., that the quote is reported in.       *\n* See                                                       *\n* http://www.fpml.org/coding-scheme/reporting-currency-type *\n* for values.                                               *\n*************************************************************\n*/\n  LegReturnRateQuoteCurrencyType = 42546,\n/*\n*******************************************************\n* Specifies how or the timing when the quote is to be *\n* obtained.                                           *\n*******************************************************\n*/\n  LegReturnRateQuoteTimeType = 42547,\n/*\n***********************************************\n* The time when the quote is to be generated. *\n***********************************************\n*/\n  LegReturnRateQuoteTime = 42548,\n/*\n***********************************************\n* The date when the quote is to be generated. *\n***********************************************\n*/\n  LegReturnRateQuoteDate = 42549,\n/*\n***********************************************\n* The time when the quote ceases to be valid. *\n***********************************************\n*/\n  LegReturnRateQuoteExpirationTime = 42550,\n/*\n****************************************************************\n* The business center calendar used for adjustments associated *\n* with LegReturnRateQuoteTimeType(42547) or                    *\n* LegReturnRateQuoteTime(42548) and                            *\n* LegReturnRateQuoteDate(42549), e.g. \"GBLO\".                  *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegReturnRateQuoteBusinessCenter = 42551,\n/*\n****************************************************************\n* Specifies the exchange (e.g. stock or listed futures/options *\n* exchange) from which the quote is obtained.                  *\n****************************************************************\n*/\n  LegReturnRateQuoteExchange = 42552,\n/*\n***************************************************************\n* Specifies the pricing model used to evaluate the underlying *\n* asset price.                                                *\n* See http://www.fpml.org/coding-scheme/pricing-model for     *\n* values.                                                     *\n***************************************************************\n*/\n  LegReturnRateQuotePricingModel = 42553,\n/*\n***********************************************************\n* Specifies the type of cash flows, e.g. coupon payment,  *\n* premium fee, settlement fee, etc.                       *\n* See http://www.fpml.org/coding-scheme/cashflow-type for *\n* values.                                                 *\n***********************************************************\n*/\n  LegReturnRateCashFlowType = 42554,\n/*\n**************************************************************\n* Specifies the timing at which the calculation agent values *\n* the underlying.                                            *\n**************************************************************\n*/\n  LegReturnRateValuationTimeType = 42555,\n/*\n******************************************************\n* The time at which the calculation agent values the *\n* underlying asset.                                  *\n******************************************************\n*/\n  LegReturnRateValuationTime = 42556,\n/*\n****************************************************************\n* The business center calendar used for adjustments associated *\n* with LegReturnRateValuationTimeType(42555) or                *\n* LegReturnRateValuationTime(42556), e.g. \"GBLO\".              *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegReturnRateValuationTimeBusinessCenter = 42557,\n/*\n**********************************************************\n* Indicates whether an ISDA price option applies, and if *\n* applicable which type of price.                        *\n**********************************************************\n*/\n  LegReturnRateValuationPriceOption = 42558,\n/*\n*************************************************************\n* Specifies the fallback provision for the hedging party in *\n* the determination of the final price.                     *\n*************************************************************\n*/\n  LegReturnRateFinalPriceFallback = 42559,\n/*\n*********************************************************\n* Identifies the source of rate information. For FX the *\n* references source to be used for the FX spot rate.    *\n*********************************************************\n*/\n  LegReturnRateInformationSource = 42561,\n/*\n**************************************************************\n* Identifies the reference \"page\" from the rate source.      *\n* For FX, the reference page to the spot rate to be used for *\n* the reference FX spot rate.                                *\n* When LegReturnRateInformationSource(42561) = 3 (ISDA       *\n* Settlement Rate Option) this contains the value from the   *\n* scheme that reflects the terms of the Annex A to the ISDA  *\n* 1998 FX and Currency Option Definitions.                   *\n* See:                                                       *\n* http://www.fpml.org/coding-scheme/settlement-rate-option.  *\n**************************************************************\n*/\n  LegReturnRateReferencePage = 42562,\n/*\n*****************************************************\n* Identifies the page heading from the rate source. *\n*****************************************************\n*/\n  LegReturnRateReferencePageHeading = 42563,\n/*\n**********************************\n* The basis of the return price. *\n**********************************\n*/\n  LegReturnRatePriceBasis = 42565,\n/*\n*****************************************************\n* Specifies the price of the underlying swap asset. *\n*****************************************************\n*/\n  LegReturnRatePrice = 42566,\n/*\n**************************************************************\n* Specifies the currency of the price of the leg swap asset. *\n* Uses ISO 4217 currency codes.                              *\n**************************************************************\n*/\n  LegReturnRatePriceCurrency = 42567,\n/*\n****************************************************************\n* Specifies whether the LegReturnRatePrice(42566) is expressed *\n* in absolute or relative terms.                               *\n****************************************************************\n*/\n  LegReturnRatePriceType = 42568,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* return rate valuation unadjusted or relative dates, e.g.     *\n* \"GBLO\".                                                      *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegReturnRateValuationDateBusinessCenter = 42570,\n/*\n********************************************************\n* The return rate valuation date.  The type of date is *\n* specified in LegReturnRateValuationDateType(42573).  *\n********************************************************\n*/\n  LegReturnRateValuationDate = 42572,\n/*\n**********************************************************\n* Specifies the type of return rate valuation date (e.g. *\n* adjusted for holidays).                                *\n**********************************************************\n*/\n  LegReturnRateValuationDateType = 42573,\n/*\n***************************************************\n* The unadjusted settlement method election date. *\n***************************************************\n*/\n  LegSettlMethodElectionDateUnadjusted = 42574,\n/*\n***************************************************************\n* The settlement method election date adjustment business day *\n* convention.                                                 *\n***************************************************************\n*/\n  LegSettlMethodElectionDateBusinessDayConvention = 42575,\n/*\n*****************************************************************\n* Specifies the anchor date when the settlement method          *\n* election date is relative to an anchor date.                  *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  LegSettlMethodElectionDateRelativeTo = 42576,\n/*\n***********************************************************\n* Time unit multiplier for the relative settlement method *\n* election date offset.                                   *\n***********************************************************\n*/\n  LegSettlMethodElectionDateOffsetPeriod = 42577,\n/*\n************************************************************\n* Time unit associated with the relative settlement method *\n* election date offset.                                    *\n************************************************************\n*/\n  LegSettlMethodElectionDateOffsetUnit = 42578,\n/*\n************************************************************\n* Specifies the day type of the relative settlement method *\n* election date offset.                                    *\n************************************************************\n*/\n  LegSettlMethodElectionDateOffsetDayType = 42579,\n/*\n*************************************************\n* The adjusted settlement method election date. *\n*************************************************\n*/\n  LegSettlMethodElectionDateAdjusted = 42580,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* settlement method election unadjusted or relative date, e.g. *\n* \"GBLO\".                                                      *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  LegSettlMethodElectionDateBusinessCenter = 42582,\n/*\n**************************************************************\n* The stream version identifier when there have been         *\n* modifications to the contract over time. Helps signal when *\n* there are embedded changes.                                *\n**************************************************************\n*/\n  LegStreamVersion = 42583,\n/*\n******************************************************\n* The effective date of the LegStreamVersion(42583). *\n******************************************************\n*/\n  LegStreamVersionEffectiveDate = 42584,\n/*\n**************************************************************\n* Specifies the method for determining the floating notional *\n* value for equity swaps.                                    *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  LegStreamNotionalDeterminationMethod = 42585,\n/*\n**************************************************************\n* For equity swaps this specifies the conditions that govern *\n* the adjustment to the number of units of the swap.         *\n**************************************************************\n*/\n  LegStreamNotionalAdjustments = 42586,\n/*\n**********************************************************************************************************\n* The delivery or pricing region associated with the commodity                                           *\n* swap. See                                                                                              *\n* http://www.ecfr.gov/cgi-bin/text-idx?SID=660d6a40f836aa6ddf213cba080c5b22&node=ap17.2.43_17.e&rgn=div9 *\n* for the external code list.                                                                            *\n**********************************************************************************************************\n*/\n  StreamCommodityDeliveryPricingRegion = 42587,\n/*\n**********************************************************************************************************\n* The delivery or pricing region associated with the commodity                                           *\n* swap. See                                                                                              *\n* http://www.ecfr.gov/cgi-bin/text-idx?SID=660d6a40f836aa6ddf213cba080c5b22&node=ap17.2.43_17.e&rgn=div9 *\n* for the external code list.                                                                            *\n**********************************************************************************************************\n*/\n  LegStreamCommodityDeliveryPricingRegion = 42588,\n/*\n**********************************************************************************************************\n* The delivery or pricing region associated with the commodity                                           *\n* swap. See                                                                                              *\n* http://www.ecfr.gov/cgi-bin/text-idx?SID=660d6a40f836aa6ddf213cba080c5b22&node=ap17.2.43_17.e&rgn=div9 *\n* for the external code list.                                                                            *\n**********************************************************************************************************\n*/\n  UnderlyingStreamCommodityDeliveryPricingRegion = 42589,\n/*\n***********************************************************\n* Side value of the party electing the settlement method. *\n***********************************************************\n*/\n  SettlMethodElectingPartySide = 42590,\n/*\n*************************************************************\n* The date through which option cannot be exercised without *\n* penalty.                                                  *\n*************************************************************\n*/\n  MakeWholeDate = 42591,\n/*\n**************************************************************\n* Amount to be paid by the buyer of the option if the option *\n* is exercised prior to the MakeWholeDate(42591).            *\n**************************************************************\n*/\n  MakeWholeAmount = 42592,\n/*\n*************************************************\n* Identifies the benchmark floating rate index. *\n*************************************************\n*/\n  MakeWholeBenchmarkCurveName = 42593,\n/*\n***************************************************************\n* The point on the floating rate index curve.                 *\n* Sample values:                                              *\n* M = combination of a number between 1-12 and an \"M\" for     *\n* month, e.g. 3M                                              *\n* Y = combination of number between 1-100 and a \"Y\" for year, *\n* e.g. 10Y                                                    *\n* 10Y-OLD = see above, then add \"-OLD\" when appropriate       *\n* INTERPOLATED = the point is mathematically derived          *\n* 2/2031 5 3/8 = the point is stated via a combination of     *\n* maturity month / year and coupon.                           *\n***************************************************************\n*/\n  MakeWholeBenchmarkCurvePoint = 42594,\n/*\n****************************************\n* Spread over the floating rate index. *\n****************************************\n*/\n  MakeWholeRecallSpread = 42595,\n/*\n**************************************************************\n* The quote side of the benchmark to be used for calculating *\n* the \"make whole\" amount.                                   *\n**************************************************************\n*/\n  MakeWholeBenchmarkQuote = 42596,\n/*\n*************************************************************\n* The method used when calculating the \"make whole\" amount. *\n* The most common is linear method.                         *\n*************************************************************\n*/\n  MakeWholeInterpolationMethod = 42597,\n/*\n***************************************************************************\n* Specifies the reference amount when the payment amount is               *\n* relative to another amount in the message.                              *\n* See                                                                     *\n* http://www.fixtradingcommunity.org/codelists#Payment_Amount_Relative_To *\n* for code list of relative amounts.                                      *\n***************************************************************************\n*/\n  PaymentAmountRelativeTo = 42598,\n/*\n**************************************************************\n* Specifies the method by which a payment amount is          *\n* determined.                                                *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  PaymentAmountDeterminationMethod = 42599,\n/*\n****************************************************\n* Indicates whether cash settlement is applicable. *\n****************************************************\n*/\n  PaymentStreamCashSettlIndicator = 42600,\n/*\n***************************************************************\n* Reference to the stream which details the compounding fixed *\n* or floating rate.                                           *\n***************************************************************\n*/\n  PaymentStreamCompoundingXIDRef = 42601,\n/*\n****************************************************************\n* The spread to be used for compounding. Used in scenarios     *\n* where the interest payment is based on a compounding formula *\n* that uses a compounding spread in addition to the regular    *\n* spread.                                                      *\n****************************************************************\n*/\n  PaymentStreamCompoundingSpread = 42602,\n/*\n***********************************************************\n* The method used when calculating the index rate from    *\n* multiple points on the curve. The most common is linear *\n* method.                                                 *\n***********************************************************\n*/\n  PaymentStreamInterpolationMethod = 42603,\n/*\n*************************************************\n* Defines applicable periods for interpolation. *\n*************************************************\n*/\n  PaymentStreamInterpolationPeriod = 42604,\n/*\n****************************************************************\n* The compounding fixed rate applicable to the payment stream. *\n****************************************************************\n*/\n  PaymentStreamCompoundingFixedRate = 42605,\n/*\n***********************************************************\n* The compounding date.  The type of date is specified in *\n* PaymentStreamCompoundingDateType(42608).                *\n***********************************************************\n*/\n  PaymentStreamCompoundingDate = 42607,\n/*\n********************************************************\n* Specifies the type of payment compounding date (e.g. *\n* adjusted for holidays).                              *\n********************************************************\n*/\n  PaymentStreamCompoundingDateType = 42608,\n/*\n**************************************************\n* The compounding dates business day convention. *\n**************************************************\n*/\n  PaymentStreamCompoundingDatesBusinessDayConvention = 42609,\n/*\n*****************************************************************\n* Specifies the anchor date when the compounding dates are      *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStreamCompoundingDatesRelativeTo = 42610,\n/*\n**********************************************************\n* Time unit multiplier for the relative compounding date *\n* offset.                                                *\n**********************************************************\n*/\n  PaymentStreamCompoundingDatesOffsetPeriod = 42611,\n/*\n***********************************************************\n* Time unit associated with the relative compounding date *\n* offset.                                                 *\n***********************************************************\n*/\n  PaymentStreamCompoundingDatesOffsetUnit = 42612,\n/*\n***********************************************************\n* Specifies the day type of the relative compounding date *\n* offset.                                                 *\n***********************************************************\n*/\n  PaymentStreamCompoundingDatesOffsetDayType = 42613,\n/*\n***************************************************************\n* The number of periods in the \"RelativeTo\" schedule that are *\n* between each date in the compounding schedule. A skip of 2  *\n* would mean that compounding dates are relative to every     *\n* second date in the \"RelativeTo\" schedule. If present this   *\n* should have a value greater than 1.                         *\n***************************************************************\n*/\n  PaymentStreamCompoundingPeriodSkip = 42614,\n/*\n***************************************************************\n* Time unit multiplier for the frequency at which compounding *\n* dates occur.                                                *\n***************************************************************\n*/\n  PaymentStreamCompoundingFrequencyPeriod = 42615,\n/*\n****************************************************************\n* Time unit associated with the frequency at which compounding *\n* dates occur.                                                 *\n****************************************************************\n*/\n  PaymentStreamCompoundingFrequencyUnit = 42616,\n/*\n****************************************************************\n* The convention for determining the sequence of compounding   *\n* dates. It is used in conjunction with a specified frequency. *\n****************************************************************\n*/\n  PaymentStreamCompoundingRollConvention = 42617,\n/*\n***************************************************************\n* The unadjusted first date of the compounding schedule. This *\n* can be used to restrict the range of dates when they are    *\n* relative.                                                   *\n***************************************************************\n*/\n  PaymentStreamBoundsFirstDateUnadjusted = 42618,\n/*\n**************************************************************\n* The unadjusted last date of the compounding schedule. This *\n* can be used to restrict the range of dates when they are   *\n* relative.                                                  *\n**************************************************************\n*/\n  PaymentStreamBoundsLastDateUnadjusted = 42619,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* payment stream compounding dates, e.g. \"GBLO\".               *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  PaymentStreamCompoundingDatesBusinessCenter = 42621,\n/*\n****************************************\n* The unadjusted compounding end date. *\n****************************************\n*/\n  PaymentStreamCompoundingEndDateUnadjusted = 42622,\n/*\n*****************************************************************\n* Specifies the anchor date when the compounding end date is    *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStreamCompoundingEndDateRelativeTo = 42623,\n/*\n**************************************************************\n* Time unit multiplier for the relative compounding end date *\n* offset.                                                    *\n**************************************************************\n*/\n  PaymentStreamCompoundingEndDateOffsetPeriod = 42624,\n/*\n***************************************************************\n* Time unit associated with the relative compounding end date *\n* offset.                                                     *\n***************************************************************\n*/\n  PaymentStreamCompoundingEndDateOffsetUnit = 42625,\n/*\n***************************************************************\n* Specifies the day type of the relative compounding end date *\n* offset.                                                     *\n***************************************************************\n*/\n  PaymentStreamCompoundingEndDateOffsetDayType = 42626,\n/*\n**************************************\n* The adjusted compounding end date. *\n**************************************\n*/\n  PaymentStreamCompoundingEndDateAdjusted = 42627,\n/*\n*********************************************************\n* The payment stream's compounding floating rate index. *\n*********************************************************\n*/\n  PaymentStreamCompoundingRateIndex = 42628,\n/*\n*************************************************************\n* Time unit multiplier for the payment stream's compounding *\n* floating rate index curve period.                         *\n*************************************************************\n*/\n  PaymentStreamCompoundingRateIndexCurvePeriod = 42629,\n/*\n**************************************************************\n* Time unit associated with the payment stream's compounding *\n* floating rate index curve period.                          *\n**************************************************************\n*/\n  PaymentStreamCompoundingRateIndexCurveUnit = 42630,\n/*\n****************************************************************\n* A rate multiplier to apply to the compounding floating rate. *\n* The multiplier can be less than or greater than 1 (one).     *\n* This should only be included if the multiplier is not equal  *\n* to 1 (one) for the term of the stream.                       *\n****************************************************************\n*/\n  PaymentStreamCompoundingRateMultiplier = 42631,\n/*\n*******************************************************\n* The basis points spread from the index specified in *\n* PaymentStreamCompoundingRateIndex(42628).           *\n*******************************************************\n*/\n  PaymentStreamCompoundingRateSpread = 42632,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  PaymentStreamCompoundingRateSpreadPositionType = 42633,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the index. *\n************************************************************\n*/\n  PaymentStreamCompoundingRateTreatment = 42634,\n/*\n****************************************************************\n* The cap rate, if any, which applies to the compounding       *\n* floating rate. It is only required where the compounding     *\n* floating rate on a swap stream is capped at a certain level. *\n* The cap rate is assumed to be exclusive of any spread and is *\n* a per annum rate, expressed as a decimal. A cap rate of 5%   *\n* would be represented as \"0.05\".                              *\n****************************************************************\n*/\n  PaymentStreamCompoundingCapRate = 42635,\n/*\n*************************************************************\n* Reference to the buyer of the compounding cap rate option *\n* through its trade side.                                   *\n*************************************************************\n*/\n  PaymentStreamCompoundingCapRateBuySide = 42636,\n/*\n**************************************************************\n* Reference to the seller of the compounding cap rate option *\n* through its trade side.                                    *\n**************************************************************\n*/\n  PaymentStreamCompoundingCapRateSellSide = 42637,\n/*\n************************************************************\n* The floor rate, if any, which applies to the compounding *\n* floating rate. The floor rate (strike) is only required  *\n* where the compounding floating rate on a swap stream is  *\n* floored at a certain strike level.  The floor rate is    *\n* assumed to be exclusive of any spread and is a per annum *\n* rate. The rate is expressed as a decimal, e.g. 5% is     *\n* represented as \"0.05\".                                   *\n************************************************************\n*/\n  PaymentStreamCompoundingFloorRate = 42638,\n/*\n***************************************************************\n* Reference to the buyer of the compounding floor rate option *\n* through its trade side.                                     *\n***************************************************************\n*/\n  PaymentStreamCompoundingFloorRateBuySide = 42639,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  PaymentStreamCompoundingFloorRateSellSide = 42640,\n/*\n****************************************************************\n* The initial compounding floating rate reset agreed between   *\n* the principal parties involved in the trade. It should only  *\n* be included when the rate is not equal to the rate published *\n* on the source implied by the floating rate index. The        *\n* initial rate is expressed in decimal form, e.g. 5% is        *\n* represented as \"0.05\".                                       *\n****************************************************************\n*/\n  PaymentStreamCompoundingInitialRate = 42641,\n/*\n********************************************************\n* Specifies the rounding direction for the compounding *\n* floating rate.                                       *\n********************************************************\n*/\n  PaymentStreamCompoundingFinalRateRoundingDirection = 42642,\n/*\n****************************************************************\n* Specifies the compounding floating rate rounding precision   *\n* in terms of a number of decimal places. Note how a           *\n* percentage rate rounding of 5 decimal places is expressed as *\n* a rounding precision of 7.                                   *\n****************************************************************\n*/\n  PaymentStreamCompoundingFinalRatePrecision = 42643,\n/*\n***************************************************************\n* Specifies the averaging method when compounding floating    *\n* rate averaging is applicable (e.g. weighted or unweighted). *\n***************************************************************\n*/\n  PaymentStreamCompoundingAveragingMethod = 42644,\n/*\n***************************************************************\n* Specifies the method for calculating payment obligations    *\n* when a compounding floating rate is negative (either due to *\n* a quoted negative floating rate or by operation of a spread *\n* that is subtracted from the floating rate).                 *\n***************************************************************\n*/\n  PaymentStreamCompoundingNegativeRateTreatment = 42645,\n/*\n******************************************\n* The unadjusted compounding start date. *\n******************************************\n*/\n  PaymentStreamCompoundingStartDateUnadjusted = 42646,\n/*\n*****************************************************************\n* Specifies the anchor date when the compounding start date is  *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStreamCompoundingStartDateRelativeTo = 42647,\n/*\n****************************************************************\n* Time unit multiplier for the relative compounding start date *\n* offset.                                                      *\n****************************************************************\n*/\n  PaymentStreamCompoundingStartDateOffsetPeriod = 42648,\n/*\n************************************************************\n* Time unit associated with the relative compounding start *\n* date offset.                                             *\n************************************************************\n*/\n  PaymentStreamCompoundingStartDateOffsetUnit = 42649,\n/*\n************************************************************\n* Specifies the day type of the relative compounding start *\n* date offset.                                             *\n************************************************************\n*/\n  PaymentStreamCompoundingStartDateOffsetDayType = 42650,\n/*\n****************************************\n* The adjusted compounding start date. *\n****************************************\n*/\n  PaymentStreamCompoundingStartDateAdjusted = 42651,\n/*\n***********************************************************\n* Length in bytes of the PaymentStreamFormulaImage(42563) *\n* field.                                                  *\n***********************************************************\n*/\n  PaymentStreamFormulaImageLength = 42652,\n/*\n**********************************************************\n* Image of the formula image when represented through an *\n* encoded clip in base64Binary.                          *\n**********************************************************\n*/\n  PaymentStreamFormulaImage = 42653,\n/*\n********************************************\n* The unadjusted final price payment date. *\n********************************************\n*/\n  PaymentStreamFinalPricePaymentDateUnadjusted = 42654,\n/*\n*****************************************************************\n* Specifies the anchor date when the final price payment date   *\n* is relative to an anchor date.                                *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStreamFinalPricePaymentDateRelativeTo = 42655,\n/*\n*************************************************************\n* Time unit multiplier for the relative final price payment *\n* date offset.                                              *\n*************************************************************\n*/\n  PaymentStreamFinalPricePaymentDateOffsetfPeriod = 42656,\n/*\n**************************************************************\n* Time unit associated with the relative final price payment *\n* date offset.                                               *\n**************************************************************\n*/\n  PaymentStreamFinalPricePaymentDateOffsetUnit = 42657,\n/*\n**************************************************************\n* Specifies the day type of the relative final price payment *\n* date offset.                                               *\n**************************************************************\n*/\n  PaymentStreamFinalPricePaymentDateOffsetDayType = 42658,\n/*\n******************************************\n* The adjusted final price payment date. *\n******************************************\n*/\n  PaymentStreamFinalPricePaymentDateAdjusted = 42659,\n/*\n******************************************************\n* The fixing date.  The type of date is specified in *\n* PaymentStreamFixingDateType(42662).                *\n******************************************************\n*/\n  PaymentStreamFixingDate = 42661,\n/*\n********************************************************\n* Specifies the type of fixing date (e.g. adjusted for *\n* holidays).                                           *\n********************************************************\n*/\n  PaymentStreamFixingDateType = 42662,\n/*\n**************************************************\n* The unadjusted initial price observation date. *\n**************************************************\n*/\n  PaymentStreamFirstObservationDateUnadjusted = 42663,\n/*\n*****************************************************************\n* Specifies the anchor date when the initial price observation  *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStreamFirstObservationDateRelativeTo = 42664,\n/*\n****************************************************************\n* Specifies the day type of the initial price observation date *\n* offset.                                                      *\n****************************************************************\n*/\n  PaymentStreamFirstObservationDateOffsetDayType = 42665,\n/*\n************************************************\n* The adjusted initial price observation date. *\n************************************************\n*/\n  PaymentStreamFirstObservationDateAdjusted = 42666,\n/*\n**************************************************************\n* References the dividend underlier through the instrument's *\n* UnderlyingSecurityID(309) which must be fully specified in *\n* an instance of the UnderlyingInstrument component.         *\n**************************************************************\n*/\n  PaymentStreamUnderlierRefID = 42667,\n/*\n**************************************************************\n* Indicates whether the term \"Equity Notional Reset\" as      *\n* defined in the ISDA 2002 Equity Derivatives Definitions is *\n* applicable (\"Y\") or not.                                   *\n**************************************************************\n*/\n  ReturnRateNotionalReset = 42668,\n/*\n*********************************************************\n* Price level at which the correlation or variance swap *\n* contract will strike.                                 *\n*********************************************************\n*/\n  PaymentStreamLinkInitialLevel = 42669,\n/*\n***************************************************************\n* Indicates whether the correlation or variance swap contract *\n* will (\"Y\") strike off the closing level of the default      *\n* exchange traded contract or not.                            *\n***************************************************************\n*/\n  PaymentStreamLinkClosingLevelIndicator = 42670,\n/*\n***************************************************************\n* Indicates whether the correlation or variance swap contract *\n* will (\"Y\") strike off the expiring level of the default     *\n* exchange traded contract or not.                            *\n***************************************************************\n*/\n  PaymentStreamLinkExpiringLevelIndicator = 42671,\n/*\n**********************************************************\n* The expected number of trading days in the variance or *\n* correlation swap stream.                               *\n**********************************************************\n*/\n  PaymentStreamLinkEstimatedTradingDays = 42672,\n/*\n**************************************************************\n* The strike price of a correlation or variance swap stream. *\n**************************************************************\n*/\n  PaymentStreamLinkStrikePrice = 42673,\n/*\n*****************************************************\n* For a variance swap specifies how                 *\n* PaymentStreamLinkStrikePrice(42673) is expressed. *\n*****************************************************\n*/\n  PaymentStreamLinkStrikePriceType = 42674,\n/*\n***************************************************************\n* Specifies the maximum or upper boundary for variance or     *\n* strike determination.                                       *\n* For a variation swap stream all observations above this     *\n* price level will be excluded from the variance calculation. *\n* For a correlation swap stream the maximum boundary is a     *\n* percentage of the strike price.                             *\n***************************************************************\n*/\n  PaymentStreamLinkMaximumBoundary = 42675,\n/*\n***************************************************************\n* Specifies the minimum or lower boundary for variance or     *\n* strike determination.                                       *\n* For a variation swap stream all observations below this     *\n* price level will be excluded from the variance calculation. *\n* For a correlation swap stream the minimum boundary is a     *\n* percentage of the strike price.                             *\n***************************************************************\n*/\n  PaymentStreamLinkMinimumBoundary = 42676,\n/*\n****************************************************************\n* Number of data series for a correlation swap.  Normal market *\n* practice is that correlation data sets are drawn from        *\n* geographic market areas, such as America, Europe and Asia    *\n* Pacific.  Each of these geographic areas will have its own   *\n* data series to avoid contagion.                              *\n****************************************************************\n*/\n  PaymentStreamLinkNumberOfDataSeries = 42677,\n/*\n********************************************************\n* Indicates the scaling factor to be multiplied by the *\n* variance strike price thereby making variance cap    *\n* applicable.                                          *\n********************************************************\n*/\n  PaymentStreamVarianceUnadjustedCap = 42678,\n/*\n********************************************************\n* Indicates which price to use to satisfy the boundary *\n* condition.                                           *\n********************************************************\n*/\n  PaymentStreamRealizedVarianceMethod = 42679,\n/*\n**************************************************************\n* Indicates whether the contract specifies that the notional *\n* should be scaled by the number of days in range divided by *\n* the estimate trading days or not. The number of \"days in   *\n* range\" refers to the number of returns that contribute to  *\n* the realized volatility.                                   *\n**************************************************************\n*/\n  PaymentStreamDaysAdjustmentIndicator = 42680,\n/*\n**************************************************************\n* References a contract listed on an exchange through the    *\n* instrument's UnderlyingSecurityID(309) which must be fully *\n* specified in an instance of the UnderlyingInstrument       *\n* component.                                                 *\n**************************************************************\n*/\n  PaymentStreamNearestExchangeContractRefID = 42681,\n/*\n***********************************************************\n* \"Vega Notional\" represents the approximate gain/loss at *\n* maturity for a 1% difference between RVol (realised     *\n* volatility) and KVol (strike volatility). It does not   *\n* necessarily represent the Vega risk of the trade.       *\n***********************************************************\n*/\n  PaymentStreamVegaNotionalAmount = 42682,\n/*\n****************************************\n* A description of the math formula in *\n* PaymentStreamFormula(42684).         *\n****************************************\n*/\n  PaymentStreamFormulaDesc = 42685,\n/*\n************************************************************\n* The currency in which the formula amount is denominated. *\n* Uses ISO 4217 currency codes.                            *\n************************************************************\n*/\n  PaymentStreamFormulaCurrency = 42686,\n/*\n**************************************************************\n* Specifies the method according to which the formula amount *\n* currency is determined.                                    *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  PaymentStreamFormulaCurrencyDeterminationMethod = 42687,\n/*\n***************************************************************************\n* Specifies the reference amount when this term either                    *\n* corresponds to the standard ISDA Definition (either the 2002            *\n* Equity Definition for the Equity Amount, or the 2000                    *\n* Definition for the Interest Amount), or refers to a term                *\n* defined elsewhere in the swap document.                                 *\n* See                                                                     *\n* http://www.fixtradingcommunity.org/codelists#Payment_Amount_Relative_To *\n* for code list of reference amounts.                                     *\n***************************************************************************\n*/\n  PaymentStreamFormulaReferenceAmount = 42688,\n/*\n*********************************\n* The unadjusted stub end date. *\n*********************************\n*/\n  PaymentStubEndDateUnadjusted = 42689,\n/*\n**********************************************\n* The stub end date business day convention. *\n**********************************************\n*/\n  PaymentStubEndDateBusinessDayConvention = 42690,\n/*\n*****************************************************************\n* Specifies the anchor date when the stub end date is relative  *\n* to an anchor date.                                            *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStubEndDateRelativeTo = 42691,\n/*\n***************************************************************\n* Time unit multiplier for the relative stub end date offset. *\n***************************************************************\n*/\n  PaymentStubEndDateOffsetPeriod = 42692,\n/*\n****************************************************************\n* Time unit associated with the relative stub end date offset. *\n****************************************************************\n*/\n  PaymentStubEndDateOffsetUnit = 42693,\n/*\n****************************************************************\n* Specifies the day type of the relative stub end date offset. *\n****************************************************************\n*/\n  PaymentStubEndDateOffsetDayType = 42694,\n/*\n*******************************\n* The adjusted stub end date. *\n*******************************\n*/\n  PaymentStubEndDateAdjusted = 42695,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* payment stub end date, e.g. \"GBLO\".                          *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  PaymentStubEndDateBusinessCenter = 42697,\n/*\n***********************************\n* The unadjusted stub start date. *\n***********************************\n*/\n  PaymentStubStartDateUnadjusted = 42698,\n/*\n************************************************\n* The stub start date business day convention. *\n************************************************\n*/\n  PaymentStubStartDateBusinessDayConvention = 42699,\n/*\n*****************************************************************\n* Specifies the anchor date when the stub start date is         *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  PaymentStubStartDateRelativeTo = 42700,\n/*\n*********************************************************\n* Time unit multiplier for the relative stub start date *\n* offset.                                               *\n*********************************************************\n*/\n  PaymentStubStartDateOffsetPeriod = 42701,\n/*\n**********************************************************\n* Time unit associated with the relative stub start date *\n* offset.                                                *\n**********************************************************\n*/\n  PaymentStubStartDateOffsetUnit = 42702,\n/*\n**********************************************************\n* Specifies the day type of the relative stub start date *\n* offset.                                                *\n**********************************************************\n*/\n  PaymentStubStartDateOffsetDayType = 42703,\n/*\n*********************************\n* The adjusted stub start date. *\n*********************************\n*/\n  PaymentStubStartDateAdjusted = 42704,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* payment stub start date, e.g. \"GBLO\".                        *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  PaymentStubStartDateBusinessCenter = 42706,\n/*\n************************************************\n* Type of fee elected for the break provision. *\n************************************************\n*/\n  ProvisionBreakFeeElection = 42707,\n/*\n**************************************************************\n* Break fee election rate when the break fee is proportional *\n* to the notional.  A fee rate of 5% would be represented as *\n* \"0.05\".                                                    *\n**************************************************************\n*/\n  ProvisionBreakFeeRate = 42708,\n/*\n**************************************************************\n* Specifies the valuation type applicable to the return rate *\n* date.                                                      *\n**************************************************************\n*/\n  ReturnRateDateMode = 42710,\n/*\n*****************************************************************\n* Specifies the anchor date when the return rate valuation      *\n* dates are relative to an anchor date.                         *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  ReturnRateValuationDateRelativeTo = 42711,\n/*\n***************************************************************\n* Time unit multiplier for the relative return rate valuation *\n* date offset.                                                *\n***************************************************************\n*/\n  ReturnRateValuationDateOffsetPeriod = 42712,\n/*\n****************************************************************\n* Time unit associated with the relative return rate valuation *\n* date offset.                                                 *\n****************************************************************\n*/\n  ReturnRateValuationDateOffsetUnit = 42713,\n/*\n****************************************************************\n* Specifies the day type of the relative return rate valuation *\n* date offset.                                                 *\n****************************************************************\n*/\n  ReturnRateValuationDateOffsetDayType = 42714,\n/*\n*************************************************************\n* The unadjusted start date for return rate valuation. This *\n* can be used to restrict the range of dates when they are  *\n* relative.                                                 *\n*************************************************************\n*/\n  ReturnRateValuationStartDateUnadjusted = 42715,\n/*\n*****************************************************************\n* Specifies the anchor date when the return rate valuation      *\n* start date is relative to an anchor date.                     *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  ReturnRateValuationStartDateRelativeTo = 42716,\n/*\n***************************************************************\n* Time unit multiplier for the relative return rate valuation *\n* start date offset.                                          *\n***************************************************************\n*/\n  ReturnRateValuationStartDateOffsetPeriod = 42717,\n/*\n****************************************************************\n* Time unit associated with the relative return rate valuation *\n* start date offset.                                           *\n****************************************************************\n*/\n  ReturnRateValuationStartDateOffsetUnit = 42718,\n/*\n****************************************************************\n* Specifies the day type of the relative return rate valuation *\n* start date offset.                                           *\n****************************************************************\n*/\n  ReturnRateValuationStartDateOffsetDayType = 42719,\n/*\n***************************************************************\n* The adjusted start date for return rate valuation. This can *\n* be used to restrict the range of dates when they are        *\n* relative.                                                   *\n***************************************************************\n*/\n  ReturnRateValuationStartDateAdjusted = 42720,\n/*\n***************************************************************\n* The unadjusted end date for return rate valuation. This can *\n* be used to restrict the range of dates when they are        *\n* relative.                                                   *\n***************************************************************\n*/\n  ReturnRateValuationEndDateUnadjusted = 42721,\n/*\n*****************************************************************\n* Specifies the anchor date when the return rate valuation end  *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  ReturnRateValuationEndDateRelativeTo = 42722,\n/*\n***************************************************************\n* Time unit multiplier for the relative return rate valuation *\n* end date offset.                                            *\n***************************************************************\n*/\n  ReturnRateValuationEndDateOffsetPeriod = 42723,\n/*\n****************************************************************\n* Time unit associated with the relative return rate valuation *\n* end date offset.                                             *\n****************************************************************\n*/\n  ReturnRateValuationEndDateOffsetUnit = 42724,\n/*\n****************************************************************\n* Specifies the day type of the relative return rate valuation *\n* end date offset.                                             *\n****************************************************************\n*/\n  ReturnRateValuationEndDateOffsetDayType = 42725,\n/*\n****************************************************************\n* The adjusted end date for return rate valuation. This can be *\n* used to restrict the range of dates when they are relative.  *\n****************************************************************\n*/\n  ReturnRateValuationEndDateAdjusted = 42726,\n/*\n***************************************************************\n* Time unit multiplier for the frequency at which return rate *\n* valuation dates occur.                                      *\n***************************************************************\n*/\n  ReturnRateValuationFrequencyPeriod = 42727,\n/*\n****************************************************************\n* Time unit associated with the frequency at which return rate *\n* valuation dates occur.                                       *\n****************************************************************\n*/\n  ReturnRateValuationFrequencyUnit = 42728,\n/*\n***************************************************************\n* The convention for determining the sequence of return rate  *\n* valuation dates. It is used in conjunction with a specified *\n* frequency.                                                  *\n***************************************************************\n*/\n  ReturnRateValuationFrequencyRollConvention = 42729,\n/*\n************************************************************\n* The return rate valuation dates business day convention. *\n************************************************************\n*/\n  ReturnRateValuationDateBusinessDayConvention = 42730,\n/*\n***************************************************************\n* Specifies the currency pair for the FX conversion expressed *\n* using the CCY1/CCY2 convention.  Uses ISO 4217 currency     *\n* codes.                                                      *\n***************************************************************\n*/\n  ReturnRateFXCurrencySymbol = 42732,\n/*\n****************************************************************\n* The rate of exchange between the two currencies specified in *\n* ReturnRateFXCurrencySymbol(42732).                           *\n****************************************************************\n*/\n  ReturnRateFXRate = 42733,\n/*\n*******************************************************\n* Specifies whether ReturnRateFXRate(42733) should be *\n* multiplied or divided.                              *\n*******************************************************\n*/\n  ReturnRateFXRateCalc = 42734,\n/*\n************************************************************\n* Specifies the type of price sequence of the return rate. *\n************************************************************\n*/\n  ReturnRatePriceSequence = 42736,\n/*\n*****************************************************\n* Specifies the basis or unit used to calculate the *\n* commission.                                       *\n*****************************************************\n*/\n  ReturnRateCommissionBasis = 42737,\n/*\n**************************\n* The commission amount. *\n**************************\n*/\n  ReturnRateCommissionAmount = 42738,\n/*\n***************************************************************\n* Specifies the currency the commission amount is denominated *\n* in. Uses ISO 4217 currency codes.                           *\n***************************************************************\n*/\n  ReturnRateCommissionCurrency = 42739,\n/*\n***********************************\n* The total commission per trade. *\n***********************************\n*/\n  ReturnRateTotalCommissionPerTrade = 42740,\n/*\n**************************************************************\n* Specifies the method by which the underlier prices are     *\n* determined.                                                *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  ReturnRateDeterminationMethod = 42741,\n/*\n***************************************************************************\n* Specifies the reference amount when the return rate amount              *\n* is relative to another amount in the trade.                             *\n* See                                                                     *\n* http://www.fixtradingcommunity.org/codelists#Payment_Amount_Relative_To *\n* for code list of relative amounts.                                      *\n***************************************************************************\n*/\n  ReturnRateAmountRelativeTo = 42742,\n/*\n**************************************************************\n* Specifies the type of the measure applied to the return    *\n* rate's asset, e.g. valuation, sensitivity risk. This could *\n* be an NPV, a cash flow, a clean price, etc.                *\n* See http://www.fpml.org/coding-scheme/asset-measure for    *\n* values.                                                    *\n**************************************************************\n*/\n  ReturnRateQuoteMeasureType = 42743,\n/*\n****************************************************************\n* Specifies the units that the measure is expressed in. If not *\n* specified, the default is a price/value in currency units.   *\n* See http://www.fpml.org/coding-scheme/price-quote-units for  *\n* values.                                                      *\n****************************************************************\n*/\n  ReturnRateQuoteUnits = 42744,\n/*\n************************************************************\n* Specifies the type of quote used to determine the return *\n* rate of the swap.                                        *\n************************************************************\n*/\n  ReturnRateQuoteMethod = 42745,\n/*\n***************************************************************\n* Specifies the currency the return rate quote is denominated *\n* in.  Uses ISO 4217 Currency Code.                           *\n***************************************************************\n*/\n  ReturnRateQuoteCurrency = 42746,\n/*\n*************************************************************\n* Specifies the type of currency, e.g. settlement currency, *\n* base currency, etc., that the quote is reported in.       *\n* See                                                       *\n* http://www.fpml.org/coding-scheme/reporting-currency-type *\n* for values.                                               *\n*************************************************************\n*/\n  ReturnRateQuoteCurrencyType = 42747,\n/*\n*******************************************************\n* Specifies how or the timing when the quote is to be *\n* obtained.                                           *\n*******************************************************\n*/\n  ReturnRateQuoteTimeType = 42748,\n/*\n***********************************************\n* The time when the quote is to be generated. *\n***********************************************\n*/\n  ReturnRateQuoteTime = 42749,\n/*\n***********************************************\n* The date when the quote is to be generated. *\n***********************************************\n*/\n  ReturnRateQuoteDate = 42750,\n/*\n***********************************************\n* The time when the quote ceases to be valid. *\n***********************************************\n*/\n  ReturnRateQuoteExpirationTime = 42751,\n/*\n****************************************************************\n* The business center calendar used for adjustments associated *\n* with ReturnRateQuoteTimeType(42748) or                       *\n* ReturnRateQuoteTime(42749) and ReturnRateQuoteDate(42750),   *\n* e.g. \"GBLO\".                                                 *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  ReturnRateQuoteBusinessCenter = 42752,\n/*\n****************************************************************\n* Specifies the exchange (e.g. stock or listed futures/options *\n* exchange) from which the quote is obtained.                  *\n****************************************************************\n*/\n  ReturnRateQuoteExchange = 42753,\n/*\n***************************************************************\n* Specifies the pricing model used to evaluate the underlying *\n* asset price.                                                *\n* See http://www.fpml.org/coding-scheme/pricing-model for     *\n* values.                                                     *\n***************************************************************\n*/\n  ReturnRateQuotePricingModel = 42754,\n/*\n***********************************************************\n* Specifies the type of cash flows, e.g. coupon payment,  *\n* premium fee, settlement fee, etc.                       *\n* See http://www.fpml.org/coding-scheme/cashflow-type for *\n* values.                                                 *\n***********************************************************\n*/\n  ReturnRateCashFlowType = 42755,\n/*\n**************************************************************\n* Specifies the timing at which the calculation agent values *\n* the underlying.                                            *\n**************************************************************\n*/\n  ReturnRateValuationTimeType = 42756,\n/*\n******************************************************\n* The time at which the calculation agent values the *\n* underlying asset.                                  *\n******************************************************\n*/\n  ReturnRateValuationTime = 42757,\n/*\n****************************************************************\n* The business center calendar used for adjustments associated *\n* with ReturnRateValuationTimeType(42756) or                   *\n* ReturnRateValuationTime(42757), e.g. \"GBLO\".                 *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  ReturnRateValuationTimeBusinessCenter = 42758,\n/*\n**********************************************************\n* Indicates whether an ISDA price option applies, and if *\n* applicable which type of price.                        *\n**********************************************************\n*/\n  ReturnRateValuationPriceOption = 42759,\n/*\n*************************************************************\n* Specifies the fallback provision for the hedging party in *\n* the determination of the final price.                     *\n*************************************************************\n*/\n  ReturnRateFinalPriceFallback = 42760,\n/*\n*********************************************************\n* Identifies the source of rate information. For FX the *\n* references source to be used for the FX spot rate.    *\n*********************************************************\n*/\n  ReturnRateInformationSource = 42762,\n/*\n****************************************************************\n* Identifies the reference \"page\" from the rate source.        *\n* For FX, the reference page to the spot rate to be used for   *\n* the reference FX spot rate.                                  *\n* When ReturnRateInformationSource(42762) = 3 (ISDA Settlement *\n* Rate Option) this contains the value from the scheme that    *\n* reflects the terms of the Annex A to the ISDA 1998 FX and    *\n* Currency Option Definitions.                                 *\n* See:                                                         *\n* http://www.fpml.org/coding-scheme/settlement-rate-option     *\n****************************************************************\n*/\n  ReturnRateReferencePage = 42763,\n/*\n*****************************************************\n* Identifies the page heading from the rate source. *\n*****************************************************\n*/\n  ReturnRateReferencePageHeading = 42764,\n/*\n**********************************\n* The basis of the return price. *\n**********************************\n*/\n  ReturnRatePriceBasis = 42766,\n/*\n*****************************************************\n* Specifies the price of the underlying swap asset. *\n*****************************************************\n*/\n  ReturnRatePrice = 42767,\n/*\n**************************************************************\n* Specifies the currency of the price of the underlying swap *\n* asset. Uses ISO 4217 currency codes.                       *\n**************************************************************\n*/\n  ReturnRatePriceCurrency = 42768,\n/*\n****************************************************************\n* Specifies whether the ReturnRatePrice(42767) is expressed in *\n* absolute or relative terms.                                  *\n****************************************************************\n*/\n  ReturnRatePriceType = 42769,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* return rate valuation unadjusted or relative dates, e.g.     *\n* \"GBLO\".                                                      *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  ReturnRateValuationDateBusinessCenter = 42771,\n/*\n**************************************************************\n* The return rate valuation date.  Type of date is specified *\n* in ReturnRateValuationDateType(42774).                     *\n**************************************************************\n*/\n  ReturnRateValuationDate = 42773,\n/*\n**********************************************************\n* Specifies the type of return rate valuation date (e.g. *\n* adjusted for holidays).                                *\n**********************************************************\n*/\n  ReturnRateValuationDateType = 42774,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* settlement method election unadjusted or relative date, e.g. *\n* \"GBLO\".                                                      *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  SettlMethodElectionDateBusinessCenter = 42776,\n/*\n***************************************************\n* The unadjusted settlement method election date. *\n***************************************************\n*/\n  SettlMethodElectionDateUnadjusted = 42777,\n/*\n***************************************************************\n* The settlement method election date adjustment business day *\n* convention.                                                 *\n***************************************************************\n*/\n  SettlMethodElectionDateBusinessDayConvention = 42778,\n/*\n*****************************************************************\n* Specifies the anchor date when the settlement method          *\n* election date is relative to an anchor date.                  *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  SettlMethodElectionDateRelativeTo = 42779,\n/*\n***********************************************************\n* Time unit multiplier for the relative settlement method *\n* election date offset.                                   *\n***********************************************************\n*/\n  SettlMethodElectionDateOffsetPeriod = 42780,\n/*\n************************************************************\n* Time unit associated with the relative settlement method *\n* election date offset.                                    *\n************************************************************\n*/\n  SettlMethodElectionDateOffsetUnit = 42781,\n/*\n************************************************************\n* Specifies the day type of the relative settlement method *\n* election date offset.                                    *\n************************************************************\n*/\n  SettlMethodElectionDateOffsetDayType = 42782,\n/*\n*************************************************\n* The adjusted settlement method election date. *\n*************************************************\n*/\n  SettlMethodElectionDateAdjusted = 42783,\n/*\n**************************************************************\n* The stream version identifier when there have been         *\n* modifications to the contract over time. Helps signal when *\n* there are embedded changes.                                *\n**************************************************************\n*/\n  StreamVersion = 42784,\n/*\n***************************************************\n* The effective date of the StreamVersion(42784). *\n***************************************************\n*/\n  StreamVersionEffectiveDate = 42785,\n/*\n**************************************************************\n* Specifies the method for determining the floating notional *\n* value for equity swaps.                                    *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  StreamNotionalDeterminationMethod = 42786,\n/*\n**************************************************************\n* For equity swaps this specifies the conditions that govern *\n* the adjustment to the number of units of the swap.         *\n**************************************************************\n*/\n  StreamNotionalAdjustments = 42787,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* cash settlement unadjusted or relative date, e.g. \"GBLO\".    *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingCashSettlDateBusinessCenter = 42789,\n/*\n****************************************\n* The unadjusted cash settlement date. *\n****************************************\n*/\n  UnderlyingCashSettlDateUnadjusted = 42790,\n/*\n***************************************************************\n* The business day convention used to adjust the cash         *\n* settlement provision's date.  Used only to override the     *\n* business day convention defined in the UnderlyingInstrument *\n* component.                                                  *\n***************************************************************\n*/\n  UnderlyingCashSettlDateBusinessDayConvention = 42791,\n/*\n*****************************************************************\n* Specifies the anchor date when the cash settlement date is    *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingCashSettlDateRelativeTo = 42792,\n/*\n**************************************************************\n* Time unit multiplier for the relative cash settlement date *\n* offset.                                                    *\n**************************************************************\n*/\n  UnderlyingCashSettlDateOffsetPeriod = 42793,\n/*\n***************************************************************\n* Time unit associated with the relative cash settlement date *\n* offset.                                                     *\n***************************************************************\n*/\n  UnderlyingCashSettlDateOffsetUnit = 42794,\n/*\n***************************************************************\n* Specifies the day type of the relative cash settlement date *\n* offset.                                                     *\n***************************************************************\n*/\n  UnderlyingCashSettlDateOffsetDayType = 42795,\n/*\n**************************************\n* The adjusted cash settlement date. *\n**************************************\n*/\n  UnderlyingCashSettlDateAdjusted = 42796,\n/*\n*************************************************************\n* The source from which the settlement price is to be       *\n* obtained.                                                 *\n* See                                                       *\n* http://www.fpml.org/coding-scheme/settlement-price-source *\n* for values.                                               *\n*************************************************************\n*/\n  UnderlyingCashSettlPriceSource = 42797,\n/*\n**********************************************************\n* The default election for determining settlement price. *\n**********************************************************\n*/\n  UnderlyingCashSettlPriceDefault = 42798,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* instrument's dividend accrual payment date, e.g. \"GBLO\".     *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingDividendAccrualPaymentDateBusinessCenter = 42800,\n/*\n*********************************************\n* The dividend accrual floating rate index. *\n*********************************************\n*/\n  UnderlyingDividendFloatingRateIndex = 42801,\n/*\n***************************************************************\n* Time unit multiplier for the dividend accrual floating rate *\n* index curve.                                                *\n***************************************************************\n*/\n  UnderlyingDividendFloatingRateIndexCurvePeriod = 42802,\n/*\n****************************************************************\n* Time unit associated with the dividend accrual floating rate *\n* index curve period.                                          *\n****************************************************************\n*/\n  UnderlyingDividendFloatingRateIndexCurveUnit = 42803,\n/*\n***************************************************************\n* A rate multiplier to apply to the floating rate. The        *\n* multiplier can be less than or greater than 1 (one). This   *\n* should only be included if the multiplier is not equal to 1 *\n* (one) for the term of the contract.                         *\n***************************************************************\n*/\n  UnderlyingDividendFloatingRateMultiplier = 42804,\n/*\n*******************************************************\n* The basis points spread from the index specified in *\n* UnderlyingDividendFloatingRateIndex(42801).         *\n*******************************************************\n*/\n  UnderlyingDividendFloatingRateSpread = 42805,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  UnderlyingDividendFloatingRateSpreadPositionType = 42806,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the index. *\n************************************************************\n*/\n  UnderlyingDividendFloatingRateTreatment = 42807,\n/*\n****************************************************************\n* The cap rate, if any, which applies to the floating rate. It *\n* is only required where the floating rate is capped at a      *\n* certain level. The cap rate is assumed to be exclusive of    *\n* any spread and is a per annum rate, expressed as a decimal.  *\n* A cap rate of 5% would be represented as \"0.05\".             *\n****************************************************************\n*/\n  UnderlyingDividendCapRate = 42808,\n/*\n*************************************************************\n* Reference to the buyer of the cap rate option through its *\n* trade side.                                               *\n*************************************************************\n*/\n  UnderlyingDividendCapRateBuySide = 42809,\n/*\n**************************************************************\n* Reference to the seller of the cap rate option through its *\n* trade side.                                                *\n**************************************************************\n*/\n  UnderlyingDividendCapRateSellSide = 42810,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the floating rate.  *\n* The floor rate (strike) is only required where the floating  *\n* rate is floored at a certain strike level. The floor rate is *\n* assumed to be exclusive of any spread and is a per annum     *\n* rate. The rate is expressed as a decimal, e.g. 5% is         *\n* represented as \"0.05\".                                       *\n****************************************************************\n*/\n  UnderlyingDividendFloorRate = 42811,\n/*\n***************************************************************\n* Reference to the buyer of the floor rate option through its *\n* trade side.                                                 *\n***************************************************************\n*/\n  UnderlyingDividendFloorRateBuySide = 42812,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  UnderlyingDividendFloorRateSellSide = 42813,\n/*\n****************************************************************\n* The initial floating rate reset agreed between the principal *\n* parties involved in the trade. This is assumed to be the     *\n* first required reset rate for the first regular calculation  *\n* period. It should only be included when the rate is not      *\n* equal to the rate published on the source implied by the     *\n* floating rate index. The initial rate is expressed in        *\n* decimal form, e.g. 5% is represented as \"0.05\".              *\n****************************************************************\n*/\n  UnderlyingDividendInitialRate = 42814,\n/*\n*******************************************************\n* Specifies the rounding direction of the final rate. *\n*******************************************************\n*/\n  UnderlyingDividendFinalRateRoundingDirection = 42815,\n/*\n***************************************************************\n* Specifies the rounding precision of the final rate in terms *\n* of a number of decimal places. Note how a percentage rate   *\n* rounding of 5 decimal places is expressed as a rounding     *\n* precision of 7.                                             *\n***************************************************************\n*/\n  UnderlyingDividendFinalRatePrecision = 42816,\n/*\n**************************************************************\n* When averaging is applicable, used to specify whether a    *\n* weighted or unweighted average method of calculation is to *\n* be used.                                                   *\n**************************************************************\n*/\n  UnderlyingDividendAveragingMethod = 42817,\n/*\n***************************************************************\n* The specification of any provisions for calculating payment *\n* obligations when a floating rate is negative (either due to *\n* a quoted negative floating rate or by operation of a spread *\n* that is subtracted from the floating rate).                 *\n***************************************************************\n*/\n  UnderlyingDividendNegativeRateTreatment = 42818,\n/*\n*****************************************************************\n* Specifies the anchor date when the accrual payment date is    *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingDividendAccrualPaymentDateRelativeTo = 42819,\n/*\n**************************************************************\n* Time unit multiplier for the relative accrual payment date *\n* offset.                                                    *\n**************************************************************\n*/\n  UnderlyingDividendAccrualPaymentDateOffsetPeriod = 42820,\n/*\n***************************************************************\n* Time unit associated with the relative accrual payment date *\n* offset.                                                     *\n***************************************************************\n*/\n  UnderlyingDividendAccrualPaymentDateOffsetUnit = 42821,\n/*\n***************************************************************\n* Specifies the day type of the relative accrual payment date *\n* offset.                                                     *\n***************************************************************\n*/\n  UnderlyingDividendAccrualPaymentDateOffsetDayType = 42822,\n/*\n****************************************\n* The unadjusted accrual payment date. *\n****************************************\n*/\n  UnderlyingDividendAccrualPaymentDateUnadjusted = 42823,\n/*\n************************************************************\n* Accrual payment date adjustment business day convention. *\n************************************************************\n*/\n  UnderlyingDividendAccrualPaymentDateBusinessDayConvention = 42824,\n/*\n**************************************\n* The adjusted accrual payment date. *\n**************************************\n*/\n  UnderlyingDividendAccrualPaymentDateAdjusted = 42825,\n/*\n******************************************************\n* Indicates whether the dividend will be reinvested. *\n******************************************************\n*/\n  UnderlyingDividendReinvestmentIndicator = 42826,\n/*\n********************************************************\n* Defines the contract event which the receiver of the *\n* derivative is entitled to the dividend.              *\n********************************************************\n*/\n  UnderlyingDividendEntitlementEvent = 42827,\n/*\n*************************************************************\n* Indicates how the gross cash dividend amount per share is *\n* determined.                                               *\n*************************************************************\n*/\n  UnderlyingDividendAmountType = 42828,\n/*\n****************************************************************\n* References the dividend underlier through the instrument's   *\n* UnderlyingSecurityID(309) which must be fully specified in a *\n* separate instance of the UnderlyingInstrument component.     *\n****************************************************************\n*/\n  UnderlyingDividendUnderlierRefID = 42829,\n/*\n***************************************************************\n* Reference to the party through its side in the trade who    *\n* makes the determination whether dividends are extraordinary *\n* in relation to normal levels.                               *\n***************************************************************\n*/\n  UnderlyingExtraordinaryDividendPartySide = 42830,\n/*\n***********************************************************\n* Indicates how the extraordinary gross cash dividend per *\n* share is determined.                                    *\n***********************************************************\n*/\n  UnderlyingExtraordinaryDividendAmountType = 42831,\n/*\n*************************************************************\n* The currency in which the excess dividend is denominated. *\n* Uses ISO 4217 currency codes.                             *\n*************************************************************\n*/\n  UnderlyingExtraordinaryDividendCurrency = 42832,\n/*\n**************************************************************\n* Specifies the method in which the excess amount is         *\n* determined.                                                *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  UnderlyingExtraordinaryDividendDeterminationMethod = 42833,\n/*\n************************************************************\n* The dividend accrual fixed rate per annum expressed as a *\n* decimal.                                                 *\n* A value of 5% would be represented as \"0.05\".            *\n************************************************************\n*/\n  UnderlyingDividendAccrualFixedRate = 42834,\n/*\n********************************************************\n* The compounding method to be used when more than one *\n* dividend period contributes to a single payment.     *\n********************************************************\n*/\n  UnderlyingDividendCompoundingMethod = 42835,\n/*\n******************************************************\n* The number of index units applicable to dividends. *\n******************************************************\n*/\n  UnderlyingDividendNumOfIndexUnits = 42836,\n/*\n*************************************************\n* Declared cash dividend percentage.            *\n* A value of 5% would be represented as \"0.05\". *\n*************************************************\n*/\n  UnderlyingDividendCashPercentage = 42837,\n/*\n***************************************************************\n* Declared cash-equivalent dividend percentage. A value of 5% *\n* would be represented as \"0.05\".                             *\n***************************************************************\n*/\n  UnderlyingDividendCashEquivalentPercentage = 42838,\n/*\n************************************************\n* Defines the treatment of non-cash dividends. *\n************************************************\n*/\n  UnderlyingNonCashDividendTreatment = 42839,\n/*\n*****************************************************\n* Defines how the composition of dividends is to be *\n* determined.                                       *\n*****************************************************\n*/\n  UnderlyingDividendComposition = 42840,\n/*\n*******************************************************\n* Indicates whether special dividends are applicable. *\n*******************************************************\n*/\n  UnderlyingSpecialDividendsIndicator = 42841,\n/*\n*****************************************************\n* Indicates whether material non-cash dividends are *\n* applicable.                                       *\n*****************************************************\n*/\n  UnderlyingMaterialDividendsIndicator = 42842,\n/*\n***************************************************************\n* Indicates whether option exchange dividends are applicable. *\n***************************************************************\n*/\n  UnderlyingOptionsExchangeDividendsIndicator = 42843,\n/*\n**********************************************************\n* Indicates whether additional dividends are applicable. *\n**********************************************************\n*/\n  UnderlyingAdditionalDividendsIndicator = 42844,\n/*\n**************************************************************\n* Represents the European Master Confirmation value of 'All  *\n* Dividends' which, when applicable, signifies that, for a   *\n* given Ex-Date, the daily observed share price for that day *\n* is adjusted (reduced) by the cash dividend and/or the cash *\n* value of any non-cash dividend per share (including        *\n* extraordinary dividends) declared by the issuer.           *\n**************************************************************\n*/\n  UnderlyingAllDividendsIndicator = 42845,\n/*\n*****************************************************************\n* Specifies the anchor date when the FX trigger date is         *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingDividendFXTriggerDateRelativeTo = 42846,\n/*\n*********************************************************\n* Time unit multiplier for the relative FX trigger date *\n* offset.                                               *\n*********************************************************\n*/\n  UnderlyingDividendFXTriggerDateOffsetPeriod = 42847,\n/*\n**********************************************************\n* Time unit associated with the relative FX trigger date *\n* offset.                                                *\n**********************************************************\n*/\n  UnderlyingDividendFXTriggerDateOffsetUnit = 42848,\n/*\n**********************************************************\n* Specifies the day type of the relative FX trigger date *\n* offset.                                                *\n**********************************************************\n*/\n  UnderlyingDividendFXTriggerDateOffsetDayType = 42849,\n/*\n***********************************\n* The unadjusted FX trigger date. *\n***********************************\n*/\n  UnderlyingDividendFXTriggerDateUnadjusted = 42850,\n/*\n************************************************************\n* The business day convention used for the FX trigger date *\n* adjustment.                                              *\n************************************************************\n*/\n  UnderlyingDividendFXTriggerDateBusinessDayConvention = 42851,\n/*\n*********************************\n* The adjusted FX trigger date. *\n*********************************\n*/\n  UnderlyingDividendFXTriggerDateAdjusted = 42852,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* instrument's FX trigger date, e.g. \"GBLO\".                   *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingDividendFXTriggerDateBusinessCenter = 42854,\n/*\n*************************************************************\n* Specifies the date that the dividend or coupon payment is *\n* due.                                                      *\n*************************************************************\n*/\n  UnderlyingDividendPaymentDate = 42856,\n/*\n*************************************************\n* The amount of the dividend or coupon payment. *\n*************************************************\n*/\n  UnderlyingDividendPaymentAmount = 42857,\n/*\n*************************************************************\n* Specifies the currency the                                *\n* UnderlyingDividendPaymentAmount(42857) is denominated in. *\n* Uses ISO 4217 currency codes.                             *\n*************************************************************\n*/\n  UnderlyingDividendPaymentCurrency = 42858,\n/*\n*******************************************************\n* Accrued interest on the dividend or coupon payment. *\n*******************************************************\n*/\n  UnderlyingDividendAccruedInterest = 42859,\n/*\n**************************************************************\n* Specifies the actual dividend payout ratio associated with *\n* the equity or bond underlier.                              *\n**************************************************************\n*/\n  UnderlyingDividendPayoutRatio = 42860,\n/*\n************************************************************\n* Specifies the dividend payout conditions that will be    *\n* applied in the case where the actual ratio is not known, *\n* typically because of regulatory or legal uncertainties.  *\n************************************************************\n*/\n  UnderlyingDividendPayoutConditions = 42861,\n/*\n***************************************************************\n* Defines the ordinal dividend period. E.g. 1 = First period, *\n* 2 = Second period, etc.                                     *\n***************************************************************\n*/\n  UnderlyingDividendPeriodSequence = 42863,\n/*\n****************************************************************\n* The unadjusted date on which the dividend period will begin. *\n****************************************************************\n*/\n  UnderlyingDividendPeriodStartDateUnadjusted = 42864,\n/*\n**************************************************************\n* The unadjusted date on which the dividend period will end. *\n**************************************************************\n*/\n  UnderlyingDividendPeriodEndDateUnadjusted = 42865,\n/*\n**************************************************************\n* References the dividend underlier through the instrument's *\n* UnderlyingSecurityID(309) which must be fully specified in *\n* an instance of the UnderlyingInstrument component.         *\n**************************************************************\n*/\n  UnderlyingDividendPeriodUnderlierRefID = 42866,\n/*\n************************************************************\n* Specifies the fixed strike price of the dividend period. *\n************************************************************\n*/\n  UnderlyingDividendPeriodStrikePrice = 42867,\n/*\n******************************************************\n* The dividend period dates business day convention. *\n******************************************************\n*/\n  UnderlyingDividendPeriodBusinessDayConvention = 42868,\n/*\n**************************************************\n* The unadjusted dividend period valuation date. *\n**************************************************\n*/\n  UnderlyingDividendPeriodValuationDateUnadjusted = 42869,\n/*\n*****************************************************************\n* Specifies the anchor date when the dividend period valuation  *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingDividendPeriodValuationDateRelativeTo = 42870,\n/*\n*********************************************************\n* Time unit multiplier for the relative dividend period *\n* valuation date offset.                                *\n*********************************************************\n*/\n  UnderlyingDividendPeriodValuationDateOffsetPeriod = 42871,\n/*\n**********************************************************\n* Time unit associated with the relative dividend period *\n* valuation date offset.                                 *\n**********************************************************\n*/\n  UnderlyingDividendPeriodValuationDateOffsetUnit = 42872,\n/*\n**********************************************************\n* Specifies the day type of the relative dividend period *\n* valuation date offset.                                 *\n**********************************************************\n*/\n  UnderlyingDividendPeriodValuationDateOffsetDayType = 42873,\n/*\n************************************************\n* The adjusted dividend period valuation date. *\n************************************************\n*/\n  UnderlyingDividendPeriodValuationDateAdjusted = 42874,\n/*\n************************************************\n* The unadjusted dividend period payment date. *\n************************************************\n*/\n  UnderlyingDividendPeriodPaymentDateUnadjusted = 42875,\n/*\n*****************************************************************\n* Specifies the anchor date when the dividend period payment    *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingDividendPeriodPaymentDateRelativeTo = 42876,\n/*\n*********************************************************\n* Time unit multiplier for the relative dividend period *\n* payment date offset.                                  *\n*********************************************************\n*/\n  UnderlyingDividendPeriodPaymentDateOffsetPeriod = 42877,\n/*\n**********************************************************\n* Time unit associated with the relative dividend period *\n* payment date offset.                                   *\n**********************************************************\n*/\n  UnderlyingDividendPeriodPaymentDateOffsetUnit = 42878,\n/*\n**********************************************************\n* Specifies the day type of the relative dividend period *\n* payment date offset.                                   *\n**********************************************************\n*/\n  UnderlyingDividendPeriodPaymentDateOffsetDayType = 42879,\n/*\n**********************************************\n* The adjusted dividend period payment date. *\n**********************************************\n*/\n  UnderlyingDividendPeriodPaymentDateAdjusted = 42880,\n/*\n************************************************************\n* Identifier for linking this stream dividend period to an *\n* underlier through an instance of RelatedInstrumentGrp.   *\n************************************************************\n*/\n  UnderlyingDividendPeriodXID = 42881,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* instrument's dividend period date, e.g. \"GBLO\".              *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingDividendPeriodBusinessCenter = 42883,\n/*\n*************************************************************************\n* Identifies the type of extraordinary or disruptive event              *\n* applicable to UnderlyingExtraordinaryEventType(42885).                *\n* See                                                                   *\n* http://www.fixtradingcommunity.org/codelists#Extraordinary_Event_Type *\n* for code list of extraordinary event types and values.                *\n*************************************************************************\n*/\n  UnderlyingExtraordinaryEventType = 42885,\n/*\n*************************************************************************\n* The extraordinary or disruptive event value appropriate to            *\n* UnderlyingExtraordinaryEventType(42885).                              *\n* See                                                                   *\n* http://www.fixtradingcommunity.org/codelists#Extraordinary_Event_Type *\n* for code list of extraordinary event types and values.                *\n*************************************************************************\n*/\n  UnderlyingExtraordinaryEventValue = 42886,\n/*\n***********************************************************\n* Side value of the party electing the settlement method. *\n***********************************************************\n*/\n  UnderlyingSettlMethodElectingPartySide = 42887,\n/*\n*********************************************************\n* The date through which the option cannot be exercised *\n* without penalty.                                      *\n*********************************************************\n*/\n  UnderlyingMakeWholeDate = 42888,\n/*\n**************************************************************\n* Amount to be paid by the buyer of the option if the option *\n* is exercised prior to the UnderlyingMakeWholeDate(42888).  *\n**************************************************************\n*/\n  UnderlyingMakeWholeAmount = 42889,\n/*\n*************************************************\n* Identifies the benchmark floating rate index. *\n*************************************************\n*/\n  UnderlyingMakeWholeBenchmarkCurveName = 42890,\n/*\n***************************************************************\n* The point on the floating rate index curve.                 *\n* Sample values:                                              *\n* M = combination of a number between 1-12 and an \"M\" for     *\n* month, e.g. 3M                                              *\n* Y = combination of number between 1-100 and a \"Y\" for year, *\n* e.g. 10Y                                                    *\n* 10Y-OLD = see above, then add \"-OLD\" when appropriate       *\n* INTERPOLATED = the point is mathematically derived          *\n* 2/2031 5 3/8 = the point is stated via a combination of     *\n* maturity month / year and coupon.                           *\n***************************************************************\n*/\n  UnderlyingMakeWholeBenchmarkCurvePoint = 42891,\n/*\n****************************************\n* Spread over the floating rate index. *\n****************************************\n*/\n  UnderlyingMakeWholeRecallSpread = 42892,\n/*\n**************************************************************\n* The quote side of the benchmark to be used for calculating *\n* the \"make whole\" amount.                                   *\n**************************************************************\n*/\n  UnderlyingMakeWholeBenchmarkQuote = 42893,\n/*\n*************************************************************\n* The method used when calculating the \"make whole\" amount. *\n* The most common is linear method.                         *\n*************************************************************\n*/\n  UnderlyingMakeWholeInterpolationMethod = 42894,\n/*\n****************************************************\n* Indicates whether cash settlement is applicable. *\n****************************************************\n*/\n  UnderlyingPaymentStreamCashSettlIndicator = 42895,\n/*\n***************************************************************\n* Reference to the stream which details the compounding fixed *\n* or floating rate.                                           *\n***************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingXIDRef = 42896,\n/*\n****************************************************************\n* The spread to be used for compounding. Used in scenarios     *\n* where the interest payment is based on a compounding formula *\n* that uses a compounding spread in addition to the regular    *\n* spread.                                                      *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingSpread = 42897,\n/*\n***********************************************************\n* The method used when calculating the index rate from    *\n* multiple points on the curve. The most common is linear *\n* method.                                                 *\n***********************************************************\n*/\n  UnderlyingPaymentStreamInterpolationMethod = 42898,\n/*\n*************************************************\n* Defines applicable periods for interpolation. *\n*************************************************\n*/\n  UnderlyingPaymentStreamInterpolationPeriod = 42899,\n/*\n****************************************************************\n* The compounding fixed rate applicable to the payment stream. *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingFixedRate = 42900,\n/*\n*******************************************************\n* The compounding date.  Type of date is specified in *\n* UnderlyingPaymentStreamCompoundingDateType(42903).  *\n*******************************************************\n*/\n  UnderlyingPaymentStreamCompoundingDate = 42902,\n/*\n********************************************************\n* Specifies the type of payment compounding date (e.g. *\n* adjusted for holidays).                              *\n********************************************************\n*/\n  UnderlyingPaymentStreamCompoundingDateType = 42903,\n/*\n**************************************************\n* The compounding dates business day convention. *\n**************************************************\n*/\n  UnderlyingPaymentStreamCompoundingDatesBusinessDayConvention = 42904,\n/*\n*****************************************************************\n* Specifies the anchor date when the compounding dates are      *\n* relative to an anchor  date.                                  *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingDatesRelativeTo = 42905,\n/*\n**********************************************************\n* Time unit multiplier for the relative compounding date *\n* offset.                                                *\n**********************************************************\n*/\n  UnderlyingPaymentStreamCompoundingDatesOffsetPeriod = 42906,\n/*\n***********************************************************\n* Time unit associated with the relative compounding date *\n* offset.                                                 *\n***********************************************************\n*/\n  UnderlyingPaymentStreamCompoundingDatesOffsetUnit = 42907,\n/*\n***********************************************************\n* Specifies the day type of the relative compounding date *\n* offset.                                                 *\n***********************************************************\n*/\n  UnderlyingPaymentStreamCompoundingDatesOffsetDayType = 42908,\n/*\n***************************************************************\n* The number of periods in the \"RelativeTo\" schedule that are *\n* between each date in the compounding schedule. A skip of 2  *\n* would mean that compounding dates are relative to every     *\n* second date in the \"RelativeTo\" schedule. If present this   *\n* should have a value greater than 1.                         *\n***************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingPeriodSkip = 42909,\n/*\n***************************************************************\n* Time unit multiplier for the frequency at which compounding *\n* dates occur.                                                *\n***************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingFrequencyPeriod = 42910,\n/*\n****************************************************************\n* Time unit associated with the frequency at which compounding *\n* dates occur.                                                 *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingFrequencyUnit = 42911,\n/*\n****************************************************************\n* The convention for determining the sequence of compounding   *\n* dates. It is used in conjunction with a specified frequency. *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingRollConvention = 42912,\n/*\n***************************************************************\n* The unadjusted first date of the compounding schedule. This *\n* can be used to restrict the range of dates when they are    *\n* relative.                                                   *\n***************************************************************\n*/\n  UnderlyingPaymentStreamBoundsFirstDateUnadjusted = 42913,\n/*\n**************************************************************\n* The unadjusted last date of the compounding schedule. This *\n* can be used to restrict the range of dates when they are   *\n* relative.                                                  *\n**************************************************************\n*/\n  UnderlyingPaymentStreamBoundsLastDateUnadjusted = 42914,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* payment stream compounding dates, e.g. \"GBLO\".               *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingDatesBusinessCenter = 42916,\n/*\n****************************************\n* The unadjusted compounding end date. *\n****************************************\n*/\n  UnderlyingPaymentStreamCompoundingEndDateUnadjusted = 42917,\n/*\n*****************************************************************\n* Specifies the anchor date when the compounding end date is    *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingEndDateRelativeTo = 42918,\n/*\n**************************************************************\n* Time unit multiplier for the relative compounding end date *\n* offset.                                                    *\n**************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingEndDateOffsetPeriod = 42919,\n/*\n***************************************************************\n* Time unit associated with the relative compounding end date *\n* offset.                                                     *\n***************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingEndDateOffsetUnit = 42920,\n/*\n***************************************************************\n* Specifies the day type of the relative compounding end date *\n* offset.                                                     *\n***************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingEndDateOffsetDayType = 42921,\n/*\n**************************************\n* The adjusted compounding end date. *\n**************************************\n*/\n  UnderlyingPaymentStreamCompoundingEndDateAdjusted = 42922,\n/*\n*********************************************************\n* The payment stream's compounding floating rate index. *\n*********************************************************\n*/\n  UnderlyingPaymentStreamCompoundingRateIndex = 42923,\n/*\n*************************************************************\n* Time unit multiplier for the payment stream's compounding *\n* floating rate index curve period.                         *\n*************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingRateIndexCurvePeriod = 42924,\n/*\n**************************************************************\n* Time unit associated with the payment stream's compounding *\n* floating rate index curve period.                          *\n**************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingRateIndexCurveUnit = 42925,\n/*\n****************************************************************\n* A rate multiplier to apply to the compounding floating rate. *\n* The multiplier can be less than or greater than 1 (one).     *\n* This should only be included if the multiplier is not equal  *\n* to 1 (one) for the term of the stream.                       *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingRateMultiplier = 42926,\n/*\n*******************************************************\n* The basis points spread from the index specified in *\n* UnderlyingPaymentStreamCompoundingRateIndex(42923). *\n*******************************************************\n*/\n  UnderlyingPaymentStreamCompoundingRateSpread = 42927,\n/*\n**************************************************************\n* Identifies whether the rate spread is applied to a long or *\n* short position.                                            *\n**************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingRateSpreadPositionType = 42928,\n/*\n************************************************************\n* Specifies the yield calculation treatment for the index. *\n************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingRateTreatment = 42929,\n/*\n****************************************************************\n* The cap rate, if any, which applies to the compounding       *\n* floating rate. It is only required where the compounding     *\n* floating rate on a swap stream is capped at a certain level. *\n* The cap rate is assumed to be exclusive of any spread and is *\n* a per annum rate, expressed as a decimal. A cap rate of 5%   *\n* would be represented as \"0.05\".                              *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingCapRate = 42930,\n/*\n*************************************************************\n* Reference to the buyer of the compounding cap rate option *\n* through its trade side.                                   *\n*************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingCapRateBuySide = 42931,\n/*\n**************************************************************\n* Reference to the seller of the compounding cap rate option *\n* through its trade side.                                    *\n**************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingCapRateSellSide = 42932,\n/*\n****************************************************************\n* The floor rate, if any, which applies to the compounding     *\n* floating rate. The floor rate (strike) is only required      *\n* where the compounding floating rate on a swap stream is      *\n* floored at a certain strike level. The floor rate is assumed *\n* to be exclusive of any spread and is a per annum rate. The   *\n* rate is expressed as a decimal, e.g. 5% is represented as    *\n* \"0.05\".                                                      *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingFloorRate = 42933,\n/*\n***************************************************************\n* Reference to the buyer of the compounding floor rate option *\n* through its trade side.                                     *\n***************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingFloorRateBuySide = 42934,\n/*\n****************************************************************\n* Reference to the seller of the floor rate option through its *\n* trade side.                                                  *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingFloorRateSellSide = 42935,\n/*\n****************************************************************\n* The initial compounding floating rate reset agreed between   *\n* the principal parties involved in the trade. It should only  *\n* be included when the rate is not equal to the rate published *\n* on the source implied by the floating rate index. The        *\n* initial rate is expressed in decimal form, e.g. 5% is        *\n* represented as \"0.05\".                                       *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingInitialRate = 42936,\n/*\n********************************************************\n* Specifies the rounding direction for the compounding *\n* floating rate.                                       *\n********************************************************\n*/\n  UnderlyingPaymentStreamCompoundingFinalRateRoundingDirection = 42937,\n/*\n****************************************************************\n* Specifies the compounding floating rate rounding precision   *\n* in terms of a number of decimal places. Note how a           *\n* percentage rate rounding of 5 decimal places is expressed as *\n* a rounding precision of 7.                                   *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingFinalRatePrecision = 42938,\n/*\n***************************************************************\n* Specifies the averaging method when compounding floating    *\n* rate averaging is applicable (e.g. weighted or unweighted). *\n***************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingAveragingMethod = 42939,\n/*\n***************************************************************\n* Specifies the method for calculating payment obligations    *\n* when a compounding floating rate is negative (either due to *\n* a quoted negative floating rate or by operation of a spread *\n* that is subtracted from the floating rate).                 *\n***************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingNegativeRateTreatment = 42940,\n/*\n******************************************\n* The unadjusted compounding start date. *\n******************************************\n*/\n  UnderlyingPaymentStreamCompoundingStartDateUnadjusted = 42941,\n/*\n*****************************************************************\n* Specifies the anchor date when the compounding start date is  *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingStartDateRelativeTo = 42942,\n/*\n****************************************************************\n* Time unit multiplier for the relative compounding start date *\n* offset.                                                      *\n****************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingStartDateOffsetPeriod = 42943,\n/*\n************************************************************\n* Time unit associated with the relative compounding start *\n* date offset.                                             *\n************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingStartDateOffsetUnit = 42944,\n/*\n************************************************************\n* Specifies the day type of the relative compounding start *\n* date offset.                                             *\n************************************************************\n*/\n  UnderlyingPaymentStreamCompoundingStartDateOffsetDayType = 42945,\n/*\n****************************************\n* The adjusted compounding start date. *\n****************************************\n*/\n  UnderlyingPaymentStreamCompoundingStartDateAdjusted = 42946,\n/*\n*****************************************************\n* Length in bytes of the                            *\n* UnderlyingPaymentStreamFormulaImage(42948) field. *\n*****************************************************\n*/\n  UnderlyingPaymentStreamFormulaImageLength = 42947,\n/*\n**********************************************************\n* Image of the formula image when represented through an *\n* encoded clip in base64Binary.                          *\n**********************************************************\n*/\n  UnderlyingPaymentStreamFormulaImage = 42948,\n/*\n********************************************\n* The unadjusted final price payment date. *\n********************************************\n*/\n  UnderlyingPaymentStreamFinalPricePaymentDateUnadjusted = 42949,\n/*\n*****************************************************************\n* Specifies the anchor date when the final price payment date   *\n* is relative to an anchor date.                                *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStreamFinalPricePaymentDateRelativeTo = 42950,\n/*\n*************************************************************\n* Time unit multiplier for the relative final price payment *\n* date offset.                                              *\n*************************************************************\n*/\n  UnderlyingPaymentStreamFinalPricePaymentDateOffsetPeriod = 42951,\n/*\n**************************************************************\n* Time unit associated with the relative final price payment *\n* date offset.                                               *\n**************************************************************\n*/\n  UnderlyingPaymentStreamFinalPricePaymentDateOffsetUnit = 42952,\n/*\n**************************************************************\n* Specifies the day type of the relative final price payment *\n* date offset.                                               *\n**************************************************************\n*/\n  UnderlyingPaymentStreamFinalPricePaymentDateOffsetDayType = 42953,\n/*\n******************************************\n* The adjusted final price payment date. *\n******************************************\n*/\n  UnderlyingPaymentStreamFinalPricePaymentDateAdjusted = 42954,\n/*\n**************************************************\n* The fixing date.  Type of date is specified in *\n* UnderlyingPaymentStreamFixingDateType(42957).  *\n**************************************************\n*/\n  UnderlyingPaymentStreamFixingDate = 42956,\n/*\n********************************************************\n* Specifies the type of fixing date (e.g. adjusted for *\n* holidays).                                           *\n********************************************************\n*/\n  UnderlyingPaymentStreamFixingDateType = 42957,\n/*\n**************************************************\n* The unadjusted initial price observation date. *\n**************************************************\n*/\n  UnderlyingPaymentStreamFirstObservationDateUnadjusted = 42958,\n/*\n*****************************************************************\n* Specifies the anchor date when the initial price observation  *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStreamFirstObservationDateRelativeTo = 42959,\n/*\n****************************************************************\n* Specifies the day type of the initial price observation date *\n* offset.                                                      *\n****************************************************************\n*/\n  UnderlyingPaymentStreamFirstObservationDateOffsetDayType = 42960,\n/*\n************************************************\n* The adjusted initial price observation date. *\n************************************************\n*/\n  UnderlyingPaymentStreamFirstObservationDateAdjusted = 42961,\n/*\n**************************************************************\n* References the dividend underlier through the instrument's *\n* UnderlyingSecurityID(309) which must be fully specified in *\n* an instance of the UnderlyingInstrument component.         *\n**************************************************************\n*/\n  UnderlyingPaymentStreamUnderlierRefID = 42962,\n/*\n**************************************************************\n* Indicates whether the term \"Equity Notional Reset\" as      *\n* defined in the ISDA 2002 Equity Derivatives Definitions is *\n* applicable (\"Y\") or not.                                   *\n**************************************************************\n*/\n  UnderlyingReturnRateNotionalReset = 42963,\n/*\n*********************************************************\n* Price level at which the correlation or variance swap *\n* contract will strike.                                 *\n*********************************************************\n*/\n  UnderlyingPaymentStreamLinkInitialLevel = 42964,\n/*\n***************************************************************\n* Indicates whether the correlation or variance swap contract *\n* will (\"Y\") strike off the closing level of the default      *\n* exchange traded contract or not.                            *\n***************************************************************\n*/\n  UnderlyingPaymentStreamLinkClosingLevelIndicator = 42965,\n/*\n***************************************************************\n* Indicates whether the correlation or variance swap contract *\n* will (\"Y\") strike off the expiring level of the default     *\n* exchange traded contract or not.                            *\n***************************************************************\n*/\n  UnderlyingPaymentStreamLinkExpiringLevelIndicator = 42966,\n/*\n**********************************************************\n* The expected number of trading days in the variance or *\n* correlation swap stream.                               *\n**********************************************************\n*/\n  UnderlyingPaymentStreamLinkEstimatedTradingDays = 42967,\n/*\n**************************************************************\n* The strike price of a correlation or variance swap stream. *\n**************************************************************\n*/\n  UnderlyingPaymentStreamLinkStrikePrice = 42968,\n/*\n***************************************************************\n* For a variance swap specifies how                           *\n* UnderlyingPaymentStreamLinkStrikePrice(42968) is expressed. *\n***************************************************************\n*/\n  UnderlyingPaymentStreamLinkStrikePriceType = 42969,\n/*\n***************************************************************\n* Specifies the maximum or upper boundary for variance or     *\n* strike determination.                                       *\n* For a variation swap stream all observations above this     *\n* price level will be excluded from the variance calculation. *\n* For a correlation swap stream the maximum boundary is a     *\n* percentage of the strike price.                             *\n***************************************************************\n*/\n  UnderlyingPaymentStreamLinkMaximumBoundary = 42970,\n/*\n***************************************************************\n* Specifies the minimum or lower boundary for variance or     *\n* strike determination.                                       *\n* For a variation swap stream all observations below this     *\n* price level will be excluded from the variance calculation. *\n* For a correlation swap stream the minimum boundary is a     *\n* percentage of the strike price.                             *\n***************************************************************\n*/\n  UnderlyingPaymentStreamLinkMinimumBoundary = 42971,\n/*\n****************************************************************\n* Number of data series for a correlation swap.  Normal market *\n* practice is that correlation data sets are drawn from        *\n* geographic market areas, such as America, Europe and Asia    *\n* Pacific.  Each of these geographic areas will have its own   *\n* data series to avoid contagion.                              *\n****************************************************************\n*/\n  UnderlyingPaymentStreamLinkNumberOfDataSeries = 42972,\n/*\n********************************************************\n* Indicates the scaling factor to be multiplied by the *\n* variance strike price thereby making variance cap    *\n* applicable.                                          *\n********************************************************\n*/\n  UnderlyingPaymentStreamVarianceUnadjustedCap = 42973,\n/*\n********************************************************\n* Indicates which price to use to satisfy the boundary *\n* condition.                                           *\n********************************************************\n*/\n  UnderlyingPaymentStreamRealizedVarianceMethod = 42974,\n/*\n**************************************************************\n* Indicates whether the contract specifies that the notional *\n* should be scaled by the number of days in range divided by *\n* the estimate trading days or not. The number of \"days in   *\n* range\" refers to the number of returns that contribute to  *\n* the realized volatility.                                   *\n**************************************************************\n*/\n  UnderlyingPaymentStreamDaysAdjustmentIndicator = 42975,\n/*\n**************************************************************\n* References a contract listed on an exchange through the    *\n* instrument's UnderlyingSecurityID(309) which must be fully *\n* specified in an instance of the UnderlyingInstrument       *\n* component.                                                 *\n**************************************************************\n*/\n  UnderlyingPaymentStreamNearestExchangeContractRefID = 42976,\n/*\n*********************************************************\n* Vega Notional represents the approximate gain/loss at *\n* maturity for a 1% difference between RVol (realised   *\n* volatility) and KVol (strike volatility). It does not *\n* necessarily represent the Vega risk of the trade.     *\n*********************************************************\n*/\n  UnderlyingPaymentStreamVegaNotionalAmount = 42977,\n/*\n************************************************************\n* The currency in which the formula amount is denominated. *\n* Uses ISO 4217 currency codes.                            *\n************************************************************\n*/\n  UnderlyingPaymentStreamFormulaCurrency = 42978,\n/*\n**************************************************************\n* Specifies the method according to which the formula amount *\n* currency is determined.                                    *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  UnderlyingPaymentStreamFormulaCurrencyDeterminationMethod = 42979,\n/*\n***************************************************************************\n* Specifies the reference amount when this term either                    *\n* corresponds to the standard ISDA Definition (either the 2002            *\n* Equity Definition for the Equity Amount, or the 2000                    *\n* Definition for the Interest Amount), or refers to a term                *\n* defined elsewhere in the swap document.                                 *\n* See                                                                     *\n* http://www.fixtradingcommunity.org/codelists#Payment_Amount_Relative_To *\n* for code list of reference amounts.                                     *\n***************************************************************************\n*/\n  UnderlyingPaymentStreamFormulaReferenceAmount = 42980,\n/*\n******************************************\n* A description of the math formula in   *\n* UnderlyingPaymentStreamFormula(42982). *\n******************************************\n*/\n  UnderlyingPaymentStreamFormulaDesc = 42983,\n/*\n*********************************\n* The unadjusted stub end date. *\n*********************************\n*/\n  UnderlyingPaymentStubEndDateUnadjusted = 42984,\n/*\n**********************************************\n* The stub end date business day convention. *\n**********************************************\n*/\n  UnderlyingPaymentStubEndDateBusinessDayConvention = 42985,\n/*\n*****************************************************************\n* Specifies the anchor date when the stub end date is relative  *\n* to an anchor date.                                            *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStubEndDateRelativeTo = 42986,\n/*\n***************************************************************\n* Time unit multiplier for the relative stub end date offset. *\n***************************************************************\n*/\n  UnderlyingPaymentStubEndDateOffsetPeriod = 42987,\n/*\n****************************************************************\n* Time unit associated with the relative stub end date offset. *\n****************************************************************\n*/\n  UnderlyingPaymentStubEndDateOffsetUnit = 42988,\n/*\n****************************************************************\n* Specifies the day type of the relative stub end date offset. *\n****************************************************************\n*/\n  UnderlyingPaymentStubEndDateOffsetDayType = 42989,\n/*\n*******************************\n* The adjusted stub end date. *\n*******************************\n*/\n  UnderlyingPaymentStubEndDateAdjusted = 42990,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* payment stub end date, e.g. \"GBLO\".                          *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingPaymentStubEndDateBusinessCenter = 42992,\n/*\n***********************************\n* The unadjusted stub start date. *\n***********************************\n*/\n  UnderlyingPaymentStubStartDateUnadjusted = 42993,\n/*\n************************************************\n* The stub start date business day convention. *\n************************************************\n*/\n  UnderlyingPaymentStubStartDateBusinessDayConvention = 42994,\n/*\n*****************************************************************\n* Specifies the anchor date when the stub start date is         *\n* relative to an anchor date.                                   *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingPaymentStubStartDateRelativeTo = 42995,\n/*\n*********************************************************\n* Time unit multiplier for the relative stub start date *\n* offset.                                               *\n*********************************************************\n*/\n  UnderlyingPaymentStubStartDateOffsetPeriod = 42996,\n/*\n**********************************************************\n* Time unit associated with the relative stub start date *\n* offset.                                                *\n**********************************************************\n*/\n  UnderlyingPaymentStubStartDateOffsetUnit = 42997,\n/*\n**********************************************************\n* Specifies the day type of the relative stub start date *\n* offset.                                                *\n**********************************************************\n*/\n  UnderlyingPaymentStubStartDateOffsetDayType = 42998,\n/*\n*********************************\n* The adjusted stub start date. *\n*********************************\n*/\n  UnderlyingPaymentStubStartDateAdjusted = 42999,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* payment stub start date, e.g. \"GBLO\".                        *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingPaymentStubStartDateBusinessCenter = 43001,\n/*\n************************************************\n* Type of fee elected for the break provision. *\n************************************************\n*/\n  UnderlyingProvisionBreakFeeElection = 43002,\n/*\n**************************************************************\n* Break fee election rate when the break fee is proportional *\n* to the notional.  A fee rate of 5% would be represented as *\n* \"0.05\".                                                    *\n**************************************************************\n*/\n  UnderlyingProvisionBreakFeeRate = 43003,\n/*\n*************************************************************\n* Specifies the initial rate spread for a basket underlier. *\n*************************************************************\n*/\n  UnderlyingRateSpreadInitialValue = 43004,\n/*\n****************************************************\n* The date that the rate spread step takes affect. *\n****************************************************\n*/\n  UnderlyingRateSpreadStepDate = 43006,\n/*\n**************************************************\n* The the value of the new rate spread as of the *\n* UnderlyingRateSpreadStepDate(43006).           *\n**************************************************\n*/\n  UnderlyingRateSpreadStepValue = 43007,\n/*\n**************************************************************\n* Specifies the valuation type applicable to the return rate *\n* date.                                                      *\n**************************************************************\n*/\n  UnderlyingReturnRateDateMode = 43009,\n/*\n*****************************************************************\n* Specifies the anchor date when the return rate valuation      *\n* dates are relative to an anchor date.                         *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingReturnRateValuationDateRelativeTo = 43010,\n/*\n***************************************************************\n* Time unit multiplier for the relative return rate valuation *\n* date offset.                                                *\n***************************************************************\n*/\n  UnderlyingReturnRateValuationDateOffsetPeriod = 43011,\n/*\n****************************************************************\n* Time unit associated with the relative return rate valuation *\n* date offset.                                                 *\n****************************************************************\n*/\n  UnderlyingReturnRateValuationDateOffsetUnit = 43012,\n/*\n****************************************************************\n* Specifies the day type of the relative return rate valuation *\n* date offset.                                                 *\n****************************************************************\n*/\n  UnderlyingReturnRateValuationDateOffsetDayType = 43013,\n/*\n*************************************************************\n* The unadjusted start date for return rate valuation. This *\n* can be used to restrict the range of dates when they are  *\n* relative.                                                 *\n*************************************************************\n*/\n  UnderlyingReturnRateValuationStartDateUnadjusted = 43014,\n/*\n*****************************************************************\n* Specifies the anchor date when the return rate valuation      *\n* start date is relative to an anchor date.                     *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingReturnRateValuationStartDateRelativeTo = 43015,\n/*\n***************************************************************\n* Time unit multiplier for the relative return rate valuation *\n* start date offset.                                          *\n***************************************************************\n*/\n  UnderlyingReturnRateValuationStartDateOffsetPeriod = 43016,\n/*\n****************************************************************\n* Time unit associated with the relative return rate valuation *\n* start date offset.                                           *\n****************************************************************\n*/\n  UnderlyingReturnRateValuationStartDateOffsetUnit = 43017,\n/*\n****************************************************************\n* Specifies the day type of the relative return rate valuation *\n* start date offset.                                           *\n****************************************************************\n*/\n  UnderlyingReturnRateValuationStartDateOffsetDayType = 43018,\n/*\n***************************************************************\n* The adjusted start date for return rate valuation. This can *\n* be used to restrict the range of dates when they are        *\n* relative.                                                   *\n***************************************************************\n*/\n  UnderlyingReturnRateValuationStartDateAdjusted = 43019,\n/*\n***************************************************************\n* The unadjusted end date for return rate valuation. This can *\n* be used to restrict the range of dates when they are        *\n* relative.                                                   *\n***************************************************************\n*/\n  UnderlyingReturnRateValuationEndDateUnadjusted = 43020,\n/*\n*****************************************************************\n* Specifies the anchor date when the return rate valuation end  *\n* date is relative to an anchor date.                           *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingReturnRateValuationEndDateRelativeTo = 43021,\n/*\n***************************************************************\n* Time unit multiplier for the relative return rate valuation *\n* end date offset.                                            *\n***************************************************************\n*/\n  UnderlyingReturnRateValuationEndDateOffsetPeriod = 43022,\n/*\n****************************************************************\n* Time unit associated with the relative return rate valuation *\n* end date offset.                                             *\n****************************************************************\n*/\n  UnderlyingReturnRateValuationEndDateOffsetUnit = 43023,\n/*\n****************************************************************\n* Specifies the day type of the relative return rate valuation *\n* end date offset.                                             *\n****************************************************************\n*/\n  UnderlyingReturnRateValuationEndDateOffsetDayType = 43024,\n/*\n****************************************************************\n* The adjusted end date for return rate valuation. This can be *\n* used to restrict the range of dates when they are relative.  *\n****************************************************************\n*/\n  UnderlyingReturnRateValuationEndDateAdjusted = 43025,\n/*\n***************************************************************\n* Time unit multiplier for the frequency at which return rate *\n* valuation dates occur.                                      *\n***************************************************************\n*/\n  UnderlyingReturnRateValuationFrequencyPeriod = 43026,\n/*\n****************************************************************\n* Time unit associated with the frequency at which return rate *\n* valuation dates occur.                                       *\n****************************************************************\n*/\n  UnderlyingReturnRateValuationFrequencyUnit = 43027,\n/*\n***************************************************************\n* The convention for determining the sequence of return rate  *\n* valuation dates. It is used in conjunction with a specified *\n* frequency.                                                  *\n***************************************************************\n*/\n  UnderlyingReturnRateValuationFrequencyRollConvention = 43028,\n/*\n************************************************************\n* The return rate valuation dates business day convention. *\n************************************************************\n*/\n  UnderlyingReturnRateValuationDateBusinessDayConvention = 43029,\n/*\n***************************************************************\n* Specifies the currency pair for the FX conversion expressed *\n* using the CCY1/CCY2 convention.  Uses ISO 4217 currency     *\n* codes.                                                      *\n***************************************************************\n*/\n  UnderlyingReturnRateFXCurrencySymbol = 43031,\n/*\n****************************************************************\n* The rate of exchange between the two currencies specified in *\n* UnderlyingReturnRateFXCurrencySymbol(43031).                 *\n****************************************************************\n*/\n  UnderlyingReturnRateFXRate = 43032,\n/*\n**************************************************************\n* Specifies whether UnderlyingReturnRateFXRate(43032) should *\n* be multiplied or divided.                                  *\n**************************************************************\n*/\n  UnderlyingReturnRateFXRateCalc = 43033,\n/*\n************************************************************\n* Specifies the type of price sequence of the return rate. *\n************************************************************\n*/\n  UnderlyingReturnRatePriceSequence = 43035,\n/*\n*****************************************************\n* Specifies the basis or unit used to calculate the *\n* commission.                                       *\n*****************************************************\n*/\n  UnderlyingReturnRateCommissionBasis = 43036,\n/*\n**************************\n* The commission amount. *\n**************************\n*/\n  UnderlyingReturnRateCommissionAmount = 43037,\n/*\n***************************************************************\n* Specifies the currency the commission amount is denominated *\n* in. Uses ISO 4217 currency codes.                           *\n***************************************************************\n*/\n  UnderlyingReturnRateCommissionCurrency = 43038,\n/*\n***********************************\n* The total commission per trade. *\n***********************************\n*/\n  UnderlyingReturnRateTotalCommissionPerTrade = 43039,\n/*\n**************************************************************\n* Specifies the method by which the underlier prices are     *\n* determined.                                                *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  UnderlyingReturnRateDeterminationMethod = 43040,\n/*\n***************************************************************************\n* Specifies the reference amount when the return rate amount              *\n* is relative to another amount in the trade.                             *\n* See                                                                     *\n* http://www.fixtradingcommunity.org/codelists#Payment_Amount_Relative_To *\n* for code list of relative amounts.                                      *\n***************************************************************************\n*/\n  UnderlyingReturnRateAmountRelativeTo = 43041,\n/*\n**************************************************************\n* Specifies the type of the measure applied to the return    *\n* rate's asset, e.g. valuation, sensitivity risk. This could *\n* be an NPV, a cash flow, a clean price, etc.                *\n* See http://www.fpml.org/coding-scheme/asset-measure for    *\n* values.                                                    *\n**************************************************************\n*/\n  UnderlyingReturnRateQuoteMeasureType = 43042,\n/*\n****************************************************************\n* Specifies the units that the measure is expressed in. If not *\n* specified, the default is a price/value in currency units.   *\n* See http://www.fpml.org/coding-scheme/price-quote-units for  *\n* values.                                                      *\n****************************************************************\n*/\n  UnderlyingReturnRateQuoteUnits = 43043,\n/*\n************************************************************\n* Specifies the type of quote used to determine the return *\n* rate of the swap.                                        *\n************************************************************\n*/\n  UnderlyingReturnRateQuoteMethod = 43044,\n/*\n***************************************************************\n* Specifies the currency the return rate quote is denominated *\n* in.  Uses ISO 4217 Currency Code.                           *\n***************************************************************\n*/\n  UnderlyingReturnRateQuoteCurrency = 43045,\n/*\n*************************************************************\n* Specifies the type of currency, e.g. settlement currency, *\n* base currency, etc., that the quote is reported in.       *\n* See                                                       *\n* http://www.fpml.org/coding-scheme/reporting-currency-type *\n* for values.                                               *\n*************************************************************\n*/\n  UnderlyingReturnRateQuoteCurrencyType = 43046,\n/*\n*******************************************************\n* Specifies how or the timing when the quote is to be *\n* obtained.                                           *\n*******************************************************\n*/\n  UnderlyingReturnRateQuoteTimeType = 43047,\n/*\n***********************************************\n* The time when the quote is to be generated. *\n***********************************************\n*/\n  UnderlyingReturnRateQuoteTime = 43048,\n/*\n***********************************************\n* The date when the quote is to be generated. *\n***********************************************\n*/\n  UnderlyingReturnRateQuoteDate = 43049,\n/*\n***********************************************\n* The time when the quote ceases to be valid. *\n***********************************************\n*/\n  UnderlyingReturnRateQuoteExpirationTime = 43050,\n/*\n****************************************************************\n* The business center calendar used for adjustments associated *\n* with UnderlyingReturnRateQuoteTimeType(43047) or             *\n* UnderlyingReturnRateQuoteTime(43048) and                     *\n* UnderlyingReturnRateQuoteDate(43049), e.g. \"GBLO\".           *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingReturnRateQuoteBusinessCenter = 43051,\n/*\n****************************************************************\n* Specifies the exchange (e.g. stock or listed futures/options *\n* exchange) from which the quote is obtained.                  *\n****************************************************************\n*/\n  UnderlyingReturnRateQuoteExchange = 43052,\n/*\n***************************************************************\n* Specifies the pricing model used to evaluate the underlying *\n* asset price.                                                *\n* See http://www.fpml.org/coding-scheme/pricing-model for     *\n* values.                                                     *\n***************************************************************\n*/\n  UnderlyingReturnRateQuotePricingModel = 43053,\n/*\n***********************************************************\n* Specifies the type of cash flows, e.g. coupon payment,  *\n* premium fee, settlement fee, etc.                       *\n* See http://www.fpml.org/coding-scheme/cashflow-type for *\n* values.                                                 *\n***********************************************************\n*/\n  UnderlyingReturnRateCashFlowType = 43054,\n/*\n**************************************************************\n* Specifies the timing at which the calculation agent values *\n* the underlying.                                            *\n**************************************************************\n*/\n  UnderlyingReturnRateValuationTimeType = 43055,\n/*\n******************************************************\n* The time at which the calculation agent values the *\n* underlying asset.                                  *\n******************************************************\n*/\n  UnderlyingReturnRateValuationTime = 43056,\n/*\n****************************************************************\n* The business center calendar used for adjustments associated *\n* with  UnderlyingReturnRateValuationTimeType(43055) or        *\n* UnderlyingReturnRateValuationTime(43056) , e.g. \"GBLO\".      *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingReturnRateValuationTimeBusinessCenter = 43057,\n/*\n**********************************************************\n* Indicates whether an ISDA price option applies, and if *\n* applicable which type of price.                        *\n**********************************************************\n*/\n  UnderlyingReturnRateValuationPriceOption = 43058,\n/*\n*************************************************************\n* Specifies the fallback provision for the hedging party in *\n* the determination of the final price.                     *\n*************************************************************\n*/\n  UnderlyingReturnRateFinalPriceFallback = 43059,\n/*\n*********************************************************\n* Identifies the source of rate information. For FX the *\n* references source to be used for the FX spot rate.    *\n*********************************************************\n*/\n  UnderlyingReturnRateInformationSource = 43061,\n/*\n***************************************************************\n* Identifies the reference \"page\" from the rate source.       *\n* For FX, the reference page to the spot rate to be used for  *\n* the reference FX spot rate.                                 *\n* When UnderlyingReturnRateInformationSource(43061) = 3 (ISDA *\n* Settlement Rate Option) this contains the value from the    *\n* scheme that reflects the terms of the Annex A to the ISDA   *\n* 1998 FX and Currency Option Definitions.                    *\n* See:                                                        *\n* http://www.fpml.org/coding-scheme/settlement-rate-option    *\n***************************************************************\n*/\n  UnderlyingReturnRateReferencePage = 43062,\n/*\n*****************************************************\n* Identifies the page heading from the rate source. *\n*****************************************************\n*/\n  UnderlyingReturnRateReferencePageHeading = 43063,\n/*\n**********************************\n* The basis of the return price. *\n**********************************\n*/\n  UnderlyingReturnRatePriceBasis = 43065,\n/*\n*****************************************************\n* Specifies the price of the underlying swap asset. *\n*****************************************************\n*/\n  UnderlyingReturnRatePrice = 43066,\n/*\n**************************************************************\n* Specifies the currency of the price of the underlying swap *\n* asset. Uses ISO 4217 currency codes.                       *\n**************************************************************\n*/\n  UnderlyingReturnRatePriceCurrency = 43067,\n/*\n*************************************************************\n* Specifies whether the UnderlyingReturnRatePrice(43066) is *\n* expressed in absolute or relative terms.                  *\n*************************************************************\n*/\n  UnderlyingReturnRatePriceType = 43068,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* return rate valuation unadjusted or relative dates, e.g.     *\n* \"GBLO\".                                                      *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingReturnRateValuationDateBusinessCenter = 43070,\n/*\n**************************************************************\n* The return rate valuation date.  Type of date is specified *\n* in UnderlyingReturnRateValuationDateType(43073).           *\n**************************************************************\n*/\n  UnderlyingReturnRateValuationDate = 43072,\n/*\n**********************************************************\n* Specifies the type of return rate valuation date (e.g. *\n* adjusted for holidays).                                *\n**********************************************************\n*/\n  UnderlyingReturnRateValuationDateType = 43073,\n/*\n****************************************************************\n* The business center calendar used for date adjustment of the *\n* settlement method election unadjusted or relative date, e.g. *\n* \"GBLO\".                                                      *\n* See http://www.fpml.org/coding-scheme/business-center for    *\n* standard 4-character code values.                            *\n****************************************************************\n*/\n  UnderlyingSettlMethodElectionDateBusinessCenter = 43075,\n/*\n***************************************************\n* The unadjusted settlement method election date. *\n***************************************************\n*/\n  UnderlyingSettlMethodElectionDateUnadjusted = 43076,\n/*\n***************************************************************\n* The settlement method election date adjustment business day *\n* convention.                                                 *\n***************************************************************\n*/\n  UnderlyingSettlMethodElectionDateBusinessDayConvention = 43077,\n/*\n*****************************************************************\n* Specifies the anchor date when the settlement method          *\n* election date is relative to an anchor date.                  *\n* See                                                           *\n* http://www.fixtradingcommunity.org/codelists#Relative_To_Date *\n* for values.                                                   *\n*****************************************************************\n*/\n  UnderlyingSettlMethodElectionDateRelativeTo = 43078,\n/*\n***********************************************************\n* Time unit multiplier for the relative settlement method *\n* election date offset.                                   *\n***********************************************************\n*/\n  UnderlyingSettlMethodElectionDateOffsetPeriod = 43079,\n/*\n************************************************************\n* Time unit associated with the relative settlement method *\n* election date offset.                                    *\n************************************************************\n*/\n  UnderlyingSettlMethodElectionDateOffsetUnit = 43080,\n/*\n************************************************************\n* Specifies the day type of the relative settlement method *\n* election date offset.                                    *\n************************************************************\n*/\n  UnderlyingSettlMethodElectionDateOffsetDayType = 43081,\n/*\n*************************************************\n* The adjusted settlement method election date. *\n*************************************************\n*/\n  UnderlyingSettlMethodElectionDateAdjusted = 43082,\n/*\n**************************************************************\n* The stream version identifier when there have been         *\n* modifications to the contract over time. Helps signal when *\n* there are embedded changes.                                *\n**************************************************************\n*/\n  UnderlyingStreamVersion = 43083,\n/*\n*************************************************************\n* The effective date of the UnderlyingStreamVersion(43083). *\n*************************************************************\n*/\n  UnderlyingStreamVersionEffectiveDate = 43084,\n/*\n**************************************************************\n* Specifies the method for determining the floating notional *\n* value for equity swaps.                                    *\n* See http://www.fpml.org/coding-scheme/determination-method *\n* for values.                                                *\n**************************************************************\n*/\n  UnderlyingStreamNotionalDeterminationMethod = 43085,\n/*\n**************************************************************\n* For equity swaps this specifies the conditions that govern *\n* the adjustment to the number of units of the swap.         *\n**************************************************************\n*/\n  UnderlyingStreamNotionalAdjustments = 43086,\n/*\n****************************************************************\n* A short descriptive name given to the payment, e.g. Premium, *\n* Upfront, etc. The description has no intrinsic meaning but   *\n* should be arbitrarily chosen by the remitter as reference.   *\n****************************************************************\n*/\n  PaymentDesc = 43087,\n/*\n**********************************************\n* Unique Identifier for a batch of messages. *\n**********************************************\n*/\n  BatchID = 50000,\n/*\n***********************************************\n* Total # of messages contained within batch. *\n***********************************************\n*/\n  BatchTotalMessages = 50001,\n/*\n**********************************************************\n* Indicates the processing mode for a batch of messages. *\n**********************************************************\n*/\n  BatchProcessMode = 50002,\n/*\n*************************************************************\n* Defines the post trade type, e.g. give up, average price, *\n* cross exchange give up, etc                               *\n*************************************************************\n*/\n  PostTradeType = 60001,\n/*\n**************************************************************\n* Differentiates between messages sent to the Executing Firm *\n* vs. the Claiming Firm.                                     *\n**************************************************************\n*/\n  ExecutingClaimingIndicator = 60002,\n/*\n**************************************************\n* The Clearing Date for the allocation or trade. *\n**************************************************\n*/\n  ClearDate = 60003,\n/*\n********************************************************\n* Identifier assigned to a trade by a matching system. *\n********************************************************\n*/\n  TradeMatchID = 60004,\n/*\n****************************************\n* Trade part ID of the original trade. *\n****************************************\n*/\n  OriginalSecondaryTradeID = 60006\n}\n"]}