{"version":3,"file":"msg_tag.js","sourceRoot":"","sources":["../../../../../src/types/FIX4.1/repo/enum/msg_tag.ts"],"names":[],"mappings":";;;AAAA,IAAY,MAk5CX;AAl5CD,WAAY,MAAM;IAMhB,yCAAW,CAAA;IAOX,qCAAS,CAAA;IAQT,2CAAY,CAAA;IAMZ,yCAAW,CAAA;IAMX,mDAAgB,CAAA;IAMhB,qCAAS,CAAA;IAOT,+CAAc,CAAA;IAOd,iDAAe,CAAA;IAOf,+CAAc,CAAA;IASd,4CAAa,CAAA;IAUb,0CAAY,CAAA;IAOZ,gDAAe,CAAA;IAMf,4CAAa,CAAA;IAMb,wCAAW,CAAA;IAUX,4CAAa,CAAA;IASb,4CAAa,CAAA;IAYb,wCAAW,CAAA;IAQX,4CAAa,CAAA;IAQb,8CAAc,CAAA;IAMd,sDAAkB,CAAA;IAMlB,8CAAc,CAAA;IAMd,4CAAa,CAAA;IAOb,sCAAU,CAAA;IASV,8CAAc,CAAA;IAMd,gDAAe,CAAA;IAQf,4CAAa,CAAA;IAMb,8CAAc,CAAA;IAMd,oDAAiB,CAAA;IAMjB,oDAAiB,CAAA;IAQjB,0CAAY,CAAA;IAOZ,wCAAW,CAAA;IAOX,gDAAe,CAAA;IAMf,kDAAgB,CAAA;IAMhB,8CAAc,CAAA;IAUd,0CAAY,CAAA;IAQZ,4CAAa,CAAA;IAUb,0CAAY,CAAA;IAMZ,4CAAa,CAAA;IAMb,8CAAc,CAAA;IAMd,0CAAY,CAAA;IAQZ,kDAAgB,CAAA;IAMhB,4CAAa,CAAA;IAOb,kDAAgB,CAAA;IAMhB,sCAAU,CAAA;IAMV,8CAAc,CAAA;IAOd,8CAAc,CAAA;IAWd,0CAAY,CAAA;IAMZ,gDAAe,CAAA;IAMf,oDAAiB,CAAA;IAOjB,kDAAgB,CAAA;IAMhB,kDAAgB,CAAA;IAMhB,wCAAW,CAAA;IAMX,oCAAS,CAAA;IAMT,wCAAW,CAAA;IAMX,oDAAiB,CAAA;IAQjB,kDAAgB,CAAA;IAOhB,oCAAS,CAAA;IAOT,kDAAgB,CAAA;IAMhB,oDAAiB,CAAA;IAMjB,0CAAY,CAAA;IAOZ,wDAAmB,CAAA;IASnB,kDAAgB,CAAA;IAShB,kDAAgB,CAAA;IAUhB,8CAAc,CAAA;IAUd,wCAAW,CAAA;IAOX,8CAAc,CAAA;IAOd,gDAAe,CAAA;IAOf,oDAAiB,CAAA;IAOjB,0CAAY,CAAA;IAMZ,wDAAmB,CAAA;IAQnB,gDAAe,CAAA;IAOf,4CAAa,CAAA;IAQb,0DAAoB,CAAA;IAQpB,8CAAc,CAAA;IAOd,gDAAe,CAAA;IAMf,8CAAc,CAAA;IAOd,4CAAa,CAAA;IAMb,oDAAiB,CAAA;IAMjB,kDAAgB,CAAA;IAQhB,kDAAgB,CAAA;IAMhB,wCAAW,CAAA;IAMX,wCAAW,CAAA;IAMX,wCAAW,CAAA;IAMX,kDAAgB,CAAA;IAMhB,oDAAiB,CAAA;IAMjB,8CAAc,CAAA;IAMd,sDAAkB,CAAA;IAMlB,gDAAe,CAAA;IAMf,wDAAmB,CAAA;IAMnB,0DAAoB,CAAA;IAMpB,8CAAc,CAAA;IAMd,sDAAkB,CAAA;IAOlB,0CAAY,CAAA;IAOZ,gDAAe,CAAA;IAMf,sDAAkB,CAAA;IAMlB,wCAAW,CAAA;IAOX,uDAAmB,CAAA;IAMnB,qDAAkB,CAAA;IAMlB,qDAAkB,CAAA;IAMlB,qDAAkB,CAAA;IAOlB,yCAAY,CAAA;IAOZ,yCAAY,CAAA;IAMZ,qDAAkB,CAAA;IAMlB,iDAAgB,CAAA;IAMhB,6CAAc,CAAA;IAMd,yCAAY,CAAA;IAOZ,6CAAc,CAAA;IAOd,+CAAe,CAAA;IAOf,qDAAkB,CAAA;IAOlB,iDAAgB,CAAA;IAShB,6DAAsB,CAAA;IAOtB,2DAAqB,CAAA;IAMrB,2CAAa,CAAA;IAQb,6CAAc,CAAA;IAOd,qDAAkB,CAAA;IAMlB,uDAAmB,CAAA;IAOnB,6CAAc,CAAA;IAQd,2DAAqB,CAAA;IAQrB,mDAAiB,CAAA;IAMjB,2CAAa,CAAA;IAMb,iDAAgB,CAAA;IAMhB,6CAAc,CAAA;IAUd,2DAAqB,CAAA;IAOrB,yDAAoB,CAAA;IAQpB,yDAAoB,CAAA;IAMpB,iDAAgB,CAAA;IAMhB,uCAAW,CAAA;IAMX,2CAAa,CAAA;IAMb,2CAAa,CAAA;IAMb,+CAAe,CAAA;IAMf,iDAAgB,CAAA;IAMhB,iDAAgB,CAAA;IAMhB,mDAAiB,CAAA;IAMjB,mDAAiB,CAAA;IAMjB,mDAAiB,CAAA;IAOjB,2DAAqB,CAAA;IAQrB,6DAAsB,CAAA;IAQtB,6DAAsB,CAAA;IAQtB,qEAA0B,CAAA;IAQ1B,mEAAyB,CAAA;IAMzB,qDAAkB,CAAA;IAMlB,2CAAa,CAAA;IAMb,6CAAc,CAAA;IAOd,2CAAa,CAAA;IAQb,6CAAc,CAAA;IAUd,+CAAe,CAAA;IAUf,qDAAkB,CAAA;IAMlB,iDAAgB,CAAA;IAMhB,uDAAmB,CAAA;IAOnB,2DAAqB,CAAA;IAOrB,mEAAyB,CAAA;IAOzB,2DAAqB,CAAA;IAMrB,mEAAyB,CAAA;IAOzB,iEAAwB,CAAA;IAMxB,uDAAmB,CAAA;IAMnB,+CAAe,CAAA;IAMf,mDAAiB,CAAA;IAMjB,iEAAwB,CAAA;IAOxB,uDAAmB,CAAA;IAMnB,2DAAqB,CAAA;IAOrB,uDAAmB,CAAA;IAMnB,qDAAkB,CAAA;IAOlB,uDAAmB,CAAA;IAMnB,2DAAqB,CAAA;IAOrB,2DAAqB,CAAA;IAOrB,uDAAmB,CAAA;IAMnB,+DAAuB,CAAA;IAQvB,mEAAyB,CAAA;IAOzB,uDAAmB,CAAA;IAQnB,uDAAmB,CAAA;IAOnB,yEAA4B,CAAA;IAQ5B,yEAA4B,CAAA;IAO5B,+EAA+B,CAAA;IAO/B,iFAAgC,CAAA;IAOhC,uFAAmC,CAAA;IAOnC,yFAAoC,CAAA;IAOpC,iEAAwB,CAAA;IAOxB,iEAAwB,CAAA;IAOxB,uEAA2B,CAAA;IAO3B,yEAA4B,CAAA;IAO5B,+EAA+B,CAAA;IAO/B,iFAAgC,CAAA;IAMhC,mDAAiB,CAAA;IAOjB,6DAAsB,CAAA;IAMtB,uDAAmB,CAAA;IAOnB,iEAAwB,CAAA;IAMxB,+CAAe,CAAA;IAMf,qDAAkB,CAAA;IAMlB,qDAAkB,CAAA;IAOlB,+DAAuB,CAAA;IAQvB,mDAAiB,CAAA;IAOjB,uDAAmB,CAAA;IAQnB,6DAAsB,CAAA;IAMtB,2DAAqB,CAAA;IASrB,+DAAuB,CAAA;IAMvB,+CAAe,CAAA;IAMf,mDAAiB,CAAA;IAMjB,iEAAwB,CAAA;IAQxB,yDAAoB,CAAA;IAQpB,mDAAiB,CAAA;IAOjB,qDAAkB,CAAA;IAMlB,6DAAsB,CAAA;IAOtB,qEAA0B,CAAA;IAO1B,yDAAoB,CAAA;IAOpB,2CAAa,CAAA;IAMb,uDAAmB,CAAA;AACrB,CAAC,EAl5CW,MAAM,GAAN,cAAM,KAAN,cAAM,QAk5CjB","sourcesContent":["export enum MsgTag {\n/*\n**************************************************************\n* Account mnemonic as agreed between broker and institution. *\n**************************************************************\n*/\n  Account = 1,\n/*\n*************************************************\n* Unique identifier of advertisement message.   *\n* (Prior to FIX 4.1 this field was of type int) *\n*************************************************\n*/\n  AdvId = 2,\n/*\n*****************************************************\n* Reference identifier used with CANCEL and REPLACE *\n* transaction types.                                *\n* (Prior to FIX 4.1 this field was of type int)     *\n*****************************************************\n*/\n  AdvRefID = 3,\n/*\n*************************************\n* Broker's side of advertised trade *\n*************************************\n*/\n  AdvSide = 4,\n/*\n*****************************************************\n* Identifies advertisement message transaction type *\n*****************************************************\n*/\n  AdvTransType = 5,\n/*\n********************************************************\n* Calculated average price of all fills on this order. *\n********************************************************\n*/\n  AvgPx = 6,\n/*\n**********************************************************\n* Message sequence number of first record in range to be *\n* resent                                                 *\n**********************************************************\n*/\n  BeginSeqNo = 7,\n/*\n*************************************************************\n* Identifies beginning of new message and protocol version. *\n* ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted)       *\n*************************************************************\n*/\n  BeginString = 8,\n/*\n************************************************************\n* Message length, in bytes, forward to the CheckSum field. *\n* ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)     *\n************************************************************\n*/\n  BodyLength = 9,\n/*\n****************************************************************\n* Three byte, simple checksum (see Appendix B for              *\n* description). ALWAYS LAST FIELD IN RECORD; i.e. serves, with *\n* the trailing <SOH>, as the end-of-record delimiter. Always   *\n* defined as three characters. (Always unencrypted)            *\n****************************************************************\n*/\n  CheckSum = 10,\n/*\n****************************************************************\n* Unique identifier for Order as assigned by institution.      *\n* Uniqueness must be guaranteed within a single trading day.   *\n* Firms which electronically submit multi-day orders should    *\n* consider embedding a date within the ClOrdID field to assure *\n* uniqueness across days.                                      *\n****************************************************************\n*/\n  ClOrdID = 11,\n/*\n****************************************************************\n* Commission. Note if CommType is percentage, Commission of 5% *\n* should be represented as .05.                                *\n****************************************************************\n*/\n  Commission = 12,\n/*\n*******************\n* Commission type *\n*******************\n*/\n  CommType = 13,\n/*\n**********************************\n* Total number of shares filled. *\n**********************************\n*/\n  CumQty = 14,\n/*\n****************************************************************\n* Identifies currency used for price. Absence of this field is *\n* interpreted as the default for the security. It is           *\n* recommended that systems provide the currency value whenever *\n* possible. See Appendix A for information on obtaining valid  *\n* values.                                                      *\n****************************************************************\n*/\n  Currency = 15,\n/*\n************************************************************\n* Message sequence number of last record in range to be    *\n* resent. If request is for a single record BeginSeqNo =   *\n* EndSeqNo. If request is for all messages subsequent to a *\n* particular message, EndSeqNo = \"999999\"                  *\n************************************************************\n*/\n  EndSeqNo = 16,\n/*\n****************************************************************\n* Unique identifier of execution message as assigned by broker *\n* (will be 0 (zero) for ExecTransType=3 (Status)).             *\n* Uniqueness must be guaranteed within a single trading day or *\n* the life of a multi-day order. Firms which accept multi-day  *\n* orders should consider embedding a date within the ExecID    *\n* field to assure uniqueness across days.                      *\n* (Prior to FIX 4.1 this field was of type int)                *\n****************************************************************\n*/\n  ExecID = 17,\n/*\n****************************************************************\n* Instructions for order handling on exchange trading floor.   *\n* If more than one instruction is applicable to an order, this *\n* field can contain multiple instructions separated by space.  *\n****************************************************************\n*/\n  ExecInst = 18,\n/*\n*****************************************************\n* Reference identifier used with Cancel and Correct *\n* transaction types.                                *\n* (Prior to FIX 4.1 this field was of type int)     *\n*****************************************************\n*/\n  ExecRefID = 19,\n/*\n*******************************\n* Identifies transaction type *\n*******************************\n*/\n  ExecTransType = 20,\n/*\n***********************************************************\n* Instructions for order handling on Broker trading floor *\n***********************************************************\n*/\n  HandlInst = 21,\n/*\n**********************************************\n* Identifies class of alternative SecurityID *\n**********************************************\n*/\n  IDSource = 22,\n/*\n*************************************************\n* Unique identifier of IOI message.             *\n* (Prior to FIX 4.1 this field was of type int) *\n*************************************************\n*/\n  IOIid = 23,\n/*\n****************************************************************\n* Indicates if, and on which other services, the indication    *\n* has been advertised. Each character represents an additional *\n* service (e.g. if on Bridge and Autex, field = BA, if only on *\n* Autex, field = A)                                            *\n****************************************************************\n*/\n  IOIOthSvc = 24,\n/*\n**********************************\n* Relative quality of indication *\n**********************************\n*/\n  IOIQltyInd = 25,\n/*\n******************************************************\n* Reference identifier used with CANCEL and REPLACE, *\n* transaction types.                                 *\n* (Prior to FIX 4.1 this field was of type int)      *\n******************************************************\n*/\n  IOIRefID = 26,\n/*\n*************************************************\n* Number of shares in numeric or relative size. *\n*************************************************\n*/\n  IOIShares = 27,\n/*\n*******************************************\n* Identifies IOI message transaction type *\n*******************************************\n*/\n  IOITransType = 28,\n/*\n**************************************\n* Broker capacity in order execution *\n**************************************\n*/\n  LastCapacity = 29,\n/*\n*************************************\n* Market of execution for last fill *\n* Valid values:                     *\n* See Appendix C                    *\n*************************************\n*/\n  LastMkt = 30,\n/*\n*****************************************************\n* Price of this (last) fill. Field not required for *\n* ExecTransType = 3 (Status)                        *\n*****************************************************\n*/\n  LastPx = 31,\n/*\n*************************************************************\n* Quantity of shares bought/sold on this (last) fill. Field *\n* not required for ExecTransType = 3 (Status)               *\n*************************************************************\n*/\n  LastShares = 32,\n/*\n*******************************************\n* Identifies number of lines of text body *\n*******************************************\n*/\n  LinesOfText = 33,\n/*\n************************************\n* Integer message sequence number. *\n************************************\n*/\n  MsgSeqNum = 34,\n/*\n****************************************************************\n* Defines message type. ALWAYS THIRD FIELD IN MESSAGE. (Always *\n* unencrypted)                                                 *\n* Note: A \"U\" as the first character in the MsgType field      *\n* (i.e. U1, U2, etc) indicates that the message format is      *\n* privately defined between the sender and receiver.           *\n****************************************************************\n*/\n  MsgType = 35,\n/*\n***********************\n* New sequence number *\n* Valid values:       *\n* 0 - 999999          *\n***********************\n*/\n  NewSeqNo = 36,\n/*\n**************************************************************\n* Unique identifier for Order as assigned by broker.         *\n* Uniqueness must be guaranteed within a single trading day. *\n* Firms which accept multi-day orders should consider        *\n* embedding a date within the OrderID field to assure        *\n* uniqueness across days.                                    *\n**************************************************************\n*/\n  OrderID = 37,\n/*\n****************************\n* Number of shares ordered *\n****************************\n*/\n  OrderQty = 38,\n/*\n***************************************\n* Identifies current status of order. *\n***************************************\n*/\n  OrdStatus = 39,\n/*\n***************\n* Order type. *\n***************\n*/\n  OrdType = 40,\n/*\n***************************************************************\n* ClOrdID of the previous order (NOT the initial order of the *\n* day) as assigned by the institution, used to identify the   *\n* previous order in cancel and cancel/replace requests.       *\n***************************************************************\n*/\n  OrigClOrdID = 41,\n/*\n*********************************************************\n* Time of message origination (always expressed in GMT) *\n*********************************************************\n*/\n  OrigTime = 42,\n/*\n**********************************************************\n* Indicates possible retransmission of message with this *\n* sequence number                                        *\n**********************************************************\n*/\n  PossDupFlag = 43,\n/*\n*******************\n* Price per share *\n*******************\n*/\n  Price = 44,\n/*\n*************************************\n* Reference message sequence number *\n*************************************\n*/\n  RefSeqNum = 45,\n/*\n************************************************************\n* Symbol of issue related to story. Can be repeated within *\n* message to identify multiple companies.                  *\n************************************************************\n*/\n  RelatdSym = 46,\n/*\n****************************************************************\n* Note that the name of this field is changing to              *\n* \"OrderCapacity\" as Rule80A is a very US market-specific      *\n* term. Other world markets need to convey similar             *\n* information, however, often a subset of the US values. . See *\n* the \"Rule80A (aka OrderCapacity) Usage by Market\" appendix   *\n* for market-specific usage of this field.                     *\n****************************************************************\n*/\n  Rule80A = 47,\n/*\n************************************************\n* CUSIP or other alternate security identifier *\n************************************************\n*/\n  SecurityID = 48,\n/*\n*********************************************************\n* Assigned value used to identify firm sending message. *\n*********************************************************\n*/\n  SenderCompID = 49,\n/*\n***************************************************************\n* Assigned value used to identify specific message originator *\n* (desk, trader, etc.)                                        *\n***************************************************************\n*/\n  SenderSubID = 50,\n/*\n**********************************************************\n* Time of message transmission (always expressed in GMT) *\n**********************************************************\n*/\n  SendingTime = 52,\n/*\n********************\n* Number of shares *\n********************\n*/\n  Shares = 53,\n/*\n*****************\n* Side of order *\n*****************\n*/\n  Side = 54,\n/*\n*****************\n* Ticker symbol *\n*****************\n*/\n  Symbol = 55,\n/*\n***************************************************\n* Assigned value used to identify receiving firm. *\n***************************************************\n*/\n  TargetCompID = 56,\n/*\n***************************************************************\n* Assigned value used to identify specific individual or unit *\n* intended to receive message. \"ADMIN\" reserved for           *\n* administrative messages not intended for a specific user.   *\n***************************************************************\n*/\n  TargetSubID = 57,\n/*\n***************************************************************\n* Free format text string                                     *\n* (Note: this field does not have a specified maximum length) *\n***************************************************************\n*/\n  Text = 58,\n/*\n**************************************************************\n* Specifies how long the order remains in effect. Absence of *\n* this field is interpreted as DAY.                          *\n**************************************************************\n*/\n  TimeInForce = 59,\n/*\n*******************************************************\n* Time of execution/order creation (expressed in GMT) *\n*******************************************************\n*/\n  TransactTime = 60,\n/*\n****************\n* Urgency flag *\n****************\n*/\n  Urgency = 61,\n/*\n***********************************************************\n* Indicates expiration time of indication message (always *\n* expressed in GMT)                                       *\n***********************************************************\n*/\n  ValidUntilTime = 62,\n/*\n***************************************************************\n* Indicates order settlement period. Absence of this field is *\n* interpreted as Regular. Regular is defined as the default   *\n* settlement period for the particular security on the        *\n* exchange of execution.                                      *\n***************************************************************\n*/\n  SettlmntTyp = 63,\n/*\n*************************************************************\n* Specific date of trade settlement in YYYYMMDD format.     *\n* Required when SettlmntTyp = 6 (Future) or SettlmntTyp = 8 *\n* (Sellers Option). (expressed in local time at place of    *\n* settlement)                                               *\n*************************************************************\n*/\n  FutSettDate = 64,\n/*\n**************************************************************\n* Additional information about the security (e.g. preferred, *\n* warrants, etc.). Absence of this field indicates common.   *\n* Valid values:                                              *\n* As defined in the NYSE Stock and bond Symbol Directory and *\n* in the AMEX Fitch Directory                                *\n**************************************************************\n*/\n  SymbolSfx = 65,\n/*\n****************************************************************\n* Unique identifier for list as assigned by institution, used  *\n* to associate multiple individual orders. Uniqueness must be  *\n* guaranteed within a single trading day. Firms which generate *\n* multi-day orders should consider embedding a date within the *\n* ListID field to assure uniqueness across days.               *\n****************************************************************\n*/\n  ListID = 66,\n/*\n***************************************************************\n* Sequence of individual order within list (i.e. ListSeqNo of *\n* ListNoOrds, 2 of 25, 3 of 25, . . . )                       *\n***************************************************************\n*/\n  ListSeqNo = 67,\n/*\n*********************************************************\n* Total number of orders within list (i.e. ListSeqNo of *\n* ListNoOrds, e.g. 2 of 25, 3 of 25, . . . )            *\n*********************************************************\n*/\n  ListNoOrds = 68,\n/*\n*********************************************************\n* Free format text message containing list handling and *\n* execution instructions.                               *\n*********************************************************\n*/\n  ListExecInst = 69,\n/*\n*************************************************\n* Unique identifier for allocation record.      *\n* (Prior to FIX 4.1 this field was of type int) *\n*************************************************\n*/\n  AllocID = 70,\n/*\n******************************************\n* Identifies allocation transaction type *\n******************************************\n*/\n  AllocTransType = 71,\n/*\n***********************************************************\n* Reference identifier to be used with Replace and Cancel *\n* AllocTransType records.                                 *\n* (Prior to FIX 4.1 this field was of type int)           *\n***********************************************************\n*/\n  RefAllocID = 72,\n/*\n*********************************************************\n* Indicates number of orders to be combined for average *\n* pricing and allocation.                               *\n*********************************************************\n*/\n  NoOrders = 73,\n/*\n***************************************************************\n* Indicates number of decimal places to be used for average   *\n* pricing. Absence of this field indicates that default       *\n* precision arranged by the broker/institution is to be used. *\n***************************************************************\n*/\n  AvgPrxPrecision = 74,\n/*\n****************************************************************\n* Indicates date of trade referenced in this record in         *\n* YYYYMMDD format. Absence of this field indicates current day *\n* (expressed in local time at place of trade).                 *\n****************************************************************\n*/\n  TradeDate = 75,\n/*\n********************************************************\n* Identifies executing / give-up broker. Standard NASD *\n* market-maker mnemonic is preferred.                  *\n********************************************************\n*/\n  ExecBroker = 76,\n/*\n*********************\n* For options only. *\n*********************\n*/\n  OpenClose = 77,\n/*\n************************************************************\n* Number of AllocAccount/AllocShares/ProcessCode instances *\n* included in allocation record.                           *\n************************************************************\n*/\n  NoAllocs = 78,\n/*\n************************\n* Sub-account mnemonic *\n************************\n*/\n  AllocAccount = 79,\n/*\n************************************************************\n* Number of shares to be allocated to specific sub-account *\n************************************************************\n*/\n  AllocShares = 80,\n/*\n***************************************************************\n* Processing code for sub-account. Absence of this field in   *\n* AllocAccount / AllocShares / ProcessCode instance indicates *\n* regular trade.                                              *\n***************************************************************\n*/\n  ProcessCode = 81,\n/*\n******************************************\n* Total number of reports within series. *\n******************************************\n*/\n  NoRpts = 82,\n/*\n****************************************************\n* Sequence number of message within report series. *\n****************************************************\n*/\n  RptSeq = 83,\n/*\n***************************************************\n* Total number of shares canceled for this order. *\n***************************************************\n*/\n  CxlQty = 84,\n/*\n************************************\n* Identifies status of allocation. *\n************************************\n*/\n  AllocStatus = 87,\n/*\n************************************\n* Identifies reason for rejection. *\n************************************\n*/\n  AllocRejCode = 88,\n/*\n************************\n* Electronic signature *\n************************\n*/\n  Signature = 89,\n/*\n*******************************\n* Length of encrypted message *\n*******************************\n*/\n  SecureDataLen = 90,\n/*\n********************************\n* Actual encrypted data stream *\n********************************\n*/\n  SecureData = 91,\n/*\n**********************************\n* Broker to receive trade credit *\n**********************************\n*/\n  BrokerOfCredit = 92,\n/*\n***************************************\n* Number of bytes in signature field. *\n***************************************\n*/\n  SignatureLength = 93,\n/*\n***********************\n* Email message type. *\n***********************\n*/\n  EmailType = 94,\n/*\n**************************************\n* Number of bytes in raw data field. *\n**************************************\n*/\n  RawDataLength = 95,\n/*\n*************************************************************\n* Unformatted raw data, can include bitmaps, word processor *\n* documents, etc.                                           *\n*************************************************************\n*/\n  RawData = 96,\n/*\n****************************************************************\n* Indicates that message may contain information that has been *\n* sent under another sequence number.                          *\n****************************************************************\n*/\n  PossResend = 97,\n/*\n*************************\n* Method of encryption. *\n*************************\n*/\n  EncryptMethod = 98,\n/*\n*******************\n* Price per share *\n*******************\n*/\n  StopPx = 99,\n/*\n**************************************************************\n* Execution destination as defined by institution when order *\n* is entered.                                                *\n**************************************************************\n*/\n  ExDestination = 100,\n/*\n*************************************************\n* Code to identify reason for cancel rejection. *\n*************************************************\n*/\n  CxlRejReason = 102,\n/*\n************************************************\n* Code to identify reason for order rejection. *\n************************************************\n*/\n  OrdRejReason = 103,\n/*\n****************************\n* Code to qualify IOI use. *\n****************************\n*/\n  IOIQualifier = 104,\n/*\n*********************************************************\n* Identifier to aid in the management of multiple lists *\n* derived from a single, master list.                   *\n*********************************************************\n*/\n  WaveNo = 105,\n/*\n****************************************************************\n* Company name of security issuer (e.g. International Business *\n* Machines)                                                    *\n****************************************************************\n*/\n  Issuer = 106,\n/*\n*************************\n* Security description. *\n*************************\n*/\n  SecurityDesc = 107,\n/*\n********************************\n* Heartbeat interval (seconds) *\n********************************\n*/\n  HeartBtInt = 108,\n/*\n*****************************************************\n* Firm identifier used in third party-transactions. *\n*****************************************************\n*/\n  ClientID = 109,\n/*\n************************************************\n* Minimum quantity of an order to be executed. *\n************************************************\n*/\n  MinQty = 110,\n/*\n***************************************************************\n* Maximum number of shares within an order to be shown on the *\n* exchange floor at any given time.                           *\n***************************************************************\n*/\n  MaxFloor = 111,\n/*\n**************************************************************\n* Identifier included in Test Request message to be returned *\n* in resulting Heartbeat                                     *\n**************************************************************\n*/\n  TestReqID = 112,\n/*\n******************************************************\n* Identifies party of trade responsible for exchange *\n* reporting.                                         *\n******************************************************\n*/\n  ReportToExch = 113,\n/*\n**********************************************************\n* Indicates whether the broker is to locate the stock in *\n* conjunction with a short sell order.                   *\n**********************************************************\n*/\n  LocateReqd = 114,\n/*\n****************************************************************\n* Assigned value used to identify firm originating message     *\n* if the message was delivered by a third party i.e. the third *\n* party firm identifier would be delivered in the SenderCompID *\n* field and the firm originating the message in this field.    *\n****************************************************************\n*/\n  OnBehalfOfCompID = 115,\n/*\n***************************************************************\n* Assigned value used to identify specific message originator *\n* (i.e. trader) if the message was delivered by a third party *\n***************************************************************\n*/\n  OnBehalfOfSubID = 116,\n/*\n*******************************\n* Unique identifier for quote *\n*******************************\n*/\n  QuoteID = 117,\n/*\n***************************************************************\n* Total amount due as the result of the transaction (e.g. for *\n* Buy order - principal + commission + fees) reported in      *\n* currency of execution.                                      *\n***************************************************************\n*/\n  NetMoney = 118,\n/*\n***************************************************************\n* Total amount due expressed in settlement currency (includes *\n* the effect of the forex transaction)                        *\n***************************************************************\n*/\n  SettlCurrAmt = 119,\n/*\n*********************************************\n* Currency code of settlement denomination. *\n*********************************************\n*/\n  SettlCurrency = 120,\n/*\n*********************************************************\n* Indicates request for forex accommodation trade to be *\n* executed along with security transaction.             *\n*********************************************************\n*/\n  ForexReq = 121,\n/*\n**************************************************************\n* Original time of message transmission (always expressed in *\n* GMT) when transmitting orders as the result of a resend    *\n* request.                                                   *\n**************************************************************\n*/\n  OrigSendingTime = 122,\n/*\n************************************************************\n* Indicates that the Sequence Reset message is replacing   *\n* administrative or application messages which will not be *\n* resent.                                                  *\n************************************************************\n*/\n  GapFillFlag = 123,\n/*\n********************************************\n* No of execution record groups to follow. *\n********************************************\n*/\n  NoExecs = 124,\n/*\n***********************************************************\n* Time/Date of order expiration (always expressed in GMT) *\n***********************************************************\n*/\n  ExpireTime = 126,\n/*\n***********************************\n* Reason for execution rejection. *\n***********************************\n*/\n  DKReason = 127,\n/*\n****************************************************************\n* Assigned value used to identify the firm targeted to receive *\n* the message if the message is delivered by a third party     *\n* i.e. the third party firm identifier would be delivered in   *\n* the TargetCompID field and the ultimate receiver firm ID in  *\n* this field.                                                  *\n****************************************************************\n*/\n  DeliverToCompID = 128,\n/*\n**************************************************************\n* Assigned value used to identify specific message recipient *\n* (i.e. trader) if the message is delivered by a third party *\n**************************************************************\n*/\n  DeliverToSubID = 129,\n/*\n****************************************************************\n* Indicates that IOI is the result of an existing agency order *\n* or a facilitation position resulting from an agency order,   *\n* not from principal trading or order solicitation activity.   *\n****************************************************************\n*/\n  IOINaturalFlag = 130,\n/*\n***************************************\n* Unique identifier for quote request *\n***************************************\n*/\n  QuoteReqID = 131,\n/*\n******************\n* Bid price/rate *\n******************\n*/\n  BidPx = 132,\n/*\n********************\n* Offer price/rate *\n********************\n*/\n  OfferPx = 133,\n/*\n*******************\n* Quantity of bid *\n*******************\n*/\n  BidSize = 134,\n/*\n*********************\n* Quantity of offer *\n*********************\n*/\n  OfferSize = 135,\n/*\n****************************************************\n* Number of repeating groups of miscellaneous fees *\n****************************************************\n*/\n  NoMiscFees = 136,\n/*\n***************************\n* Miscellaneous fee value *\n***************************\n*/\n  MiscFeeAmt = 137,\n/*\n*********************************\n* Currency of miscellaneous fee *\n*********************************\n*/\n  MiscFeeCurr = 138,\n/*\n****************************************\n* Indicates type of miscellaneous fee. *\n****************************************\n*/\n  MiscFeeType = 139,\n/*\n***************************************\n* Previous closing price of security. *\n***************************************\n*/\n  PrevClosePx = 140,\n/*\n***********************************************************\n* Indicates that the both sides of the FIX session should *\n* reset sequence numbers.                                 *\n***********************************************************\n*/\n  ResetSeqNumFlag = 141,\n/*\n****************************************************************\n* Assigned value used to identify specific message             *\n* originator\u0019s location (i.e. geographic location and/or desk, *\n* trader)                                                      *\n****************************************************************\n*/\n  SenderLocationID = 142,\n/*\n****************************************************************\n* Assigned value used to identify specific message             *\n* originator\u0019s location (i.e. geographic location and/or desk, *\n* trader)                                                      *\n****************************************************************\n*/\n  TargetLocationID = 143,\n/*\n****************************************************************\n* Assigned value used to identify specific message             *\n* originator\u0019s location (i.e. geographic location and/or desk, *\n* trader) if the message was delivered by a third party        *\n****************************************************************\n*/\n  OnBehalfOfLocationID = 144,\n/*\n****************************************************************\n* Assigned value used to identify specific message             *\n* originator\u0019s location (i.e. geographic location and/or desk, *\n* trader) if the message was delivered by a third party        *\n****************************************************************\n*/\n  DeliverToLocationID = 145,\n/*\n********************************************************\n* Specifies the number of repeating symbols specified. *\n********************************************************\n*/\n  NoRelatedSym = 146,\n/*\n***********************************\n* The subject of an Email message *\n***********************************\n*/\n  Subject = 147,\n/*\n**********************************\n* The headline of a News message *\n**********************************\n*/\n  Headline = 148,\n/*\n*******************************************************\n* A URL (Uniform Resource Locator) link to additional *\n* information (i.e. http://www.XYZ.com/research.html) *\n*******************************************************\n*/\n  URLLink = 149,\n/*\n*************************************************************\n* Describes the specific ExecutionRpt (i.e. Pending Cancel) *\n* while OrdStatus will always identify the current order    *\n* status (i.e. Partially Filled)                            *\n*************************************************************\n*/\n  ExecType = 150,\n/*\n***************************************************************\n* Amount of shares open for further execution. If the         *\n* OrdStatus is Canceled, DoneForTheDay, Expired, Calculated,  *\n* or Rejected (in which case the order is no longer active)   *\n* then LeavesQty could be 0, otherwise LeavesQty = OrderQty - *\n* CumQty.                                                     *\n***************************************************************\n*/\n  LeavesQty = 151,\n/*\n**************************************************************\n* Specifies the approximate order quantity desired in total  *\n* monetary units vs. as a number of shares. The broker would *\n* be responsible for converting and calculating a share      *\n* quantity (OrderQty) based upon this amount to be used for  *\n* the actual order and subsequent messages.                  *\n**************************************************************\n*/\n  CashOrderQty = 152,\n/*\n*************************************\n* AvgPx for a specific AllocAccount *\n*************************************\n*/\n  AllocAvgPx = 153,\n/*\n****************************************\n* NetMoney for a specific AllocAccount *\n****************************************\n*/\n  AllocNetMoney = 154,\n/*\n**************************************************************\n* Foreign exchange rate used to compute SettlCurrAmount from *\n* Currency to SettlCurrency                                  *\n**************************************************************\n*/\n  SettlCurrFxRate = 155,\n/*\n******************************************************\n* Specifies whether or not SettlCurrFxRate should be *\n* multiplied or divided.                             *\n******************************************************\n*/\n  SettlCurrFxRateCalc = 156,\n/*\n**************************************************************\n* Number of Days of Interest for convertible bonds and fixed *\n* income                                                     *\n**************************************************************\n*/\n  NumDaysInterest = 157,\n/*\n****************************************************************\n* Accrued Interest Rate for convertible bonds and fixed income *\n****************************************************************\n*/\n  AccruedInterestRate = 158,\n/*\n**************************************************************\n* Amount of Accrued Interest for convertible bonds and fixed *\n* income                                                     *\n**************************************************************\n*/\n  AccruedInterestAmt = 159,\n/*\n***************************************************\n* Indicates mode used for Settlement Instructions *\n***************************************************\n*/\n  SettlInstMode = 160,\n/*\n********************************************************\n* Free format text related to a specific AllocAccount. *\n********************************************************\n*/\n  AllocText = 161,\n/*\n*********************************************************\n* Unique identifier for Settlement Instructions record. *\n*********************************************************\n*/\n  SettlInstID = 162,\n/*\n****************************************************\n* Settlement Instructions message transaction type *\n****************************************************\n*/\n  SettlInstTransType = 163,\n/*\n***********************************************************\n* Unique identifier for an email thread (new and chain of *\n* replies)                                                *\n***********************************************************\n*/\n  EmailThreadID = 164,\n/*\n***********************************************\n* Indicates source of Settlement Instructions *\n***********************************************\n*/\n  SettlInstSource = 165,\n/*\n***********************************************************\n* Identifies Settlement Depository or Country Code (ISITC *\n* spec)                                                   *\n***********************************************************\n*/\n  SettlLocation = 166,\n/*\n*******************************************\n* Indicates type of security (ISITC spec) *\n*******************************************\n*/\n  SecurityType = 167,\n/*\n**********************************************************\n* Time the details within the message should take effect *\n* (always expressed in GMT)                              *\n**********************************************************\n*/\n  EffectiveTime = 168,\n/*\n*****************************************************\n* Identifies the Standing Instruction database used *\n*****************************************************\n*/\n  StandInstDbType = 169,\n/*\n**************************************************************\n* Name of the Standing Instruction database represented with *\n* StandInstDbType (i.e. the Global Custodian\u0019s name).        *\n**************************************************************\n*/\n  StandInstDbName = 170,\n/*\n****************************************************************\n* Unique identifier used on the Standing Instructions database *\n* for the Standing Instructions to be referenced.              *\n****************************************************************\n*/\n  StandInstDbID = 171,\n/*\n*********************************\n* Identifies type of settlement *\n*********************************\n*/\n  SettlDeliveryType = 172,\n/*\n**************************************************************\n* Broker\u0019s account code at the depository (i.e. CEDEL ID for *\n* CEDEL, FINS for DTC, or Euroclear ID for Euroclear) if     *\n* SettlLocation is a depository                              *\n**************************************************************\n*/\n  SettlDepositoryCode = 173,\n/*\n************************************************************\n* BIC (Bank Identification Code\u0014Swift managed) code of the *\n* broker involved (i.e. for multi-company brokerage firms) *\n************************************************************\n*/\n  SettlBrkrCode = 174,\n/*\n************************************************************\n* BIC (Bank Identification Code\u0014Swift managed) code of the *\n* institution involved (i.e. for multi-company institution *\n* firms)                                                   *\n************************************************************\n*/\n  SettlInstCode = 175,\n/*\n***************************************************************\n* Name of SettlInstSource's local agent bank if SettlLocation *\n* is not a depository                                         *\n***************************************************************\n*/\n  SecuritySettlAgentName = 176,\n/*\n****************************************************************\n* BIC (Bank Identification Code--Swift managed) code of the    *\n* SettlInstSource's local agent bank if SettlLocation is not a *\n* depository                                                   *\n****************************************************************\n*/\n  SecuritySettlAgentCode = 177,\n/*\n***********************************************************\n* SettlInstSource's account number at local agent bank if *\n* SettlLocation is not a depository                       *\n***********************************************************\n*/\n  SecuritySettlAgentAcctNum = 178,\n/*\n************************************************************\n* Name of SettlInstSource's account at local agent bank if *\n* SettlLocation is not a depository                        *\n************************************************************\n*/\n  SecuritySettlAgentAcctName = 179,\n/*\n*************************************************************\n* Name of contact at local agent bank for SettlInstSource's *\n* account if SettlLocation is not a depository              *\n*************************************************************\n*/\n  SecuritySettlAgentContactName = 180,\n/*\n***************************************************\n* Phone number for contact at local agent bank if *\n* SettlLocation is not a depository               *\n***************************************************\n*/\n  SecuritySettlAgentContactPhone = 181,\n/*\n*************************************************\n* Name of SettlInstSource's local agent bank if *\n* SettlDeliveryType=Free                        *\n*************************************************\n*/\n  CashSettlAgentName = 182,\n/*\n****************************************************************\n* BIC (Bank Identification Code--Swift managed) code of the    *\n* SettlInstSource's local agent bank if SettlDeliveryType=Free *\n****************************************************************\n*/\n  CashSettlAgentCode = 183,\n/*\n***********************************************************\n* SettlInstSource's account number at local agent bank if *\n* SettlDeliveryType=Free                                  *\n***********************************************************\n*/\n  CashSettlAgentAcctNum = 184,\n/*\n************************************************************\n* Name of SettlInstSource's account at local agent bank if *\n* SettlDeliveryType=Free                                   *\n************************************************************\n*/\n  CashSettlAgentAcctName = 185,\n/*\n*************************************************************\n* Name of contact at local agent bank for SettlInstSource's *\n* account if SettlDeliveryType=Free                         *\n*************************************************************\n*/\n  CashSettlAgentContactName = 186,\n/*\n*******************************************************\n* Phone number for contact at local agent bank for    *\n* SettlInstSource's account if SettlDeliveryType=Free *\n*******************************************************\n*/\n  CashSettlAgentContactPhone = 187,\n/*\n**********************\n* Bid F/X spot rate. *\n**********************\n*/\n  BidSpotRate = 188,\n/*\n****************************************************************\n* Bid F/X forward points added to spot rate. May be a negative *\n* value.                                                       *\n****************************************************************\n*/\n  BidForwardPoints = 189,\n/*\n************************\n* Offer F/X spot rate. *\n************************\n*/\n  OfferSpotRate = 190,\n/*\n*********************************************************\n* Offer F/X forward points added to spot rate. May be a *\n* negative value.                                       *\n*********************************************************\n*/\n  OfferForwardPoints = 191,\n/*\n****************************************************\n* OrderQty of the future part of a F/X swap order. *\n****************************************************\n*/\n  OrderQty2 = 192,\n/*\n*******************************************************\n* FutSettDate of the future part of a F/X swap order. *\n*******************************************************\n*/\n  FutSettDate2 = 193,\n/*\n******************\n* F/X spot rate. *\n******************\n*/\n  LastSpotRate = 194,\n/*\n***************************************************************\n* F/X forward points added to LastSpotRate. May be a negative *\n* value.                                                      *\n***************************************************************\n*/\n  LastForwardPoints = 195,\n/*\n***************************************************************\n* Can be used to link two different Allocation messages (each *\n* with unique AllocID) together, i.e. for F/X \"Netting\" or    *\n* \"Swaps\". Should be unique.                                  *\n***************************************************************\n*/\n  AllocLinkID = 196,\n/*\n**************************************************************\n* Identifies the type of Allocation linkage when AllocLinkID *\n* is used.                                                   *\n**************************************************************\n*/\n  AllocLinkType = 197,\n/*\n**************************************************************\n* Assigned by the party which accepts the order. Can be used *\n* to provide the OrderID used by an exchange or executing    *\n* system.                                                    *\n**************************************************************\n*/\n  SecondaryOrderID = 198,\n/*\n************************************************\n* Number of repeating groups of IOIQualifiers. *\n************************************************\n*/\n  NoIOIQualifiers = 199,\n/*\n**********************************************************\n* Month and Year of the maturity for SecurityType=FUT or *\n* SecurityType=OPT.                                      *\n* Format: YYYYMM                                         *\n* (i.e. 199903)                                          *\n**********************************************************\n*/\n  MaturityMonthYear = 200,\n/*\n*****************************************************\n* Indicates whether an Option is for a put or call. *\n*****************************************************\n*/\n  PutOrCall = 201,\n/*\n*******************************\n* Strike Price for an Option. *\n*******************************\n*/\n  StrikePrice = 202,\n/*\n********************\n* Used for options *\n********************\n*/\n  CoveredOrUncovered = 203,\n/*\n****************************************************************\n* Used for options when delivering the order to an execution   *\n* system/exchange to specify if the order is for a customer or *\n* the firm placing the order itself.                           *\n****************************************************************\n*/\n  CustomerOrFirm = 204,\n/*\n**************************************************************\n* Day of month used in conjunction with MaturityMonthYear to *\n* specify the maturity date for SecurityType=FUT or          *\n* SecurityType=OPT.                                          *\n**************************************************************\n*/\n  MaturityDay = 205,\n/*\n*************************************************************\n* Can be used for SecurityType=OPT to identify a particular *\n* security.                                                 *\n*************************************************************\n*/\n  OptAttribute = 206,\n/*\n********************************************\n* Market used to help identify a security. *\n********************************************\n*/\n  SecurityExchange = 207,\n/*\n**************************************************************\n* Indicates whether or not details should be communicated to *\n* BrokerOfCredit (i.e. step-in broker).                      *\n**************************************************************\n*/\n  NotifyBrokerOfCredit = 208,\n/*\n***************************************************************\n* Indicates how the receiver (i.e. third party) of Allocation *\n* message should handle/process the account details.          *\n***************************************************************\n*/\n  AllocHandlInst = 209,\n/*\n***********************************************************\n* Maximum number of shares within an order to be shown to *\n* other customers (i.e. sent via an IOI).                 *\n***********************************************************\n*/\n  MaxShow = 210,\n/*\n****************************************\n* Price difference for a pegged order. *\n****************************************\n*/\n  PegDifference = 211\n}\n"]}