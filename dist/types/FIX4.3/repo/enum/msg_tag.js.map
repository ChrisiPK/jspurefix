{"version":3,"file":"msg_tag.js","sourceRoot":"","sources":["../../../../../src/types/FIX4.3/repo/enum/msg_tag.ts"],"names":[],"mappings":"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","sourcesContent":["export enum MsgTag {\n/*\n**************************************************************\n* Account mnemonic as agreed between broker and institution. *\n**************************************************************\n*/\n  Account = 1,\n/*\n*************************************************\n* Unique identifier of advertisement message.   *\n* (Prior to FIX 4.1 this field was of type int) *\n*************************************************\n*/\n  AdvId = 2,\n/*\n*****************************************************\n* Reference identifier used with CANCEL and REPLACE *\n* transaction types.                                *\n* (Prior to FIX 4.1 this field was of type int)     *\n*****************************************************\n*/\n  AdvRefID = 3,\n/*\n*************************************\n* Broker's side of advertised trade *\n*************************************\n*/\n  AdvSide = 4,\n/*\n*****************************************************\n* Identifies advertisement message transaction type *\n*****************************************************\n*/\n  AdvTransType = 5,\n/*\n********************************************************\n* Calculated average price of all fills on this order. *\n********************************************************\n*/\n  AvgPx = 6,\n/*\n***********************************************************\n* Message sequence number of first message in range to be *\n* resent                                                  *\n***********************************************************\n*/\n  BeginSeqNo = 7,\n/*\n*************************************************************\n* Identifies beginning of new message and protocol version. *\n* ALWAYS FIRST FIELD IN MESSAGE. (Always unencrypted)       *\n*************************************************************\n*/\n  BeginString = 8,\n/*\n************************************************************\n* Message length, in bytes, forward to the CheckSum field. *\n* ALWAYS SECOND FIELD IN MESSAGE. (Always unencrypted)     *\n************************************************************\n*/\n  BodyLength = 9,\n/*\n***************************************************************\n* Three byte, simple checksum (see Appendix B: CheckSum       *\n* Calculation for description). ALWAYS LAST FIELD IN MESSAGE; *\n* i.e. serves, with the trailing <SOH>, as the end-of-message *\n* delimiter. Always defined as three characters. (Always      *\n* unencrypted)                                                *\n***************************************************************\n*/\n  CheckSum = 10,\n/*\n****************************************************************\n* Unique identifier for Order as assigned by institution       *\n* (identified by SenderCompID or OnBehalfOfCompID as           *\n* appropriate). Uniqueness must be guaranteed within a single  *\n* trading day. Firms, particularly those which electronically  *\n* submit multi-day orders, trade globally or throughout market *\n* close periods,should ensure uniqueness across days, for      *\n* example by embedding a date within the ClOrdID field.        *\n****************************************************************\n*/\n  ClOrdID = 11,\n/*\n****************************************************************\n* Commission. Note if CommType is percentage, Commission of 5% *\n* should be represented as .05.                                *\n****************************************************************\n*/\n  Commission = 12,\n/*\n*******************\n* Commission type *\n*******************\n*/\n  CommType = 13,\n/*\n*************************************************\n* Total number of shares filled.                *\n* (Prior to FIX 4.2 this field was of type int) *\n*************************************************\n*/\n  CumQty = 14,\n/*\n****************************************************************\n* Identifies currency used for price. Absence of this field is *\n* interpreted as the default for the security. It is           *\n* recommended that systems provide the currency value whenever *\n* possible. See Appendix A: Valid Currency Codes for           *\n* information on obtaining valid values.                       *\n****************************************************************\n*/\n  Currency = 15,\n/*\n***************************************************************\n* Message sequence number of last message in range to be      *\n* resent. If request is for a single message BeginSeqNo =     *\n* EndSeqNo. If request is for all messages subsequent to a    *\n* particular message, EndSeqNo = \"0\" (representing infinity). *\n***************************************************************\n*/\n  EndSeqNo = 16,\n/*\n****************************************************************\n* Unique identifier of execution message as assigned by broker *\n* (will be 0 (zero) for ExecTransType=3 (Status)).             *\n* Uniqueness must be guaranteed within a single trading day or *\n* the life of a multi-day order. Firms which accept multi-day  *\n* orders should consider embedding a date within the ExecID    *\n* field to assure uniqueness across days.                      *\n* (Prior to FIX 4.1 this field was of type int)                *\n****************************************************************\n*/\n  ExecID = 17,\n/*\n****************************************************************\n* Instructions for order handling on exchange trading floor.   *\n* If more than one instruction is applicable to an order, this *\n* field can contain multiple instructions separated by space.  *\n****************************************************************\n*/\n  ExecInst = 18,\n/*\n*****************************************************\n* Reference identifier used with Cancel and Correct *\n* transaction types.                                *\n* (Prior to FIX 4.1 this field was of type int)     *\n*****************************************************\n*/\n  ExecRefID = 19,\n/*\n*******************************\n* Identifies transaction type *\n*******************************\n*/\n  ExecTransType = 20,\n/*\n***********************************************************\n* Instructions for order handling on Broker trading floor *\n***********************************************************\n*/\n  HandlInst = 21,\n/*\n**********************************************\n* Identifies class of alternative SecurityID *\n**********************************************\n*/\n  IDSource = 22,\n/*\n*************************************************\n* Unique identifier of IOI message.             *\n* (Prior to FIX 4.1 this field was of type int) *\n*************************************************\n*/\n  IOIid = 23,\n  IOIOthSvc = 24,\n/*\n**********************************\n* Relative quality of indication *\n**********************************\n*/\n  IOIQltyInd = 25,\n/*\n******************************************************\n* Reference identifier used with CANCEL and REPLACE, *\n* transaction types.                                 *\n* (Prior to FIX 4.1 this field was of type int)      *\n******************************************************\n*/\n  IOIRefID = 26,\n/*\n*************************************************\n* Number of shares in numeric or relative size. *\n*************************************************\n*/\n  IOIShares = 27,\n/*\n*******************************************\n* Identifies IOI message transaction type *\n*******************************************\n*/\n  IOITransType = 28,\n/*\n**************************************\n* Broker capacity in order execution *\n**************************************\n*/\n  LastCapacity = 29,\n/*\n*************************************\n* Market of execution for last fill *\n*************************************\n*/\n  LastMkt = 30,\n/*\n*****************************************************\n* Price of this (last) fill. Field not required for *\n* ExecTransType = 3 (Status)                        *\n*****************************************************\n*/\n  LastPx = 31,\n/*\n*************************************************************\n* Quantity of shares bought/sold on this (last) fill. Field *\n* not required for ExecTransType = 3 (Status)               *\n* (Prior to FIX 4.2 this field was of type int)             *\n*************************************************************\n*/\n  LastShares = 32,\n/*\n*******************************************\n* Identifies number of lines of text body *\n*******************************************\n*/\n  LinesOfText = 33,\n/*\n************************************\n* Integer message sequence number. *\n************************************\n*/\n  MsgSeqNum = 34,\n/*\n****************************************************************\n* Defines message type. ALWAYS THIRD FIELD IN MESSAGE. (Always *\n* unencrypted)                                                 *\n* Note: A \"U\" as the first character in the MsgType field      *\n* (i.e. U1, U2, etc) indicates that the message format is      *\n* privately defined between the sender and receiver.           *\n****************************************************************\n*/\n  MsgType = 35,\n/*\n***********************\n* New sequence number *\n***********************\n*/\n  NewSeqNo = 36,\n/*\n**************************************************************\n* Unique identifier for Order as assigned by broker.         *\n* Uniqueness must be guaranteed within a single trading day. *\n* Firms which accept multi-day orders should consider        *\n* embedding a date within the OrderID field to assure        *\n* uniqueness across days.                                    *\n**************************************************************\n*/\n  OrderID = 37,\n/*\n****************************************************************\n* Number of shares ordered. This represents the number of      *\n* shares for equities or based on normal convention the number *\n* of contracts for options, futures, convertible bonds, etc.   *\n* (Prior to FIX 4.2 this field was of type int)                *\n****************************************************************\n*/\n  OrderQty = 38,\n/*\n***************************************\n* Identifies current status of order. *\n***************************************\n*/\n  OrdStatus = 39,\n/*\n***************\n* Order type. *\n***************\n*/\n  OrdType = 40,\n/*\n***************************************************************\n* ClOrdID of the previous order (NOT the initial order of the *\n* day) as assigned by the institution, used to identify the   *\n* previous order in cancel and cancel/replace requests.       *\n***************************************************************\n*/\n  OrigClOrdID = 41,\n/*\n********************************************************\n* Time of message origination (always expressed in UTC *\n* (Universal Time Coordinated, also known as \"GMT\"))   *\n********************************************************\n*/\n  OrigTime = 42,\n/*\n**********************************************************\n* Indicates possible retransmission of message with this *\n* sequence number                                        *\n**********************************************************\n*/\n  PossDupFlag = 43,\n/*\n*******************\n* Price per share *\n*******************\n*/\n  Price = 44,\n/*\n*************************************\n* Reference message sequence number *\n*************************************\n*/\n  RefSeqNum = 45,\n/*\n************************************************************\n* Symbol of issue related to story. Can be repeated within *\n* message to identify multiple companies.                  *\n************************************************************\n*/\n  RelatdSym = 46,\n/*\n****************************************************************\n* Note that the name of this field is changing to              *\n* \"OrderCapacity\" as Rule80A is a very US market-specific      *\n* term. Other world markets need to convey similar             *\n* information, however, often a subset of the US values. . See *\n* the \"Rule80A (aka OrderCapacity) Usage by Market\" appendix   *\n* for market-specific usage of this field.                     *\n****************************************************************\n*/\n  Rule80A = 47,\n/*\n************************************************\n* CUSIP or other alternate security identifier *\n************************************************\n*/\n  SecurityID = 48,\n/*\n*********************************************************\n* Assigned value used to identify firm sending message. *\n*********************************************************\n*/\n  SenderCompID = 49,\n/*\n***************************************************************\n* Assigned value used to identify specific message originator *\n* (desk, trader, etc.)                                        *\n***************************************************************\n*/\n  SenderSubID = 50,\n/*\n********************************************************\n* No longer used. Included here for reference to prior *\n* versions.                                            *\n********************************************************\n*/\n  SendingDate = 51,\n/*\n*********************************************************\n* Time of message transmission (always expressed in UTC *\n* (Universal Time Coordinated, also known as \"GMT\")     *\n*********************************************************\n*/\n  SendingTime = 52,\n/*\n*************************************************\n* Number of shares                              *\n* (Prior to FIX 4.2 this field was of type int) *\n*************************************************\n*/\n  Shares = 53,\n/*\n*****************\n* Side of order *\n*****************\n*/\n  Side = 54,\n/*\n*****************\n* Ticker symbol *\n*****************\n*/\n  Symbol = 55,\n/*\n***************************************************\n* Assigned value used to identify receiving firm. *\n***************************************************\n*/\n  TargetCompID = 56,\n/*\n***************************************************************\n* Assigned value used to identify specific individual or unit *\n* intended to receive message. \"ADMIN\" reserved for           *\n* administrative messages not intended for a specific user.   *\n***************************************************************\n*/\n  TargetSubID = 57,\n/*\n***************************************************************\n* Free format text string                                     *\n* (Note: this field does not have a specified maximum length) *\n***************************************************************\n*/\n  Text = 58,\n/*\n**************************************************************\n* Specifies how long the order remains in effect. Absence of *\n* this field is interpreted as DAY.                          *\n**************************************************************\n*/\n  TimeInForce = 59,\n/*\n******************************************************\n* Time of execution/order creation (expressed in UTC *\n* (Universal Time Coordinated, also known as \"GMT\")  *\n******************************************************\n*/\n  TransactTime = 60,\n/*\n****************\n* Urgency flag *\n****************\n*/\n  Urgency = 61,\n/*\n***************************************************************\n* Indicates expiration time of indication message (always     *\n* expressed in UTC (Universal Time Coordinated, also known as *\n* \"GMT\")                                                      *\n***************************************************************\n*/\n  ValidUntilTime = 62,\n/*\n***************************************************************\n* Indicates order settlement period. Absence of this field is *\n* interpreted as Regular. Regular is defined as the default   *\n* settlement period for the particular security on the        *\n* exchange of execution.                                      *\n***************************************************************\n*/\n  SettlmntTyp = 63,\n/*\n**************************************************************\n* Specific date of trade settlement (SettlementDate) in      *\n* YYYYMMDD format. Required when SettlmntTyp = 6 (Future) or *\n* SettlmntTyp = 8 (Sellers Option). (expressed in local time *\n* at place of settlement)                                    *\n**************************************************************\n*/\n  FutSettDate = 64,\n/*\n**************************************************************\n* Additional information about the security (e.g. preferred, *\n* warrants, etc.). Note also see SecurityType.               *\n* Valid values:                                              *\n* As defined in the NYSE Stock and bond Symbol Directory and *\n* in the AMEX Fitch Directory                                *\n**************************************************************\n*/\n  SymbolSfx = 65,\n/*\n****************************************************************\n* Unique identifier for list as assigned by institution, used  *\n* to associate multiple individual orders. Uniqueness must be  *\n* guaranteed within a single trading day. Firms which generate *\n* multi-day orders should consider embedding a date within the *\n* ListID field to assure uniqueness across days.               *\n****************************************************************\n*/\n  ListID = 66,\n/*\n***************************************************************\n* Sequence of individual order within list (i.e. ListSeqNo of *\n* ListNoOrds, 2 of 25, 3 of 25, . . . )                       *\n***************************************************************\n*/\n  ListSeqNo = 67,\n/*\n**************************************************************\n* Total number of list order entries across all messages.    *\n* Should be the sum of all NoOrders in each message that has *\n* repeating list order entries related to the same ListID.   *\n* Used to support fragmentation.                             *\n* (Prior to FIX 4.2 this field was named \"ListNoOrds\")       *\n**************************************************************\n*/\n  TotNoOrders = 68,\n/*\n*********************************************************\n* Free format text message containing list handling and *\n* execution instructions.                               *\n*********************************************************\n*/\n  ListExecInst = 69,\n/*\n*************************************************\n* Unique identifier for allocation message.     *\n* (Prior to FIX 4.1 this field was of type int) *\n*************************************************\n*/\n  AllocID = 70,\n/*\n******************************************\n* Identifies allocation transaction type *\n******************************************\n*/\n  AllocTransType = 71,\n/*\n*************************************************************\n* Reference identifier to be used with Replace, Cancel, and *\n* Calculated AllocTransType messages.                       *\n* (Prior to FIX 4.1 this field was of type int)             *\n*************************************************************\n*/\n  RefAllocID = 72,\n/*\n*********************************************************\n* Indicates number of orders to be combined for average *\n* pricing and allocation.                               *\n*********************************************************\n*/\n  NoOrders = 73,\n/*\n***************************************************************\n* Indicates number of decimal places to be used for average   *\n* pricing. Absence of this field indicates that default       *\n* precision arranged by the broker/institution is to be used. *\n***************************************************************\n*/\n  AvgPrxPrecision = 74,\n/*\n****************************************************************\n* Indicates date of trade referenced in this message in        *\n* YYYYMMDD format. Absence of this field indicates current day *\n* (expressed in local time at place of trade).                 *\n****************************************************************\n*/\n  TradeDate = 75,\n/*\n********************************************************\n* Identifies executing / give-up broker. Standard NASD *\n* market-maker mnemonic is preferred.                  *\n********************************************************\n*/\n  ExecBroker = 76,\n/*\n***************************************************************\n* Indicates whether the resulting position after a trade      *\n* should be an opening position or closing position. Used for *\n* omnibus accounting - where accounts are held on a gross     *\n* basis instead of being netted together.                     *\n***************************************************************\n*/\n  OpenClose = 77,\n/*\n********************************************************\n* Number of repeating AllocAccount/AllocPrice entries. *\n********************************************************\n*/\n  NoAllocs = 78,\n/*\n************************\n* Sub-account mnemonic *\n************************\n*/\n  AllocAccount = 79,\n/*\n************************************************************\n* Number of shares to be allocated to specific sub-account *\n* (Prior to FIX 4.2 this field was of type int)            *\n************************************************************\n*/\n  AllocShares = 80,\n/*\n****************************************************************\n* Processing code for sub-account. Absence of this field in    *\n* AllocAccount / AllocPrice/AllocShares / ProcessCode instance *\n* indicates regular trade.                                     *\n****************************************************************\n*/\n  ProcessCode = 81,\n/*\n******************************************\n* Total number of reports within series. *\n******************************************\n*/\n  NoRpts = 82,\n/*\n****************************************************\n* Sequence number of message within report series. *\n****************************************************\n*/\n  RptSeq = 83,\n/*\n***************************************************\n* Total number of shares canceled for this order. *\n* (Prior to FIX 4.2 this field was of type int)   *\n***************************************************\n*/\n  CxlQty = 84,\n/*\n********************************************************\n* Number of delivery instruction fields to follow      *\n* No longer used. Included here for reference to prior *\n* versions.                                            *\n********************************************************\n*/\n  NoDlvyInst = 85,\n/*\n************************************************************\n* Free format text field to indicate delivery instructions *\n* No longer used. Included here for reference to prior     *\n* versions.                                                *\n************************************************************\n*/\n  DlvyInst = 86,\n/*\n************************************\n* Identifies status of allocation. *\n************************************\n*/\n  AllocStatus = 87,\n/*\n************************************\n* Identifies reason for rejection. *\n************************************\n*/\n  AllocRejCode = 88,\n/*\n************************\n* Electronic signature *\n************************\n*/\n  Signature = 89,\n/*\n*******************************\n* Length of encrypted message *\n*******************************\n*/\n  SecureDataLen = 90,\n/*\n********************************\n* Actual encrypted data stream *\n********************************\n*/\n  SecureData = 91,\n/*\n***********************************\n* Broker to receive trade credit. *\n***********************************\n*/\n  BrokerOfCredit = 92,\n/*\n***************************************\n* Number of bytes in signature field. *\n***************************************\n*/\n  SignatureLength = 93,\n/*\n***********************\n* Email message type. *\n***********************\n*/\n  EmailType = 94,\n/*\n**************************************\n* Number of bytes in raw data field. *\n**************************************\n*/\n  RawDataLength = 95,\n/*\n*************************************************************\n* Unformatted raw data, can include bitmaps, word processor *\n* documents, etc.                                           *\n*************************************************************\n*/\n  RawData = 96,\n/*\n****************************************************************\n* Indicates that message may contain information that has been *\n* sent under another sequence number.                          *\n****************************************************************\n*/\n  PossResend = 97,\n/*\n*************************\n* Method of encryption. *\n*************************\n*/\n  EncryptMethod = 98,\n/*\n*******************\n* Price per share *\n*******************\n*/\n  StopPx = 99,\n/*\n**************************************************************\n* Execution destination as defined by institution when order *\n* is entered.                                                *\n* Valid values:                                              *\n* See Appendix C                                             *\n**************************************************************\n*/\n  ExDestination = 100,\n/*\n*************************************************\n* Code to identify reason for cancel rejection. *\n*************************************************\n*/\n  CxlRejReason = 102,\n/*\n************************************************\n* Code to identify reason for order rejection. *\n************************************************\n*/\n  OrdRejReason = 103,\n/*\n****************************\n* Code to qualify IOI use. *\n****************************\n*/\n  IOIQualifier = 104,\n/*\n*********************************************************\n* Identifier to aid in the management of multiple lists *\n* derived from a single, master list.                   *\n*********************************************************\n*/\n  WaveNo = 105,\n/*\n****************************************************************\n* Company name of security issuer (e.g. International Business *\n* Machines)                                                    *\n****************************************************************\n*/\n  Issuer = 106,\n/*\n*************************\n* Security description. *\n*************************\n*/\n  SecurityDesc = 107,\n/*\n********************************\n* Heartbeat interval (seconds) *\n********************************\n*/\n  HeartBtInt = 108,\n/*\n****************************************************************\n* Firm identifier used in third party-transactions (should not *\n* be a substitute for OnBehalfOfCompID/DeliverToCompID).       *\n****************************************************************\n*/\n  ClientID = 109,\n/*\n*************************************************\n* Minimum quantity of an order to be executed.  *\n* (Prior to FIX 4.2 this field was of type int) *\n*************************************************\n*/\n  MinQty = 110,\n/*\n***************************************************************\n* Maximum number of shares within an order to be shown on the *\n* exchange floor at any given time.                           *\n* (Prior to FIX 4.2 this field was of type int)               *\n***************************************************************\n*/\n  MaxFloor = 111,\n/*\n**************************************************************\n* Identifier included in Test Request message to be returned *\n* in resulting Heartbeat                                     *\n**************************************************************\n*/\n  TestReqID = 112,\n/*\n******************************************************\n* Identifies party of trade responsible for exchange *\n* reporting.                                         *\n******************************************************\n*/\n  ReportToExch = 113,\n/*\n**********************************************************\n* Indicates whether the broker is to locate the stock in *\n* conjunction with a short sell order.                   *\n**********************************************************\n*/\n  LocateReqd = 114,\n/*\n****************************************************************\n* Assigned value used to identify firm originating message if  *\n* the message was delivered by a third party i.e. the third    *\n* party firm identifier would be delivered in the SenderCompID *\n* field and the firm originating the message in this field.    *\n****************************************************************\n*/\n  OnBehalfOfCompID = 115,\n/*\n***************************************************************\n* Assigned value used to identify specific message originator *\n* (i.e. trader) if the message was delivered by a third party *\n***************************************************************\n*/\n  OnBehalfOfSubID = 116,\n/*\n*******************************\n* Unique identifier for quote *\n*******************************\n*/\n  QuoteID = 117,\n/*\n***************************************************************\n* Total amount due as the result of the transaction (e.g. for *\n* Buy order - principal + commission + fees) reported in      *\n* currency of execution.                                      *\n***************************************************************\n*/\n  NetMoney = 118,\n/*\n***************************************************************\n* Total amount due expressed in settlement currency (includes *\n* the effect of the forex transaction)                        *\n***************************************************************\n*/\n  SettlCurrAmt = 119,\n/*\n*********************************************\n* Currency code of settlement denomination. *\n*********************************************\n*/\n  SettlCurrency = 120,\n/*\n*********************************************************\n* Indicates request for forex accommodation trade to be *\n* executed along with security transaction.             *\n*********************************************************\n*/\n  ForexReq = 121,\n/*\n**************************************************************\n* Original time of message transmission (always expressed in *\n* UTC (Universal Time Coordinated, also known as \"GMT\") when *\n* transmitting orders as the result of a resend request.     *\n**************************************************************\n*/\n  OrigSendingTime = 122,\n/*\n************************************************************\n* Indicates that the Sequence Reset message is replacing   *\n* administrative or application messages which will not be *\n* resent.                                                  *\n************************************************************\n*/\n  GapFillFlag = 123,\n/*\n******************************************************\n* No of execution repeating group entries to follow. *\n******************************************************\n*/\n  NoExecs = 124,\n/*\n********************************************************\n* No longer used. Included here for reference to prior *\n* versions.                                            *\n********************************************************\n*/\n  CxlType = 125,\n/*\n**********************************************************\n* Time/Date of order expiration (always expressed in UTC *\n* (Universal Time Coordinated, also known as \"GMT\")      *\n**********************************************************\n*/\n  ExpireTime = 126,\n/*\n***********************************\n* Reason for execution rejection. *\n***********************************\n*/\n  DKReason = 127,\n/*\n****************************************************************\n* Assigned value used to identify the firm targeted to receive *\n* the message if the message is delivered by a third party     *\n* i.e. the third party firm identifier would be delivered in   *\n* the TargetCompID field and the ultimate receiver firm ID in  *\n* this field.                                                  *\n****************************************************************\n*/\n  DeliverToCompID = 128,\n/*\n**************************************************************\n* Assigned value used to identify specific message recipient *\n* (i.e. trader) if the message is delivered by a third party *\n**************************************************************\n*/\n  DeliverToSubID = 129,\n/*\n****************************************************************\n* Indicates that IOI is the result of an existing agency order *\n* or a facilitation position resulting from an agency order,   *\n* not from principal trading or order solicitation activity.   *\n****************************************************************\n*/\n  IOINaturalFlag = 130,\n/*\n***************************************\n* Unique identifier for quote request *\n***************************************\n*/\n  QuoteReqID = 131,\n/*\n******************\n* Bid price/rate *\n******************\n*/\n  BidPx = 132,\n/*\n********************\n* Offer price/rate *\n********************\n*/\n  OfferPx = 133,\n/*\n*************************************************\n* Quantity of bid                               *\n* (Prior to FIX 4.2 this field was of type int) *\n*************************************************\n*/\n  BidSize = 134,\n/*\n*************************************************\n* Quantity of offer                             *\n* (Prior to FIX 4.2 this field was of type int) *\n*************************************************\n*/\n  OfferSize = 135,\n/*\n****************************************************\n* Number of repeating groups of miscellaneous fees *\n****************************************************\n*/\n  NoMiscFees = 136,\n/*\n***************************\n* Miscellaneous fee value *\n***************************\n*/\n  MiscFeeAmt = 137,\n/*\n*********************************\n* Currency of miscellaneous fee *\n*********************************\n*/\n  MiscFeeCurr = 138,\n/*\n****************************************\n* Indicates type of miscellaneous fee. *\n****************************************\n*/\n  MiscFeeType = 139,\n/*\n***************************************\n* Previous closing price of security. *\n***************************************\n*/\n  PrevClosePx = 140,\n/*\n***********************************************************\n* Indicates that the both sides of the FIX session should *\n* reset sequence numbers.                                 *\n***********************************************************\n*/\n  ResetSeqNumFlag = 141,\n/*\n****************************************************************\n* Assigned value used to identify specific message             *\n* originator\u0019s location (i.e. geographic location and/or desk, *\n* trader)                                                      *\n****************************************************************\n*/\n  SenderLocationID = 142,\n/*\n***********************************************************\n* Assigned value used to identify specific message        *\n* destination\u0019s location (i.e. geographic location and/or *\n* desk, trader)                                           *\n***********************************************************\n*/\n  TargetLocationID = 143,\n/*\n****************************************************************\n* Assigned value used to identify specific message             *\n* originator\u0019s location (i.e. geographic location and/or desk, *\n* trader) if the message was delivered by a third party        *\n****************************************************************\n*/\n  OnBehalfOfLocationID = 144,\n/*\n****************************************************************\n* Assigned value used to identify specific message recipient\u0019s *\n* location (i.e. geographic location and/or desk, trader) if   *\n* the message was delivered by a third party                   *\n****************************************************************\n*/\n  DeliverToLocationID = 145,\n/*\n********************************************************\n* Specifies the number of repeating symbols specified. *\n********************************************************\n*/\n  NoRelatedSym = 146,\n/*\n***********************************\n* The subject of an Email message *\n***********************************\n*/\n  Subject = 147,\n/*\n**********************************\n* The headline of a News message *\n**********************************\n*/\n  Headline = 148,\n/*\n*******************************************************\n* A URL (Uniform Resource Locator) link to additional *\n* information (i.e. http://www.XYZ.com/research.html) *\n*******************************************************\n*/\n  URLLink = 149,\n/*\n*************************************************************\n* Describes the specific ExecutionRpt (i.e. Pending Cancel) *\n* while OrdStatus will always identify the current order    *\n* status (i.e. Partially Filled)                            *\n*************************************************************\n*/\n  ExecType = 150,\n/*\n***************************************************************\n* Amount of shares open for further execution. If the         *\n* OrdStatus is Canceled, DoneForTheDay, Expired, Calculated,  *\n* or Rejected (in which case the order is no longer active)   *\n* then LeavesQty could be 0, otherwise LeavesQty = OrderQty - *\n* CumQty.                                                     *\n* (Prior to FIX 4.2 this field was of type int)               *\n***************************************************************\n*/\n  LeavesQty = 151,\n/*\n**************************************************************\n* Specifies the approximate order quantity desired in total  *\n* monetary units vs. as a number of shares. The broker would *\n* be responsible for converting and calculating a share      *\n* quantity (OrderQty) based upon this amount to be used for  *\n* the actual order and subsequent messages.                  *\n**************************************************************\n*/\n  CashOrderQty = 152,\n/*\n*************************************\n* AvgPx for a specific AllocAccount *\n*************************************\n*/\n  AllocAvgPx = 153,\n/*\n****************************************\n* NetMoney for a specific AllocAccount *\n****************************************\n*/\n  AllocNetMoney = 154,\n/*\n***********************************************************\n* Foreign exchange rate used to compute SettlCurrAmt from *\n* Currency to SettlCurrency                               *\n***********************************************************\n*/\n  SettlCurrFxRate = 155,\n/*\n******************************************************\n* Specifies whether or not SettlCurrFxRate should be *\n* multiplied or divided.                             *\n******************************************************\n*/\n  SettlCurrFxRateCalc = 156,\n/*\n**************************************************************\n* Number of Days of Interest for convertible bonds and fixed *\n* income                                                     *\n**************************************************************\n*/\n  NumDaysInterest = 157,\n/*\n****************************************************************\n* Accrued Interest Rate for convertible bonds and fixed income *\n****************************************************************\n*/\n  AccruedInterestRate = 158,\n/*\n**************************************************************\n* Amount of Accrued Interest for convertible bonds and fixed *\n* income                                                     *\n**************************************************************\n*/\n  AccruedInterestAmt = 159,\n/*\n***************************************************\n* Indicates mode used for Settlement Instructions *\n***************************************************\n*/\n  SettlInstMode = 160,\n/*\n********************************************************\n* Free format text related to a specific AllocAccount. *\n********************************************************\n*/\n  AllocText = 161,\n/*\n**********************************************************\n* Unique identifier for Settlement Instructions message. *\n**********************************************************\n*/\n  SettlInstID = 162,\n/*\n****************************************************\n* Settlement Instructions message transaction type *\n****************************************************\n*/\n  SettlInstTransType = 163,\n/*\n***********************************************************\n* Unique identifier for an email thread (new and chain of *\n* replies)                                                *\n***********************************************************\n*/\n  EmailThreadID = 164,\n/*\n***********************************************\n* Indicates source of Settlement Instructions *\n***********************************************\n*/\n  SettlInstSource = 165,\n/*\n***********************************************************\n* Identifies Settlement Depository or Country Code (ISITC *\n* spec)                                                   *\n***********************************************************\n*/\n  SettlLocation = 166,\n/*\n*******************************************\n* Indicates type of security (ISITC spec) *\n*******************************************\n*/\n  SecurityType = 167,\n/*\n**************************************************************\n* Time the details within the message should take effect     *\n* (always expressed in UTC (Universal Time Coordinated, also *\n* known as \"GMT\")                                            *\n**************************************************************\n*/\n  EffectiveTime = 168,\n/*\n*****************************************************\n* Identifies the Standing Instruction database used *\n*****************************************************\n*/\n  StandInstDbType = 169,\n/*\n**************************************************************\n* Name of the Standing Instruction database represented with *\n* StandInstDbType (i.e. the Global Custodian\u0019s name).        *\n**************************************************************\n*/\n  StandInstDbName = 170,\n/*\n****************************************************************\n* Unique identifier used on the Standing Instructions database *\n* for the Standing Instructions to be referenced.              *\n****************************************************************\n*/\n  StandInstDbID = 171,\n/*\n*********************************\n* Identifies type of settlement *\n*********************************\n*/\n  SettlDeliveryType = 172,\n/*\n**************************************************************\n* Broker\u0019s account code at the depository (i.e. CEDEL ID for *\n* CEDEL, FINS for DTC, or Euroclear ID for Euroclear) if     *\n* SettlLocation is a depository                              *\n**************************************************************\n*/\n  SettlDepositoryCode = 173,\n/*\n************************************************************\n* BIC (Bank Identification Code\u0014Swift managed) code of the *\n* broker involved (i.e. for multi-company brokerage firms) *\n************************************************************\n*/\n  SettlBrkrCode = 174,\n/*\n************************************************************\n* BIC (Bank Identification Code\u0014Swift managed) code of the *\n* institution involved (i.e. for multi-company institution *\n* firms)                                                   *\n************************************************************\n*/\n  SettlInstCode = 175,\n/*\n***************************************************************\n* Name of SettlInstSource's local agent bank if SettlLocation *\n* is not a depository                                         *\n***************************************************************\n*/\n  SecuritySettlAgentName = 176,\n/*\n****************************************************************\n* BIC (Bank Identification Code--Swift managed) code of the    *\n* SettlInstSource's local agent bank if SettlLocation is not a *\n* depository                                                   *\n****************************************************************\n*/\n  SecuritySettlAgentCode = 177,\n/*\n***********************************************************\n* SettlInstSource's account number at local agent bank if *\n* SettlLocation is not a depository                       *\n***********************************************************\n*/\n  SecuritySettlAgentAcctNum = 178,\n/*\n************************************************************\n* Name of SettlInstSource's account at local agent bank if *\n* SettlLocation is not a depository                        *\n************************************************************\n*/\n  SecuritySettlAgentAcctName = 179,\n/*\n*************************************************************\n* Name of contact at local agent bank for SettlInstSource's *\n* account if SettlLocation is not a depository              *\n*************************************************************\n*/\n  SecuritySettlAgentContactName = 180,\n/*\n***************************************************\n* Phone number for contact at local agent bank if *\n* SettlLocation is not a depository               *\n***************************************************\n*/\n  SecuritySettlAgentContactPhone = 181,\n/*\n*************************************************\n* Name of SettlInstSource's local agent bank if *\n* SettlDeliveryType=Free                        *\n*************************************************\n*/\n  CashSettlAgentName = 182,\n/*\n****************************************************************\n* BIC (Bank Identification Code--Swift managed) code of the    *\n* SettlInstSource's local agent bank if SettlDeliveryType=Free *\n****************************************************************\n*/\n  CashSettlAgentCode = 183,\n/*\n***********************************************************\n* SettlInstSource's account number at local agent bank if *\n* SettlDeliveryType=Free                                  *\n***********************************************************\n*/\n  CashSettlAgentAcctNum = 184,\n/*\n************************************************************\n* Name of SettlInstSource's account at local agent bank if *\n* SettlDeliveryType=Free                                   *\n************************************************************\n*/\n  CashSettlAgentAcctName = 185,\n/*\n*************************************************************\n* Name of contact at local agent bank for SettlInstSource's *\n* account if SettlDeliveryType=Free                         *\n*************************************************************\n*/\n  CashSettlAgentContactName = 186,\n/*\n*******************************************************\n* Phone number for contact at local agent bank for    *\n* SettlInstSource's account if SettlDeliveryType=Free *\n*******************************************************\n*/\n  CashSettlAgentContactPhone = 187,\n/*\n*****************************************************\n* Bid F/X spot rate.y vary and not limited to four) *\n*****************************************************\n*/\n  BidSpotRate = 188,\n/*\n****************************************************************\n* Bid F/X forward points added to spot rate. May be a negative *\n* value.                                                       *\n****************************************************************\n*/\n  BidForwardPoints = 189,\n/*\n************************\n* Offer F/X spot rate. *\n************************\n*/\n  OfferSpotRate = 190,\n/*\n*********************************************************\n* Offer F/X forward points added to spot rate. May be a *\n* negative value.                                       *\n*********************************************************\n*/\n  OfferForwardPoints = 191,\n/*\n****************************************************\n* OrderQty of the future part of a F/X swap order. *\n****************************************************\n*/\n  OrderQty2 = 192,\n/*\n*******************************************************\n* FutSettDate of the future part of a F/X swap order. *\n*******************************************************\n*/\n  FutSettDate2 = 193,\n/*\n******************\n* F/X spot rate. *\n******************\n*/\n  LastSpotRate = 194,\n/*\n***************************************************************\n* F/X forward points added to LastSpotRate. May be a negative *\n* value.                                                      *\n***************************************************************\n*/\n  LastForwardPoints = 195,\n/*\n***************************************************************\n* Can be used to link two different Allocation messages (each *\n* with unique AllocID) together, i.e. for F/X \"Netting\" or    *\n* \"Swaps\". Should be unique.                                  *\n***************************************************************\n*/\n  AllocLinkID = 196,\n/*\n**************************************************************\n* Identifies the type of Allocation linkage when AllocLinkID *\n* is used.                                                   *\n**************************************************************\n*/\n  AllocLinkType = 197,\n/*\n**************************************************************\n* Assigned by the party which accepts the order. Can be used *\n* to provide the OrderID used by an exchange or executing    *\n* system.                                                    *\n**************************************************************\n*/\n  SecondaryOrderID = 198,\n/*\n************************************************\n* Number of repeating groups of IOIQualifiers. *\n************************************************\n*/\n  NoIOIQualifiers = 199,\n/*\n***********************************************************\n* Month and Year of the maturity for SecurityType=FUT or  *\n* SecurityType=OPT. Required if MaturityDay is specified. *\n* Format: YYYYMM                                          *\n* (i.e. 199903)                                           *\n***********************************************************\n*/\n  MaturityMonthYear = 200,\n/*\n*****************************************************\n* Indicates whether an Option is for a put or call. *\n*****************************************************\n*/\n  PutOrCall = 201,\n/*\n*******************************\n* Strike Price for an Option. *\n*******************************\n*/\n  StrikePrice = 202,\n/*\n********************\n* Used for options *\n********************\n*/\n  CoveredOrUncovered = 203,\n/*\n****************************************************************\n* Used for options when delivering the order to an execution   *\n* system/exchange to specify if the order is for a customer or *\n* the firm placing the order itself.                           *\n****************************************************************\n*/\n  CustomerOrFirm = 204,\n/*\n**************************************************************\n* Day of month used in conjunction with MaturityMonthYear to *\n* specify the maturity date for SecurityType=FUT or          *\n* SecurityType=OPT.                                          *\n**************************************************************\n*/\n  MaturityDay = 205,\n/*\n*************************************************************\n* Can be used for SecurityType=OPT to identify a particular *\n* security.                                                 *\n*************************************************************\n*/\n  OptAttribute = 206,\n/*\n********************************************\n* Market used to help identify a security. *\n********************************************\n*/\n  SecurityExchange = 207,\n/*\n**************************************************************\n* Indicates whether or not details should be communicated to *\n* BrokerOfCredit (i.e. step-in broker).                      *\n**************************************************************\n*/\n  NotifyBrokerOfCredit = 208,\n/*\n***************************************************************\n* Indicates how the receiver (i.e. third party) of Allocation *\n* message should handle/process the account details.          *\n***************************************************************\n*/\n  AllocHandlInst = 209,\n/*\n***********************************************************\n* Maximum number of shares within an order to be shown to *\n* other customers (i.e. sent via an IOI).                 *\n* (Prior to FIX 4.2 this field was of type int)           *\n***********************************************************\n*/\n  MaxShow = 210,\n/*\n**************************************************************\n* Amount (signed) added to the price of the peg for a pegged *\n* order.                                                     *\n**************************************************************\n*/\n  PegDifference = 211,\n/*\n*************************************\n* Length of the XmlData data block. *\n*************************************\n*/\n  XmlDataLen = 212,\n/*\n***********************************************************\n* Actual XML data stream (e.g. FIXML). See approriate XML *\n* reference (e.g. FIXML). Note: may contain embedded SOH  *\n* characters.                                             *\n***********************************************************\n*/\n  XmlData = 213,\n/*\n************************************************************\n* Reference identifier for the SettlInstID with Cancel and *\n* Replace SettlInstTransType transaction types.            *\n************************************************************\n*/\n  SettlInstRefID = 214,\n/*\n***********************************************************\n* Number of repeating groups of RoutingID and RoutingType *\n* values.                                                 *\n* See Appendix L \u0013 Pre-Trade Message Targeting/Routing    *\n***********************************************************\n*/\n  NoRoutingIDs = 215,\n/*\n**********************************************\n* Indicates the type of RoutingID specified. *\n**********************************************\n*/\n  RoutingType = 216,\n/*\n******************************************************\n* Assigned value used to identify a specific routing *\n* destination.                                       *\n******************************************************\n*/\n  RoutingID = 217,\n/*\n****************************************************************\n* For Fixed Income. Basis points relative to a benchmark. To   *\n* be expressed as \"count of basis points\" (vs. an absolute     *\n* value). E.g. High Grade Corporate Bonds may express price as *\n* basis points relative to benchmark (the Benchmark field).    *\n* Note: Basis points can be negative.                          *\n****************************************************************\n*/\n  SpreadToBenchmark = 218,\n/*\n************************************************************\n* For Fixed Income. Identifies the benchmark (e.g. used in *\n* conjunction with the SpreadToBenchmark field).           *\n************************************************************\n*/\n  Benchmark = 219,\n/*\n***************************************************************\n* For Fixed Income. Coupon rate of the bond. Will be zero for *\n* step-up bonds.                                              *\n***************************************************************\n*/\n  CouponRate = 223,\n/*\n****************************************************************\n* Specifies the ratio or multiply factor to convert from       *\n* contracts to shares (e.g. 1.0, 100, 1000, etc). Applicable   *\n* For Fixed Income, Convertible Bonds, Derivatives, etc. Note: *\n* If used, quantities should be expressed in the \"nominal\"     *\n* (e.g. contracts vs. shares) amount.                          *\n****************************************************************\n*/\n  ContractMultiplier = 231,\n/*\n*********************************************\n* Unique identifier for Market Data Request *\n*********************************************\n*/\n  MDReqID = 262,\n/*\n*****************************\n* Subscription Request Type *\n*****************************\n*/\n  SubscriptionRequestType = 263,\n/*\n*************************************\n* Depth of market for Book Snapshot *\n*************************************\n*/\n  MarketDepth = 264,\n/*\n*********************************************\n* Specifies the type of Market Data update. *\n*********************************************\n*/\n  MDUpdateType = 265,\n/*\n***************************************************************\n* Specifies whether or not book entries should be aggregated. *\n***************************************************************\n*/\n  AggregatedBook = 266,\n/*\n*******************************************\n* Number of MDEntryType fields requested. *\n*******************************************\n*/\n  NoMDEntryTypes = 267,\n/*\n*********************************************\n* Number of entries in Market Data message. *\n*********************************************\n*/\n  NoMDEntries = 268,\n/*\n***************************\n* Type Market Data entry. *\n***************************\n*/\n  MDEntryType = 269,\n/*\n***********************************\n* Price of the Market Data Entry. *\n***********************************\n*/\n  MDEntryPx = 270,\n/*\n**********************************************************\n* Number of shares represented by the Market Data Entry. *\n**********************************************************\n*/\n  MDEntrySize = 271,\n/*\n******************************\n* Date of Market Data Entry. *\n******************************\n*/\n  MDEntryDate = 272,\n/*\n******************************\n* Time of Market Data Entry. *\n******************************\n*/\n  MDEntryTime = 273,\n/*\n****************************\n* Direction of the \"tick\". *\n****************************\n*/\n  TickDirection = 274,\n/*\n*********************************\n* Market posting quote / trade. *\n* Valid values:                 *\n* See Appendix C                *\n*********************************\n*/\n  MDMkt = 275,\n/*\n**********************************************************\n* Space-delimited list of conditions describing a quote. *\n**********************************************************\n*/\n  QuoteCondition = 276,\n/*\n*********************************************************\n* Space-delimited list of conditions describing a trade *\n*********************************************************\n*/\n  TradeCondition = 277,\n/*\n****************************************\n* Unique Market Data Entry identifier. *\n****************************************\n*/\n  MDEntryID = 278,\n/*\n**************************************\n* Type of Market Data update action. *\n**************************************\n*/\n  MDUpdateAction = 279,\n/*\n***********************************\n* Refers to a previous MDEntryID. *\n***********************************\n*/\n  MDEntryRefID = 280,\n/*\n******************************************************\n* Reason for the rejection of a Market Data request. *\n******************************************************\n*/\n  MDReqRejReason = 281,\n/*\n*************************************\n* Originator of a Market Data Entry *\n*************************************\n*/\n  MDEntryOriginator = 282,\n/*\n***********************************************\n* Identification of a Market Maker\u0019s location *\n***********************************************\n*/\n  LocationID = 283,\n/*\n*******************************************\n* Identification of a Market Maker\u0019s desk *\n*******************************************\n*/\n  DeskID = 284,\n/*\n************************\n* Reason for deletion. *\n************************\n*/\n  DeleteReason = 285,\n/*\n*********************************\n* Flag that identifies a price. *\n*********************************\n*/\n  OpenCloseSettleFlag = 286,\n/*\n****************************************************************\n* Specifies the number of days that may elapse before delivery *\n* of the security                                              *\n****************************************************************\n*/\n  SellerDays = 287,\n/*\n***************************\n* Buying party in a trade *\n***************************\n*/\n  MDEntryBuyer = 288,\n/*\n****************************\n* Selling party in a trade *\n****************************\n*/\n  MDEntrySeller = 289,\n/*\n****************************************************************\n* Display position of a bid or offer, numbered from most       *\n* competitive to least competitive, per market side, beginning *\n* with 1.                                                      *\n****************************************************************\n*/\n  MDEntryPositionNo = 290,\n/*\n*****************************************\n* Identifies a firm\u0019s financial status. *\n*****************************************\n*/\n  FinancialStatus = 291,\n/*\n********************************************\n* Identifies the type of Corporate Action. *\n********************************************\n*/\n  CorporateAction = 292,\n/*\n*********************\n* Default Bid Size. *\n*********************\n*/\n  DefBidSize = 293,\n/*\n***********************\n* Default Offer Size. *\n***********************\n*/\n  DefOfferSize = 294,\n/*\n***********************************************\n* The number of quote entries for a QuoteSet. *\n***********************************************\n*/\n  NoQuoteEntries = 295,\n/*\n************************************************\n* The number of sets of quotes in the message. *\n************************************************\n*/\n  NoQuoteSets = 296,\n/*\n*******************************************************\n* Identifies the status of the quote acknowledgement. *\n*******************************************************\n*/\n  QuoteAckStatus = 297,\n/*\n****************************************\n* Identifies the type of quote cancel. *\n****************************************\n*/\n  QuoteCancelType = 298,\n/*\n********************************************************\n* Uniquely identifies the quote as part of a QuoteSet. *\n********************************************************\n*/\n  QuoteEntryID = 299,\n/*\n******************************\n* Reason Quote was rejected: *\n******************************\n*/\n  QuoteRejectReason = 300,\n/*\n****************************************************************\n* Level of Response requested from receiver of quote messages. *\n****************************************************************\n*/\n  QuoteResponseLevel = 301,\n/*\n********************************\n* Unique id for the Quote Set. *\n********************************\n*/\n  QuoteSetID = 302,\n/*\n*******************************************************\n* Indicates the type of Quote Request being generated *\n*******************************************************\n*/\n  QuoteRequestType = 303,\n/*\n***************************************************************\n* Total number of quotes for the quote set across all         *\n* messages. Should be the sum of all NoQuoteEntries in each   *\n* message that has repeating quotes that are part of the same *\n* quote set.                                                  *\n***************************************************************\n*/\n  TotQuoteEntries = 304,\n/*\n***********************************\n* Underlying security\u0019s IDSource. *\n***********************************\n*/\n  UnderlyingIDSource = 305,\n/*\n************************************\n* Underlying security\u0019s Issuer.    *\n* See Issuer field for description *\n************************************\n*/\n  UnderlyingIssuer = 306,\n/*\n******************************************\n* Underlying security\u0019s SecurityDesc.    *\n* See SecurityDesc field for description *\n******************************************\n*/\n  UnderlyingSecurityDesc = 307,\n/*\n**********************************************************\n* Underlying security\u0019s SecurityExchange. Can be used to *\n* identify the underlying security.                      *\n**********************************************************\n*/\n  UnderlyingSecurityExchange = 308,\n/*\n****************************************\n* Underlying security\u0019s SecurityID.    *\n* See SecurityID field for description *\n****************************************\n*/\n  UnderlyingSecurityID = 309,\n/*\n***************************************\n* Underlying security\u0019s SecurityType. *\n***************************************\n*/\n  UnderlyingSecurityType = 310,\n/*\n************************************\n* Underlying security\u0019s Symbol.    *\n* See Symbol field for description *\n************************************\n*/\n  UnderlyingSymbol = 311,\n/*\n***************************************\n* Underlying security\u0019s SymbolSfx.    *\n* See SymbolSfx field for description *\n***************************************\n*/\n  UnderlyingSymbolSfx = 312,\n/*\n********************************************************\n* Underlying security\u0019s MaturityMonthYear. Required if *\n* UnderlyingMaturityDay is specified.                  *\n* See MaturityMonthYear field for description          *\n********************************************************\n*/\n  UnderlyingMaturityMonthYear = 313,\n/*\n*****************************************\n* Underlying security\u0019s MaturityDay.    *\n* See MaturityDay field for description *\n*****************************************\n*/\n  UnderlyingMaturityDay = 314,\n/*\n***************************************\n* Underlying security\u0019s PutOrCall.    *\n* See PutOrCall field for description *\n***************************************\n*/\n  UnderlyingPutOrCall = 315,\n/*\n*****************************************\n* Underlying security\u0019s StrikePrice.    *\n* See StrikePrice field for description *\n*****************************************\n*/\n  UnderlyingStrikePrice = 316,\n/*\n******************************************\n* Underlying security\u0019s OptAttribute.    *\n* See OptAttribute field for description *\n******************************************\n*/\n  UnderlyingOptAttribute = 317,\n/*\n*******************************************************\n* Underlying security\u0019s Currency.                     *\n* See Currency field for description and valid values *\n*******************************************************\n*/\n  UnderlyingCurrency = 318,\n/*\n*************************************************\n* Quantity of a particular leg in the security. *\n*************************************************\n*/\n  RatioQty = 319,\n/*\n***********************************************\n* Unique ID of a Security Definition Request. *\n***********************************************\n*/\n  SecurityReqID = 320,\n/*\n****************************************\n* Type of Security Definition Request. *\n****************************************\n*/\n  SecurityRequestType = 321,\n/*\n***********************************************\n* Unique ID of a Security Definition message. *\n***********************************************\n*/\n  SecurityResponseID = 322,\n/*\n*************************************************\n* Type of Security Definition message response. *\n*************************************************\n*/\n  SecurityResponseType = 323,\n/*\n***************************************************\n* Unique ID of a Security Status Request message. *\n***************************************************\n*/\n  SecurityStatusReqID = 324,\n/*\n**************************************************************\n* Indicates whether or not message is being sent as a result *\n* of a subscription request or not.                          *\n**************************************************************\n*/\n  UnsolicitedIndicator = 325,\n/*\n****************************************************************\n* Identifies the trading status applicable to the transaction. *\n****************************************************************\n*/\n  SecurityTradingStatus = 326,\n/*\n*************************************************************\n* Denotes the reason for the Opening Delay or Trading Halt. *\n*************************************************************\n*/\n  HaltReason = 327,\n/*\n*************************************************************\n* Indicates whether or not the halt was due to Common Stock *\n* trading being halted.                                     *\n*************************************************************\n*/\n  InViewOfCommon = 328,\n/*\n************************************************************\n* Indicates whether or not the halt was due to the Related *\n* Security being halted.                                   *\n************************************************************\n*/\n  DueToRelated = 329,\n/*\n****************************\n* Number of shares bought. *\n****************************\n*/\n  BuyVolume = 330,\n/*\n**************************\n* Number of shares sold. *\n**************************\n*/\n  SellVolume = 331,\n/*\n***************************************************************\n* Represents an indication of the high end of the price range *\n* for a security prior to the open or reopen                  *\n***************************************************************\n*/\n  HighPx = 332,\n/*\n**************************************************************\n* Represents an indication of the low end of the price range *\n* for a security prior to the open or reopen                 *\n**************************************************************\n*/\n  LowPx = 333,\n/*\n**************************************\n* Identifies the type of adjustment. *\n**************************************\n*/\n  Adjustment = 334,\n/*\n**************************************************\n* Unique ID of a Trading Session Status message. *\n**************************************************\n*/\n  TradSesReqID = 335,\n/*\n**************************************************************\n* Identifier for Trading Session                             *\n* Can be used to represent a specific market trading session *\n* (e.g. \"PRE-OPEN\", \"CROSS_2\", \"AFTER-HOURS\", \"TOSTNET1\",    *\n* \"TOSTNET2\", etc).                                          *\n* Values should be bi-laterally agreed to between            *\n* counterparties.                                            *\n**************************************************************\n*/\n  TradingSessionID = 336,\n/*\n******************************************************\n* Identifies the trader (e.g. \"badge number\") of the *\n* ContraBroker.                                      *\n******************************************************\n*/\n  ContraTrader = 337,\n/*\n*********************\n* Method of trading *\n*********************\n*/\n  TradSesMethod = 338,\n/*\n************************\n* Trading Session Mode *\n************************\n*/\n  TradSesMode = 339,\n/*\n*********************************\n* State of the trading session. *\n*********************************\n*/\n  TradSesStatus = 340,\n/*\n****************************************\n* Starting time of the trading session *\n****************************************\n*/\n  TradSesStartTime = 341,\n/*\n**********************************************\n* Time of the opening of the trading session *\n**********************************************\n*/\n  TradSesOpenTime = 342,\n/*\n*************************************************\n* Time of the pre-closed of the trading session *\n*************************************************\n*/\n  TradSesPreCloseTime = 343,\n/*\n***************************************\n* Closing time of the trading session *\n***************************************\n*/\n  TradSesCloseTime = 344,\n/*\n***********************************\n* End time of the trading session *\n***********************************\n*/\n  TradSesEndTime = 345,\n/*\n***********************************\n* Number of orders in the market. *\n***********************************\n*/\n  NumberOfOrders = 346,\n/*\n*****************************************************\n* Type of message encoding (non-ASCII (non-English) *\n* characters) used in a message\u0019s \"Encoded\" fields. *\n*****************************************************\n*/\n  MessageEncoding = 347,\n/*\n***************************************************************\n* Byte length of encoded (non-ASCII characters) EncodedIssuer *\n* field.                                                      *\n***************************************************************\n*/\n  EncodedIssuerLen = 348,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the Issuer  *\n* field in the encoded format specified via the                *\n* MessageEncoding field. If used, the ASCII (English)          *\n* representation should also be specified in the Issuer field. *\n****************************************************************\n*/\n  EncodedIssuer = 349,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedSecurityDesc field.                    *\n*************************************************\n*/\n  EncodedSecurityDescLen = 350,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* SecurityDesc field in the encoded format specified via the  *\n* MessageEncoding field. If used, the ASCII (English)         *\n* representation should also be specified in the SecurityDesc *\n* field.                                                      *\n***************************************************************\n*/\n  EncodedSecurityDesc = 351,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedListExecInst field.                    *\n*************************************************\n*/\n  EncodedListExecInstLen = 352,\n/*\n***************************************************************\n* Encoded (non-ASCII characters) representation of the        *\n* ListExecInst field in the encoded format specified via the  *\n* MessageEncoding field. If used, the ASCII (English)         *\n* representation should also be specified in the ListExecInst *\n* field.                                                      *\n***************************************************************\n*/\n  EncodedListExecInst = 353,\n/*\n*************************************************************\n* Byte length of encoded (non-ASCII characters) EncodedText *\n* field.                                                    *\n*************************************************************\n*/\n  EncodedTextLen = 354,\n/*\n**************************************************************\n* Encoded (non-ASCII characters) representation of the Text  *\n* field in the encoded format specified via the              *\n* MessageEncoding field. If used, the ASCII (English)        *\n* representation should also be specified in the Text field. *\n**************************************************************\n*/\n  EncodedText = 355,\n/*\n****************************************************************\n* Byte length of encoded (non-ASCII characters) EncodedSubject *\n* field.                                                       *\n****************************************************************\n*/\n  EncodedSubjectLen = 356,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the Subject *\n* field in the encoded format specified via the                *\n* MessageEncoding field. If used, the ASCII (English)          *\n* representation should also be specified in the Subject       *\n* field.                                                       *\n****************************************************************\n*/\n  EncodedSubject = 357,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedHeadline field.                        *\n*************************************************\n*/\n  EncodedHeadlineLen = 358,\n/*\n***********************************************************\n* Encoded (non-ASCII characters) representation of the    *\n* Headline field in the encoded format specified via the  *\n* MessageEncoding field. If used, the ASCII (English)     *\n* representation should also be specified in the Headline *\n* field.                                                  *\n***********************************************************\n*/\n  EncodedHeadline = 359,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedAllocText field.                       *\n*************************************************\n*/\n  EncodedAllocTextLen = 360,\n/*\n************************************************************\n* Encoded (non-ASCII characters) representation of the     *\n* AllocText field in the encoded format specified via the  *\n* MessageEncoding field. If used, the ASCII (English)      *\n* representation should also be specified in the AllocText *\n* field.                                                   *\n************************************************************\n*/\n  EncodedAllocText = 361,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedUnderlyingIssuer field.                *\n*************************************************\n*/\n  EncodedUnderlyingIssuerLen = 362,\n/*\n**************************************************************\n* Encoded (non-ASCII characters) representation of the       *\n* UnderlyingIssuer field in the encoded format specified via *\n* the MessageEncoding field. If used, the ASCII (English)    *\n* representation should also be specified in the             *\n* UnderlyingIssuer field.                                    *\n**************************************************************\n*/\n  EncodedUnderlyingIssuer = 363,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedUnderlyingSecurityDesc field.          *\n*************************************************\n*/\n  EncodedUnderlyingSecurityDescLen = 364,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* UnderlyingSecurityDesc field in the encoded format specified *\n* via the MessageEncoding field. If used, the ASCII (English)  *\n* representation should also be specified in the               *\n* UnderlyingSecurityeDesc field.                               *\n****************************************************************\n*/\n  EncodedUnderlyingSecurityDesc = 365,\n/*\n************************************************************\n* Executed price for an AllocAccount entry used when using *\n* \"executed price\" vs. \"average price\" allocations (e.g.   *\n* Japan).                                                  *\n************************************************************\n*/\n  AllocPrice = 366,\n/*\n**************************************************************\n* Indicates expiration time of this particular QuoteSet      *\n* (always expressed in UTC (Universal Time Coordinated, also *\n* known as \"GMT\")                                            *\n**************************************************************\n*/\n  QuoteSetValidUntilTime = 367,\n/*\n************************************\n* Reason Quote Entry was rejected: *\n************************************\n*/\n  QuoteEntryRejectReason = 368,\n/*\n***********************************************************\n* The last MsgSeqNum value received and processed. Can be *\n* specified on every message sent. Useful for detecting a *\n* backlog with a counterparty.                            *\n***********************************************************\n*/\n  LastMsgSeqNumProcessed = 369,\n/*\n****************************************************************\n* Used when a message is sent via a \"hub\" or \"service bureau\". *\n* If A sends to Q (the hub) who then sends to B via a separate *\n* FIX session, then when Q sends to B the value of this field  *\n* should represent the SendingTime on the message A sent to Q. *\n* (always expressed in UTC (Universal Time Coordinated, also   *\n* known as \"GMT\")                                              *\n****************************************************************\n*/\n  OnBehalfOfSendingTime = 370,\n/*\n*****************************************************\n* The tag number of the FIX field being referenced. *\n*****************************************************\n*/\n  RefTagID = 371,\n/*\n****************************************************\n* The MsgType of the FIX message being referenced. *\n****************************************************\n*/\n  RefMsgType = 372,\n/*\n***************************************************************\n* Code to identify reason for a session-level Reject message. *\n***************************************************************\n*/\n  SessionRejectReason = 373,\n/*\n********************************************\n* Identifies the Bid Request message type. *\n********************************************\n*/\n  BidRequestTransType = 374,\n/*\n********************************************************\n* Identifies contra broker. Standard NASD market-maker *\n* mnemonic is preferred.                               *\n********************************************************\n*/\n  ContraBroker = 375,\n/*\n********************************************************\n* ID used to represent this transaction for compliance *\n* purposes (e.g. OATS reporting).                      *\n********************************************************\n*/\n  ComplianceID = 376,\n/*\n*****************************************************\n* Indicates whether or not the order was solicited. *\n*****************************************************\n*/\n  SolicitedFlag = 377,\n/*\n************************************************************\n* Code to identify reason for an ExecutionRpt message sent *\n* with ExecType=Restated or used when communicating an     *\n* unsolicited cancel.                                      *\n************************************************************\n*/\n  ExecRestatementReason = 378,\n/*\n*************************************************************\n* The value of the business-level \"ID\" field on the message *\n* being referenced.                                         *\n*************************************************************\n*/\n  BusinessRejectRefID = 379,\n/*\n*********************************************************\n* Code to identify reason for a Business Message Reject *\n* message.                                              *\n*********************************************************\n*/\n  BusinessRejectReason = 380,\n/*\n****************************************************************\n* Total amount traded (e.g. CumQty * AvgPx) expressed in units *\n* of currency.                                                 *\n****************************************************************\n*/\n  GrossTradeAmt = 381,\n/*\n***************************************\n* The number of ContraBroker entries. *\n***************************************\n*/\n  NoContraBrokers = 382,\n/*\n***********************************************************\n* Maximum number of bytes supported for a single message. *\n***********************************************************\n*/\n  MaxMessageSize = 383,\n/*\n******************************************\n* Number of MsgTypes in repeating group. *\n******************************************\n*/\n  NoMsgTypes = 384,\n/*\n********************************************\n* Specifies the direction of the messsage. *\n********************************************\n*/\n  MsgDirection = 385,\n/*\n***************************************************\n* Number of TradingSessionIDs in repeating group. *\n***************************************************\n*/\n  NoTradingSessions = 386,\n/*\n***********************************\n* Total volume (quantity) traded. *\n***********************************\n*/\n  TotalVolumeTraded = 387,\n/*\n***************************************************************\n* Code to identify the price a DiscretionOffset is related to *\n* and should be mathematically added to.                      *\n***************************************************************\n*/\n  DiscretionInst = 388,\n/*\n*************************************************************\n* Amount (signed) added to the \"related to\" price specified *\n* via DiscretionInst.                                       *\n*************************************************************\n*/\n  DiscretionOffset = 389,\n/*\n**************************************************************\n* Unique identifier for Bid Response as assigned by broker.  *\n* Uniqueness must be guaranteed within a single trading day. *\n**************************************************************\n*/\n  BidID = 390,\n/*\n**************************************************************\n* Unique identifier for a Bid Request as assigned by         *\n* institution. Uniqueness must be guaranteed within a single *\n* trading day.                                               *\n**************************************************************\n*/\n  ClientBidID = 391,\n/*\n************************************\n* Descriptive name for list order. *\n************************************\n*/\n  ListName = 392,\n/*\n*******************************\n* Total number of securities. *\n*******************************\n*/\n  TotalNumSecurities = 393,\n/*\n*********************************************\n* Code to identify the type of Bid Request. *\n*********************************************\n*/\n  BidType = 394,\n/*\n****************************\n* Total number of tickets. *\n****************************\n*/\n  NumTickets = 395,\n/*\n***********************\n* Amounts in currency *\n***********************\n*/\n  SideValue1 = 396,\n/*\n***********************\n* Amounts in currency *\n***********************\n*/\n  SideValue2 = 397,\n/*\n************************************\n* Number of BidDescriptor entries. *\n************************************\n*/\n  NoBidDescriptors = 398,\n/*\n***********************************************\n* Code to identify the type of BidDescriptor. *\n***********************************************\n*/\n  BidDescriptorType = 399,\n/*\n**************************************************************\n* BidDescriptor value. Usage depends upon BidDescriptorType. *\n**************************************************************\n*/\n  BidDescriptor = 400,\n/*\n****************************************************************\n* Code to identify which \"SideValue\" the value refers to.      *\n* SideValue1 and SideValue2 are used as opposed to Buy or Sell *\n* so that the basket can be quoted either way as Buy or Sell.  *\n****************************************************************\n*/\n  SideValueInd = 401,\n/*\n**************************************************************\n* Liquidity indicator or lower limit if TotalNumSecurities > *\n* 1. Represented as a percentage.                            *\n**************************************************************\n*/\n  LiquidityPctLow = 402,\n/*\n********************************************************\n* Upper liquidity indicator if TotalNumSecurities > 1. *\n* Represented as a percentage.                         *\n********************************************************\n*/\n  LiquidityPctHigh = 403,\n/*\n*********************************************************\n* Value between LiquidityPctLow and LiquidityPctHigh in *\n* Currency                                              *\n*********************************************************\n*/\n  LiquidityValue = 404,\n/*\n*************************************************************\n* Eg Used in EFP trades 12% (EFP \u0013 Exchange for Physical ). *\n* Represented as a percentage.                              *\n*************************************************************\n*/\n  EFPTrackingError = 405,\n/*\n**********************\n* Used in EFP trades *\n**********************\n*/\n  FairValue = 406,\n/*\n****************************************************\n* Used in EFP trades. Represented as a percentage. *\n****************************************************\n*/\n  OutsideIndexPct = 407,\n/*\n**********************\n* Used in EFP trades *\n**********************\n*/\n  ValueOfFutures = 408,\n/*\n*****************************************************\n* Code to identify the type of liquidity indicator. *\n*****************************************************\n*/\n  LiquidityIndType = 409,\n/*\n**********************************************************\n* Overall weighted average liquidity expressed as a % of *\n* average daily volume. Represented as a percentage.     *\n**********************************************************\n*/\n  WtAverageLiquidity = 410,\n/*\n******************************************************\n* Indicates whether or not to exchange for phsyical. *\n******************************************************\n*/\n  ExchangeForPhysical = 411,\n/*\n*******************************\n* Value of stocks in Currency *\n*******************************\n*/\n  OutMainCntryUIndex = 412,\n/*\n***************************************************************\n* Percentage of program that crosses in Currency. Represented *\n* as a percentage.                                            *\n***************************************************************\n*/\n  CrossPercent = 413,\n/*\n***************************************************************\n* Code to identify the desired frequency of progress reports. *\n***************************************************************\n*/\n  ProgRptReqs = 414,\n/*\n**********************************************************\n* Time in minutes between each ListStatus report sent by *\n* SellSide. Zero means don\u0019t send status.                *\n**********************************************************\n*/\n  ProgPeriodInterval = 415,\n/*\n****************************************************************\n* Code to represent whether value is net (inclusive of tax) or *\n* gross.                                                       *\n****************************************************************\n*/\n  IncTaxInd = 416,\n/*\n*****************************************************\n* Indicates the total number of bidders on the list *\n*****************************************************\n*/\n  NumBidders = 417,\n/*\n****************************************\n* Code to represent the type of trade. *\n****************************************\n*/\n  TradeType = 418,\n/*\n*******************************************\n* Code to represent the basis price type. *\n*******************************************\n*/\n  BasisPxType = 419,\n/*\n*****************************************\n* Indicates the number of list entries. *\n*****************************************\n*/\n  NoBidComponents = 420,\n/*\n*****************************\n* ISO Country Code in field *\n*****************************\n*/\n  Country = 421,\n/*\n***************************************************************\n* Total number of strike price entries across all messages.   *\n* Should be the sum of all NoStrikes in each message that has *\n* repeating strike price entries related to the same ListID.  *\n* Used to support fragmentation.                              *\n***************************************************************\n*/\n  TotNoStrikes = 422,\n/*\n*************************************\n* Code to represent the price type. *\n*************************************\n*/\n  PriceType = 423,\n/*\n*************************************************************\n* For GT orders, the OrderQty less all shares (adjusted for *\n* stock splits) that traded on previous days. DayOrderQty = *\n* OrderQty \u0013 (CumQty - DayCumQty)                           *\n*************************************************************\n*/\n  DayOrderQty = 424,\n/*\n**************************************************************\n* The number of shares on a GT order that have traded today. *\n**************************************************************\n*/\n  DayCumQty = 425,\n/*\n**************************************************************\n* The average price of shares on a GT order that have traded *\n* today.                                                     *\n**************************************************************\n*/\n  DayAvgPx = 426,\n/*\n********************************************************\n* Code to identify whether to book out executions on a *\n* part-filled GT order on the day of execution or to   *\n* accumulate.                                          *\n********************************************************\n*/\n  GTBookingInst = 427,\n/*\n****************************************\n* Number of list strike price entries. *\n****************************************\n*/\n  NoStrikes = 428,\n/*\n*************************************\n* Code to represent the price type. *\n*************************************\n*/\n  ListStatusType = 429,\n/*\n****************************************************************\n* Code to represent whether value is net (inclusive of tax) or *\n* gross.                                                       *\n****************************************************************\n*/\n  NetGrossInd = 430,\n/*\n*************************************************\n* Code to represent the status of a list order. *\n*************************************************\n*/\n  ListOrderStatus = 431,\n/*\n****************************************************************\n* Date of order expiration (last day the order can trade),     *\n* always expressed in terms of the local market date. The time *\n* at which the order expires is determined by the local        *\n* market\u0019s business practices                                  *\n****************************************************************\n*/\n  ExpireDate = 432,\n/*\n****************************************\n* Identifies the type of ListExecInst. *\n****************************************\n*/\n  ListExecInstType = 433,\n/*\n*************************************************************\n* Identifies the type of request that a Cancel Reject is in *\n* response to.                                              *\n*************************************************************\n*/\n  CxlRejResponseTo = 434,\n/*\n****************************************\n* Underlying security\u0019s CouponRate.    *\n* See CouponRate field for description *\n****************************************\n*/\n  UnderlyingCouponRate = 435,\n/*\n************************************************\n* Underlying security\u0019s ContractMultiplier.    *\n* See ContractMultiplier field for description *\n************************************************\n*/\n  UnderlyingContractMultiplier = 436,\n/*\n******************************************\n* Quantity traded with the ContraBroker. *\n******************************************\n*/\n  ContraTradeQty = 437,\n/*\n**************************************************************\n* Identifes the time of the trade with the ContraBroker.     *\n* (always expressed in UTC (Universal Time Coordinated, also *\n* known as \"GMT\")                                            *\n**************************************************************\n*/\n  ContraTradeTime = 438,\n/*\n**************************************************************\n* Firm that will clear the trade. Used if different from the *\n* executing firm.                                            *\n**************************************************************\n*/\n  ClearingFirm = 439,\n/*\n************************************************************\n* Supplemental accounting information forwared to clearing *\n* house/firm.                                              *\n************************************************************\n*/\n  ClearingAccount = 440,\n/*\n***************************************************\n* Number of Securites between LiquidityPctLow and *\n* LiquidityPctHigh in Currency.                   *\n***************************************************\n*/\n  LiquidityNumSecurities = 441,\n/*\n**************************************************************\n* Used to indicate what an Execution Report represents (e.g. *\n* used with multi-leg securiteis, such as option strategies, *\n* spreads, etc.).                                            *\n**************************************************************\n*/\n  MultiLegReportingType = 442,\n/*\n*******************************************************\n* The time at which current market prices are used to *\n* determine the value of a basket.                    *\n*******************************************************\n*/\n  StrikeTime = 443,\n/*\n***************************************************\n* Free format text string related to List Status. *\n***************************************************\n*/\n  ListStatusText = 444,\n/*\n*************************************************\n* Byte length of encoded (non-ASCII characters) *\n* EncodedListStatusText field.                  *\n*************************************************\n*/\n  EncodedListStatusTextLen = 445,\n/*\n****************************************************************\n* Encoded (non-ASCII characters) representation of the         *\n* ListStatusText field in the encoded format specified via the *\n* MessageEncoding field. If used, the ASCII (English)          *\n* representation should also be specified in the               *\n* ListStatusText field.                                        *\n****************************************************************\n*/\n  EncodedListStatusText = 446\n}\n"]}