"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AllocHandlInst = exports.NotifyBrokerOfCredit = exports.CoveredOrUncovered = exports.AllocLinkType = exports.SettlDeliveryType = exports.StandInstDbType = exports.SecurityType = exports.SettlInstSource = exports.SettlInstTransType = exports.SettlInstMode = exports.SettlCurrFxRateCalc = exports.ExecType = exports.ResetSeqNumFlag = exports.MiscFeeType = exports.IOINaturalFlag = exports.DKReason = exports.GapFillFlag = exports.ForexReq = exports.LocateReqd = exports.ReportToExch = exports.IOIQualifier = exports.OrdRejReason = exports.CxlRejReason = exports.EncryptMethod = exports.PossResend = exports.EmailType = exports.AllocRejCode = exports.AllocStatus = exports.ProcessCode = exports.PositionEffect = exports.AllocTransType = exports.SettlmntTyp = exports.Urgency = exports.TimeInForce = exports.Side = exports.Rule80A = exports.PossDupFlag = exports.OrdType = exports.OrdStatus = exports.MsgType = exports.LastCapacity = exports.IOITransType = exports.IOIQty = exports.IOIQltyInd = exports.SecurityIDSource = exports.HandlInst = exports.ExecInst = exports.CommType = exports.AdvTransType = exports.AdvSide = void 0;
exports.IncTaxInd = exports.ProgRptReqs = exports.ExchangeForPhysical = exports.LiquidityIndType = exports.SideValueInd = exports.BidDescriptorType = exports.BidType = exports.DiscretionInst = exports.MsgDirection = exports.BusinessRejectReason = exports.ExecRestatementReason = exports.SolicitedFlag = exports.BidRequestTransType = exports.SessionRejectReason = exports.MessageEncoding = exports.TradSesStatus = exports.TradSesMode = exports.TradSesMethod = exports.Adjustment = exports.DueToRelated = exports.InViewOfCommon = exports.HaltReasonChar = exports.SecurityTradingStatus = exports.UnsolicitedIndicator = exports.SecurityResponseType = exports.SecurityRequestType = exports.QuoteRequestType = exports.QuoteResponseLevel = exports.QuoteRejectReason = exports.QuoteCancelType = exports.QuoteStatus = exports.CorporateAction = exports.FinancialStatus = exports.OpenCloseSettleFlag = exports.DeleteReason = exports.MDReqRejReason = exports.MDUpdateAction = exports.TradeCondition = exports.QuoteCondition = exports.TickDirection = exports.MDEntryType = exports.AggregatedBook = exports.MDUpdateType = exports.SubscriptionRequestType = exports.TradedFlatSwitch = exports.YieldType = exports.StipulationType = exports.BenchmarkCurveName = exports.Benchmark = exports.RoutingType = void 0;
exports.MassStatusReqType = exports.AccountType = exports.ClearingInstruction = exports.MatchType = exports.MatchStatus = exports.PreviouslyReported = exports.TradeRequestType = exports.TradSesStatusRejReason = exports.SecurityRequestResult = exports.SecurityListRequestType = exports.NoSides = exports.CrossPrioritization = exports.CrossType = exports.MDImplicitDelete = exports.Scope = exports.CashMargin = exports.QuoteType = exports.MassCancelRejectReason = exports.MassCancelResponse = exports.MassCancelRequestType = exports.OrderRestrictions = exports.OrderCapacity = exports.OwnerType = exports.ContAmtType = exports.RegistTransType = exports.RegistRejReasonCode = exports.RegistStatus = exports.FundRenewWaiv = exports.TaxAdvantageType = exports.PaymentMethod = exports.TradeReportTransType = exports.ExecPriceType = exports.MoneyLaunderingStatus = exports.CancellationRights = exports.RoundingDirection = exports.QuantityType = exports.TestMessageIndicator = exports.Product = exports.PartyRole = exports.PartyIDSource = exports.MultiLegReportingType = exports.CxlRejResponseTo = exports.ListExecInstType = exports.ListOrderStatus = exports.NetGrossInd = exports.ListStatusType = exports.GTBookingInst = exports.PriceType = exports.BasisPxType = exports.TradeType = void 0;
exports.QuoteRequestRejectReason = exports.LegalConfirm = exports.PriorityIndicator = exports.WorkingIndicator = exports.ClearingFeeIndicator = exports.AllocType = exports.PreallocMethod = exports.BookingUnit = exports.DayBookingInst = void 0;
var AdvSide;
(function (AdvSide) {
    AdvSide["Buy"] = "B";
    AdvSide["Sell"] = "S";
    AdvSide["Cross"] = "X";
    AdvSide["Trade"] = "T";
})(AdvSide = exports.AdvSide || (exports.AdvSide = {}));
var AdvTransType;
(function (AdvTransType) {
    AdvTransType["New"] = "N";
    AdvTransType["Cancel"] = "C";
    AdvTransType["Replace"] = "R";
})(AdvTransType = exports.AdvTransType || (exports.AdvTransType = {}));
var CommType;
(function (CommType) {
    CommType["PerShare"] = "1";
    CommType["Percentage"] = "2";
    CommType["Absolute"] = "3";
    CommType["E4"] = "4";
    CommType["E5"] = "5";
    CommType["PerBond"] = "6";
})(CommType = exports.CommType || (exports.CommType = {}));
var ExecInst;
(function (ExecInst) {
    ExecInst["Stayoffer"] = "0";
    ExecInst["Notheld"] = "1";
    ExecInst["Work"] = "2";
    ExecInst["Goalong"] = "3";
    ExecInst["Overday"] = "4";
    ExecInst["Held"] = "5";
    ExecInst["Partnotinit"] = "6";
    ExecInst["Strictscale"] = "7";
    ExecInst["Trytoscale"] = "8";
    ExecInst["Staybid"] = "9";
    ExecInst["Trytostop"] = "Y";
    ExecInst["Midprcpeg"] = "M";
    ExecInst["Markpeg"] = "P";
    ExecInst["Cancelonsysfail"] = "Q";
    ExecInst["Primpeg"] = "R";
    ExecInst["Suspend"] = "S";
    ExecInst["Custdispinst"] = "U";
    ExecInst["Netting"] = "V";
    ExecInst["Pegvwap"] = "W";
    ExecInst["Tradealong"] = "X";
    ExecInst["Percvol"] = "D";
    ExecInst["Nocross"] = "A";
    ExecInst["Openpeg"] = "O";
    ExecInst["Callfirst"] = "C";
    ExecInst["Nonnego"] = "N";
    ExecInst["Dni"] = "E";
    ExecInst["Dnr"] = "F";
    ExecInst["Aon"] = "G";
    ExecInst["Restateonsysfail"] = "H";
    ExecInst["Institonly"] = "I";
    ExecInst["Restateontradinghalt"] = "J";
    ExecInst["Cancelontradinghalt"] = "K";
    ExecInst["Lastpeg"] = "L";
    ExecInst["Okcross"] = "B";
})(ExecInst = exports.ExecInst || (exports.ExecInst = {}));
var HandlInst;
(function (HandlInst) {
    HandlInst["AutomatedExecutionOrderPrivateNoBrokerIntervention"] = "1";
    HandlInst["AutomatedExecutionOrderPublicBrokerInterventionOk"] = "2";
    HandlInst["ManualOrderBestExecution"] = "3";
})(HandlInst = exports.HandlInst || (exports.HandlInst = {}));
var SecurityIDSource;
(function (SecurityIDSource) {
    SecurityIDSource["Cusip"] = "1";
    SecurityIDSource["Sedol"] = "2";
    SecurityIDSource["Quik"] = "3";
    SecurityIDSource["IsinNumber"] = "4";
    SecurityIDSource["RicCode"] = "5";
    SecurityIDSource["IsoCurrencyCode"] = "6";
    SecurityIDSource["IsoCountryCode"] = "7";
    SecurityIDSource["ExchangeSymbol"] = "8";
    SecurityIDSource["ConsolidatedTapeAssociation"] = "9";
    SecurityIDSource["Sicovam"] = "E";
    SecurityIDSource["Belgian"] = "F";
    SecurityIDSource["Valoren"] = "D";
    SecurityIDSource["Dutch"] = "C";
    SecurityIDSource["Wertpapier"] = "B";
    SecurityIDSource["BloombergSymbol"] = "A";
    SecurityIDSource["Common"] = "G";
})(SecurityIDSource = exports.SecurityIDSource || (exports.SecurityIDSource = {}));
var IOIQltyInd;
(function (IOIQltyInd) {
    IOIQltyInd["Medium"] = "M";
    IOIQltyInd["High"] = "H";
    IOIQltyInd["Low"] = "L";
})(IOIQltyInd = exports.IOIQltyInd || (exports.IOIQltyInd = {}));
var IOIQty;
(function (IOIQty) {
    IOIQty["Large"] = "L";
    IOIQty["Medium"] = "M";
    IOIQty["Small"] = "S";
})(IOIQty = exports.IOIQty || (exports.IOIQty = {}));
var IOITransType;
(function (IOITransType) {
    IOITransType["Cancel"] = "C";
    IOITransType["New"] = "N";
    IOITransType["Replace"] = "R";
})(IOITransType = exports.IOITransType || (exports.IOITransType = {}));
var LastCapacity;
(function (LastCapacity) {
    LastCapacity["Agent"] = "1";
    LastCapacity["CrossAsAgent"] = "2";
    LastCapacity["CrossAsPrincipal"] = "3";
    LastCapacity["Principal"] = "4";
})(LastCapacity = exports.LastCapacity || (exports.LastCapacity = {}));
var MsgType;
(function (MsgType) {
    MsgType["Heartbeat"] = "0";
    MsgType["TestRequest"] = "1";
    MsgType["ResendRequest"] = "2";
    MsgType["Reject"] = "3";
    MsgType["SequenceReset"] = "4";
    MsgType["Logout"] = "5";
    MsgType["IndicationOfInterest"] = "6";
    MsgType["Advertisement"] = "7";
    MsgType["ExecutionReport"] = "8";
    MsgType["OrderCancelReject"] = "9";
    MsgType["QuoteStatusRequest"] = "a";
    MsgType["Logon"] = "A";
    MsgType["DerivativeSecurityList"] = "AA";
    MsgType["NewOrderAb"] = "AB";
    MsgType["MultilegOrderCancelReplace"] = "AC";
    MsgType["TradeCaptureReportRequest"] = "AD";
    MsgType["TradeCaptureReport"] = "AE";
    MsgType["OrderMassStatusRequest"] = "AF";
    MsgType["QuoteRequestReject"] = "AG";
    MsgType["RfqRequest"] = "AH";
    MsgType["QuoteStatusReport"] = "AI";
    MsgType["MassQuoteAcknowledgement"] = "b";
    MsgType["News"] = "B";
    MsgType["SecurityDefinitionRequest"] = "c";
    MsgType["Email"] = "C";
    MsgType["SecurityDefinition"] = "d";
    MsgType["OrderSingle"] = "D";
    MsgType["SecurityStatusRequest"] = "e";
    MsgType["OrderList"] = "E";
    MsgType["SecurityStatus"] = "f";
    MsgType["OrderCancelRequest"] = "F";
    MsgType["OrderCancelReplaceRequest"] = "G";
    MsgType["TradingSessionStatusRequest"] = "g";
    MsgType["TradingSessionStatus"] = "h";
    MsgType["OrderStatusRequest"] = "H";
    MsgType["MassQuote"] = "i";
    MsgType["BusinessMessageReject"] = "j";
    MsgType["Allocation"] = "J";
    MsgType["ListCancelRequest"] = "K";
    MsgType["BidRequest"] = "k";
    MsgType["BidResponse"] = "l";
    MsgType["ListExecute"] = "L";
    MsgType["ListStrikePrice"] = "m";
    MsgType["ListStatusRequest"] = "M";
    MsgType["ListStatus"] = "N";
    MsgType["XmlMessage"] = "n";
    MsgType["RegistrationInstructions"] = "o";
    MsgType["AllocationAck"] = "P";
    MsgType["RegistrationInstructionsResponse"] = "p";
    MsgType["OrderMassCancelRequest"] = "q";
    MsgType["DontKnowTrade"] = "Q";
    MsgType["OrderMassCancelReport"] = "r";
    MsgType["QuoteRequest"] = "R";
    MsgType["NewOrderS"] = "s";
    MsgType["Quote"] = "S";
    MsgType["CrossOrderCancelReplaceRequest"] = "t";
    MsgType["SettlementInstructions"] = "T";
    MsgType["CrossOrderCancelRequest"] = "u";
    MsgType["SecurityTypeRequest"] = "v";
    MsgType["MarketDataRequest"] = "V";
    MsgType["SecurityTypes"] = "w";
    MsgType["MarketDataSnapshotFullRefresh"] = "W";
    MsgType["SecurityListRequest"] = "x";
    MsgType["MarketDataIncrementalRefresh"] = "X";
    MsgType["SecurityList"] = "y";
    MsgType["MarketDataRequestReject"] = "Y";
    MsgType["DerivativeSecurityListRequest"] = "z";
    MsgType["QuoteCancel"] = "Z";
})(MsgType = exports.MsgType || (exports.MsgType = {}));
var OrdStatus;
(function (OrdStatus) {
    OrdStatus["New"] = "0";
    OrdStatus["PartiallyFilled"] = "1";
    OrdStatus["Filled"] = "2";
    OrdStatus["DoneForDay"] = "3";
    OrdStatus["Canceled"] = "4";
    OrdStatus["Replaced"] = "5";
    OrdStatus["PendingCancel"] = "6";
    OrdStatus["Stopped"] = "7";
    OrdStatus["Rejected"] = "8";
    OrdStatus["Suspended"] = "9";
    OrdStatus["PendingNew"] = "A";
    OrdStatus["Calculated"] = "B";
    OrdStatus["Expired"] = "C";
    OrdStatus["AcceptedForBidding"] = "D";
    OrdStatus["PendingReplace"] = "E";
})(OrdStatus = exports.OrdStatus || (exports.OrdStatus = {}));
var OrdType;
(function (OrdType) {
    OrdType["Market"] = "1";
    OrdType["Limit"] = "2";
    OrdType["Stop"] = "3";
    OrdType["StopLimit"] = "4";
    OrdType["MarketOnClose"] = "5";
    OrdType["WithOrWithout"] = "6";
    OrdType["LimitOrBetter"] = "7";
    OrdType["LimitWithOrWithout"] = "8";
    OrdType["OnBasis"] = "9";
    OrdType["PreviouslyQuoted"] = "D";
    OrdType["OnClose"] = "A";
    OrdType["ForexC"] = "C";
    OrdType["ForexF"] = "F";
    OrdType["PreviouslyIndicated"] = "E";
    OrdType["ForexG"] = "G";
    OrdType["Funari"] = "I";
    OrdType["MarketIfTouched"] = "J";
    OrdType["MarketWithLeftoverAsLimit"] = "K";
    OrdType["PreviousFundValuationPoint"] = "L";
    OrdType["NextFundValuationPoint"] = "M";
    OrdType["Pegged"] = "P";
    OrdType["LimitOnClose"] = "B";
    OrdType["ForexH"] = "H";
})(OrdType = exports.OrdType || (exports.OrdType = {}));
var PossDupFlag;
(function (PossDupFlag) {
    PossDupFlag["No"] = "N";
    PossDupFlag["Yes"] = "Y";
})(PossDupFlag = exports.PossDupFlag || (exports.PossDupFlag = {}));
var Rule80A;
(function (Rule80A) {
    Rule80A["ProgramOrderNonIndexArbForOtherMember"] = "N";
    Rule80A["ShortExemptTransactionB"] = "B";
    Rule80A["ProgramOrderIndexArbForMemberFirmOrg"] = "D";
    Rule80A["ShortExemptTransactionForPrincipal"] = "E";
    Rule80A["ShortExemptTransactionF"] = "F";
    Rule80A["ShortExemptTransactionH"] = "H";
    Rule80A["IndividualInvestorSingleOrder"] = "I";
    Rule80A["ProgramOrderIndexArbForIndividualCustomer"] = "J";
    Rule80A["ProgramOrderNonIndexArbForIndividualCustomer"] = "K";
    Rule80A["ProgramOrderIndexArbForOtherMember"] = "M";
    Rule80A["AgencySingleOrder"] = "A";
    Rule80A["ProprietaryTransactionsForCompetingMarketMakerThatIsAffiliatedWithTheClearingMember"] = "O";
    Rule80A["Principal"] = "P";
    Rule80A["TransactionsForTheAccountOfANonMemberCompetingMarketMaker"] = "R";
    Rule80A["SpecialistTrades"] = "S";
    Rule80A["TransactionsForTheAccountOfAnUnaffiliatedMembersCompetingMarketMaker"] = "T";
    Rule80A["ProgramOrderIndexArbForOtherAgency"] = "U";
    Rule80A["AllOtherOrdersAsAgentForOtherMember"] = "W";
    Rule80A["ShortExemptTransactionForMemberCompetingMarketMakerNotAffiliatedWithTheFirmClearingTheTrade"] = "X";
    Rule80A["ProgramOrderNonIndexArbForOtherAgency"] = "Y";
    Rule80A["ShortExemptTransactionForNonMemberCompetingMarketMaker"] = "Z";
    Rule80A["ShortExemptTransactionForMemberCompetingMarketMakerAffiliatedWithTheFirmClearingTheTrade"] = "L";
    Rule80A["ProgramOrderNonIndexArbForMemberFirmOrg"] = "C";
})(Rule80A = exports.Rule80A || (exports.Rule80A = {}));
var Side;
(function (Side) {
    Side["Buy"] = "1";
    Side["Sell"] = "2";
    Side["BuyMinus"] = "3";
    Side["SellPlus"] = "4";
    Side["SellShort"] = "5";
    Side["SellShortExempt"] = "6";
    Side["Undisclosed"] = "7";
    Side["Cross"] = "8";
    Side["CrossShort"] = "9";
    Side["AsDefined"] = "B";
    Side["Opposite"] = "C";
    Side["CrossShortExempt"] = "A";
})(Side = exports.Side || (exports.Side = {}));
var TimeInForce;
(function (TimeInForce) {
    TimeInForce["Day"] = "0";
    TimeInForce["GoodTillCancel"] = "1";
    TimeInForce["AtTheOpening"] = "2";
    TimeInForce["ImmediateOrCancel"] = "3";
    TimeInForce["FillOrKill"] = "4";
    TimeInForce["GoodTillCrossing"] = "5";
    TimeInForce["GoodTillDate"] = "6";
    TimeInForce["AtTheClose"] = "7";
})(TimeInForce = exports.TimeInForce || (exports.TimeInForce = {}));
var Urgency;
(function (Urgency) {
    Urgency["Normal"] = "0";
    Urgency["Flash"] = "1";
    Urgency["Background"] = "2";
})(Urgency = exports.Urgency || (exports.Urgency = {}));
var SettlmntTyp;
(function (SettlmntTyp) {
    SettlmntTyp["Regular"] = "0";
    SettlmntTyp["Cash"] = "1";
    SettlmntTyp["NextDay"] = "2";
    SettlmntTyp["TPlus2"] = "3";
    SettlmntTyp["TPlus3"] = "4";
    SettlmntTyp["TPlus4"] = "5";
    SettlmntTyp["Future"] = "6";
    SettlmntTyp["WhenAndIfIssued"] = "7";
    SettlmntTyp["SellersOption"] = "8";
    SettlmntTyp["TPlus5"] = "9";
    SettlmntTyp["TPlus1"] = "A";
})(SettlmntTyp = exports.SettlmntTyp || (exports.SettlmntTyp = {}));
var AllocTransType;
(function (AllocTransType) {
    AllocTransType["New"] = "0";
    AllocTransType["Replace"] = "1";
    AllocTransType["Cancel"] = "2";
    AllocTransType["Preliminary"] = "3";
    AllocTransType["Calculated"] = "4";
    AllocTransType["CalculatedWithoutPreliminary"] = "5";
})(AllocTransType = exports.AllocTransType || (exports.AllocTransType = {}));
var PositionEffect;
(function (PositionEffect) {
    PositionEffect["Fifo"] = "F";
    PositionEffect["Rolled"] = "R";
    PositionEffect["Close"] = "C";
    PositionEffect["Open"] = "O";
})(PositionEffect = exports.PositionEffect || (exports.PositionEffect = {}));
var ProcessCode;
(function (ProcessCode) {
    ProcessCode["Regular"] = "0";
    ProcessCode["SoftDollar"] = "1";
    ProcessCode["StepIn"] = "2";
    ProcessCode["StepOut"] = "3";
    ProcessCode["SoftDollarStepIn"] = "4";
    ProcessCode["SoftDollarStepOut"] = "5";
    ProcessCode["PlanSponsor"] = "6";
})(ProcessCode = exports.ProcessCode || (exports.ProcessCode = {}));
var AllocStatus;
(function (AllocStatus) {
    AllocStatus[AllocStatus["Accepted"] = 0] = "Accepted";
    AllocStatus[AllocStatus["Rejected"] = 1] = "Rejected";
    AllocStatus[AllocStatus["PartialAccept"] = 2] = "PartialAccept";
    AllocStatus[AllocStatus["Received"] = 3] = "Received";
})(AllocStatus = exports.AllocStatus || (exports.AllocStatus = {}));
var AllocRejCode;
(function (AllocRejCode) {
    AllocRejCode[AllocRejCode["UnknownAccount"] = 0] = "UnknownAccount";
    AllocRejCode[AllocRejCode["IncorrectQuantity"] = 1] = "IncorrectQuantity";
    AllocRejCode[AllocRejCode["IncorrectAveragePrice"] = 2] = "IncorrectAveragePrice";
    AllocRejCode[AllocRejCode["UnknownExecutingBrokerMnemonic"] = 3] = "UnknownExecutingBrokerMnemonic";
    AllocRejCode[AllocRejCode["CommissionDifference"] = 4] = "CommissionDifference";
    AllocRejCode[AllocRejCode["UnknownOrderid"] = 5] = "UnknownOrderid";
    AllocRejCode[AllocRejCode["UnknownListid"] = 6] = "UnknownListid";
    AllocRejCode[AllocRejCode["Other"] = 7] = "Other";
})(AllocRejCode = exports.AllocRejCode || (exports.AllocRejCode = {}));
var EmailType;
(function (EmailType) {
    EmailType["New"] = "0";
    EmailType["Reply"] = "1";
    EmailType["AdminReply"] = "2";
})(EmailType = exports.EmailType || (exports.EmailType = {}));
var PossResend;
(function (PossResend) {
    PossResend["No"] = "N";
    PossResend["Yes"] = "Y";
})(PossResend = exports.PossResend || (exports.PossResend = {}));
var EncryptMethod;
(function (EncryptMethod) {
    EncryptMethod[EncryptMethod["None"] = 0] = "None";
    EncryptMethod[EncryptMethod["Pkcs"] = 1] = "Pkcs";
    EncryptMethod[EncryptMethod["Des"] = 2] = "Des";
    EncryptMethod[EncryptMethod["PkcsDes"] = 3] = "PkcsDes";
    EncryptMethod[EncryptMethod["PgpDes"] = 4] = "PgpDes";
    EncryptMethod[EncryptMethod["PgpDesMd5"] = 5] = "PgpDesMd5";
    EncryptMethod[EncryptMethod["PemDesMd5"] = 6] = "PemDesMd5";
})(EncryptMethod = exports.EncryptMethod || (exports.EncryptMethod = {}));
var CxlRejReason;
(function (CxlRejReason) {
    CxlRejReason[CxlRejReason["TooLateToCancel"] = 0] = "TooLateToCancel";
    CxlRejReason[CxlRejReason["UnknownOrder"] = 1] = "UnknownOrder";
    CxlRejReason[CxlRejReason["Broker"] = 2] = "Broker";
    CxlRejReason[CxlRejReason["OrderAlreadyInPendingCancelOrPendingReplaceStatus"] = 3] = "OrderAlreadyInPendingCancelOrPendingReplaceStatus";
    CxlRejReason[CxlRejReason["UnableToProcessOrderMassCancelRequest"] = 4] = "UnableToProcessOrderMassCancelRequest";
    CxlRejReason[CxlRejReason["OrigordmodtimeDidNotMatchLastTransacttimeOfOrder"] = 5] = "OrigordmodtimeDidNotMatchLastTransacttimeOfOrder";
    CxlRejReason[CxlRejReason["DuplicateClordidReceived"] = 6] = "DuplicateClordidReceived";
})(CxlRejReason = exports.CxlRejReason || (exports.CxlRejReason = {}));
var OrdRejReason;
(function (OrdRejReason) {
    OrdRejReason[OrdRejReason["Broker"] = 0] = "Broker";
    OrdRejReason[OrdRejReason["UnknownSymbol"] = 1] = "UnknownSymbol";
    OrdRejReason[OrdRejReason["ExchangeClosed"] = 2] = "ExchangeClosed";
    OrdRejReason[OrdRejReason["OrderExceedsLimit"] = 3] = "OrderExceedsLimit";
    OrdRejReason[OrdRejReason["TooLateToEnter"] = 4] = "TooLateToEnter";
    OrdRejReason[OrdRejReason["UnknownOrder"] = 5] = "UnknownOrder";
    OrdRejReason[OrdRejReason["DuplicateOrder"] = 6] = "DuplicateOrder";
    OrdRejReason[OrdRejReason["DuplicateOfAVerballyCommunicatedOrder"] = 7] = "DuplicateOfAVerballyCommunicatedOrder";
    OrdRejReason[OrdRejReason["StaleOrder"] = 8] = "StaleOrder";
    OrdRejReason[OrdRejReason["TradeAlongRequired"] = 9] = "TradeAlongRequired";
    OrdRejReason[OrdRejReason["InvalidInvestorId"] = 10] = "InvalidInvestorId";
    OrdRejReason[OrdRejReason["UnsupportedOrderCharacteristic"] = 11] = "UnsupportedOrderCharacteristic";
    OrdRejReason[OrdRejReason["SurveillenceOption"] = 12] = "SurveillenceOption";
})(OrdRejReason = exports.OrdRejReason || (exports.OrdRejReason = {}));
var IOIQualifier;
(function (IOIQualifier) {
    IOIQualifier["AtTheOpen"] = "O";
    IOIQualifier["CrossingOpportunity"] = "X";
    IOIQualifier["Indication"] = "W";
    IOIQualifier["Versus"] = "V";
    IOIQualifier["ThroughTheDay"] = "T";
    IOIQualifier["PortfolioShown"] = "S";
    IOIQualifier["ReadyToTrade"] = "R";
    IOIQualifier["AllOrNone"] = "A";
    IOIQualifier["TakingAPosition"] = "P";
    IOIQualifier["MoreBehind"] = "M";
    IOIQualifier["Limit"] = "L";
    IOIQualifier["InTouchWith"] = "I";
    IOIQualifier["Vwap"] = "D";
    IOIQualifier["AtTheClose"] = "C";
    IOIQualifier["MarketOnClose"] = "B";
    IOIQualifier["AtTheMarket"] = "Q";
    IOIQualifier["AtTheMidpoint"] = "Y";
    IOIQualifier["PreOpen"] = "Z";
})(IOIQualifier = exports.IOIQualifier || (exports.IOIQualifier = {}));
var ReportToExch;
(function (ReportToExch) {
    ReportToExch["Yes"] = "Y";
    ReportToExch["No"] = "N";
})(ReportToExch = exports.ReportToExch || (exports.ReportToExch = {}));
var LocateReqd;
(function (LocateReqd) {
    LocateReqd["Yes"] = "Y";
    LocateReqd["No"] = "N";
})(LocateReqd = exports.LocateReqd || (exports.LocateReqd = {}));
var ForexReq;
(function (ForexReq) {
    ForexReq["Yes"] = "Y";
    ForexReq["No"] = "N";
})(ForexReq = exports.ForexReq || (exports.ForexReq = {}));
var GapFillFlag;
(function (GapFillFlag) {
    GapFillFlag["Yes"] = "Y";
    GapFillFlag["No"] = "N";
})(GapFillFlag = exports.GapFillFlag || (exports.GapFillFlag = {}));
var DKReason;
(function (DKReason) {
    DKReason["WrongSide"] = "B";
    DKReason["QuantityExceedsOrder"] = "C";
    DKReason["NoMatchingOrder"] = "D";
    DKReason["PriceExceedsLimit"] = "E";
    DKReason["Other"] = "Z";
    DKReason["UnknownSymbol"] = "A";
})(DKReason = exports.DKReason || (exports.DKReason = {}));
var IOINaturalFlag;
(function (IOINaturalFlag) {
    IOINaturalFlag["Yes"] = "Y";
    IOINaturalFlag["No"] = "N";
})(IOINaturalFlag = exports.IOINaturalFlag || (exports.IOINaturalFlag = {}));
var MiscFeeType;
(function (MiscFeeType) {
    MiscFeeType["Regulatory"] = "1";
    MiscFeeType["Tax"] = "2";
    MiscFeeType["LocalCommission"] = "3";
    MiscFeeType["ExchangeFees"] = "4";
    MiscFeeType["Stamp"] = "5";
    MiscFeeType["Levy"] = "6";
    MiscFeeType["Other"] = "7";
    MiscFeeType["Markup"] = "8";
    MiscFeeType["ConsumptionTax"] = "9";
})(MiscFeeType = exports.MiscFeeType || (exports.MiscFeeType = {}));
var ResetSeqNumFlag;
(function (ResetSeqNumFlag) {
    ResetSeqNumFlag["Yes"] = "Y";
    ResetSeqNumFlag["No"] = "N";
})(ResetSeqNumFlag = exports.ResetSeqNumFlag || (exports.ResetSeqNumFlag = {}));
var ExecType;
(function (ExecType) {
    ExecType["New"] = "0";
    ExecType["PartialFill"] = "1";
    ExecType["Fill"] = "2";
    ExecType["DoneForDay"] = "3";
    ExecType["Canceled"] = "4";
    ExecType["Replace"] = "5";
    ExecType["PendingCancel"] = "6";
    ExecType["Stopped"] = "7";
    ExecType["Rejected"] = "8";
    ExecType["Suspended"] = "9";
    ExecType["PendingNew"] = "A";
    ExecType["Calculated"] = "B";
    ExecType["Expired"] = "C";
    ExecType["Restated"] = "D";
    ExecType["PendingReplace"] = "E";
    ExecType["Trade"] = "F";
    ExecType["TradeCorrect"] = "G";
    ExecType["TradeCancel"] = "H";
    ExecType["OrderStatus"] = "I";
})(ExecType = exports.ExecType || (exports.ExecType = {}));
var SettlCurrFxRateCalc;
(function (SettlCurrFxRateCalc) {
    SettlCurrFxRateCalc["Divide"] = "D";
    SettlCurrFxRateCalc["Multiply"] = "M";
})(SettlCurrFxRateCalc = exports.SettlCurrFxRateCalc || (exports.SettlCurrFxRateCalc = {}));
var SettlInstMode;
(function (SettlInstMode) {
    SettlInstMode["Default"] = "0";
    SettlInstMode["StandingInstructionsProvided"] = "1";
    SettlInstMode["SpecificAllocationAccountOverriding"] = "2";
    SettlInstMode["SpecificAllocationAccountStanding"] = "3";
    SettlInstMode["SpecificOrderForASingleAccount"] = "4";
})(SettlInstMode = exports.SettlInstMode || (exports.SettlInstMode = {}));
var SettlInstTransType;
(function (SettlInstTransType) {
    SettlInstTransType["New"] = "N";
    SettlInstTransType["Replace"] = "R";
    SettlInstTransType["Cancel"] = "C";
})(SettlInstTransType = exports.SettlInstTransType || (exports.SettlInstTransType = {}));
var SettlInstSource;
(function (SettlInstSource) {
    SettlInstSource["BrokersInstructions"] = "1";
    SettlInstSource["InstitutionsInstructions"] = "2";
    SettlInstSource["Investor"] = "3";
})(SettlInstSource = exports.SettlInstSource || (exports.SettlInstSource = {}));
var SecurityType;
(function (SecurityType) {
    SecurityType["CommercialPaper"] = "CP";
    SecurityType["VariableRateDemandNote"] = "VRDN";
    SecurityType["PlazosFijos"] = "PZFJ";
    SecurityType["PromissoryNote"] = "PN";
    SecurityType["Overnight"] = "ONITE";
    SecurityType["MediumTermNotes"] = "MTN";
    SecurityType["TaxExemptCommercialPaper"] = "TECP";
    SecurityType["AmendedRestated"] = "AMENDED";
    SecurityType["BridgeLoan"] = "BRIDGE";
    SecurityType["LetterOfCredit"] = "LOFC";
    SecurityType["SwingLineFacility"] = "SWING";
    SecurityType["DebtorInPossession"] = "DINP";
    SecurityType["Defaulted"] = "DEFLTED";
    SecurityType["Withdrawn"] = "WITHDRN";
    SecurityType["LiquidityNote"] = "LQN";
    SecurityType["Matured"] = "MATURED";
    SecurityType["DepositNotes"] = "DN";
    SecurityType["Retired"] = "RETIRED";
    SecurityType["BankersAcceptance"] = "BA";
    SecurityType["BankNotes"] = "BN";
    SecurityType["BillOfExchanges"] = "BOX";
    SecurityType["CertificateOfDeposit"] = "CD";
    SecurityType["CallLoans"] = "CL";
    SecurityType["Replaced"] = "REPLACD";
    SecurityType["MandatoryTender"] = "MT";
    SecurityType["RevolverTermLoan"] = "RVLVTRM";
    SecurityType["MortgagePrivatePlacement"] = "MPP";
    SecurityType["ShortTermLoanNote"] = "STN";
    SecurityType["MiscellaneousPassThrough"] = "MPT";
    SecurityType["ToBeAnnounced"] = "TBA";
    SecurityType["OtherAnticipationNotesBanGanEtc"] = "AN";
    SecurityType["MortgageInterestOnly"] = "MIO";
    SecurityType["CertificateOfParticipation"] = "COFP";
    SecurityType["MortgageBackedSecurities"] = "MBS";
    SecurityType["RevenueBonds"] = "REV";
    SecurityType["SpecialAssessment"] = "SPCLA";
    SecurityType["SpecialObligation"] = "SPCLO";
    SecurityType["SpecialTax"] = "SPCLT";
    SecurityType["TaxAnticipationNote"] = "TAN";
    SecurityType["TaxAllocation"] = "TAXA";
    SecurityType["CertificateOfObligation"] = "COFO";
    SecurityType["TimeDeposit"] = "TD";
    SecurityType["GeneralObligationBonds"] = "GO";
    SecurityType["WildcardEntry"] = "?";
    SecurityType["Warrant"] = "WAR";
    SecurityType["MutualFund"] = "MF";
    SecurityType["MultiLegInstrument"] = "MLEG";
    SecurityType["TaxRevenueAnticipationNote"] = "TRAN";
    SecurityType["MortgagePrincipalOnly"] = "MPO";
    SecurityType["RepurchaseAgreement"] = "RP";
    SecurityType["NoSecurityType"] = "NONE";
    SecurityType["ExtendedCommNote"] = "XCN";
    SecurityType["AgencyPools"] = "POOL";
    SecurityType["AssetBackedSecurities"] = "ABS";
    SecurityType["CorpMortgageBackedSecurities"] = "CMBS";
    SecurityType["CollateralizedMortgageObligation"] = "CMO";
    SecurityType["IoetteMortgage"] = "IET";
    SecurityType["ReverseRepurchaseAgreement"] = "RVRP";
    SecurityType["ForeignExchangeContract"] = "FOR";
    SecurityType["RevenueAnticipationNote"] = "RAN";
    SecurityType["RevolverLoan"] = "RVLV";
    SecurityType["FederalAgencyCoupon"] = "FAC";
    SecurityType["FederalAgencyDiscountNote"] = "FADN";
    SecurityType["PrivateExportFunding"] = "PEF";
    SecurityType["CorporateBond"] = "CORP";
    SecurityType["CorporatePrivatePlacement"] = "CPP";
    SecurityType["ConvertibleBond"] = "CB";
    SecurityType["DualCurrency"] = "DUAL";
    SecurityType["IndexedLinked"] = "XLINKD";
    SecurityType["YankeeCorporateBond"] = "YANK";
    SecurityType["CommonStock"] = "CS";
    SecurityType["PreferredStock"] = "PS";
    SecurityType["BradyBond"] = "BRADY";
    SecurityType["UsTreasuryBond"] = "TBOND";
    SecurityType["InterestStripFromAnyBondOrNote"] = "TINT";
    SecurityType["TreasuryInflationProtectedSecurities"] = "TIPS";
    SecurityType["PrincipalStripOfACallableBondOrNote"] = "TCAL";
    SecurityType["PrincipalStripFromANonCallableBondOrNote"] = "TPRN";
    SecurityType["UsTreasuryNoteBond"] = "UST";
    SecurityType["UsTreasuryBill"] = "USTB";
    SecurityType["TermLoan"] = "TERM";
    SecurityType["StructuredNotes"] = "STRUCT";
})(SecurityType = exports.SecurityType || (exports.SecurityType = {}));
var StandInstDbType;
(function (StandInstDbType) {
    StandInstDbType[StandInstDbType["Other"] = 0] = "Other";
    StandInstDbType[StandInstDbType["DtcSid"] = 1] = "DtcSid";
    StandInstDbType[StandInstDbType["ThomsonAlert"] = 2] = "ThomsonAlert";
    StandInstDbType[StandInstDbType["AGlobalCustodian"] = 3] = "AGlobalCustodian";
})(StandInstDbType = exports.StandInstDbType || (exports.StandInstDbType = {}));
var SettlDeliveryType;
(function (SettlDeliveryType) {
    SettlDeliveryType[SettlDeliveryType["VersusPayment"] = 0] = "VersusPayment";
    SettlDeliveryType[SettlDeliveryType["Free"] = 1] = "Free";
})(SettlDeliveryType = exports.SettlDeliveryType || (exports.SettlDeliveryType = {}));
var AllocLinkType;
(function (AllocLinkType) {
    AllocLinkType[AllocLinkType["FXNetting"] = 0] = "FXNetting";
    AllocLinkType[AllocLinkType["FXSwap"] = 1] = "FXSwap";
})(AllocLinkType = exports.AllocLinkType || (exports.AllocLinkType = {}));
var CoveredOrUncovered;
(function (CoveredOrUncovered) {
    CoveredOrUncovered[CoveredOrUncovered["Covered"] = 0] = "Covered";
    CoveredOrUncovered[CoveredOrUncovered["Uncovered"] = 1] = "Uncovered";
})(CoveredOrUncovered = exports.CoveredOrUncovered || (exports.CoveredOrUncovered = {}));
var NotifyBrokerOfCredit;
(function (NotifyBrokerOfCredit) {
    NotifyBrokerOfCredit["No"] = "N";
    NotifyBrokerOfCredit["Yes"] = "Y";
})(NotifyBrokerOfCredit = exports.NotifyBrokerOfCredit || (exports.NotifyBrokerOfCredit = {}));
var AllocHandlInst;
(function (AllocHandlInst) {
    AllocHandlInst[AllocHandlInst["Match"] = 1] = "Match";
    AllocHandlInst[AllocHandlInst["Forward"] = 2] = "Forward";
    AllocHandlInst[AllocHandlInst["ForwardAndMatch"] = 3] = "ForwardAndMatch";
})(AllocHandlInst = exports.AllocHandlInst || (exports.AllocHandlInst = {}));
var RoutingType;
(function (RoutingType) {
    RoutingType[RoutingType["TargetFirm"] = 1] = "TargetFirm";
    RoutingType[RoutingType["TargetList"] = 2] = "TargetList";
    RoutingType[RoutingType["BlockFirm"] = 3] = "BlockFirm";
    RoutingType[RoutingType["BlockList"] = 4] = "BlockList";
})(RoutingType = exports.RoutingType || (exports.RoutingType = {}));
var Benchmark;
(function (Benchmark) {
    Benchmark["Curve"] = "1";
    Benchmark["E5Yr"] = "2";
    Benchmark["Old5"] = "3";
    Benchmark["E10Yr"] = "4";
    Benchmark["Old10"] = "5";
    Benchmark["E30Yr"] = "6";
    Benchmark["Old30"] = "7";
    Benchmark["E3MoLibor"] = "8";
    Benchmark["E6MoLibor"] = "9";
})(Benchmark = exports.Benchmark || (exports.Benchmark = {}));
var BenchmarkCurveName;
(function (BenchmarkCurveName) {
    BenchmarkCurveName["Swap"] = "SWAP";
    BenchmarkCurveName["Libid"] = "LIBID";
    BenchmarkCurveName["Other"] = "OTHER";
    BenchmarkCurveName["Treasury"] = "Treasury";
    BenchmarkCurveName["Euribor"] = "Euribor";
    BenchmarkCurveName["Pfandbriefe"] = "Pfandbriefe";
    BenchmarkCurveName["Futureswap"] = "FutureSWAP";
    BenchmarkCurveName["Muniaaa"] = "MuniAAA";
    BenchmarkCurveName["Libor"] = "LIBOR";
})(BenchmarkCurveName = exports.BenchmarkCurveName || (exports.BenchmarkCurveName = {}));
var StipulationType;
(function (StipulationType) {
    StipulationType["AbsolutePrepaymentSpeed"] = "ABS";
    StipulationType["WeightedAverageLoanAge"] = "WALA";
    StipulationType["WeightedAverageMaturity"] = "WAM";
    StipulationType["ConstantPrepaymentRate"] = "CPR";
    StipulationType["FinalCprOfHomeEquityPrepaymentCurve"] = "HEP";
    StipulationType["WeightedAverageLife"] = "WAL";
    StipulationType["OfManufacturedHousingPrepaymentCurve"] = "MHP";
    StipulationType["SingleMonthlyMortality"] = "SMM";
    StipulationType["MonthlyPrepaymentRate"] = "MPR";
    StipulationType["OfBmaPrepaymentCurve"] = "PSA";
    StipulationType["OfProspectusPrepaymentCurve"] = "PPC";
    StipulationType["ConstantPrepaymentPenalty"] = "CPP";
    StipulationType["LotVariance"] = "LOTVAR";
    StipulationType["ConstantPrepaymentYield"] = "CPY";
    StipulationType["WeightedAverageCoupon"] = "WAC";
    StipulationType["YearOfIssue"] = "ISSUE";
    StipulationType["MaturityYear"] = "MAT";
    StipulationType["NumberOfPieces"] = "PIECES";
    StipulationType["PoolsMaximum"] = "PMAX";
    StipulationType["PoolsPerMillion"] = "PPM";
    StipulationType["PoolsPerLot"] = "PPL";
    StipulationType["PoolsPerTrade"] = "PPT";
    StipulationType["ProductionYear"] = "PROD";
    StipulationType["TradeVariance"] = "TRDVAR";
    StipulationType["Geographics"] = "GEOG";
})(StipulationType = exports.StipulationType || (exports.StipulationType = {}));
var YieldType;
(function (YieldType) {
    YieldType["TrueYieldTheYieldCalculatedWithCouponDatesMovedFromAWeekendOrHolidayToTheNextValidSettlementDate"] = "TRUE";
    YieldType["PreviousCloseYieldTheYieldOfABondBasedOnTheClosingPrice1DayAgo"] = "PREVCLOSE";
    YieldType["YieldToLongestAverage"] = "LONGEST";
    YieldType["YieldToLongestAverageLifeTheYieldAssumingOnlyMandatorySinksAreTakenThisResultsInALowerPaydownOfDebtTheYieldIsThenCalculatedToTheFinalPaymentDate"] = "LONGAVGLIFE";
    YieldType["YieldToMaturityTheYieldOfABondToItsMaturityDate"] = "MATURITY";
    YieldType["MarkToMarketYieldAnAdjustmentInTheValuationOfASecuritiesPortfolioToReflectTheCurrentMarketValuesOfTheRespectiveSecuritiesInThePortfolio"] = "MARK";
    YieldType["OpenAverageYieldTheAverageYieldOfTheRespectiveSecuritiesInThePortfolio"] = "OPENAVG";
    YieldType["YieldToNextPutTheYieldToTheDateAtWhichTheBondHolderCanNextPutTheBondToTheIssuer"] = "PUT";
    YieldType["ProceedsYieldTheCdEquivalentYieldWhenTheRemainingTimeToMaturityIsLessThanTwoYears"] = "PROCEEDS";
    YieldType["SemiAnnualYieldTheYieldOfABondWhoseCouponPaymentsAreReinvestedSemiAnnually"] = "SEMIANNUAL";
    YieldType["YieldToShortestAverageLifeSameAsAvglifeAbove"] = "SHORTAVGLIFE";
    YieldType["YieldToShortestAverage"] = "SHORTEST";
    YieldType["SimpleYieldTheYieldOfABondAssumingNoReinvestmentOfCouponPayments"] = "SIMPLE";
    YieldType["YieldToTenderDateTheYieldOnAMunicipalBondToItsMandatoryTenderDate"] = "TENDER";
    YieldType["YieldValueOf132TheAmountThatTheYieldWillChangeForA132ndChangeInPrice"] = "VALUE1/32";
    YieldType["YieldToWorstConventionTheLowestYieldToAllPossibleRedemptionDateScenarios"] = "WORST";
    YieldType["TaxEquivalentYieldTheAfterTaxYieldGrossedUpByTheMaximumFederalTaxRateOf396ForComparisonToTaxableYields"] = "TAXEQUIV";
    YieldType["AnnualYieldTheAnnualInterestOrDividendIncomeAnInvestmentEarnsExpressedAsAPercentageOfTheInvestmentsTotalValue"] = "ANNUAL";
    YieldType["ClosingYieldMostRecentYearTheYieldOfABondBasedOnTheClosingPriceAsOfTheMostRecentYearsEnd"] = "LASTYEAR";
    YieldType["YieldToNextRefund"] = "NEXTREFUND";
    YieldType["AfterTaxYield"] = "AFTERTAX";
    YieldType["YieldAtIssue"] = "ATISSUE";
    YieldType["YieldToAverageLifeTheYieldAssumingThatAllSinks"] = "AVGLIFE";
    YieldType["YieldToAverageMaturityTheYieldAchievedBySubstitutingABondsAverageMaturityForTheIssuesFinalMaturityDate"] = "AVGMATURITY";
    YieldType["BookYieldTheYieldOfASecurityCalculatedByUsingItsBookValueInsteadOfTheCurrentMarketPriceThisTermIsTypicallyUsedInTheUsDomesticMarket"] = "BOOK";
    YieldType["YieldToNextCallTheYieldOfABondToTheNextPossibleCallDate"] = "CALL";
    YieldType["YieldChangeSinceCloseTheChangeInTheYieldSinceThePreviousDaysClosingYield"] = "CHANGE";
    YieldType["CompoundYieldTheYieldOfCertainJapaneseBondsBasedOnItsPriceCertainJapaneseBondsHaveIrregularFirstOrLastCouponsAndTheYieldIsCalculatedCompoundForTheseIrregularPeriods"] = "COMPOUND";
    YieldType["CurrentYieldAnnualInterestOnABondDividedByTheMarketValueTheActualIncomeRateOfReturnAsOpposedToTheCouponRateExpressedAsAPercentage"] = "CURRENT";
    YieldType["TrueGrossYieldYieldCalculatedUsingThePriceIncludingAccruedInterestWhereCouponDatesAreMovedFromHolidaysAndWeekendsToTheNextTradingDay"] = "GROSS";
    YieldType["GovernmentEquivalentYieldAskYieldBasedOnSemiAnnualCouponsCompoundingInAllPeriodsAndActualActualCalendar"] = "GOVTEQUIV";
    YieldType["YieldWithInflationAssumptionBasedOnPriceTheReturnAnInvestorWouldRequireOnANormalBondThatWouldMakeTheRealReturnEqualToThatOfTheInflationIndexedBondAssumingAConstantInflationRate"] = "INFLATION";
    YieldType["InverseFloaterBondYieldInverseFloaterSemiAnnualBondEquivalentRate"] = "INVERSEFLOATER";
    YieldType["ClosingYieldMostRecentQuarterTheYieldOfABondBasedOnTheClosingPriceAsOfTheMostRecentQuartersEnd"] = "LASTQUARTER";
    YieldType["MostRecentClosingYieldTheLastAvailableYieldStoredInHistoryComputedUsingPrice"] = "LASTCLOSE";
    YieldType["ClosingYieldMostRecentMonthTheYieldOfABondBasedOnTheClosingPriceAsOfTheMostRecentMonthsEnd"] = "LASTMONTH";
    YieldType["ClosingYieldTheYieldOfABondBasedOnTheClosingPrice"] = "CLOSE";
})(YieldType = exports.YieldType || (exports.YieldType = {}));
var TradedFlatSwitch;
(function (TradedFlatSwitch) {
    TradedFlatSwitch["No"] = "N";
    TradedFlatSwitch["Yes"] = "Y";
})(TradedFlatSwitch = exports.TradedFlatSwitch || (exports.TradedFlatSwitch = {}));
var SubscriptionRequestType;
(function (SubscriptionRequestType) {
    SubscriptionRequestType["Snapshot"] = "0";
    SubscriptionRequestType["SnapshotPlusUpdates"] = "1";
    SubscriptionRequestType["DisablePreviousSnapshotPlusUpdateRequest"] = "2";
})(SubscriptionRequestType = exports.SubscriptionRequestType || (exports.SubscriptionRequestType = {}));
var MDUpdateType;
(function (MDUpdateType) {
    MDUpdateType[MDUpdateType["FullRefresh"] = 0] = "FullRefresh";
    MDUpdateType[MDUpdateType["IncrementalRefresh"] = 1] = "IncrementalRefresh";
})(MDUpdateType = exports.MDUpdateType || (exports.MDUpdateType = {}));
var AggregatedBook;
(function (AggregatedBook) {
    AggregatedBook["Yes"] = "Y";
    AggregatedBook["No"] = "N";
})(AggregatedBook = exports.AggregatedBook || (exports.AggregatedBook = {}));
var MDEntryType;
(function (MDEntryType) {
    MDEntryType["Bid"] = "0";
    MDEntryType["Offer"] = "1";
    MDEntryType["Trade"] = "2";
    MDEntryType["IndexValue"] = "3";
    MDEntryType["OpeningPrice"] = "4";
    MDEntryType["ClosingPrice"] = "5";
    MDEntryType["SettlementPrice"] = "6";
    MDEntryType["TradingSessionHighPrice"] = "7";
    MDEntryType["TradingSessionLowPrice"] = "8";
    MDEntryType["TradingSessionVwapPrice"] = "9";
    MDEntryType["Imbalance"] = "A";
})(MDEntryType = exports.MDEntryType || (exports.MDEntryType = {}));
var TickDirection;
(function (TickDirection) {
    TickDirection["PlusTick"] = "0";
    TickDirection["ZeroPlusTick"] = "1";
    TickDirection["MinusTick"] = "2";
    TickDirection["ZeroMinusTick"] = "3";
})(TickDirection = exports.TickDirection || (exports.TickDirection = {}));
var QuoteCondition;
(function (QuoteCondition) {
    QuoteCondition["Locked"] = "E";
    QuoteCondition["NonFirm"] = "I";
    QuoteCondition["FastTrading"] = "H";
    QuoteCondition["Crossed"] = "F";
    QuoteCondition["ConsolidatedBest"] = "D";
    QuoteCondition["ExchangeBest"] = "C";
    QuoteCondition["Closed"] = "B";
    QuoteCondition["Open"] = "A";
    QuoteCondition["Depth"] = "G";
})(QuoteCondition = exports.QuoteCondition || (exports.QuoteCondition = {}));
var TradeCondition;
(function (TradeCondition) {
    TradeCondition["NextDayTrade"] = "J";
    TradeCondition["Opened"] = "K";
    TradeCondition["Seller"] = "L";
    TradeCondition["AveragePriceTrade"] = "B";
    TradeCondition["Sold"] = "M";
    TradeCondition["Rule155Trade"] = "H";
    TradeCondition["StoppedStock"] = "N";
    TradeCondition["ImbalanceMoreBuyers"] = "P";
    TradeCondition["ImbalanceMoreSellers"] = "Q";
    TradeCondition["OpeningPrice"] = "R";
    TradeCondition["SoldLast"] = "I";
    TradeCondition["Cash"] = "A";
    TradeCondition["CashTrade"] = "C";
    TradeCondition["Opening"] = "E";
    TradeCondition["IntradayTradeDetail"] = "F";
    TradeCondition["Rule127Trade"] = "G";
    TradeCondition["NextDay"] = "D";
})(TradeCondition = exports.TradeCondition || (exports.TradeCondition = {}));
var MDUpdateAction;
(function (MDUpdateAction) {
    MDUpdateAction["New"] = "0";
    MDUpdateAction["Change"] = "1";
    MDUpdateAction["Delete"] = "2";
})(MDUpdateAction = exports.MDUpdateAction || (exports.MDUpdateAction = {}));
var MDReqRejReason;
(function (MDReqRejReason) {
    MDReqRejReason["UnknownSymbol"] = "0";
    MDReqRejReason["DuplicateMdreqid"] = "1";
    MDReqRejReason["InsufficientBandwidth"] = "2";
    MDReqRejReason["InsufficientPermissions"] = "3";
    MDReqRejReason["UnsupportedSubscriptionrequesttype"] = "4";
    MDReqRejReason["UnsupportedMarketdepth"] = "5";
    MDReqRejReason["UnsupportedMdupdatetype"] = "6";
    MDReqRejReason["UnsupportedAggregatedbook"] = "7";
    MDReqRejReason["UnsupportedMdentrytype"] = "8";
    MDReqRejReason["UnsupportedTradingsessionid"] = "9";
    MDReqRejReason["UnsupportedMdimplicitdelete"] = "C";
    MDReqRejReason["UnsupportedOpenclosesettleflag"] = "B";
    MDReqRejReason["UnsupportedScope"] = "A";
})(MDReqRejReason = exports.MDReqRejReason || (exports.MDReqRejReason = {}));
var DeleteReason;
(function (DeleteReason) {
    DeleteReason["Cancelation"] = "0";
    DeleteReason["Error"] = "1";
})(DeleteReason = exports.DeleteReason || (exports.DeleteReason = {}));
var OpenCloseSettleFlag;
(function (OpenCloseSettleFlag) {
    OpenCloseSettleFlag["DailyOpen"] = "0";
    OpenCloseSettleFlag["SessionOpen"] = "1";
    OpenCloseSettleFlag["DeliverySettlementPrice"] = "2";
    OpenCloseSettleFlag["ExpectedPrice"] = "3";
    OpenCloseSettleFlag["PriceFromPreviousBusinessDay"] = "4";
})(OpenCloseSettleFlag = exports.OpenCloseSettleFlag || (exports.OpenCloseSettleFlag = {}));
var FinancialStatus;
(function (FinancialStatus) {
    FinancialStatus["Bankrupt"] = "1";
    FinancialStatus["PendingDelisting"] = "2";
})(FinancialStatus = exports.FinancialStatus || (exports.FinancialStatus = {}));
var CorporateAction;
(function (CorporateAction) {
    CorporateAction["ExDistribution"] = "B";
    CorporateAction["ExInterest"] = "E";
    CorporateAction["ExRights"] = "C";
    CorporateAction["ExDividend"] = "A";
    CorporateAction["New"] = "D";
})(CorporateAction = exports.CorporateAction || (exports.CorporateAction = {}));
var QuoteStatus;
(function (QuoteStatus) {
    QuoteStatus[QuoteStatus["Accepted"] = 0] = "Accepted";
    QuoteStatus[QuoteStatus["CanceledForSymbol"] = 1] = "CanceledForSymbol";
    QuoteStatus[QuoteStatus["CanceledForSecurityType"] = 2] = "CanceledForSecurityType";
    QuoteStatus[QuoteStatus["CanceledForUnderlying"] = 3] = "CanceledForUnderlying";
    QuoteStatus[QuoteStatus["CanceledAll"] = 4] = "CanceledAll";
    QuoteStatus[QuoteStatus["Rejected"] = 5] = "Rejected";
    QuoteStatus[QuoteStatus["RemovedFromMarket"] = 6] = "RemovedFromMarket";
    QuoteStatus[QuoteStatus["Expired"] = 7] = "Expired";
    QuoteStatus[QuoteStatus["Query"] = 8] = "Query";
    QuoteStatus[QuoteStatus["QuoteNotFound"] = 9] = "QuoteNotFound";
    QuoteStatus[QuoteStatus["Pending"] = 10] = "Pending";
})(QuoteStatus = exports.QuoteStatus || (exports.QuoteStatus = {}));
var QuoteCancelType;
(function (QuoteCancelType) {
    QuoteCancelType[QuoteCancelType["CancelForSymbol"] = 1] = "CancelForSymbol";
    QuoteCancelType[QuoteCancelType["CancelForSecurityType"] = 2] = "CancelForSecurityType";
    QuoteCancelType[QuoteCancelType["CancelForUnderlyingSymbol"] = 3] = "CancelForUnderlyingSymbol";
    QuoteCancelType[QuoteCancelType["CancelAllQuotes"] = 4] = "CancelAllQuotes";
})(QuoteCancelType = exports.QuoteCancelType || (exports.QuoteCancelType = {}));
var QuoteRejectReason;
(function (QuoteRejectReason) {
    QuoteRejectReason[QuoteRejectReason["UnknownSymbol"] = 1] = "UnknownSymbol";
    QuoteRejectReason[QuoteRejectReason["Exchange"] = 2] = "Exchange";
    QuoteRejectReason[QuoteRejectReason["QuoteRequestExceedsLimit"] = 3] = "QuoteRequestExceedsLimit";
    QuoteRejectReason[QuoteRejectReason["TooLateToEnter"] = 4] = "TooLateToEnter";
    QuoteRejectReason[QuoteRejectReason["UnknownQuote"] = 5] = "UnknownQuote";
    QuoteRejectReason[QuoteRejectReason["DuplicateQuote"] = 6] = "DuplicateQuote";
    QuoteRejectReason[QuoteRejectReason["InvalidBidAskSpread"] = 7] = "InvalidBidAskSpread";
    QuoteRejectReason[QuoteRejectReason["InvalidPrice"] = 8] = "InvalidPrice";
    QuoteRejectReason[QuoteRejectReason["NotAuthorizedToQuoteSecurity"] = 9] = "NotAuthorizedToQuoteSecurity";
})(QuoteRejectReason = exports.QuoteRejectReason || (exports.QuoteRejectReason = {}));
var QuoteResponseLevel;
(function (QuoteResponseLevel) {
    QuoteResponseLevel[QuoteResponseLevel["NoAcknowledgement"] = 0] = "NoAcknowledgement";
    QuoteResponseLevel[QuoteResponseLevel["AcknowledgeOnlyNegativeOrErroneousQuotes"] = 1] = "AcknowledgeOnlyNegativeOrErroneousQuotes";
    QuoteResponseLevel[QuoteResponseLevel["AcknowledgeEachQuoteMessages"] = 2] = "AcknowledgeEachQuoteMessages";
})(QuoteResponseLevel = exports.QuoteResponseLevel || (exports.QuoteResponseLevel = {}));
var QuoteRequestType;
(function (QuoteRequestType) {
    QuoteRequestType[QuoteRequestType["Manual"] = 1] = "Manual";
    QuoteRequestType[QuoteRequestType["Automatic"] = 2] = "Automatic";
})(QuoteRequestType = exports.QuoteRequestType || (exports.QuoteRequestType = {}));
var SecurityRequestType;
(function (SecurityRequestType) {
    SecurityRequestType[SecurityRequestType["RequestSecurityIdentityAndSpecifications"] = 0] = "RequestSecurityIdentityAndSpecifications";
    SecurityRequestType[SecurityRequestType["RequestSecurityIdentityForTheSpecificationsProvided"] = 1] = "RequestSecurityIdentityForTheSpecificationsProvided";
    SecurityRequestType[SecurityRequestType["RequestListSecurityTypes"] = 2] = "RequestListSecurityTypes";
    SecurityRequestType[SecurityRequestType["RequestListSecurities"] = 3] = "RequestListSecurities";
})(SecurityRequestType = exports.SecurityRequestType || (exports.SecurityRequestType = {}));
var SecurityResponseType;
(function (SecurityResponseType) {
    SecurityResponseType[SecurityResponseType["AcceptSecurityProposalAsIs"] = 1] = "AcceptSecurityProposalAsIs";
    SecurityResponseType[SecurityResponseType["AcceptSecurityProposalWithRevisionsAsIndicatedInTheMessage"] = 2] = "AcceptSecurityProposalWithRevisionsAsIndicatedInTheMessage";
    SecurityResponseType[SecurityResponseType["ListOfSecurityTypesReturnedPerRequest"] = 3] = "ListOfSecurityTypesReturnedPerRequest";
    SecurityResponseType[SecurityResponseType["ListOfSecuritiesReturnedPerRequest"] = 4] = "ListOfSecuritiesReturnedPerRequest";
    SecurityResponseType[SecurityResponseType["RejectSecurityProposal"] = 5] = "RejectSecurityProposal";
    SecurityResponseType[SecurityResponseType["CanNotMatchSelectionCriteria"] = 6] = "CanNotMatchSelectionCriteria";
})(SecurityResponseType = exports.SecurityResponseType || (exports.SecurityResponseType = {}));
var UnsolicitedIndicator;
(function (UnsolicitedIndicator) {
    UnsolicitedIndicator["Yes"] = "Y";
    UnsolicitedIndicator["No"] = "N";
})(UnsolicitedIndicator = exports.UnsolicitedIndicator || (exports.UnsolicitedIndicator = {}));
var SecurityTradingStatus;
(function (SecurityTradingStatus) {
    SecurityTradingStatus[SecurityTradingStatus["OpeningDelay"] = 1] = "OpeningDelay";
    SecurityTradingStatus[SecurityTradingStatus["TradingHalt"] = 2] = "TradingHalt";
    SecurityTradingStatus[SecurityTradingStatus["Resume"] = 3] = "Resume";
    SecurityTradingStatus[SecurityTradingStatus["NoOpenNoResume"] = 4] = "NoOpenNoResume";
    SecurityTradingStatus[SecurityTradingStatus["PriceIndication"] = 5] = "PriceIndication";
    SecurityTradingStatus[SecurityTradingStatus["TradingRangeIndication"] = 6] = "TradingRangeIndication";
    SecurityTradingStatus[SecurityTradingStatus["MarketImbalanceBuy"] = 7] = "MarketImbalanceBuy";
    SecurityTradingStatus[SecurityTradingStatus["MarketImbalanceSell"] = 8] = "MarketImbalanceSell";
    SecurityTradingStatus[SecurityTradingStatus["MarketOnCloseImbalanceBuy"] = 9] = "MarketOnCloseImbalanceBuy";
    SecurityTradingStatus[SecurityTradingStatus["MarketOnCloseImbalanceSell"] = 10] = "MarketOnCloseImbalanceSell";
    SecurityTradingStatus[SecurityTradingStatus["NoMarketImbalance"] = 12] = "NoMarketImbalance";
    SecurityTradingStatus[SecurityTradingStatus["NoMarketOnCloseImbalance"] = 13] = "NoMarketOnCloseImbalance";
    SecurityTradingStatus[SecurityTradingStatus["ItsPreOpening"] = 14] = "ItsPreOpening";
    SecurityTradingStatus[SecurityTradingStatus["NewPriceIndication"] = 15] = "NewPriceIndication";
    SecurityTradingStatus[SecurityTradingStatus["TradeDisseminationTime"] = 16] = "TradeDisseminationTime";
    SecurityTradingStatus[SecurityTradingStatus["ReadyToTrade"] = 17] = "ReadyToTrade";
    SecurityTradingStatus[SecurityTradingStatus["NotAvailableForTrading"] = 18] = "NotAvailableForTrading";
    SecurityTradingStatus[SecurityTradingStatus["NotTradedOnThisMarket"] = 19] = "NotTradedOnThisMarket";
    SecurityTradingStatus[SecurityTradingStatus["UnknownOrInvalid"] = 20] = "UnknownOrInvalid";
    SecurityTradingStatus[SecurityTradingStatus["PreOpen"] = 21] = "PreOpen";
    SecurityTradingStatus[SecurityTradingStatus["OpeningRotation"] = 22] = "OpeningRotation";
    SecurityTradingStatus[SecurityTradingStatus["FastMarket"] = 23] = "FastMarket";
})(SecurityTradingStatus = exports.SecurityTradingStatus || (exports.SecurityTradingStatus = {}));
var HaltReasonChar;
(function (HaltReasonChar) {
    HaltReasonChar["EquipmentChangeover"] = "X";
    HaltReasonChar["AdditionalInformation"] = "M";
    HaltReasonChar["OrderInflux"] = "E";
    HaltReasonChar["NewsPending"] = "P";
    HaltReasonChar["OrderImbalance"] = "I";
    HaltReasonChar["NewsDissemination"] = "D";
})(HaltReasonChar = exports.HaltReasonChar || (exports.HaltReasonChar = {}));
var InViewOfCommon;
(function (InViewOfCommon) {
    InViewOfCommon["Yes"] = "Y";
    InViewOfCommon["No"] = "N";
})(InViewOfCommon = exports.InViewOfCommon || (exports.InViewOfCommon = {}));
var DueToRelated;
(function (DueToRelated) {
    DueToRelated["Yes"] = "Y";
    DueToRelated["No"] = "N";
})(DueToRelated = exports.DueToRelated || (exports.DueToRelated = {}));
var Adjustment;
(function (Adjustment) {
    Adjustment[Adjustment["Cancel"] = 1] = "Cancel";
    Adjustment[Adjustment["Error"] = 2] = "Error";
    Adjustment[Adjustment["Correction"] = 3] = "Correction";
})(Adjustment = exports.Adjustment || (exports.Adjustment = {}));
var TradSesMethod;
(function (TradSesMethod) {
    TradSesMethod[TradSesMethod["Electronic"] = 1] = "Electronic";
    TradSesMethod[TradSesMethod["OpenOutcry"] = 2] = "OpenOutcry";
    TradSesMethod[TradSesMethod["TwoParty"] = 3] = "TwoParty";
})(TradSesMethod = exports.TradSesMethod || (exports.TradSesMethod = {}));
var TradSesMode;
(function (TradSesMode) {
    TradSesMode[TradSesMode["Testing"] = 1] = "Testing";
    TradSesMode[TradSesMode["Simulated"] = 2] = "Simulated";
    TradSesMode[TradSesMode["Production"] = 3] = "Production";
})(TradSesMode = exports.TradSesMode || (exports.TradSesMode = {}));
var TradSesStatus;
(function (TradSesStatus) {
    TradSesStatus[TradSesStatus["Unknown"] = 0] = "Unknown";
    TradSesStatus[TradSesStatus["Halted"] = 1] = "Halted";
    TradSesStatus[TradSesStatus["Open"] = 2] = "Open";
    TradSesStatus[TradSesStatus["Closed"] = 3] = "Closed";
    TradSesStatus[TradSesStatus["PreOpen"] = 4] = "PreOpen";
    TradSesStatus[TradSesStatus["PreClose"] = 5] = "PreClose";
    TradSesStatus[TradSesStatus["RequestRejected"] = 6] = "RequestRejected";
})(TradSesStatus = exports.TradSesStatus || (exports.TradSesStatus = {}));
var MessageEncoding;
(function (MessageEncoding) {
    MessageEncoding["Utf8"] = "UTF-8";
    MessageEncoding["Iso2022Jp"] = "ISO-2022-JP";
    MessageEncoding["EucJp"] = "EUC-JP";
    MessageEncoding["ShiftJis"] = "SHIFT_JIS";
})(MessageEncoding = exports.MessageEncoding || (exports.MessageEncoding = {}));
var SessionRejectReason;
(function (SessionRejectReason) {
    SessionRejectReason[SessionRejectReason["InvalidTagNumber"] = 0] = "InvalidTagNumber";
    SessionRejectReason[SessionRejectReason["RequiredTagMissing"] = 1] = "RequiredTagMissing";
    SessionRejectReason[SessionRejectReason["TagNotDefinedForThisMessageType"] = 2] = "TagNotDefinedForThisMessageType";
    SessionRejectReason[SessionRejectReason["UndefinedTag"] = 3] = "UndefinedTag";
    SessionRejectReason[SessionRejectReason["TagSpecifiedWithoutAValue"] = 4] = "TagSpecifiedWithoutAValue";
    SessionRejectReason[SessionRejectReason["ValueIsIncorrect"] = 5] = "ValueIsIncorrect";
    SessionRejectReason[SessionRejectReason["IncorrectDataFormatForValue"] = 6] = "IncorrectDataFormatForValue";
    SessionRejectReason[SessionRejectReason["DecryptionProblem"] = 7] = "DecryptionProblem";
    SessionRejectReason[SessionRejectReason["SignatureProblem"] = 8] = "SignatureProblem";
    SessionRejectReason[SessionRejectReason["CompidProblem"] = 9] = "CompidProblem";
    SessionRejectReason[SessionRejectReason["SendingtimeAccuracyProblem"] = 10] = "SendingtimeAccuracyProblem";
    SessionRejectReason[SessionRejectReason["InvalidMsgtype"] = 11] = "InvalidMsgtype";
    SessionRejectReason[SessionRejectReason["XmlValidationError"] = 12] = "XmlValidationError";
    SessionRejectReason[SessionRejectReason["TagAppearsMoreThanOnce"] = 13] = "TagAppearsMoreThanOnce";
    SessionRejectReason[SessionRejectReason["TagSpecifiedOutOfRequiredOrder"] = 14] = "TagSpecifiedOutOfRequiredOrder";
    SessionRejectReason[SessionRejectReason["RepeatingGroupFieldsOutOfOrder"] = 15] = "RepeatingGroupFieldsOutOfOrder";
    SessionRejectReason[SessionRejectReason["IncorrectNumingroupCountForRepeatingGroup"] = 16] = "IncorrectNumingroupCountForRepeatingGroup";
    SessionRejectReason[SessionRejectReason["NonDataValueIncludesFieldDelimiter"] = 17] = "NonDataValueIncludesFieldDelimiter";
})(SessionRejectReason = exports.SessionRejectReason || (exports.SessionRejectReason = {}));
var BidRequestTransType;
(function (BidRequestTransType) {
    BidRequestTransType["New"] = "N";
    BidRequestTransType["Cancel"] = "C";
})(BidRequestTransType = exports.BidRequestTransType || (exports.BidRequestTransType = {}));
var SolicitedFlag;
(function (SolicitedFlag) {
    SolicitedFlag["No"] = "N";
    SolicitedFlag["Yes"] = "Y";
})(SolicitedFlag = exports.SolicitedFlag || (exports.SolicitedFlag = {}));
var ExecRestatementReason;
(function (ExecRestatementReason) {
    ExecRestatementReason[ExecRestatementReason["GtCorporateAction"] = 0] = "GtCorporateAction";
    ExecRestatementReason[ExecRestatementReason["GtRenewal"] = 1] = "GtRenewal";
    ExecRestatementReason[ExecRestatementReason["VerbalChange"] = 2] = "VerbalChange";
    ExecRestatementReason[ExecRestatementReason["RepricingOfOrder"] = 3] = "RepricingOfOrder";
    ExecRestatementReason[ExecRestatementReason["BrokerOption"] = 4] = "BrokerOption";
    ExecRestatementReason[ExecRestatementReason["PartialDeclineOfOrderqty"] = 5] = "PartialDeclineOfOrderqty";
    ExecRestatementReason[ExecRestatementReason["CancelOnTradingHalt"] = 6] = "CancelOnTradingHalt";
    ExecRestatementReason[ExecRestatementReason["CancelOnSystemFailure"] = 7] = "CancelOnSystemFailure";
    ExecRestatementReason[ExecRestatementReason["Market"] = 8] = "Market";
})(ExecRestatementReason = exports.ExecRestatementReason || (exports.ExecRestatementReason = {}));
var BusinessRejectReason;
(function (BusinessRejectReason) {
    BusinessRejectReason[BusinessRejectReason["Other"] = 0] = "Other";
    BusinessRejectReason[BusinessRejectReason["UnkownId"] = 1] = "UnkownId";
    BusinessRejectReason[BusinessRejectReason["UnknownSecurity"] = 2] = "UnknownSecurity";
    BusinessRejectReason[BusinessRejectReason["UnsupportedMessageType"] = 3] = "UnsupportedMessageType";
    BusinessRejectReason[BusinessRejectReason["ApplicationNotAvailable"] = 4] = "ApplicationNotAvailable";
    BusinessRejectReason[BusinessRejectReason["ConditionallyRequiredFieldMissing"] = 5] = "ConditionallyRequiredFieldMissing";
    BusinessRejectReason[BusinessRejectReason["NotAuthorized"] = 6] = "NotAuthorized";
    BusinessRejectReason[BusinessRejectReason["DelivertoFirmNotAvailableAtThisTime"] = 7] = "DelivertoFirmNotAvailableAtThisTime";
})(BusinessRejectReason = exports.BusinessRejectReason || (exports.BusinessRejectReason = {}));
var MsgDirection;
(function (MsgDirection) {
    MsgDirection["Send"] = "S";
    MsgDirection["Receive"] = "R";
})(MsgDirection = exports.MsgDirection || (exports.MsgDirection = {}));
var DiscretionInst;
(function (DiscretionInst) {
    DiscretionInst["RelatedToDisplayedPrice"] = "0";
    DiscretionInst["RelatedToMarketPrice"] = "1";
    DiscretionInst["RelatedToPrimaryPrice"] = "2";
    DiscretionInst["RelatedToLocalPrimaryPrice"] = "3";
    DiscretionInst["RelatedToMidpointPrice"] = "4";
    DiscretionInst["RelatedToLastTradePrice"] = "5";
})(DiscretionInst = exports.DiscretionInst || (exports.DiscretionInst = {}));
var BidType;
(function (BidType) {
    BidType[BidType["NonDisclosedStyle"] = 1] = "NonDisclosedStyle";
    BidType[BidType["DisclosedStyle"] = 2] = "DisclosedStyle";
    BidType[BidType["NoBiddingProcess"] = 3] = "NoBiddingProcess";
})(BidType = exports.BidType || (exports.BidType = {}));
var BidDescriptorType;
(function (BidDescriptorType) {
    BidDescriptorType[BidDescriptorType["Sector"] = 1] = "Sector";
    BidDescriptorType[BidDescriptorType["Country"] = 2] = "Country";
    BidDescriptorType[BidDescriptorType["Index"] = 3] = "Index";
})(BidDescriptorType = exports.BidDescriptorType || (exports.BidDescriptorType = {}));
var SideValueInd;
(function (SideValueInd) {
    SideValueInd[SideValueInd["Sidevalue1"] = 1] = "Sidevalue1";
    SideValueInd[SideValueInd["Sidevalue2"] = 2] = "Sidevalue2";
})(SideValueInd = exports.SideValueInd || (exports.SideValueInd = {}));
var LiquidityIndType;
(function (LiquidityIndType) {
    LiquidityIndType[LiquidityIndType["E5DayMovingAverage"] = 1] = "E5DayMovingAverage";
    LiquidityIndType[LiquidityIndType["E20DayMovingAverage"] = 2] = "E20DayMovingAverage";
    LiquidityIndType[LiquidityIndType["NormalMarketSize"] = 3] = "NormalMarketSize";
    LiquidityIndType[LiquidityIndType["Other"] = 4] = "Other";
})(LiquidityIndType = exports.LiquidityIndType || (exports.LiquidityIndType = {}));
var ExchangeForPhysical;
(function (ExchangeForPhysical) {
    ExchangeForPhysical["No"] = "N";
    ExchangeForPhysical["Yes"] = "Y";
})(ExchangeForPhysical = exports.ExchangeForPhysical || (exports.ExchangeForPhysical = {}));
var ProgRptReqs;
(function (ProgRptReqs) {
    ProgRptReqs[ProgRptReqs["BuysideExplicitlyRequestsStatusUsingStatusrequest"] = 1] = "BuysideExplicitlyRequestsStatusUsingStatusrequest";
    ProgRptReqs[ProgRptReqs["SellsidePeriodicallySendsStatusUsingListstatusPeriodOptionallySpecifiedInProgressperiod"] = 2] = "SellsidePeriodicallySendsStatusUsingListstatusPeriodOptionallySpecifiedInProgressperiod";
    ProgRptReqs[ProgRptReqs["RealTimeExecutionReports"] = 3] = "RealTimeExecutionReports";
})(ProgRptReqs = exports.ProgRptReqs || (exports.ProgRptReqs = {}));
var IncTaxInd;
(function (IncTaxInd) {
    IncTaxInd[IncTaxInd["Net"] = 1] = "Net";
    IncTaxInd[IncTaxInd["Gross"] = 2] = "Gross";
})(IncTaxInd = exports.IncTaxInd || (exports.IncTaxInd = {}));
var TradeType;
(function (TradeType) {
    TradeType["VwapGuarantee"] = "G";
    TradeType["Agency"] = "A";
    TradeType["GuaranteedClose"] = "J";
    TradeType["RiskTrade"] = "R";
})(TradeType = exports.TradeType || (exports.TradeType = {}));
var BasisPxType;
(function (BasisPxType) {
    BasisPxType["ClosingPriceAtMorningSession"] = "2";
    BasisPxType["ClosingPrice"] = "3";
    BasisPxType["CurrentPrice"] = "4";
    BasisPxType["Sq"] = "5";
    BasisPxType["VwapThroughADay"] = "6";
    BasisPxType["VwapThroughAMorningSession"] = "7";
    BasisPxType["VwapThroughAnAfternoonSession"] = "8";
    BasisPxType["VwapThroughADayExceptYori"] = "9";
    BasisPxType["Open"] = "D";
    BasisPxType["Others"] = "Z";
    BasisPxType["Strike"] = "C";
    BasisPxType["VwapThroughAnAfternoonSessionExceptYori"] = "B";
    BasisPxType["VwapThroughAMorningSessionExceptYori"] = "A";
})(BasisPxType = exports.BasisPxType || (exports.BasisPxType = {}));
var PriceType;
(function (PriceType) {
    PriceType[PriceType["Percentage"] = 1] = "Percentage";
    PriceType[PriceType["PerShare"] = 2] = "PerShare";
    PriceType[PriceType["FixedAmount"] = 3] = "FixedAmount";
    PriceType[PriceType["Discount"] = 4] = "Discount";
    PriceType[PriceType["Premium"] = 5] = "Premium";
    PriceType[PriceType["BasisPointsRelativeToBenchmark"] = 6] = "BasisPointsRelativeToBenchmark";
    PriceType[PriceType["TedPrice"] = 7] = "TedPrice";
    PriceType[PriceType["TedYield"] = 8] = "TedYield";
})(PriceType = exports.PriceType || (exports.PriceType = {}));
var GTBookingInst;
(function (GTBookingInst) {
    GTBookingInst[GTBookingInst["BookOutAllTradesOnDayOfExecution"] = 0] = "BookOutAllTradesOnDayOfExecution";
    GTBookingInst[GTBookingInst["AccumulateExecutionsUntilOrderIsFilledOrExpires"] = 1] = "AccumulateExecutionsUntilOrderIsFilledOrExpires";
    GTBookingInst[GTBookingInst["AccumulateUntilVerballyNotifiedOtherwise"] = 2] = "AccumulateUntilVerballyNotifiedOtherwise";
})(GTBookingInst = exports.GTBookingInst || (exports.GTBookingInst = {}));
var ListStatusType;
(function (ListStatusType) {
    ListStatusType[ListStatusType["Ack"] = 1] = "Ack";
    ListStatusType[ListStatusType["Response"] = 2] = "Response";
    ListStatusType[ListStatusType["Timed"] = 3] = "Timed";
    ListStatusType[ListStatusType["Execstarted"] = 4] = "Execstarted";
    ListStatusType[ListStatusType["Alldone"] = 5] = "Alldone";
    ListStatusType[ListStatusType["Alert"] = 6] = "Alert";
})(ListStatusType = exports.ListStatusType || (exports.ListStatusType = {}));
var NetGrossInd;
(function (NetGrossInd) {
    NetGrossInd[NetGrossInd["Net"] = 1] = "Net";
    NetGrossInd[NetGrossInd["Gross"] = 2] = "Gross";
})(NetGrossInd = exports.NetGrossInd || (exports.NetGrossInd = {}));
var ListOrderStatus;
(function (ListOrderStatus) {
    ListOrderStatus[ListOrderStatus["Inbiddingprocess"] = 1] = "Inbiddingprocess";
    ListOrderStatus[ListOrderStatus["Receivedforexecution"] = 2] = "Receivedforexecution";
    ListOrderStatus[ListOrderStatus["Executing"] = 3] = "Executing";
    ListOrderStatus[ListOrderStatus["Canceling"] = 4] = "Canceling";
    ListOrderStatus[ListOrderStatus["Alert"] = 5] = "Alert";
    ListOrderStatus[ListOrderStatus["AllDone"] = 6] = "AllDone";
    ListOrderStatus[ListOrderStatus["Reject"] = 7] = "Reject";
})(ListOrderStatus = exports.ListOrderStatus || (exports.ListOrderStatus = {}));
var ListExecInstType;
(function (ListExecInstType) {
    ListExecInstType["Immediate"] = "1";
    ListExecInstType["WaitForExecuteInstruction"] = "2";
    ListExecInstType["ExchangeSwitchCivOrderSellDriven"] = "3";
    ListExecInstType["ExchangeSwitchCivOrderBuyDrivenCashTopUp"] = "4";
    ListExecInstType["ExchangeSwitchCivOrderBuyDrivenCashWithdraw"] = "5";
})(ListExecInstType = exports.ListExecInstType || (exports.ListExecInstType = {}));
var CxlRejResponseTo;
(function (CxlRejResponseTo) {
    CxlRejResponseTo["OrderCancelRequest"] = "1";
    CxlRejResponseTo["OrderCancelReplaceRequest"] = "2";
})(CxlRejResponseTo = exports.CxlRejResponseTo || (exports.CxlRejResponseTo = {}));
var MultiLegReportingType;
(function (MultiLegReportingType) {
    MultiLegReportingType["SingleSecurity"] = "1";
    MultiLegReportingType["IndividualLegOfAMultiLegSecurity"] = "2";
    MultiLegReportingType["MultiLegSecurity"] = "3";
})(MultiLegReportingType = exports.MultiLegReportingType || (exports.MultiLegReportingType = {}));
var PartyIDSource;
(function (PartyIDSource) {
    PartyIDSource["KoreanInvestorId"] = "1";
    PartyIDSource["TaiwaneseQualifiedForeignInvestorIdQfii"] = "2";
    PartyIDSource["TaiwaneseTradingAccount"] = "3";
    PartyIDSource["MalaysianCentralDepository"] = "4";
    PartyIDSource["ChineseBShare"] = "5";
    PartyIDSource["UkNationalInsuranceOrPensionNumber"] = "6";
    PartyIDSource["UsSocialSecurityNumber"] = "7";
    PartyIDSource["UsEmployerIdentificationNumber"] = "8";
    PartyIDSource["AustralianBusinessNumber"] = "9";
    PartyIDSource["AustralianTaxFileNumber"] = "A";
    PartyIDSource["IsoCountryCode"] = "E";
    PartyIDSource["Bic"] = "B";
    PartyIDSource["ProprietaryCustomCode"] = "D";
    PartyIDSource["SettlementEntityLocation"] = "F";
    PartyIDSource["GenerallyAcceptedMarketParticipantIdentifier"] = "C";
})(PartyIDSource = exports.PartyIDSource || (exports.PartyIDSource = {}));
var PartyRole;
(function (PartyRole) {
    PartyRole[PartyRole["ExecutingFirm"] = 1] = "ExecutingFirm";
    PartyRole[PartyRole["BrokerOfCredit"] = 2] = "BrokerOfCredit";
    PartyRole[PartyRole["ClientId"] = 3] = "ClientId";
    PartyRole[PartyRole["ClearingFirm"] = 4] = "ClearingFirm";
    PartyRole[PartyRole["InvestorId"] = 5] = "InvestorId";
    PartyRole[PartyRole["IntroducingFirm"] = 6] = "IntroducingFirm";
    PartyRole[PartyRole["EnteringFirm"] = 7] = "EnteringFirm";
    PartyRole[PartyRole["LocateLendingFirm"] = 8] = "LocateLendingFirm";
    PartyRole[PartyRole["FundManagerClientId"] = 9] = "FundManagerClientId";
    PartyRole[PartyRole["SettlementLocation"] = 10] = "SettlementLocation";
    PartyRole[PartyRole["OrderOriginationTrader"] = 11] = "OrderOriginationTrader";
    PartyRole[PartyRole["ExecutingTrader"] = 12] = "ExecutingTrader";
    PartyRole[PartyRole["OrderOriginationFirm"] = 13] = "OrderOriginationFirm";
    PartyRole[PartyRole["GiveupClearingFirm"] = 14] = "GiveupClearingFirm";
    PartyRole[PartyRole["CorrespondantClearingFirm"] = 15] = "CorrespondantClearingFirm";
    PartyRole[PartyRole["ExecutingSystem"] = 16] = "ExecutingSystem";
    PartyRole[PartyRole["ContraFirm"] = 17] = "ContraFirm";
    PartyRole[PartyRole["ContraClearingFirm"] = 18] = "ContraClearingFirm";
    PartyRole[PartyRole["SponsoringFirm"] = 19] = "SponsoringFirm";
    PartyRole[PartyRole["UnderlyingContraFirm"] = 20] = "UnderlyingContraFirm";
})(PartyRole = exports.PartyRole || (exports.PartyRole = {}));
var Product;
(function (Product) {
    Product[Product["Agency"] = 1] = "Agency";
    Product[Product["Commodity"] = 2] = "Commodity";
    Product[Product["Corporate"] = 3] = "Corporate";
    Product[Product["Currency"] = 4] = "Currency";
    Product[Product["Equity"] = 5] = "Equity";
    Product[Product["Government"] = 6] = "Government";
    Product[Product["Index"] = 7] = "Index";
    Product[Product["Loan"] = 8] = "Loan";
    Product[Product["Moneymarket"] = 9] = "Moneymarket";
    Product[Product["Mortgage"] = 10] = "Mortgage";
    Product[Product["Municipal"] = 11] = "Municipal";
    Product[Product["Other"] = 12] = "Other";
})(Product = exports.Product || (exports.Product = {}));
var TestMessageIndicator;
(function (TestMessageIndicator) {
    TestMessageIndicator["Yes"] = "Y";
    TestMessageIndicator["No"] = "N";
})(TestMessageIndicator = exports.TestMessageIndicator || (exports.TestMessageIndicator = {}));
var QuantityType;
(function (QuantityType) {
    QuantityType[QuantityType["Shares"] = 1] = "Shares";
    QuantityType[QuantityType["Bonds"] = 2] = "Bonds";
    QuantityType[QuantityType["Currentface"] = 3] = "Currentface";
    QuantityType[QuantityType["Originalface"] = 4] = "Originalface";
    QuantityType[QuantityType["Currency"] = 5] = "Currency";
    QuantityType[QuantityType["Contracts"] = 6] = "Contracts";
    QuantityType[QuantityType["Other"] = 7] = "Other";
    QuantityType[QuantityType["Par"] = 8] = "Par";
})(QuantityType = exports.QuantityType || (exports.QuantityType = {}));
var RoundingDirection;
(function (RoundingDirection) {
    RoundingDirection["RoundToNearest"] = "0";
    RoundingDirection["RoundDown"] = "1";
    RoundingDirection["RoundUp"] = "2";
})(RoundingDirection = exports.RoundingDirection || (exports.RoundingDirection = {}));
var CancellationRights;
(function (CancellationRights) {
    CancellationRights["NoWaiverAgreement"] = "M";
    CancellationRights["NoExecutionOnly"] = "N";
    CancellationRights["Yes"] = "Y";
    CancellationRights["NoInstitutional"] = "O";
})(CancellationRights = exports.CancellationRights || (exports.CancellationRights = {}));
var MoneyLaunderingStatus;
(function (MoneyLaunderingStatus) {
    MoneyLaunderingStatus["ExemptBelowTheLimit"] = "1";
    MoneyLaunderingStatus["ExemptClientMoneyTypeExemption"] = "2";
    MoneyLaunderingStatus["ExemptAuthorisedCreditOrFinancialInstitution"] = "3";
    MoneyLaunderingStatus["Passed"] = "Y";
    MoneyLaunderingStatus["NotChecked"] = "N";
})(MoneyLaunderingStatus = exports.MoneyLaunderingStatus || (exports.MoneyLaunderingStatus = {}));
var ExecPriceType;
(function (ExecPriceType) {
    ExecPriceType["SinglePrice"] = "S";
    ExecPriceType["OfferPriceMinusAdjustmentAmount"] = "Q";
    ExecPriceType["OfferPriceMinusAdjustment"] = "P";
    ExecPriceType["OfferPrice"] = "O";
    ExecPriceType["CreationPricePlusAdjustmentAmount"] = "E";
    ExecPriceType["CreationPricePlusAdjustment"] = "D";
    ExecPriceType["CreationPrice"] = "C";
    ExecPriceType["BidPrice"] = "B";
})(ExecPriceType = exports.ExecPriceType || (exports.ExecPriceType = {}));
var TradeReportTransType;
(function (TradeReportTransType) {
    TradeReportTransType["New"] = "N";
    TradeReportTransType["Replace"] = "R";
    TradeReportTransType["Cancel"] = "C";
})(TradeReportTransType = exports.TradeReportTransType || (exports.TradeReportTransType = {}));
var PaymentMethod;
(function (PaymentMethod) {
    PaymentMethod[PaymentMethod["Crest"] = 1] = "Crest";
    PaymentMethod[PaymentMethod["Nscc"] = 2] = "Nscc";
    PaymentMethod[PaymentMethod["Euroclear"] = 3] = "Euroclear";
    PaymentMethod[PaymentMethod["Clearstream"] = 4] = "Clearstream";
    PaymentMethod[PaymentMethod["Cheque"] = 5] = "Cheque";
    PaymentMethod[PaymentMethod["TelegraphicTransfer"] = 6] = "TelegraphicTransfer";
    PaymentMethod[PaymentMethod["Fedwire"] = 7] = "Fedwire";
    PaymentMethod[PaymentMethod["DebitCard"] = 8] = "DebitCard";
    PaymentMethod[PaymentMethod["DirectDebit"] = 9] = "DirectDebit";
    PaymentMethod[PaymentMethod["DirectCredit"] = 10] = "DirectCredit";
    PaymentMethod[PaymentMethod["CreditCard"] = 11] = "CreditCard";
    PaymentMethod[PaymentMethod["AchDebit"] = 12] = "AchDebit";
    PaymentMethod[PaymentMethod["AchCredit"] = 13] = "AchCredit";
    PaymentMethod[PaymentMethod["Bpay"] = 14] = "Bpay";
    PaymentMethod[PaymentMethod["HighValueClearingSystem"] = 15] = "HighValueClearingSystem";
})(PaymentMethod = exports.PaymentMethod || (exports.PaymentMethod = {}));
var TaxAdvantageType;
(function (TaxAdvantageType) {
    TaxAdvantageType[TaxAdvantageType["NoneNotApplicable"] = 0] = "NoneNotApplicable";
    TaxAdvantageType[TaxAdvantageType["MaxiIsa"] = 1] = "MaxiIsa";
    TaxAdvantageType[TaxAdvantageType["Tessa"] = 2] = "Tessa";
    TaxAdvantageType[TaxAdvantageType["MiniCashIsa"] = 3] = "MiniCashIsa";
    TaxAdvantageType[TaxAdvantageType["MiniStocksAndSharesIsa"] = 4] = "MiniStocksAndSharesIsa";
    TaxAdvantageType[TaxAdvantageType["MiniInsuranceIsa"] = 5] = "MiniInsuranceIsa";
    TaxAdvantageType[TaxAdvantageType["CurrentYearPayment"] = 6] = "CurrentYearPayment";
    TaxAdvantageType[TaxAdvantageType["PriorYearPayment"] = 7] = "PriorYearPayment";
    TaxAdvantageType[TaxAdvantageType["AssetTransfer"] = 8] = "AssetTransfer";
    TaxAdvantageType[TaxAdvantageType["Employee"] = 9] = "Employee";
    TaxAdvantageType[TaxAdvantageType["EmployeeCurrentYear"] = 10] = "EmployeeCurrentYear";
    TaxAdvantageType[TaxAdvantageType["Employer"] = 11] = "Employer";
    TaxAdvantageType[TaxAdvantageType["EmployerCurrentYear"] = 12] = "EmployerCurrentYear";
    TaxAdvantageType[TaxAdvantageType["NonFundPrototypeIra"] = 13] = "NonFundPrototypeIra";
    TaxAdvantageType[TaxAdvantageType["NonFundQualifiedPlan"] = 14] = "NonFundQualifiedPlan";
    TaxAdvantageType[TaxAdvantageType["DefinedContributionPlan"] = 15] = "DefinedContributionPlan";
    TaxAdvantageType[TaxAdvantageType["IndividualRetirementAccount"] = 16] = "IndividualRetirementAccount";
    TaxAdvantageType[TaxAdvantageType["IndividualRetirementAccountRollover"] = 17] = "IndividualRetirementAccountRollover";
    TaxAdvantageType[TaxAdvantageType["Keogh"] = 18] = "Keogh";
    TaxAdvantageType[TaxAdvantageType["ProfitSharingPlan"] = 19] = "ProfitSharingPlan";
    TaxAdvantageType[TaxAdvantageType["E401K"] = 20] = "E401K";
    TaxAdvantageType[TaxAdvantageType["SelfDirectedIra"] = 21] = "SelfDirectedIra";
    TaxAdvantageType[TaxAdvantageType["E403"] = 22] = "E403";
    TaxAdvantageType[TaxAdvantageType["E457"] = 23] = "E457";
    TaxAdvantageType[TaxAdvantageType["RothIra24"] = 24] = "RothIra24";
    TaxAdvantageType[TaxAdvantageType["RothIra25"] = 25] = "RothIra25";
    TaxAdvantageType[TaxAdvantageType["RothConversionIra26"] = 26] = "RothConversionIra26";
    TaxAdvantageType[TaxAdvantageType["RothConversionIra27"] = 27] = "RothConversionIra27";
    TaxAdvantageType[TaxAdvantageType["EducationIra28"] = 28] = "EducationIra28";
    TaxAdvantageType[TaxAdvantageType["EducationIra29"] = 29] = "EducationIra29";
})(TaxAdvantageType = exports.TaxAdvantageType || (exports.TaxAdvantageType = {}));
var FundRenewWaiv;
(function (FundRenewWaiv) {
    FundRenewWaiv["No"] = "N";
    FundRenewWaiv["Yes"] = "Y";
})(FundRenewWaiv = exports.FundRenewWaiv || (exports.FundRenewWaiv = {}));
var RegistStatus;
(function (RegistStatus) {
    RegistStatus["Accept"] = "A";
    RegistStatus["Reminder"] = "N";
    RegistStatus["Reject"] = "R";
    RegistStatus["Held"] = "H";
})(RegistStatus = exports.RegistStatus || (exports.RegistStatus = {}));
var RegistRejReasonCode;
(function (RegistRejReasonCode) {
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableAccountType"] = 1] = "InvalidUnacceptableAccountType";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableTaxExemptType"] = 2] = "InvalidUnacceptableTaxExemptType";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableOwnershipType"] = 3] = "InvalidUnacceptableOwnershipType";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableNoRegDetls"] = 4] = "InvalidUnacceptableNoRegDetls";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableRegSeqNo"] = 5] = "InvalidUnacceptableRegSeqNo";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableRegDtls"] = 6] = "InvalidUnacceptableRegDtls";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableMailingDtls"] = 7] = "InvalidUnacceptableMailingDtls";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableMailingInst"] = 8] = "InvalidUnacceptableMailingInst";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableInvestorId"] = 9] = "InvalidUnacceptableInvestorId";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableInvestorIdSource"] = 10] = "InvalidUnacceptableInvestorIdSource";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableDateOfBirth"] = 11] = "InvalidUnacceptableDateOfBirth";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableInvestorCountryOfResidence"] = 12] = "InvalidUnacceptableInvestorCountryOfResidence";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableNodistribinstns"] = 13] = "InvalidUnacceptableNodistribinstns";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableDistribPercentage"] = 14] = "InvalidUnacceptableDistribPercentage";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableDistribPaymentMethod"] = 15] = "InvalidUnacceptableDistribPaymentMethod";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableCashDistribAgentAcctName"] = 16] = "InvalidUnacceptableCashDistribAgentAcctName";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableCashDistribAgentCode"] = 17] = "InvalidUnacceptableCashDistribAgentCode";
    RegistRejReasonCode[RegistRejReasonCode["InvalidUnacceptableCashDistribAgentAcctNum"] = 18] = "InvalidUnacceptableCashDistribAgentAcctNum";
})(RegistRejReasonCode = exports.RegistRejReasonCode || (exports.RegistRejReasonCode = {}));
var RegistTransType;
(function (RegistTransType) {
    RegistTransType["New"] = "0";
    RegistTransType["Replace"] = "1";
    RegistTransType["Cancel"] = "2";
})(RegistTransType = exports.RegistTransType || (exports.RegistTransType = {}));
var ContAmtType;
(function (ContAmtType) {
    ContAmtType[ContAmtType["CommissionAmount"] = 1] = "CommissionAmount";
    ContAmtType[ContAmtType["Commission"] = 2] = "Commission";
    ContAmtType[ContAmtType["InitialChargeAmount"] = 3] = "InitialChargeAmount";
    ContAmtType[ContAmtType["InitialCharge"] = 4] = "InitialCharge";
    ContAmtType[ContAmtType["DiscountAmount"] = 5] = "DiscountAmount";
    ContAmtType[ContAmtType["Discount"] = 6] = "Discount";
    ContAmtType[ContAmtType["DilutionLevyAmount"] = 7] = "DilutionLevyAmount";
    ContAmtType[ContAmtType["DilutionLevy"] = 8] = "DilutionLevy";
    ContAmtType[ContAmtType["ExitChargeAmount"] = 9] = "ExitChargeAmount";
    ContAmtType[ContAmtType["ExitCharge"] = 10] = "ExitCharge";
    ContAmtType[ContAmtType["FundBasedRenewalCommission"] = 11] = "FundBasedRenewalCommission";
    ContAmtType[ContAmtType["ProjectedFundValue"] = 12] = "ProjectedFundValue";
    ContAmtType[ContAmtType["FundBasedRenewalCommissionAmount13"] = 13] = "FundBasedRenewalCommissionAmount13";
    ContAmtType[ContAmtType["FundBasedRenewalCommissionAmount14"] = 14] = "FundBasedRenewalCommissionAmount14";
    ContAmtType[ContAmtType["NetSettlementAmount"] = 15] = "NetSettlementAmount";
})(ContAmtType = exports.ContAmtType || (exports.ContAmtType = {}));
var OwnerType;
(function (OwnerType) {
    OwnerType[OwnerType["IndividualInvestor"] = 1] = "IndividualInvestor";
    OwnerType[OwnerType["PublicCompany"] = 2] = "PublicCompany";
    OwnerType[OwnerType["PrivateCompany"] = 3] = "PrivateCompany";
    OwnerType[OwnerType["IndividualTrustee"] = 4] = "IndividualTrustee";
    OwnerType[OwnerType["CompanyTrustee"] = 5] = "CompanyTrustee";
    OwnerType[OwnerType["PensionPlan"] = 6] = "PensionPlan";
    OwnerType[OwnerType["CustodianUnderGiftsToMinorsAct"] = 7] = "CustodianUnderGiftsToMinorsAct";
    OwnerType[OwnerType["Trusts"] = 8] = "Trusts";
    OwnerType[OwnerType["Fiduciaries"] = 9] = "Fiduciaries";
    OwnerType[OwnerType["NetworkingSubAccount"] = 10] = "NetworkingSubAccount";
    OwnerType[OwnerType["NonProfitOrganization"] = 11] = "NonProfitOrganization";
    OwnerType[OwnerType["CorporateBody"] = 12] = "CorporateBody";
    OwnerType[OwnerType["Nominee"] = 13] = "Nominee";
})(OwnerType = exports.OwnerType || (exports.OwnerType = {}));
var OrderCapacity;
(function (OrderCapacity) {
    OrderCapacity["RisklessPrincipal"] = "R";
    OrderCapacity["Individual"] = "I";
    OrderCapacity["Principal"] = "P";
    OrderCapacity["AgentForOtherMember"] = "W";
    OrderCapacity["Agency"] = "A";
    OrderCapacity["Proprietary"] = "G";
})(OrderCapacity = exports.OrderCapacity || (exports.OrderCapacity = {}));
var OrderRestrictions;
(function (OrderRestrictions) {
    OrderRestrictions["ProgramTrade"] = "1";
    OrderRestrictions["IndexArbitrage"] = "2";
    OrderRestrictions["NonIndexArbitrage"] = "3";
    OrderRestrictions["CompetingMarketMaker"] = "4";
    OrderRestrictions["ActingAsMarketMakerOrSpecialistInTheSecurity"] = "5";
    OrderRestrictions["ActingAsMarketMakerOrSpecialistInTheUnderlyingSecurityOfADerivativeSecurity"] = "6";
    OrderRestrictions["ForeignEntity"] = "7";
    OrderRestrictions["ExternalMarketParticipant"] = "8";
    OrderRestrictions["ExternalInterConnectedMarketLinkage"] = "9";
    OrderRestrictions["RisklessArbitrage"] = "A";
})(OrderRestrictions = exports.OrderRestrictions || (exports.OrderRestrictions = {}));
var MassCancelRequestType;
(function (MassCancelRequestType) {
    MassCancelRequestType["CancelOrdersForASecurity"] = "1";
    MassCancelRequestType["CancelOrdersForAnUnderlyingSecurity"] = "2";
    MassCancelRequestType["CancelOrdersForAProduct"] = "3";
    MassCancelRequestType["CancelOrdersForACficode"] = "4";
    MassCancelRequestType["CancelOrdersForASecuritytype"] = "5";
    MassCancelRequestType["CancelOrdersForATradingSession"] = "6";
    MassCancelRequestType["CancelAllOrders"] = "7";
})(MassCancelRequestType = exports.MassCancelRequestType || (exports.MassCancelRequestType = {}));
var MassCancelResponse;
(function (MassCancelResponse) {
    MassCancelResponse["CancelRequestRejected"] = "0";
    MassCancelResponse["CancelOrdersForASecurity"] = "1";
    MassCancelResponse["CancelOrdersForAnUnderlyingSecurity"] = "2";
    MassCancelResponse["CancelOrdersForAProduct"] = "3";
    MassCancelResponse["CancelOrdersForACficode"] = "4";
    MassCancelResponse["CancelOrdersForASecuritytype"] = "5";
    MassCancelResponse["CancelOrdersForATradingSession"] = "6";
    MassCancelResponse["CancelAllOrders"] = "7";
})(MassCancelResponse = exports.MassCancelResponse || (exports.MassCancelResponse = {}));
var MassCancelRejectReason;
(function (MassCancelRejectReason) {
    MassCancelRejectReason["MassCancelNotSupported"] = "0";
    MassCancelRejectReason["InvalidOrUnknownSecurity"] = "1";
    MassCancelRejectReason["InvalidOrUnknownUnderlying"] = "2";
    MassCancelRejectReason["InvalidOrUnknownProduct"] = "3";
    MassCancelRejectReason["InvalidOrUnknownCficode"] = "4";
    MassCancelRejectReason["InvalidOrUnknownSecurityType"] = "5";
    MassCancelRejectReason["InvalidOrUnknownTradingSession"] = "6";
})(MassCancelRejectReason = exports.MassCancelRejectReason || (exports.MassCancelRejectReason = {}));
var QuoteType;
(function (QuoteType) {
    QuoteType[QuoteType["Indicative"] = 0] = "Indicative";
    QuoteType[QuoteType["Tradeable"] = 1] = "Tradeable";
    QuoteType[QuoteType["RestrictedTradeable"] = 2] = "RestrictedTradeable";
})(QuoteType = exports.QuoteType || (exports.QuoteType = {}));
var CashMargin;
(function (CashMargin) {
    CashMargin["Cash"] = "1";
    CashMargin["MarginOpen"] = "2";
    CashMargin["MarginClose"] = "3";
})(CashMargin = exports.CashMargin || (exports.CashMargin = {}));
var Scope;
(function (Scope) {
    Scope["Local"] = "1";
    Scope["National"] = "2";
    Scope["Global"] = "3";
})(Scope = exports.Scope || (exports.Scope = {}));
var MDImplicitDelete;
(function (MDImplicitDelete) {
    MDImplicitDelete["Yes"] = "Y";
    MDImplicitDelete["No"] = "N";
})(MDImplicitDelete = exports.MDImplicitDelete || (exports.MDImplicitDelete = {}));
var CrossType;
(function (CrossType) {
    CrossType[CrossType["CrossTradeWhichIsExecutedCompletelyOrNotBothSidesAreTreatedInTheSameMannerThisIsEquivalentToAnAllOrNone"] = 1] = "CrossTradeWhichIsExecutedCompletelyOrNotBothSidesAreTreatedInTheSameMannerThisIsEquivalentToAnAllOrNone";
    CrossType[CrossType["CrossTradeWhichIsExecutedPartiallyAndTheRestIsCancelledOneSideIsFullyExecutedTheOtherSideIsPartiallyExecutedWithTheRemainderBeingCancelledThisIsEquivalentToAnImmediateOrCancelOnTheOtherSide"] = 2] = "CrossTradeWhichIsExecutedPartiallyAndTheRestIsCancelledOneSideIsFullyExecutedTheOtherSideIsPartiallyExecutedWithTheRemainderBeingCancelledThisIsEquivalentToAnImmediateOrCancelOnTheOtherSide";
    CrossType[CrossType["CrossTradeWhichIsPartiallyExecutedWithTheUnfilledPortionsRemainingActiveOneSideOfTheCrossIsFullyExecuted"] = 3] = "CrossTradeWhichIsPartiallyExecutedWithTheUnfilledPortionsRemainingActiveOneSideOfTheCrossIsFullyExecuted";
    CrossType[CrossType["CrossTradeIsExecutedWithExistingOrdersWithTheSamePrice"] = 4] = "CrossTradeIsExecutedWithExistingOrdersWithTheSamePrice";
})(CrossType = exports.CrossType || (exports.CrossType = {}));
var CrossPrioritization;
(function (CrossPrioritization) {
    CrossPrioritization[CrossPrioritization["None"] = 0] = "None";
    CrossPrioritization[CrossPrioritization["BuysidePrioritized"] = 1] = "BuysidePrioritized";
    CrossPrioritization[CrossPrioritization["SellsidePrioritized"] = 2] = "SellsidePrioritized";
})(CrossPrioritization = exports.CrossPrioritization || (exports.CrossPrioritization = {}));
var NoSides;
(function (NoSides) {
    NoSides[NoSides["OneSide"] = 1] = "OneSide";
    NoSides[NoSides["BothSides"] = 2] = "BothSides";
})(NoSides = exports.NoSides || (exports.NoSides = {}));
var SecurityListRequestType;
(function (SecurityListRequestType) {
    SecurityListRequestType[SecurityListRequestType["Symbol"] = 0] = "Symbol";
    SecurityListRequestType[SecurityListRequestType["SecuritytypeAndOrCficode"] = 1] = "SecuritytypeAndOrCficode";
    SecurityListRequestType[SecurityListRequestType["Product"] = 2] = "Product";
    SecurityListRequestType[SecurityListRequestType["Tradingsessionid"] = 3] = "Tradingsessionid";
    SecurityListRequestType[SecurityListRequestType["AllSecurities"] = 4] = "AllSecurities";
})(SecurityListRequestType = exports.SecurityListRequestType || (exports.SecurityListRequestType = {}));
var SecurityRequestResult;
(function (SecurityRequestResult) {
    SecurityRequestResult[SecurityRequestResult["ValidRequest"] = 0] = "ValidRequest";
    SecurityRequestResult[SecurityRequestResult["InvalidOrUnsupportedRequest"] = 1] = "InvalidOrUnsupportedRequest";
    SecurityRequestResult[SecurityRequestResult["NoInstrumentsFoundThatMatchSelectionCriteria"] = 2] = "NoInstrumentsFoundThatMatchSelectionCriteria";
    SecurityRequestResult[SecurityRequestResult["NotAuthorizedToRetrieveInstrumentData"] = 3] = "NotAuthorizedToRetrieveInstrumentData";
    SecurityRequestResult[SecurityRequestResult["InstrumentDataTemporarilyUnavailable"] = 4] = "InstrumentDataTemporarilyUnavailable";
    SecurityRequestResult[SecurityRequestResult["RequestForInstrumentDataNotSupported"] = 5] = "RequestForInstrumentDataNotSupported";
})(SecurityRequestResult = exports.SecurityRequestResult || (exports.SecurityRequestResult = {}));
var TradSesStatusRejReason;
(function (TradSesStatusRejReason) {
    TradSesStatusRejReason[TradSesStatusRejReason["UnknownOrInvalidTradingsessionid"] = 1] = "UnknownOrInvalidTradingsessionid";
})(TradSesStatusRejReason = exports.TradSesStatusRejReason || (exports.TradSesStatusRejReason = {}));
var TradeRequestType;
(function (TradeRequestType) {
    TradeRequestType[TradeRequestType["AllTrades"] = 0] = "AllTrades";
    TradeRequestType[TradeRequestType["MatchedTradesMatchingCriteriaProvidedOnRequest"] = 1] = "MatchedTradesMatchingCriteriaProvidedOnRequest";
    TradeRequestType[TradeRequestType["UnmatchedTradesThatMatchCriteria"] = 2] = "UnmatchedTradesThatMatchCriteria";
    TradeRequestType[TradeRequestType["UnreportedTradesThatMatchCriteria"] = 3] = "UnreportedTradesThatMatchCriteria";
    TradeRequestType[TradeRequestType["AdvisoriesThatMatchCriteria"] = 4] = "AdvisoriesThatMatchCriteria";
})(TradeRequestType = exports.TradeRequestType || (exports.TradeRequestType = {}));
var PreviouslyReported;
(function (PreviouslyReported) {
    PreviouslyReported["No"] = "N";
    PreviouslyReported["Yes"] = "Y";
})(PreviouslyReported = exports.PreviouslyReported || (exports.PreviouslyReported = {}));
var MatchStatus;
(function (MatchStatus) {
    MatchStatus["ComparedMatchedOrAffirmed"] = "0";
    MatchStatus["UncomparedUnmatchedOrUnaffirmed"] = "1";
    MatchStatus["AdvisoryOrAlert"] = "2";
})(MatchStatus = exports.MatchStatus || (exports.MatchStatus = {}));
var MatchType;
(function (MatchType) {
    MatchType["SummarizedMatchUsingA1ToA5ExactMatchCriteriaExceptQuantityIsSummarizedS5"] = "S5";
    MatchType["ActM1Match"] = "M1";
    MatchType["ActM6Match"] = "M6";
    MatchType["ActDefaultAfterM2"] = "M5";
    MatchType["ActAcceptedTrade"] = "M3";
    MatchType["SummarizedMatchUsingA1ToA5ExactMatchCriteriaExceptQuantityIsSummarizedS2"] = "S2";
    MatchType["SummarizedMatchUsingA1ToA5ExactMatchCriteriaExceptQuantityIsSummarizedS3"] = "S3";
    MatchType["SummarizedMatchUsingA1ToA5ExactMatchCriteriaExceptQuantityIsSummarizedS4"] = "S4";
    MatchType["ActM2Match"] = "M2";
    MatchType["ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusFourBadges"] = "A2";
    MatchType["ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusTwoBadgesAndExecutionTime"] = "A3";
    MatchType["ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAnd"] = "A4";
    MatchType["ComparedRecordsResultingFromStampedAdvisoriesOrSpecialist"] = "AQ";
    MatchType["NonAct"] = "MT";
    MatchType["ActDefaultTrade"] = "M4";
    MatchType["ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusFourBadgesAndExecutionTime"] = "A1";
    MatchType["SummarizedMatchUsingA1ToA5ExactMatchCriteriaExceptQuantityIsSummarizedS1"] = "S1";
    MatchType["ExactMatchOnTradeDateStockSymbolQuantityPriceTradeTypeAndSpecialTradeIndicatorPlusExecutionTime"] = "A5";
})(MatchType = exports.MatchType || (exports.MatchType = {}));
var ClearingInstruction;
(function (ClearingInstruction) {
    ClearingInstruction[ClearingInstruction["ProcessNormally"] = 0] = "ProcessNormally";
    ClearingInstruction[ClearingInstruction["ExcludeFromAllNetting"] = 1] = "ExcludeFromAllNetting";
    ClearingInstruction[ClearingInstruction["BilateralNettingOnly"] = 2] = "BilateralNettingOnly";
    ClearingInstruction[ClearingInstruction["ExClearing"] = 3] = "ExClearing";
    ClearingInstruction[ClearingInstruction["SpecialTrade"] = 4] = "SpecialTrade";
    ClearingInstruction[ClearingInstruction["MultilateralNetting"] = 5] = "MultilateralNetting";
    ClearingInstruction[ClearingInstruction["ClearAgainstCentralCounterparty"] = 6] = "ClearAgainstCentralCounterparty";
    ClearingInstruction[ClearingInstruction["ExcludeFromCentralCounterparty"] = 7] = "ExcludeFromCentralCounterparty";
    ClearingInstruction[ClearingInstruction["ManualMode"] = 8] = "ManualMode";
    ClearingInstruction[ClearingInstruction["AutomaticPostingMode"] = 9] = "AutomaticPostingMode";
    ClearingInstruction[ClearingInstruction["AutomaticGiveUpMode"] = 10] = "AutomaticGiveUpMode";
})(ClearingInstruction = exports.ClearingInstruction || (exports.ClearingInstruction = {}));
var AccountType;
(function (AccountType) {
    AccountType[AccountType["AccountIsCarriedOnCustomerSideOfBooks"] = 1] = "AccountIsCarriedOnCustomerSideOfBooks";
    AccountType[AccountType["AccountIsCarriedOnNonCustomerSideOfBooks"] = 2] = "AccountIsCarriedOnNonCustomerSideOfBooks";
    AccountType[AccountType["HouseTrader"] = 3] = "HouseTrader";
    AccountType[AccountType["FloorTrader"] = 4] = "FloorTrader";
    AccountType[AccountType["AccountIsCarriedOnNonCustomerSideOfBooksAndIsCrossMargined"] = 6] = "AccountIsCarriedOnNonCustomerSideOfBooksAndIsCrossMargined";
    AccountType[AccountType["AccountIsHouseTraderAndIsCrossMargined"] = 7] = "AccountIsHouseTraderAndIsCrossMargined";
    AccountType[AccountType["JointBackofficeAccount"] = 8] = "JointBackofficeAccount";
})(AccountType = exports.AccountType || (exports.AccountType = {}));
var MassStatusReqType;
(function (MassStatusReqType) {
    MassStatusReqType[MassStatusReqType["StatusForOrdersForASecurity"] = 1] = "StatusForOrdersForASecurity";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForAnUnderlyingSecurity"] = 2] = "StatusForOrdersForAnUnderlyingSecurity";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForAProduct"] = 3] = "StatusForOrdersForAProduct";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForACficode"] = 4] = "StatusForOrdersForACficode";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForASecuritytype"] = 5] = "StatusForOrdersForASecuritytype";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForATradingSession"] = 6] = "StatusForOrdersForATradingSession";
    MassStatusReqType[MassStatusReqType["StatusForAllOrders"] = 7] = "StatusForAllOrders";
    MassStatusReqType[MassStatusReqType["StatusForOrdersForAPartyid"] = 8] = "StatusForOrdersForAPartyid";
})(MassStatusReqType = exports.MassStatusReqType || (exports.MassStatusReqType = {}));
var DayBookingInst;
(function (DayBookingInst) {
    DayBookingInst["CanTriggerBookingWithoutReferenceToTheOrderInitiator"] = "0";
    DayBookingInst["SpeakWithOrderInitiatorBeforeBooking"] = "1";
})(DayBookingInst = exports.DayBookingInst || (exports.DayBookingInst = {}));
var BookingUnit;
(function (BookingUnit) {
    BookingUnit["EachPartialExecutionIsABookableUnit"] = "0";
    BookingUnit["AggregatePartialExecutionsOnThisOrderAndBookOneTradePerOrder"] = "1";
    BookingUnit["AggregateExecutionsForThisSymbolSideAndSettlementDate"] = "2";
})(BookingUnit = exports.BookingUnit || (exports.BookingUnit = {}));
var PreallocMethod;
(function (PreallocMethod) {
    PreallocMethod["ProRata"] = "0";
    PreallocMethod["DoNotProRataDiscussFirst"] = "1";
})(PreallocMethod = exports.PreallocMethod || (exports.PreallocMethod = {}));
var AllocType;
(function (AllocType) {
    AllocType[AllocType["BuysideCalculated"] = 1] = "BuysideCalculated";
    AllocType[AllocType["BuysidePreliminary"] = 2] = "BuysidePreliminary";
    AllocType[AllocType["SellsideCalculatedUsingPreliminary"] = 3] = "SellsideCalculatedUsingPreliminary";
    AllocType[AllocType["SellsideCalculatedWithoutPreliminary"] = 4] = "SellsideCalculatedWithoutPreliminary";
    AllocType[AllocType["BuysideReadyToBook5"] = 5] = "BuysideReadyToBook5";
    AllocType[AllocType["BuysideReadyToBook6"] = 6] = "BuysideReadyToBook6";
})(AllocType = exports.AllocType || (exports.AllocType = {}));
var ClearingFeeIndicator;
(function (ClearingFeeIndicator) {
    ClearingFeeIndicator["E1stYearDelegateTradingForHisOwnAccount"] = "1";
    ClearingFeeIndicator["E2ndYearDelegateTradingForHisOwnAccount"] = "2";
    ClearingFeeIndicator["E3rdYearDelegateTradingForHisOwnAccount"] = "3";
    ClearingFeeIndicator["E4thYearDelegateTradingForHisOwnAccount"] = "4";
    ClearingFeeIndicator["E5thYearDelegateTradingForHisOwnAccount"] = "5";
    ClearingFeeIndicator["E6thYearAndBeyondDelegateTradingForHisOwnAccount"] = "9";
    ClearingFeeIndicator["E106HAnd106JFirms"] = "H";
    ClearingFeeIndicator["AllOtherOwnershipTypes"] = "M";
    ClearingFeeIndicator["GimIdemAndComMembershipInterestHolders"] = "I";
    ClearingFeeIndicator["FullAndAssociateMemberTradingForOwnAccountAndAsFloor"] = "F";
    ClearingFeeIndicator["EquityMemberAndClearingMember"] = "E";
    ClearingFeeIndicator["NonMemberAndCustomer"] = "C";
    ClearingFeeIndicator["CboeMember"] = "B";
    ClearingFeeIndicator["LesseeAnd106FEmployees"] = "L";
})(ClearingFeeIndicator = exports.ClearingFeeIndicator || (exports.ClearingFeeIndicator = {}));
var WorkingIndicator;
(function (WorkingIndicator) {
    WorkingIndicator["No"] = "N";
    WorkingIndicator["Yes"] = "Y";
})(WorkingIndicator = exports.WorkingIndicator || (exports.WorkingIndicator = {}));
var PriorityIndicator;
(function (PriorityIndicator) {
    PriorityIndicator[PriorityIndicator["PriorityUnchanged"] = 0] = "PriorityUnchanged";
    PriorityIndicator[PriorityIndicator["LostPriorityAsResultOfOrderChange"] = 1] = "LostPriorityAsResultOfOrderChange";
})(PriorityIndicator = exports.PriorityIndicator || (exports.PriorityIndicator = {}));
var LegalConfirm;
(function (LegalConfirm) {
    LegalConfirm["Yes"] = "Y";
    LegalConfirm["No"] = "N";
})(LegalConfirm = exports.LegalConfirm || (exports.LegalConfirm = {}));
var QuoteRequestRejectReason;
(function (QuoteRequestRejectReason) {
    QuoteRequestRejectReason[QuoteRequestRejectReason["UnknownSymbol"] = 1] = "UnknownSymbol";
    QuoteRequestRejectReason[QuoteRequestRejectReason["Exchange"] = 2] = "Exchange";
    QuoteRequestRejectReason[QuoteRequestRejectReason["QuoteRequestExceedsLimit"] = 3] = "QuoteRequestExceedsLimit";
    QuoteRequestRejectReason[QuoteRequestRejectReason["TooLateToEnter"] = 4] = "TooLateToEnter";
    QuoteRequestRejectReason[QuoteRequestRejectReason["InvalidPrice"] = 5] = "InvalidPrice";
    QuoteRequestRejectReason[QuoteRequestRejectReason["NotAuthorizedToRequestQuote"] = 6] = "NotAuthorizedToRequestQuote";
})(QuoteRequestRejectReason = exports.QuoteRequestRejectReason || (exports.QuoteRequestRejectReason = {}));
//# sourceMappingURL=all-enum.js.map