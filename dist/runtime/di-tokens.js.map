{"version":3,"file":"di-tokens.js","sourceRoot":"","sources":["../../src/runtime/di-tokens.ts"],"names":[],"mappings":";;;AACA,IAAY,QA8CX;AA9CD,WAAY,QAAQ;IAElB,uDAA2C,CAAA;IAE3C,yCAA6B,CAAA;IAE7B,uCAA2B,CAAA;IAE3B,qCAAyB,CAAA;IAEzB,qDAAyC,CAAA;IAEzC,qDAAyC,CAAA;IAEzC,mCAAuB,CAAA;IAEvB,6CAAiC,CAAA;IAEjC,qCAAyB,CAAA;IAEzB,mCAAuB,CAAA;IAEvB,yCAA6B,CAAA;IAE7B,mCAAuB,CAAA;IAEvB,iCAAqB,CAAA;IAErB,mCAAuB,CAAA;IAEvB,2CAA+B,CAAA;IAE/B,yCAA6B,CAAA;IAE7B,yCAA6B,CAAA;IAE7B,mDAAuC,CAAA;IACvC,+DAAmD,CAAA;IAEnD,yCAA6B,CAAA;IAC7B,mCAAuB,CAAA;IACvB,mCAAuB,CAAA;IACvB,2CAA+B,CAAA;IAC/B,qCAAyB,CAAA;IACzB,uCAA2B,CAAA;IAC3B,uDAA2C,CAAA;AAC7C,CAAC,EA9CW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QA8CnB","sourcesContent":["\nexport enum DITokens {\n  // the JSON representation defining header\n  ISessionDescription = 'ISessionDescription',\n  // the main config interface created from application JSON config\n  IJsFixConfig = 'IJsFixConfig',\n  // the data dictionary holding all field definitions - represented in quickfix or repo\n  Definitions = 'Definitions',\n  // the main application session object type\n  FixSession = 'FixSession',\n  // used to construct loggers e.g. in Winston\n  JsFixLoggerFactory = 'JsFixLoggerFactory',\n  // used to construct session protocol messages - logon / heartbeat / reset\n  ISessionMsgFactory = 'ISessionMsgFactory',\n  // a tcp socket or string / file for unit testing - abstraction of physical transport\n  FixDuplex = 'FixDuplex',\n  // ASCII: format messages from objects and send to socket\n  MsgTransmitter = 'MsgTransmitter',\n  // ASCII: write object attributes in txt to transmit buffer\n  MsgEncoder = 'MsgEncoder',\n  // ASCII: receive bytes from socket and parse to tags\n  MsgParser = 'MsgParser',\n  // FIXML: user defined adapter used in HTTP to manage a transaction\n  IHttpAdapter = 'IHttpAdapter',\n  // the listener or connector depending on entity type.\n  FixEntity = 'FixEntity',\n  // the transport listener to construct sessions on connection\n  Listener = 'Listener',\n  // used to initiate a connection to listener in order to establish a transport\n  Connector = 'Connector',\n  // a self adjusting buffer to allow messages to be formatted\n  ElasticBuffer = 'ElasticBuffer',\n  // parse into this buffer\n  ParseBuffer = 'ReceiveBuffer',\n  // format into and clone from this buffer to transmit stream\n  TransmitBuffer = 'SendBuffer',\n\n  elasticBufferSize = 'elasticBufferSize',\n  elasticBufferReturnSize = 'elasticBufferReturnSize',\n\n  logDelimiter = 'logDelimiter',\n  delimiter = 'delimiter',\n  sessionId = 'sessionId',\n  maxMessageLen = 'maxMessageLen',\n  readStream = 'readStream',\n  duplexParam = 'duplexParam',\n  maxMessageLocations = 'maxMessageLocations'\n}\n"]}