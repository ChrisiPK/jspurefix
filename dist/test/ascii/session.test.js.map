{"version":3,"file":"session.test.js","sourceRoot":"","sources":["../../../src/test/ascii/session.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata'\n\nimport { MsgView } from '../../buffer'\nimport { ISessionDescription } from '../../transport'\nimport { MsgType, SessionRejectReason } from '../../types'\nimport { ILooseObject } from '../../collections/collection'\nimport { IStandardHeader, IReject, ILogon } from '../../types/FIX4.4/repo'\n\nimport { AsciiMsgTransmitter } from '../../transport/ascii/ascii-msg-transmitter'\nimport { Setup } from '../env/setup'\nimport { Experiment } from '../env/experiment'\nimport { SkeletonRunner } from '../env/skeleton-runner'\n\nconst logonMsg: string = '8=FIX4.4|9=0000136|35=A|49=init-comp|56=accept-comp|34=1|57=fix|52=20180902-12:25:28.980|98=0|108=30|141=Y|553=js-client|554=pwd-client|10=177|'\nconst heartbeat: string = '8=FIX4.4|9=0000123|35=0|49=init-comp|56=accept-comp|34=1|57=fix|52=20180902-12:25:59.161|112=Sun, 02 Sep 2018 12:25:59 GMT|10=95|'\n\nlet setup: Setup = null\nlet experiment: Experiment = null\n\nbeforeEach(async () => {\n  setup = new Setup()\n  await setup.init()\n  experiment = new Experiment(setup)\n}, 30000)\n\nclass ParsingResult {\n  constructor (\n    public readonly event: string,\n    public readonly msgType: string,\n    public readonly view: MsgView) {\n  }\n}\n\nfunction clientToServerWaitFirstMessage (type: string, obj: ILooseObject): Promise<ParsingResult> {\n  return new Promise<any>((resolve, reject) => {\n    const clt = experiment.client.transport\n    const svt = experiment.server.transport\n    clt.transmitter.on('error', (e: Error) => {\n      reject(e)\n    })\n    svt.receiver.on('msg', (msgType: string, view: MsgView) => {\n      resolve(new ParsingResult('msg', msgType, view.clone()))\n    })\n    clt.receiver.on('error', (e: Error) => {\n      reject(e)\n    })\n    clt.transmitter.send(type, obj)\n    experiment.client.transport.end()\n  })\n}\n\nasync function runSkeletons (logoutSeconds: number = 1, followOn: string = null) {\n  const runner: SkeletonRunner = new SkeletonRunner(experiment, logoutSeconds)\n  runner.sendText(followOn)\n  await runner.wait()\n}\n\ntest('end to end logon', async () => {\n  const lo = experiment.client.config.factory.logon()\n  const res: ParsingResult = await clientToServerWaitFirstMessage(MsgType.Logon, lo)\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual('A')\n  const received = res.view.toObject()\n  expect(received).toBeTruthy()\n  delete received['StandardHeader']\n  delete received['StandardTrailer']\n  expect(received).toEqual(lo)\n})\n\ntest('session send resendRequest when logged on', async () => {\n  const runner: SkeletonRunner = new SkeletonRunner(experiment, 2)\n  const factory = experiment.client.config.factory\n  const resend = factory.resendRequest(1, 2)\n  runner.sendMsg(MsgType.ResendRequest, resend)\n  try {\n    const cViews = experiment.client.views\n    const sViews = experiment.server.views\n    await runner.wait()\n    const last = experiment.client.views[experiment.client.views.length - 1]\n    expect(last).toBeTruthy()\n    const clientResets = countOfType('SequenceReset', cViews)\n    const serverResets = countOfType('SequenceReset', sViews)\n    expect(clientResets).toEqual(1)\n    expect(serverResets).toEqual(0)\n  } catch (e) {\n    expect(true).toEqual(false)\n  }\n})\n\ntest('session send logon when logged on', async () => {\n  const runner: SkeletonRunner = new SkeletonRunner(experiment, 2)\n  const logon = experiment.client.config.factory.logon()\n  runner.sendMsg(MsgType.Logon, logon)\n  try {\n    await runner.wait()\n  } catch (e) {\n    expect(experiment.server.errors.length).toEqual(1)\n  }\n})\n\ntest('session logon / logout', async () => {\n  await runSkeletons()\n  const cViews = experiment.client.views\n  const sViews = experiment.server.views\n\n  expect(experiment.client.errors.length).toEqual(0)\n  expect(experiment.server.errors.length).toEqual(0)\n\n  // both sides should now have logged on and logged off\n  expect(cViews.length).toEqual(2)\n  expect(sViews.length).toEqual(2)\n\n  expect(cViews[0].segment.name).toEqual('Logon')\n  expect(cViews[1].segment.name).toEqual('Logout')\n\n  expect(sViews[0].segment.name).toEqual('Logon')\n  expect(sViews[1].segment.name).toEqual('Logout')\n})\n\nfunction checkSeqNos (views: MsgView[]) {\n  const seqNo: number[] = views.map((v: MsgView) => (v.getView('StandardHeader').toObject() as IStandardHeader).MsgSeqNum)\n  expect(seqNo).toBeTruthy()\n  const delta = seqNo.reduce((c: number, latest: number) => {\n    return latest - c === 1 ? c + 1 : c - 1\n  }, 0)\n  expect(delta).toEqual(seqNo.length)\n}\n\ntest('seq No OK', async () => {\n  await runSkeletons()\n  const cviews = experiment.client.views\n  const sviews = experiment.server.views\n  // both sides should now have logged on and logged off\n  expect(cviews.length >= 2).toEqual(true)\n  expect(sviews.length >= 2).toEqual(true)\n  checkSeqNos(cviews)\n  checkSeqNos(sviews)\n})\n\nfunction mutateSeqNo (description: ISessionDescription, type: string, o: ILooseObject): ILooseObject {\n  switch (type) {\n    case 'StandardHeader': {\n      const hdr = o as IStandardHeader\n      if (hdr.MsgSeqNum === 2) {\n        hdr.MsgSeqNum = 0\n      }\n      break\n    }\n  }\n  return o\n}\n\ntest('out of seq logout', async () => {\n  experiment.clientFactory.mutator = mutateSeqNo\n  await runSkeletons()\n  const cviews = experiment.client.views\n  const sviews = experiment.server.views\n  // both sides should now have logged on but out of seq logout will terminate sessions so no logout returned\n  expect(cviews.length).toEqual(1)\n  expect(cviews[0].segment.name).toEqual('Logon')\n  expect(sviews.length).toEqual(2)\n  expect(sviews[0].segment.name).toEqual('Logon')\n  expect(sviews[1].segment.name).toEqual('Logout')\n})\n\nfunction countOfType (type: string, views: MsgView[]): number {\n  return views.reduce((c: number, v: MsgView) => {\n    return v.segment.name === type ? c + 1 : c\n  }, 0)\n}\n\nfunction mutateRemoveRequiredHeartBtInt (description: ISessionDescription, type: string, o: ILooseObject): ILooseObject {\n  switch (type) {\n    case 'A': {\n      const logon = o as ILogon\n      delete logon['HeartBtInt']\n      break\n    }\n  }\n  return o\n}\n\ntest('client logon reject missing 108', async () => {\n  experiment.clientFactory.mutator = mutateRemoveRequiredHeartBtInt\n  await runSkeletons(2)\n  // client sends logon, server rejects\n  const cviews = experiment.client.views\n  const sviews = experiment.server.views\n  expect(cviews.length === 1).toEqual(true)\n  expect(sviews.length === 1).toEqual(true)\n  expect(cviews[0].segment.name).toEqual('Reject')\n  expect(sviews[0].segment.name).toEqual('Logon')\n  const reject: IReject = cviews[0].toObject()\n  expect(reject.SessionRejectReason === SessionRejectReason.RequiredTagMissing)\n  expect(reject.Text).toEqual('msgType A missing required tag 108')\n}, 10000)\n\n// transport.transmitter\n\ntest('client unknown msg type', async () => {\n  const at = experiment.client.transport.transmitter as AsciiMsgTransmitter\n  const changed = logonMsg.replace('35=A', '35=ZZ').replace('34=1', `34=${at.msgSeqNum + 1}`)\n  await runSkeletons(2, changed)\n  const cviews = experiment.client.views\n  const sviews = experiment.server.views\n  // client sends logon, server rejects\n  expect(cviews.length).toEqual(3)\n  expect(sviews.length).toEqual(3)\n  expect(cviews[0].segment.name).toEqual('Logon')\n  expect(cviews[1].segment.name).toEqual('Reject')\n  expect(sviews[0].segment.name).toEqual('Logon')\n  expect(sviews[1].segment.name).toEqual('unknown')\n  const reject: IReject = cviews[1].toObject()\n  expect(reject.SessionRejectReason === SessionRejectReason.InvalidMsgType)\n  expect(reject.Text).toEqual('msgType ZZ unknown')\n}, 10000)\n\ntest('heartbeat invalid tag', async () => {\n  const at = experiment.client.transport.transmitter as AsciiMsgTransmitter\n  const changed = heartbeat.replace('112=', '999=').replace('34=1', `34=${at.msgSeqNum + 1}`)\n  await runSkeletons(2, changed)\n  const cviews = experiment.client.views\n  const sviews = experiment.server.views\n  expect(cviews.length === 3).toEqual(true)\n  expect(sviews.length === 3).toEqual(true)\n  expect(cviews[0].segment.name).toEqual('Logon')\n  expect(cviews[1].segment.name).toEqual('Reject')\n  expect(sviews[0].segment.name).toEqual('Logon')\n  expect(sviews[1].segment.name).toEqual('Heartbeat')\n  const reject: IReject = experiment.client.views[1].toObject()\n  expect(reject.SessionRejectReason === SessionRejectReason.InvalidTagNumber)\n  checkSeqNos(cviews)\n  checkSeqNos(sviews)\n}, 10000)\n\ntest('heartbeat invalid sender comp', async () => {\n  const at = experiment.client.transport.transmitter as AsciiMsgTransmitter\n  const changed = heartbeat.replace('49=init-comp', '49=init-not!').replace('34=1', `34=${at.msgSeqNum + 1}`)\n  await runSkeletons(2, changed)\n  const cviews = experiment.client.views\n  const sviews = experiment.server.views\n  expect(cviews.length === 3).toEqual(true)\n  expect(sviews.length === 3).toEqual(true)\n  expect(cviews[0].segment.name).toEqual('Logon')\n  expect(cviews[1].segment.name).toEqual('Reject')\n  expect(sviews[0].segment.name).toEqual('Logon')\n  expect(sviews[1].segment.name).toEqual('Heartbeat')\n  const reject: IReject = cviews[1].toObject()\n  expect(reject.SessionRejectReason === SessionRejectReason.CompIDProblem)\n  checkSeqNos(cviews)\n  checkSeqNos(sviews)\n}, 10000)\n\n// client will send heartbeats to server, server with 30 second heartbeat will not heartbeat\ntest('client heartbeats to server', async () => {\n  const preset = experiment.client.config.description.HeartBtInt\n  experiment.client.config.description.HeartBtInt = 2\n  await runSkeletons(6)\n  const cviews = experiment.client.views\n  const sviews = experiment.server.views\n  // both sides should now have logged on and logged off\n  expect(cviews.length === 2).toEqual(true)\n  expect(sviews.length > 2).toEqual(true)\n  const serverReceivesHeartbeats = countOfType('Heartbeat', sviews)\n  expect(serverReceivesHeartbeats >= 2 && serverReceivesHeartbeats <= 4).toEqual(true)\n  checkSeqNos(cviews)\n  checkSeqNos(sviews)\n  experiment.client.config.description.HeartBtInt = preset\n}, 10000)\n\ntest('server heartbeats to client', async () => {\n  const preset = experiment.server.config.description.HeartBtInt\n  experiment.server.config.description.HeartBtInt = 2\n  await runSkeletons(6)\n  // both sides should now have logged on and logged off\n  const cviews = experiment.client.views\n  const sviews = experiment.server.views\n  expect(sviews.length === 2).toEqual(true)\n  expect(cviews.length > 2).toEqual(true)\n  const clientReceivesHeartbeats = countOfType('Heartbeat', cviews)\n  expect(clientReceivesHeartbeats >= 2 && clientReceivesHeartbeats <= 4).toEqual(true)\n  checkSeqNos(cviews)\n  checkSeqNos(sviews)\n  experiment.server.config.description.HeartBtInt = preset\n}, 10000)\n\ntest('client server heartbeat', async () => {\n  const preset = experiment.server.config.description.HeartBtInt\n  experiment.server.config.description.HeartBtInt = 5\n  experiment.client.config.description.HeartBtInt = 2\n  await runSkeletons(8)\n  const cviews = experiment.client.views\n  const sviews = experiment.server.views\n  // both sides should now have logged on and logged off\n  expect(sviews.length > 2).toEqual(true)\n  expect(cviews.length > 2).toEqual(true)\n  const clientReceivesHeartbeats = countOfType('Heartbeat', cviews)\n  const clientReceivesTestRequest = countOfType('TestRequest', cviews)\n  const clientTotal = clientReceivesHeartbeats + clientReceivesTestRequest\n  const serverReceivesHeartbeats = countOfType('Heartbeat', sviews)\n  const serverReceivesTestRequest = countOfType('TestRequest', sviews)\n  const serverTotal = serverReceivesHeartbeats + serverReceivesTestRequest\n  expect(clientTotal >= 1 && clientReceivesHeartbeats <= 4).toEqual(true)\n  expect(serverTotal >= 3 && serverReceivesHeartbeats <= 4).toEqual(true)\n  checkSeqNos(cviews)\n  checkSeqNos(sviews)\n  experiment.server.config.description.HeartBtInt = preset\n  experiment.client.config.description.HeartBtInt = preset\n}, 15000)\n"]}