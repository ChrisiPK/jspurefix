{"version":3,"file":"time-formatter.test.js","sourceRoot":"","sources":["../../../src/test/ascii/time-formatter.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata'\n\nimport { ElasticBuffer } from '../../buffer'\nimport { ITimeFormatter, TimeFormatter } from '../../buffer/ascii'\n\nconst buffer = new ElasticBuffer()\nlet timeFormatter: ITimeFormatter\nconst localDateTime: Date = new Date(2010, 7, 6, 15, 55, 59, 123)\nconst localDateTimeMidnight: Date = new Date(2010, 4, 6, 0, 0, 0, 0)\nconst localDate: Date = new Date(localDateTime.getFullYear(), localDateTime.getMonth(), localDateTime.getDate(), 0, 0, 0, 0)\nconst localTime: Date = new Date(0, 0, 0, localDateTime.getHours(), localDateTime.getMinutes(), localDateTime.getSeconds(), localDateTime.getMilliseconds())\nconst localTimeMidnight: Date = new Date(0, 0, 0, localDateTimeMidnight.getHours(), localDateTimeMidnight.getMinutes(), localDateTimeMidnight.getSeconds(), localDateTimeMidnight.getMilliseconds())\nconst utcDateTime: Date = new Date(Date.UTC(localDateTime.getFullYear(), localDateTime.getMonth(), localDateTime.getDate(), localDateTime.getHours(), localDateTime.getMinutes(), localDateTime.getSeconds(), localDateTime.getMilliseconds()))\nconst utcTime: Date = new Date(Date.UTC(0, 0, 0, localDateTime.getHours(), localDateTime.getMinutes(), localDateTime.getSeconds(), localDateTime.getMilliseconds()))\nconst utcDate: Date = new Date(Date.UTC(localDateTime.getFullYear(), localDateTime.getMonth(), localDateTime.getDate()))\nconst dateLength = 4 + 2 + 2\nconst timeLength = 2 + 1 + 2 + 1 + 2 + 1 + 3\nconst dateTimeLength = dateLength + 1 + timeLength\n\nbeforeAll(async () => {\n  timeFormatter = new TimeFormatter(buffer)\n})\n\ntest('check LocalDate', () => {\n  buffer.reset()\n  timeFormatter.writeLocalDate(localDateTime)\n  expect(buffer.getPos()).toEqual(dateLength)\n  expect(buffer.toString()).toEqual('20100806')\n  expect(timeFormatter.getLocalDate(0)).toEqual(localDate)\n})\n\ntest('check LocalTime', () => {\n  buffer.reset()\n  timeFormatter.writeLocalTime(localDateTime)\n  expect(buffer.getPos()).toEqual(timeLength)\n  expect(buffer.toString()).toEqual('15:55:59.123')\n  expect(timeFormatter.getLocalTime(0)).toEqual(localTime)\n})\n\ntest('check LocalTime Midnight', () => {\n  buffer.reset()\n  timeFormatter.writeLocalTime(localDateTimeMidnight)\n  expect(buffer.getPos()).toEqual(timeLength)\n  expect(buffer.toString()).toEqual('00:00:00.000')\n  expect(timeFormatter.getLocalTime(0)).toEqual(localTimeMidnight)\n})\n\ntest('check LocalTimestamp Midnight', () => {\n  buffer.reset()\n  timeFormatter.writeLocalTimestamp(localDateTimeMidnight)\n  expect(buffer.getPos()).toEqual(dateTimeLength)\n  expect(buffer.toString()).toEqual('20100506-00:00:00.000')\n  expect(timeFormatter.getLocalTimestamp(0, dateTimeLength)).toEqual(localDateTimeMidnight)\n})\n\ntest('check LocalTimestamp', () => {\n  buffer.reset()\n  timeFormatter.writeLocalTimestamp(localDateTime)\n  expect(buffer.getPos()).toEqual(dateTimeLength)\n  expect(buffer.toString()).toEqual('20100806-15:55:59.123')\n  expect(timeFormatter.getLocalTimestamp(0, dateTimeLength)).toEqual(localDateTime)\n})\n\ntest('check UtcDate', () => {\n  buffer.reset()\n  timeFormatter.writeUtcDate(utcDateTime)\n  expect(buffer.getPos()).toEqual(dateLength)\n  expect(buffer.toString()).toEqual('20100806')\n  expect(timeFormatter.getUtcDate(0)).toEqual(utcDate)\n})\n\ntest('check LocalTime', () => {\n  buffer.reset()\n  timeFormatter.writeUtcTime(utcDateTime)\n  expect(buffer.getPos()).toEqual(timeLength)\n  expect(buffer.toString()).toEqual('15:55:59.123')\n  expect(timeFormatter.getUtcTime(0)).toEqual(utcTime)\n})\n"]}