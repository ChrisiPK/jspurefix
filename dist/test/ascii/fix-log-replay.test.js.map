{"version":3,"file":"fix-log-replay.test.js","sourceRoot":"","sources":["../../../src/test/ascii/fix-log-replay.test.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,4BAAyB;AAEzB,6BAA4B;AAI5B,wCAAoC;AAEpC,MAAM,IAAI,GAAW,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,CAAC,CAAA;AAE1D,IAAI,WAA2B,CAAA;AAC/B,IAAI,KAAgB,CAAA;AACpB,IAAI,QAAsB,CAAA;AAC1B,IAAI,KAAK,GAAU,IAAI,CAAA;AAEvB,SAAS,CAAC,GAAS,EAAE;IACnB,KAAK,GAAG,IAAI,aAAK,CAAC,6BAA6B,EAAC,IAAI,CAAC,CAAA;IACrD,MAAM,KAAK,CAAC,IAAI,EAAE,CAAA;IAClB,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAA;IAC7C,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,2BAA2B,CAAC,CAAC,CAAA;IAChE,KAAK,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAA;AACvC,CAAC,CAAA,EAAE,KAAK,CAAC,CAAA;AAET,IAAI,CAAC,2BAA2B,EAAE,GAAG,EAAE;IACrC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;AAClC,CAAC,CAAC,CAAA;AAEF,IAAI,CAAC,6CAA6C,EAAE,GAAG,EAAE;IACvD,MAAM,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAe,EAAE,MAAe,EAAE,EAAE;QAC/D,MAAM,GAAG,GAAsB,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;QAC3E,IAAI,GAAG,EAAE;YACP,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,CAAA;YAC3B,IAAI,CAAC,MAAM,EAAE;gBACX,MAAM,GAAG,CAAC,CAAA;aACX;iBAAM;gBACL,MAAM,EAAE,CAAA;aACT;YACD,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,MAAM,CAAA;SACxB;QACD,OAAO,CAAC,CAAA;IACV,CAAC,EAAE,EAAkB,CAAC,CAAA;IACtB,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;AAClC,CAAC,CAAC,CAAA","sourcesContent":["import 'reflect-metadata'\n\nimport * as path from 'path'\nimport { FixDefinitions, MessageDefinition } from '../../dictionary/definition'\nimport { MsgView } from '../../buffer'\nimport { ILooseObject } from '../../collections/collection'\nimport { Setup } from '../env/setup'\n\nconst root: string = path.join(__dirname, '../../../data')\n\nlet definitions: FixDefinitions\nlet views: MsgView[]\nlet expected: ILooseObject\nlet setup: Setup = null\n\nbeforeAll(async () => {\n  setup = new Setup('session/test-initiator.json',null)\n  await setup.init()\n  definitions = setup.client.config.definitions\n  expected = require(path.join(root, 'examples/FIX.4.4/fix.json'))\n  views = await setup.client.getViews()\n}, 45000)\n\ntest('expect 50 messages in log', () => {\n  expect(views.length).toEqual(50)\n})\n\ntest('expect 50 messages of specific types in log', () => {\n  const layout = views.reduce((a: ILooseObject, latest: MsgView) => {\n    const def: MessageDefinition = definitions.message.get(latest.segment.name)\n    if (def) {\n      let lookup = a[def.msgType]\n      if (!lookup) {\n        lookup = 1\n      } else {\n        lookup++\n      }\n      a[def.msgType] = lookup\n    }\n    return a\n  }, {} as ILooseObject)\n  expect(layout).toEqual(expected)\n})\n"]}