{"version":3,"file":"qf-full-msg.test.js","sourceRoot":"","sources":["../../../src/test/ascii/qf-full-msg.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata'\nimport * as path from 'path'\nimport { AsciiParser, AsciiView } from '../../buffer/ascii'\nimport { ILooseObject } from '../../collections/collection'\nimport { FixDefinitions } from '../../dictionary/definition'\nimport { JsonHelper } from '../../util'\nimport { ElasticBuffer, IJsFixConfig, MsgType } from '../../index'\nimport { AsciiMsgTransmitter } from '../../transport/ascii/ascii-msg-transmitter'\nimport { Setup } from '../env/setup'\nimport { DITokens } from '../../runtime'\nimport { ParsingResult } from '../env/parsing-result'\n\nlet definitions: FixDefinitions\nlet jsonHelper: JsonHelper\nlet config: IJsFixConfig\nconst root: string = path.join(__dirname, '../../../data/examples/FIX.4.4/quickfix')\nlet setup: Setup\n\nbeforeAll(async () => {\n  setup = new Setup('session/qf-fix44.json', null)\n  await setup.init()\n  definitions = setup.definitions\n  jsonHelper = new JsonHelper(definitions)\n  config = setup.clientConfig\n}, 45000)\n\nasync function testEncodeDecode (msgType: string, msg: ILooseObject): Promise<ILooseObject> {\n    // encode to FIX format from provided object.\n  return new Promise(async (resolve, reject) => {\n    let session: AsciiMsgTransmitter = new AsciiMsgTransmitter(config)\n    const parseBuffer = config.sessionContainer.resolve<ElasticBuffer>(DITokens.ParseBuffer)\n    const parser: AsciiParser = new AsciiParser(config, session.encodeStream, parseBuffer)\n    parser.on('msg', (msgType: string, view: AsciiView) => {\n      const o = view.toObject()\n      delete o.StandardHeader\n      delete o.StandardTrailer\n      resolve(o)\n    })\n    parser.on('error', (e: Error) => {\n      reject(e)\n    })\n    session.send(msgType, msg)\n  })\n}\n\ntest('test logon JSON => object => fix => object', async () => {\n  const msgType: string = MsgType.Logon\n  const file: string = path.join(root, 'logon/object.json')\n  const msg: ILooseObject = jsonHelper.fromJson(file, msgType)\n  await expect(testEncodeDecode(msgType, msg)).resolves.toEqual(msg)\n}, 1000)\n\ntest('test execution report JSON => object => fix => object', async () => {\n  const msgType: string = MsgType.ExecutionReport\n  const file: string = path.join(root, 'execution-report/object.json')\n  const msg: ILooseObject = jsonHelper.fromJson(file, msgType)\n  await expect(testEncodeDecode(msgType, msg)).resolves.toEqual(msg)\n}, 2000)\n\ntest('test order cxl reject JSON => object => fix => object', async () => {\n  const msgType: string = MsgType.OrderCancelReject\n  const file: string = path.join(root, 'order-cancel-reject/object.json')\n  const msg: ILooseObject = jsonHelper.fromJson(file, msgType)\n  await expect(testEncodeDecode(msgType, msg)).resolves.toEqual(msg)\n}, 1000)\n\ntest('test quote request JSON => object => fix => object', async () => {\n  const msgType: string = MsgType.QuoteRequest\n  const file: string = path.join(root, 'quote-request/object.json')\n  const msg: ILooseObject = jsonHelper.fromJson(file, msgType)\n  await expect(testEncodeDecode(msgType, msg)).resolves.toEqual(msg)\n}, 1000)\n\ntest('test md request JSON => object => fix => object', async () => {\n  const msgType: string = MsgType.MarketDataSnapshotFullRefresh\n  const file: string = path.join(root, 'md-data-snapshot/object.json')\n  const msg: ILooseObject = jsonHelper.fromJson(file, msgType)\n  await expect(testEncodeDecode(msgType, msg)).resolves.toEqual(msg)\n}, 1000)\n\ntest('parse MD snapshot msg', async () => {\n  const msg = '8=FIX.4.4|9=224|35=W|34=8|49=TEST|56=TEST|52=20220621-17:16:16.414|262=#GBPUSD#0#|55=GBPUSD|268=3|269=0|270=1.22759|271=1|63=0|272=20220623|768=0|269=1|270=1.22759|271=1|63=0|272=20220623|768=0|269=H|270=1.22759|63=0|272=20220623|768=0|10=066|'\n  const res: ParsingResult = await setup.client.parseText(msg)\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual(MsgType.MarketDataSnapshotFullRefresh)\n  const v2 = res.view.getView('MDFullGrp')\n  const o = v2.toObject()\n  expect(o).toBeTruthy()\n  // console.log(JSON.stringify(o, null, 4))\n})\n"]}