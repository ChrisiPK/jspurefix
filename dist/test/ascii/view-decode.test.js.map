{"version":3,"file":"view-decode.test.js","sourceRoot":"","sources":["../../../src/test/ascii/view-decode.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata'\n\nimport * as path from 'path'\nimport { Structure, MsgView } from '../../buffer'\nimport { ILooseObject } from '../../collections/collection'\nimport { FixDefinitions, MessageDefinition } from '../../dictionary/definition'\nimport { IInstrumentLeg, IMarketDataRequest, MDEntryType, SubscriptionRequestType } from '../../types/FIX4.4/quickfix'\nimport { AsciiMsgTransmitter } from '../../transport/ascii/ascii-msg-transmitter'\nimport { Setup } from '../env/setup'\nimport { ParsingResult } from '../env/parsing-result'\nimport { AsciiView } from '../../buffer/ascii'\n\nconst root: string = path.join(__dirname, '../../../data')\n\nlet definitions: FixDefinitions\nlet session: AsciiMsgTransmitter\nlet views: MsgView[]\nlet structure: Structure\nlet view: MsgView\nlet setup: Setup = null\n\nbeforeAll(async () => {\n  setup = new Setup('session/qf-fix44.json',null)\n  await setup.init()\n  definitions = setup.definitions\n  session = setup.client.transmitter as AsciiMsgTransmitter\n  views = await setup.client.replayer.replayFixFile(path.join(root, 'examples/FIX.4.4/quickfix/md-data-snapshot/fix.txt'))\n  if (views && views.length > 0) {\n    view = views[0]\n    structure = view.structure\n  }\n}, 45000)\n\ntest('expect a structure from fix msg', () => {\n  expect(structure).toBeTruthy()\n})\n\ntest('get NoMDEntries directly - expect an array', () => {\n  const noMDEntriesView: MsgView = view.getView('NoMDEntries')\n  expect(noMDEntriesView).toBeTruthy()\n  const noMDEntries: ILooseObject[] = noMDEntriesView.toObject()\n  expect(Array.isArray(noMDEntries)).toEqual(true)\n  expect(noMDEntries.length).toEqual(2)\n})\n\ntest('get NoMDEntries via MDFullGrp - array within a component', () => {\n  const mdFullGrp: MsgView = view.getView('MDFullGrp')\n  expect(mdFullGrp).toBeTruthy()\n  const mdFullGrpAsObject: ILooseObject = mdFullGrp.toObject()\n  const noMDEntries: ILooseObject[] = mdFullGrpAsObject.NoMDEntries\n  expect(Array.isArray(noMDEntries)).toEqual(true)\n  expect(noMDEntries.length).toEqual(2)\n})\n\nfunction getMdEntriesObjects (): ILooseObject[] {\n  const noMDEntriesView: MsgView = view.getView('NoMDEntries')\n  expect(noMDEntriesView).toBeTruthy()\n  const noMDEntries: ILooseObject[] = noMDEntriesView.toObject()\n  expect(Array.isArray(noMDEntries)).toEqual(true)\n  expect(noMDEntries.length).toEqual(2)\n  return noMDEntries\n}\n\n//  <field number='272' name='MDEntryDate' type='UTCDATEONLY' />\n\ntest('get UTCDATEONLY from NoMDEntries instance 1', () => {\n  const noMdEntriesAsObjects: ILooseObject[] = getMdEntriesObjects()\n  const noMDEntriesView: MsgView = view.getView('NoMDEntries')\n  const mmEntryView: MsgView = noMDEntriesView.getGroupInstance(1)\n\n  const instance: ILooseObject = noMdEntriesAsObjects[1]\n  const mmEntryDateAsString: string = mmEntryView.getString('MDEntryDate')\n  expect(mmEntryDateAsString).toEqual('20210129')\n  expect(mmEntryView.getString(272)).toEqual('20210129')\n  const asUtc: Date = new Date(Date.UTC(2021, 0, 29))\n  expect(instance.MDEntryDate).toEqual(asUtc)\n})\n\n// <field number='273' name='MDEntryTime' type='UTCTIMEONLY' />\n\ntest('get UTCTIMEONLY from NoMDEntries instance 0', () => {\n  const noMdEntriesAsObjects: ILooseObject[] = getMdEntriesObjects()\n  const noMDEntriesView: MsgView = view.getView('NoMDEntries')\n  const mmEntryView: MsgView = noMDEntriesView.getGroupInstance(0)\n\n  const instance: ILooseObject = noMdEntriesAsObjects[0]\n  const mmEntryTimeAsString: string = mmEntryView.getString('MDEntryTime')\n  expect(mmEntryTimeAsString).toEqual('19:45:19.852')\n  expect(mmEntryView.getString(273)).toEqual('19:45:19.852')\n  const asUtc: Date = new Date(Date.UTC(0, 0, 0, 19, 45, 19, 852))\n  expect(instance.MDEntryTime).toEqual(asUtc)\n})\n\n//   <field number='126' name='ExpireTime' type='UTCTIMESTAMP' />\n\ntest('get UTCTIMESTAMP from NoMDEntries instance 1', () => {\n  const noMdEntriesAsObjects: ILooseObject[] = getMdEntriesObjects()\n  const noMDEntriesView: MsgView = view.getView('NoMDEntries')\n  const mmEntryView: MsgView = noMDEntriesView.getGroupInstance(1)\n\n  const instance: ILooseObject = noMdEntriesAsObjects[1]\n  const mmEntryExpireTimeAsString: string = mmEntryView.getString('ExpireTime')\n  expect(mmEntryExpireTimeAsString).toEqual('20210129-19:45:19.000')\n  expect(mmEntryView.getString(126)).toEqual('20210129-19:45:19.000')\n  const asUtc: Date = new Date(Date.UTC(2021, 0, 29, 19, 45, 19, 0))\n  const d: Date = instance.ExpireTime\n  expect(d).toEqual(asUtc)\n})\n\n//   <field number='110' name='MinQty' type='QTY' />\n\ntest('get MinQty from NoMDEntries instance 1', () => {\n  const noMdEntriesAsObjects: ILooseObject[] = getMdEntriesObjects()\n  const noMDEntriesView: MsgView = view.getView('NoMDEntries')\n  const mmEntryView: MsgView = noMDEntriesView.getGroupInstance(1)\n\n  const instance: ILooseObject = noMdEntriesAsObjects[1]\n  const mmEntryMinQtyAsString: string = mmEntryView.getString('MinQty')\n  expect(mmEntryMinQtyAsString).toEqual('9.6478')\n  expect(mmEntryView.getString(110)).toEqual('9.6478')\n  expect(instance.MinQty).toEqual(9.6478)\n})\n\ntest('get selection tags one call - tag ids', () => {\n  const [a, b, c, d] = view.getTypedTags([8, 9, 35, 49])\n  expect(a).toEqual('FIX4.4')\n  expect(b).toEqual(3957)\n  expect(c).toEqual('W')\n  expect(d).toEqual('init-comp')\n})\n\n/*\n[0] 8 (BeginString) = FIX4.4, [1] 9 (BodyLength) = 0002955\n[2] 35 (MsgType) = W[MARKET_DATA_SNAPSHOT_FULL_REFRESH], [3] 49 (SenderCompID) = sender-10\n[4] 56 (TargetCompID) = target-20, [5] 34 (MsgSeqNum) = 1\n[6] 57 (TargetSubID) = sub-a, [7] 52 (SendingTime) = 20180608-21:10:59.047\n[8] 262 (MDReqID) = ipsum, [9] 55 (Symbol) = sit\n */\n\ntest('get selection tags one call - tag names', () => {\n  const [a, b, c, d, e, f] = view.getTypedTags([\n    'BeginString',\n    'BodyLength',\n    'MsgType',\n    'MsgSeqNum',\n    'MDReqID',\n    'Symbol'])\n  expect(a).toEqual('FIX4.4')\n  expect(b).toEqual(3957)\n  expect(c).toEqual('W')\n  expect(d).toEqual(1)\n  expect(e).toEqual('Lorem')\n  expect(f).toEqual('ipsum')\n})\n\ntest('nested view fetch' , () => {\n  const legGrpView = view.getView('InstrmtLegGrp.NoLegs')\n  expect(legGrpView).toBeTruthy()\n  const legGrp: IInstrumentLeg[] = legGrpView.toObject()\n  expect(legGrp).toBeTruthy()\n  expect(Array.isArray(legGrp))\n  expect(legGrp.length).toEqual(3)\n})\n\ntest('view buffer' , () => {\n  const asciiView: AsciiView = view as AsciiView\n  const buffer = asciiView.toBuffer('?'.charCodeAt(0))\n  const txt = buffer.toString()\n  expect(txt.startsWith('8=FIX4.4?9='))\n  expect(txt.endsWith('?10=198?'))\n})\n\nfunction toFixMessage (o: ILooseObject, msg: MessageDefinition): string {\n  session.encodeMessage(msg.msgType, o)\n  return session.buffer.toString()\n}\n\nfunction BidOfferRequest (symbol: string): IMarketDataRequest {\n  return {\n    MDReqID: '1',\n    SubscriptionRequestType: SubscriptionRequestType.SnapshotPlusUpdates,\n    MarketDepth: 0,\n    MDReqGrp: {\n      NoMDEntryTypes: [\n        {\n          MDEntryType: MDEntryType.Bid\n        },\n        {\n          MDEntryType: MDEntryType.Offer\n        }\n      ]\n    },\n    InstrmtMDReqGrp: {\n      NoRelatedSym: [\n        {\n          Instrument: {\n            Symbol: symbol\n          }\n        }\n      ]\n    }\n  } as IMarketDataRequest\n}\n\ntest('market data request', async () => {\n  const mdr = BidOfferRequest('EUR/USD')\n  const def = definitions.message.get('MarketDataRequest')\n  const fix = toFixMessage(mdr, def)\n  expect(fix).toBeTruthy()\n  const res: ParsingResult = await setup.client.parseText(fix)\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual(def.msgType)\n  const gv = res.view.getView('MDReqGrp')\n  expect(gv).toBeTruthy()\n  const s = gv.toString()\n  const newLine = require('os').EOL\n  expect(s).toEqual(`[0] 267 (NoMDEntryTypes) = 2, [1] 269 (MDEntryType) = 0[Bid]${newLine}[2] 269 (MDEntryType) = 1[Offer]`)\n  const iv = res.view.getView('InstrmtMDReqGrp.NoRelatedSym')\n  expect(iv).toBeTruthy()\n  const s2 = iv.toString()\n  expect(s2).toEqual(`[0] 146 (NoRelatedSym) = 1, [1] 55 (Symbol) = EUR/USD${newLine}`)\n})\n"]}