{"version":3,"file":"ascii-segment.test.js","sourceRoot":"","sources":["../../../src/test/ascii/ascii-segment.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata'\n\nimport { SegmentDescription } from '../../buffer'\nimport { FixDefinitions } from '../../dictionary/definition'\nimport { ILogon } from '../../types/FIX4.4/repo'\nimport { JsonHelper } from '../../util'\nimport { IJsFixConfig, MsgType } from '../../index'\nimport { Setup } from '../env/setup'\nimport { ParsingResult } from '../env/parsing-result'\n\nlet definitions: FixDefinitions\nlet jsonHelper: JsonHelper\nconst logon: string = '8=FIX4.4|9=0000208|35=A|49=sender-10|56=target-20|34=1|57=sub-a|52=20180610-10:39:01.621|98=2|108=62441|95=20|96=VgfoSqo56NqSVI1fLdlI|141=Y|789=4886|383=20|384=1|372=ipsum|385=R|464=N|553=sit|554=consectetur|10=49|'\nlet config: IJsFixConfig\n\nlet setup: Setup = null\nbeforeAll(async () => {\n  setup = new Setup()\n  await setup.init()\n  definitions = setup.definitions\n  jsonHelper = new JsonHelper(definitions)\n  config = setup.clientConfig\n}, 45000)\n\ntest('0 gaps', async () => {\n  const res: ParsingResult = await setup.client.parseText(logon)\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual(MsgType.Logon)\n  const unknowns: SegmentDescription[] = res.view.structure.layout['.undefined']\n  expect(unknowns).toBeFalsy()\n  const o: ILogon = res.view.toObject()\n  expect(o).toBeTruthy()\n  expect(o.Password).toEqual('consectetur')\n  expect(o.Username).toEqual('sit')\n})\n\ntest('1 gap', async () => {\n  const gap = logon.replace('108=62441|', '108=62441|9999=im not here')\n  const res: ParsingResult = await setup.client.parseText(gap)\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual(MsgType.Logon)\n  const unknown: SegmentDescription = res.view.structure.layout['.undefined']\n  expect(unknown).toBeTruthy()\n  expect(unknown.startTag).toEqual(9999)\n  expect(unknown.startPosition).toEqual(10)\n  const o: ILogon = res.view.toObject()\n  expect(o).toBeTruthy()\n  expect(o.Password).toEqual('consectetur')\n  expect(o.Username).toEqual('sit')\n})\n\ntest('1 gap next to 1 gap', async () => {\n  const gap = logon.replace('108=62441|', '108=62441|1=gap|2=gap|')\n  const res: ParsingResult = await setup.client.parseText(gap)\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual(MsgType.Logon)\n  const unknowns: SegmentDescription[] = res.view.structure.layout['.undefined']\n  expect(unknowns).toBeTruthy()\n  expect(Array.isArray(unknowns)).toEqual(true)\n  expect(unknowns[0].startTag).toEqual(1)\n  expect(unknowns[0].startPosition).toEqual(10)\n  expect(unknowns[1].startTag).toEqual(2)\n  expect(unknowns[1].startPosition).toEqual(11)\n  const o: ILogon = res.view.toObject()\n  expect(o).toBeTruthy()\n  expect(o.Password).toEqual('consectetur')\n  expect(o.Username).toEqual('sit')\n})\n\ntest('1 gap undefined msg', async () => {\n  const gap = logon.replace('108=62441|', '108=62441|9999=im not here')\n  const res: ParsingResult = await setup.client.parseText(gap)\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual(MsgType.Logon)\n  expect(res.view.getUndefined()).toBeTruthy()\n  expect(res.view.undefinedForMsg()).toEqual('undefined tag = 9999')\n})\n\ntest('2 gap undefined msg', async () => {\n  const gap = logon.replace('108=62441|', '108=62441|1=gap|2=gap|')\n  const res: ParsingResult = await setup.client.parseText(gap)\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual(MsgType.Logon)\n  expect(res.view.getUndefined()).toBeTruthy()\n  expect(res.view.undefinedForMsg()).toEqual('undefined tags = 1, 2')\n})\n"]}