{"version":3,"file":"ascii-encoder.test.js","sourceRoot":"","sources":["../../../src/test/ascii/ascii-encoder.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata'\n\nimport { ComponentFieldDefinition, FixDefinitions, MessageDefinition } from '../../dictionary/definition'\nimport { ElasticBuffer, Tags } from '../../buffer'\nimport { AsciiChars, AsciiEncoder, TimeFormatter } from '../../buffer/ascii'\nimport { ILooseObject } from '../../collections/collection'\nimport {\n  IInstrument,\n  INewOrderSingle,\n  IOrderQtyData,\n  IStandardHeader,\n  ITradeCaptureReportRequest,\n  ITrdCapDtGrpNoDates,\n  OrdType,\n  SecurityIDSource,\n  SecurityType,\n  Side,\n  SubscriptionRequestType,\n  TimeInForce,\n  TradeRequestType\n} from '../../types/FIX4.4/quickfix'\nimport { MsgType } from '../../index'\nimport { ContainedFieldSet } from '../../dictionary/contained'\nimport { AsciiMsgTransmitter } from '../../transport/ascii/ascii-msg-transmitter'\nimport { Setup } from '../env/setup'\nimport { ParsingResult } from '../env/parsing-result'\n\nlet definitions: FixDefinitions\nlet session: AsciiMsgTransmitter\nlet encoder: AsciiEncoder\nlet nos: MessageDefinition\nlet er: MessageDefinition\n\nconst localDate: Date = new Date(2018, 6, 25)\nconst utcTimeStamp: Date = new Date(Date.UTC(2018, 5, 10, 16, 35, 0, 246))\nconst utcDate: Date = new Date(Date.UTC(2018, 5, 10, 0, 0, 0, 0))\nconst utcTime: Date = new Date(Date.UTC(2018, 0, 1, 16, 35, 0, 246))\nlet setup: Setup\nlet buffer: ElasticBuffer\n\nbeforeAll(async () => {\n  setup = new Setup('session/qf-fix44.json', null)\n  await setup.init()\n  definitions = setup.definitions\n  const config = setup.clientConfig\n  definitions = config.definitions\n  session = setup.client.transmitter as AsciiMsgTransmitter\n  buffer = setup.client.txBuffer\n  encoder = session.encoder as AsciiEncoder\n  nos = definitions.message.get('NewOrderSingle')\n  er = definitions.message.get('ExecutionReport')\n}, 45000)\n\ntest('expect a definition ', () => {\n  expect(nos).toBeTruthy()\n})\n\nfunction toFix (o: ILooseObject, set?: ContainedFieldSet, enc?: AsciiEncoder): string {\n  const theEncode = enc ? enc : encoder\n  session.buffer.reset()\n  if (set) {\n    theEncode.encode(o, set.name)\n  } else {\n    theEncode.encode(o, nos.name)\n  }\n  return session.buffer.toString()\n}\n\nfunction toFixMessage (o: ILooseObject, msg: MessageDefinition): string {\n  session.encodeMessage(msg.msgType, o)\n  return session.buffer.toString()\n}\n\ntest('encode heartbeat', async () => {\n  const factory = session.config.factory\n  const hb = factory.heartbeat('test01')\n  const hbd = definitions.message.get('Heartbeat')\n  const fix = toFixMessage(hb, hbd)\n  expect(fix).toBeTruthy()\n  const res: ParsingResult = await setup.client.parseText(fix)\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual('0')\n  const len = res.view.getTyped(Tags.BodyLengthTag)\n  const expected = fix.length - '8=FIX.4.4|9=0000081|'.length - '10=159|'.length\n  expect(len).toEqual(expected)\n})\n\ntest('encode custom header PossDupFlag', () => {\n  const no: ILooseObject = {\n    StandardHeader: {\n      PossDupFlag: true\n    }\n  }\n  const fix: string = toFixMessage(no, definitions.message.get('Heartbeat'))\n  expect(fix).toMatch('43=Y|')\n})\n\ntest('encode custom header PossDupFlag', () => {\n  const no: ILooseObject = {\n    StandardHeader: {\n      MsgSeqNum: 9999\n    }\n  }\n  const fix: string = toFixMessage(no, definitions.message.get('Heartbeat'))\n  expect(fix).toMatch('34=9999|')\n})\n\ntest('encode string ClOrdID ', () => {\n  const no: ILooseObject = {}\n  no.ClOrdID = 'Order-a'\n  const fix: string = toFix(no)\n  expect(fix).toEqual('11=Order-a|')\n})\n\ntest('should not encode empty string', () => {\n  const no: ILooseObject = {}\n  no.ClOrdID = ''\n  const fix: string = toFix(no)\n  expect(fix).toEqual('')\n})\n\ntest('should not encode null string', () => {\n  const no: ILooseObject = {}\n  no.ClOrdID = null\n  const fix: string = toFix(no)\n  expect(fix).toEqual('')\n})\n\ntest('encode +ve numeric (int) Price ', () => {\n  const no: ILooseObject = {}\n  no.Price = 100\n  const fix: string = toFix(no)\n  expect(fix).toEqual('44=100|')\n})\n\ntest('encode -ve numeric (int) Price ', () => {\n  const no: ILooseObject = {}\n  no.Price = -100\n  const fix: string = toFix(no)\n  expect(fix).toEqual('44=-100|')\n})\n\ntest('encode +ve numeric (double 8dp) Price ', () => {\n  const no: ILooseObject = {}\n  no.Price = 123.12345678\n  const fix: string = toFix(no)\n  expect(fix).toEqual('44=123.12345678|')\n})\n\ntest('encode +ve numeric (double 14dp) Price ', () => {\n  const no: ILooseObject = {}\n  no.Price = 123.12345678901234\n  const fix: string = toFix(no)\n  expect(fix).toEqual('44=123.12345678901234|')\n})\n\ntest('encode -ve numeric (double 14dp) Price ', () => {\n  const no: ILooseObject = {}\n  no.Price = -123.12345678901234\n  const fix: string = toFix(no)\n  expect(fix).toEqual('44=-123.12345678901234|')\n})\n\ntest('encode +ve string Price ', () => {\n  const no: ILooseObject = {}\n  no.Price = '123.12345678901234'\n  const fix: string = toFix(no)\n  expect(fix).toEqual('44=123.12345678901234|')\n})\n\ntest('encode LocalDate TradeDate ', () => {\n  const no: ILooseObject = {}\n  no.TradeDate = localDate\n  const fix: string = toFix(no)\n  expect(fix).toEqual('75=20180725|')\n})\n\ntest('encode UTCTIMESTAMP ExpireTime ', () => {\n  const no: ILooseObject = {}\n  no.ExpireTime = utcTimeStamp\n  const fix: string = toFix(no)\n  expect(fix).toEqual('126=20180610-16:35:00.246|')\n})\n\ntest('encode UTCTIMESTAMP ExpireTime - check padding', () => {\n  const no: ILooseObject = {}\n  no.ExpireTime = new Date(Date.UTC(2018, 0, 1, 0, 0, 0, 1))\n  const fix: string = toFix(no)\n  expect(fix).toEqual('126=20180101-00:00:00.001|')\n})\n\ntest('encode UTCDATEONLY MDEntryDate', () => {\n  const mdGrp: ComponentFieldDefinition = definitions.component.get('MDFullGrp')\n  expect(mdGrp).toBeTruthy()\n  const grp: ILooseObject = {\n    NoMDEntries: [\n      {\n        MDEntryType: '0',\n        MDEntryDate: utcDate\n      }\n    ]\n  }\n  const fix: string = toFix(grp, mdGrp)\n  expect(fix).toEqual('268=1|269=0|272=20180610|')\n})\n\ntest('encode UTCTIMEONLY MDEntryTime', () => {\n  const mdGrp: ComponentFieldDefinition = definitions.component.get('MDFullGrp')\n  expect(mdGrp).toBeTruthy()\n  const grp: ILooseObject = {\n    NoMDEntries: [\n      {\n        MDEntryType: '0',\n        MDEntryTime: utcTime\n      }\n    ]\n  }\n  const fix: string = toFix(grp, mdGrp)\n  expect(fix).toEqual('268=1|269=0|273=16:35:00.246|')\n})\n\nfunction getTCR1 (): ITradeCaptureReportRequest {\n  const d0 = new Date(Date.UTC(2018, 11, 1, 0, 0, 0))\n  const d1 = new Date(Date.UTC(2018, 11, 2, 0, 0, 0))\n  return {\n    TradeRequestID: 'all-trades',\n    TradeRequestType: TradeRequestType.AllTrades,\n    SubscriptionRequestType: SubscriptionRequestType.SnapshotPlusUpdates,\n    TrdCapDtGrp: {\n      NoDates: [\n        {\n          TransactTime: d0\n        },\n        {\n          TransactTime: d1\n        }\n      ] as ITrdCapDtGrpNoDates[]\n    }\n  } as ITradeCaptureReportRequest\n}\n\ntest('encode TradeCaptureReportRequest with TransactTime', () => {\n  const tcr = getTCR1()\n  const d = definitions.message.get('TradeCaptureReportRequest')\n  const fix: string = toFix(tcr, d)\n  expect(fix).toEqual('568=all-trades|569=0|263=1|580=2|60=20181201-00:00:00.000|60=20181202-00:00:00.000|')\n})\n\ntest('encode BOOLEAN (true) ReportToExch', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = {}\n  e.ReportToExch = true\n  const fix: string = toFix(e, er)\n  expect(fix).toEqual('113=Y|')\n})\n\ntest('encode BOOLEAN (truthy) ReportToExch', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = {}\n  e.ReportToExch = 1\n  const fix: string = toFix(e, er)\n  expect(fix).toEqual('113=Y|')\n})\n\ntest('encode BOOLEAN (string) ReportToExch', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = {}\n  e.ReportToExch = 'TRUE'\n  const fix: string = toFix(e, er)\n  expect(fix).toEqual('113=Y|')\n})\n\ntest('encode BOOLEAN (false) ReportToExch', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = {}\n  e.ReportToExch = false\n  const fix: string = toFix(e, er)\n  expect(fix).toEqual('113=N|')\n})\n\ntest('encode BOOLEAN (falsy) ReportToExch', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = {}\n  e.ReportToExch = 0\n  const fix: string = toFix(e, er)\n  expect(fix).toEqual('113=N|')\n})\n\ntest('encode RawData EncodedText', () => {\n  expect(er).toBeTruthy()\n  const toEncode: string = 'this is fix'\n  const e: ILooseObject = {\n    EncodedText: Buffer.alloc(toEncode.length, toEncode, 'utf8')\n  }\n  const fix: string = toFix(e, er)\n  expect(fix).toEqual('354=11|355=this is fix|')\n})\n\ntest('encode empty RawData EncodedText', () => {\n  expect(er).toBeTruthy()\n  const toEncode: string = ''\n  const e: ILooseObject = {\n    EncodedText: Buffer.alloc(toEncode.length, toEncode, 'utf8')\n  }\n  const fix: string = toFix(e, er)\n  expect(fix).toEqual('354=0|355=|')\n})\n\nfunction getParties (): ILooseObject {\n  return {\n    'Parties': {\n      'NoPartyIDs': [\n        {\n          'PartyID': 'magna.',\n          'PartyIDSource': '9',\n          'PartyRole': 28\n        },\n        {\n          'PartyID': 'iaculis',\n          'PartyIDSource': 'F',\n          'PartyRole': 2\n        }]\n    }\n  }\n}\n\nfunction getPartiesNoPartyID (): ILooseObject {\n  return {\n    'Parties': {\n      'NoPartyIDs': [\n        {\n                    // missing PartyID\n          'PartyIDSource': '9',\n          'PartyRole': 28\n        }\n      ]\n    }\n  }\n}\n\ntest('encode repeated group of simple repository Parties', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = getParties()\n  const fix: string = toFix(e, er)\n  expect(fix).toEqual('453=2|448=magna.|447=9|452=28|448=iaculis|447=F|452=2|')\n})\n\ntest('use a carat as log delimiter', () => {\n  expect(er).toBeTruthy()\n  const caratEncoder = new AsciiEncoder(session.buffer, definitions, new TimeFormatter(session.buffer), AsciiChars.Soh, AsciiChars.Carat)\n  const e: ILooseObject = getParties()\n  const fix: string = toFix(e, er, caratEncoder)\n  expect(fix).toEqual('453=2^448=magna.^447=9^452=28^448=iaculis^447=F^452=2^')\n})\n\ntest('use a carat as log delimiter with Soh in buffer to show encoding still works', () => {\n  expect(er).toBeTruthy()\n  const caratEncoder = new AsciiEncoder(session.buffer, definitions, new TimeFormatter(session.buffer), AsciiChars.Soh, AsciiChars.Carat)\n  const e: ILooseObject = getParties()\n  const fix: string = toFix(e, er, caratEncoder)\n  expect(fix).toEqual('453=2^448=magna.^447=9^452=28^448=iaculis^447=F^452=2^')\n  const trimmed = caratEncoder.trim().toString()\n  expect(trimmed).toEqual('453=2\u0001448=magna.\u0001447=9\u0001452=28\u0001448=iaculis\u0001447=F\u0001452=2\u0001')\n})\n\ntest('encode repeated group with no PartyID - should encode', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = getPartiesNoPartyID()\n  const fix: string = toFix(e, er)\n  expect(fix).toEqual('453=1|447=9|452=28|')\n})\n\ntest('encode repeated group with no array - should throw', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = {\n    'Parties': {\n      'NoPartyIDs': 'should be an array'\n    }\n  }\n  function run (): void {\n    toFix(e, er)\n  }\n  expect(run).toThrow(/expected array/)\n})\n\ntest('encode repeated group with empty array', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = {\n    'Parties': {\n      'NoPartyIDs': []\n    }\n  }\n  expect(toFix(e, er)).toEqual('453=0|')\n})\n\nfunction getInstrument (): ILooseObject {\n  return {\n    'Instrument': {\n      'Symbol': 'ac,',\n      'SymbolSfx': 'non',\n      'SecurityID': 'Pellentesque',\n      'SecurityIDSource': 'B',\n      'Product': 2\n    }\n  }\n}\n\nfunction getInstrumentNestedGroup (): ILooseObject {\n  return {\n    'Instrument': {\n      'Symbol': 'ac,',\n      'SymbolSfx': 'non',\n      'SecurityID': 'Pellentesque',\n      'SecurityIDSource': 'B',\n      'SecAltIDGrp': {\n        'NoSecurityAltID': [\n          {\n            'SecurityAltID': 'lorem',\n            'SecurityAltIDSource': 'consequat'\n          },\n          {\n            'SecurityAltID': 'sapien',\n            'SecurityAltIDSource': 'tempor'\n          }\n        ]\n      },\n      'Product': 2\n    }\n  }\n}\n\ntest('encode component', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = getInstrument()\n  expect(toFix(e, er)).toEqual('55=ac,|65=non|48=Pellentesque|22=B|460=2|')\n})\n\ntest('encode component nested group', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = getInstrumentNestedGroup()\n  expect(toFix(e, er)).toEqual('55=ac,|65=non|48=Pellentesque|22=B|454=2|455=lorem|456=consequat|455=sapien|456=tempor|460=2|')\n})\n\ntest('encode group missing delimiter', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = getInstrumentNestedGroup()\n  delete e.Instrument.SecAltIDGrp.NoSecurityAltID[0]['SecurityAltID']\n  function run () {\n    toFix(e, er)\n  }\n  expect(run).toThrow(/group instance \\[1] inconsisent delimeter 455 expected tag 456/)\n})\n\ntest('encode group not an array of', () => {\n  expect(er).toBeTruthy()\n  const e: ILooseObject = {\n    'Instrument': {\n      'Symbol': 'ac,',\n      'SymbolSfx': 'non',\n      'SecurityID': 'Pellentesque',\n      'SecurityIDSource': 'B',\n      'SecAltIDGrp': {\n        'NoSecurityAltID': {\n          elements: []\n        }\n      },\n      'Product': 2\n    }\n  }\n  function run () {\n    toFix(e, er)\n  }\n  expect(run).toThrow(/expected array instance for group NoSecurityAltID/)\n})\n\nfunction getCompID (securityType: SecurityType): string {\n  switch (securityType) {\n    case SecurityType.CommonStock: {\n      return 'DepA'\n    }\n\n    case SecurityType.CorporateBond: {\n      return 'DepB'\n    }\n\n    case SecurityType.ConvertibleBond: {\n      return 'DepC'\n    }\n\n    default:\n      return 'DepD'\n  }\n}\n\nfunction createOrder (id: number, symbol: string, securityType: SecurityType, side: Side, qty: number, price: number): INewOrderSingle {\n  return {\n    StandardHeader: {\n      DeliverToCompID: getCompID(securityType)\n    } as IStandardHeader,\n    ClOrdID: `Cli${id}`,\n    Account: 'MyAcc',\n    Side: side,\n    Price: price,\n    OrdType: OrdType.Limit,\n    OrderQtyData: {\n      OrderQty: qty\n    } as IOrderQtyData,\n    Instrument: {\n      SecurityType: securityType,\n      Symbol: symbol,\n      SecurityID: '459200101',\n      SecurityIDSource: SecurityIDSource.IsinNumber\n    } as IInstrument,\n    TimeInForce: TimeInForce.Day\n  } as INewOrderSingle\n}\n\ntest('encode custom header 1 - expect DeliverToCompID DepA', async () => {\n  const type = SecurityType.CommonStock\n  const o1 = createOrder(1, 'MS', type, Side.Buy, 100, 1000.0)\n  const nosd = definitions.message.get('NewOrderSingle')\n  const fix = toFixMessage(o1, nosd)\n  expect(fix).toBeTruthy()\n  const res: ParsingResult = await setup.client.parseText(fix)\n  const tag = res.view.getTyped('DeliverToCompID')\n  expect(tag).toEqual('DepA')\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual(MsgType.NewOrderSingle)\n  const parsed: INewOrderSingle = res.view.toObject()\n  expect(parsed.StandardHeader.DeliverToCompID).toEqual('DepA')\n})\n\ntest('encode custom header 2 - expect DeliverToCompID DepC', async () => {\n  const type = SecurityType.ConvertibleBond\n  const o1 = createOrder(1, 'MSCb', type, Side.Buy, 100, 1000.0)\n  const nosd = definitions.message.get('NewOrderSingle')\n  const fix = toFixMessage(o1, nosd)\n  expect(fix).toBeTruthy()\n  const res: ParsingResult = await setup.client.parseText(fix)\n  const tag = res.view.getTyped('DeliverToCompID')\n  expect(tag).toEqual('DepC')\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual(MsgType.NewOrderSingle)\n  const parsed: INewOrderSingle = res.view.toObject()\n  expect(parsed.StandardHeader.DeliverToCompID).toEqual('DepC')\n})\n\ntest('encode custom header - include MsgSeqNum (for resends we do not want to overwrite)', async () => {\n  const type = SecurityType.ConvertibleBond\n  const seqNum: number = 10\n  const o1 = createOrder(1, 'MSCb', type, Side.Buy, 100, 1000.0)\n  o1.StandardHeader.MsgSeqNum = seqNum\n  o1.StandardHeader.PossDupFlag = true\n  const nosd = definitions.message.get('NewOrderSingle')\n  expect(nosd).toBeTruthy()\n  const fix = toFixMessage(o1, nosd)\n  expect(fix).toBeTruthy()\n  const res: ParsingResult = await setup.client.parseText(fix)\n  expect(res.event).toEqual('msg')\n  expect(res.msgType).toEqual(MsgType.NewOrderSingle)\n  const parsed: INewOrderSingle = res.view.toObject()\n  const h: IStandardHeader = parsed.StandardHeader\n  expect(h.DeliverToCompID).toEqual('DepC')\n  expect(h.MsgSeqNum).toEqual(seqNum)\n  expect(h.BeginString).toEqual('FIX.4.4')\n  expect(h.PossDupFlag).toEqual(true)\n  expect(h.MsgType).toEqual(MsgType.NewOrderSingle)\n})\n"]}