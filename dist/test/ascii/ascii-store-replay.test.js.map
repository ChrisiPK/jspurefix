{"version":3,"file":"ascii-store-replay.test.js","sourceRoot":"","sources":["../../../src/test/ascii/ascii-store-replay.test.ts"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata'\n\nimport * as path from 'path'\nimport { FixDefinitions } from '../../dictionary/definition'\n\nimport {\n  IFixMsgStoreRecord\n} from '../../store'\nimport { MsgType } from '../../types'\nimport { ISequenceReset } from '../../types/FIX4.4/repo'\n\nimport { Setup } from '../env/setup'\nimport { TestRecovery } from '../env/test-recovery'\n\nconst root: string = path.join(__dirname, '../../../data')\n\nlet definitions: FixDefinitions\n\nlet server: TestRecovery\nlet client: TestRecovery\nlet setup: Setup = null\n\nbeforeAll(async () => {\n  setup = new Setup(\n    'session/test-initiator.json',\n    'session/test-acceptor.json')\n  await setup.init()\n  definitions = setup.definitions\n  const serverConfig = setup.serverConfig\n  const clientConfig = setup.clientConfig\n  const views = await setup.server.replayer.replayFixFile(path.join(root, 'examples/FIX.4.4/jsfix.test_client.txt'))\n  server = new TestRecovery(views, serverConfig)\n  client = new TestRecovery(views, clientConfig)\n  await server.populate()\n  await client.populate()\n}, 45000)\n\ntest('expect 15 messages in log', () => {\n  expect(server.views.length).toEqual(15)\n  expect(client.views.length).toEqual(15)\n})\n\n/*\nclient: (all client messages)\n8=FIX4.4|9=000124|35=AD|49=init-tls-comp|56=accept-tls-comp|34=2|57=fix|52=20210307-16:16:44.388|568=all-trades|569=0|263=1|580=1|75=20210307|10=187|\n8=FIX4.4|9=000112|35=0|49=init-tls-comp|56=accept-tls-comp|34=3|57=fix|52=20210307-16:17:14.431|112=Sun, 07 Mar 2021 16:17:14 GMT|10=220|\n8=FIX4.4|9=000109|35=5|49=init-tls-comp|56=accept-tls-comp|34=4|57=fix|52=20210307-16:17:16.397|58=test_client initiate logout|10=191|\n */\n\n/*\nserver: (application only)\n\n8=FIX4.4|9=000112|35=AQ|49=accept-tls-comp|56=init-tls-comp|34=2|57=fix|52=20210307-16:16:44.429|568=all-trades|569=0|749=0|750=0|10=142|\n8=FIX4.4|9=000209|35=AE|49=accept-tls-comp|56=init-tls-comp|34=3|57=fix|52=20210307-16:16:44.430|571=100000|487=0|856=0|828=0|17=600000|39=2|570=N|55=Platinum|48=Platinum.INC|32=172|31=7.36|75=20210307|60=20210307-16:16:44.430|10=043|\n8=FIX4.4|9=000202|35=AE|49=accept-tls-comp|56=init-tls-comp|34=4|57=fix|52=20210307-16:16:44.431|571=100001|487=0|856=0|828=0|17=600001|39=2|570=N|55=Gold|48=Gold.INC|32=175|31=83.67|75=20210307|60=20210307-16:16:44.430|10=219|\n8=FIX4.4|9=000210|35=AE|49=accept-tls-comp|56=init-tls-comp|34=5|57=fix|52=20210307-16:16:44.432|571=100002|487=0|856=0|828=0|17=600002|39=2|570=N|55=Platinum|48=Platinum.INC|32=146|31=41.79|75=20210307|60=20210307-16:16:44.430|10=097|\n8=FIX4.4|9=000211|35=AE|49=accept-tls-comp|56=init-tls-comp|34=6|57=fix|52=20210307-16:16:44.432|571=100003|487=0|856=0|828=0|17=600003|39=2|570=N|55=Magnesium|48=Magnesium.INC|32=156|31=8.02|75=20210307|60=20210307-16:16:44.430|10=227|\n8=FIX4.4|9=000202|35=AE|49=accept-tls-comp|56=init-tls-comp|34=7|57=fix|52=20210307-16:16:44.432|571=100004|487=0|856=0|828=0|17=600004|39=2|570=N|55=Gold|48=Gold.INC|32=136|31=32.13|75=20210307|60=20210307-16:16:44.430|10=211|\n8=FIX4.4|9=000112|35=AQ|49=accept-tls-comp|56=init-tls-comp|34=8|57=fix|52=20210307-16:16:44.433|568=all-trades|569=0|749=0|750=1|10=144|\n8=FIX4.4|9=000202|35=AE|49=accept-tls-comp|56=init-tls-comp|34=9|57=fix|52=20210307-16:16:59.449|571=100005|487=0|856=0|828=0|17=600005|39=2|570=N|55=Gold|48=Gold.INC|32=166|31=53.91|75=20210307|60=20210307-16:16:59.449|10=001|\n8=FIX4.4|9=000206|35=AE|49=accept-tls-comp|56=init-tls-comp|34=10|57=fix|52=20210307-16:17:14.477|571=100006|487=0|856=0|828=0|17=600006|39=2|570=N|55=Silver|48=Silver.INC|32=105|31=61.2|75=20210307|60=20210307-16:17:14.477|10=191|\n */\n\ntest('server store states',async () => {\n  const s1 = await server.recovery.store.getState()\n  expect(s1.length).toEqual(9)\n})\n\ntest('client store states',async () => {\n  const s1 = await client.recovery.store.getState()\n  expect(s1.length).toEqual(1)\n})\n\ntest('server replay request from seq=1 to seq=10', async () => {\n  const vec = await server.recovery.getResendRequest(1, 10)\n  expect(vec).toBeTruthy()\n  expect(Array.isArray(vec))\n  expect(vec.length).toEqual(10)\n\n  checkSeqReset(vec[0], 1, 2)\n\n  expect(vec[1].msgType).toEqual(MsgType.TradeCaptureReportRequestAck)\n  expect(vec[1].seqNum).toEqual(2)\n\n  for (let i = 2; i <= 6; ++i) {\n    expect(vec[i].msgType).toEqual(MsgType.TradeCaptureReport)\n    expect(vec[i].seqNum).toEqual(i + 1)\n  }\n\n  expect(vec[7].msgType).toEqual(MsgType.TradeCaptureReportRequestAck)\n  expect(vec[7].seqNum).toEqual(8)\n\n  for (let i = 8; i < 10; ++i) {\n    expect(vec[i].msgType).toEqual(MsgType.TradeCaptureReport)\n    expect(vec[i].seqNum).toEqual(i + 1)\n  }\n})\n\ntest('client replay request from seq=1 to seq=10', async () => {\n  const vec = await client.recovery.getResendRequest(1, 10)\n  expect(vec).toBeTruthy()\n  expect(Array.isArray(vec))\n  expect(vec.length).toEqual(3)\n\n  checkSeqReset(vec[0], 1, 2)\n\n  expect(vec[1].msgType).toEqual(MsgType.TradeCaptureReportRequest)\n  expect(vec[1].seqNum).toEqual(2)\n\n  checkSeqReset(vec[2], 3, 11)\n})\n\nfunction checkSeqReset (rec: IFixMsgStoreRecord, from: number, to: number) {\n  const reset: ISequenceReset = rec.obj as ISequenceReset\n  expect(rec.msgType).toEqual(MsgType.SequenceReset)\n  expect(rec.obj).toBeTruthy()\n  expect(rec.seqNum).toEqual(to)\n  expect(reset.GapFillFlag).toBeTruthy()\n  expect(reset.StandardHeader.MsgType).toEqual(MsgType.SequenceReset)\n  expect(reset.StandardHeader.PossDupFlag).toBeTruthy()\n  expect(reset.StandardHeader.MsgSeqNum).toEqual(from)\n}\n\n// expect to gap fill entire request - and move expected seqNo to 11\n// which will be the next message sent\ntest('client replay request from seq=4 to seq=10', async () => {\n  const vec = await client.recovery.getResendRequest(4, 10)\n  expect(vec).toBeTruthy()\n  expect(Array.isArray(vec))\n  expect(vec.length).toEqual(1)\n  checkSeqReset(vec[0], 4, 11)\n})\n"]}