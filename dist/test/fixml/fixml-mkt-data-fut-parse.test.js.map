{"version":3,"file":"fixml-mkt-data-fut-parse.test.js","sourceRoot":"","sources":["../../../src/test/fixml/fixml-mkt-data-fut-parse.test.ts"],"names":[],"mappings":"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","sourcesContent":["// use the compiled interfaces for intelisense\nimport 'reflect-metadata'\n\nimport { ToViews } from '../env/to-views'\nimport { IInstrument, IMDFullGrp, IMarketDataSnapshotFullRefresh } from '../../types/FIXML50SP2'\n\nconst testFolder: string = 'examples/FIXML/cme/md/futures/'\nconst toViews: ToViews = new ToViews(testFolder)\n\nbeforeAll(async () => {\n  await toViews.load()\n}, 45000)\n\ntest('expect a view from fix msg', () => {\n  const views = toViews.views\n  expect(views.length).toEqual(1)\n  const v0 = views[0]\n  expect(v0).toBeTruthy()\n})\n\ntest('test msg structure', () => {\n  const views = toViews.views\n  const v0: IMarketDataSnapshotFullRefresh = views[0].toObject()\n  expect(v0).toBeTruthy()\n  expect(v0.ClearingBusinessDate).toEqual(new Date('2008-12-09T00:00:00.000Z'))\n  expect(v0.Instrument).toBeTruthy()\n  expect(v0.MDFullGrp).toBeTruthy()\n})\n\ntest('expect an instrument from fix msg', () => {\n  const views = toViews.views\n  const v0 = views[0].getView('Instrument')\n  expect(v0).toBeTruthy()\n  const i: IInstrument = v0.toObject()\n  expect(i).toBeTruthy()\n  expect(i.Symbol).toEqual('ZCZ9')\n  expect(i.SecurityID).toEqual('01')\n  expect(i.SecurityIDSource).toEqual('H')\n  expect(i.CFICode).toEqual('FFCPSO')\n  expect(i.SecurityType).toEqual('FUT')\n  expect(i.MaturityMonthYear).toEqual('200906')\n  expect(i.SecurityExchange).toEqual('CME')\n})\n\ntest('expect an md group from fix msg', () => {\n  const views = toViews.views\n  const v0 = views[0].getView('MDFullGrp')\n  expect(v0).toBeTruthy()\n  const fullGrp: IMDFullGrp[] = v0.toObject()\n  expect(fullGrp).toBeTruthy()\n  expect(Array.isArray(fullGrp))\n  expect(fullGrp.length).toEqual(1)\n  const first: IMDFullGrp = fullGrp[0]\n  expect(first).toBeTruthy()\n  expect(first.MDEntryPx).toEqual(18.97)\n  expect(first.MDEntryType).toEqual('6')\n  expect(first.MDMkt).toEqual('CME')\n})\n"]}