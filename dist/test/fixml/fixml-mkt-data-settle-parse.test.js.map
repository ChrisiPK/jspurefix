{"version":3,"file":"fixml-mkt-data-settle-parse.test.js","sourceRoot":"","sources":["../../../src/test/fixml/fixml-mkt-data-settle-parse.test.ts"],"names":[],"mappings":";;;;;;;;;;;AACA,4BAAyB;AAEzB,8CAAyC;AAGzC,MAAM,UAAU,GAAW,+BAA+B,CAAA;AAC1D,MAAM,OAAO,GAAY,IAAI,kBAAO,CAAC,UAAU,CAAC,CAAA;AAEhD,SAAS,CAAC,GAAS,EAAE;IACnB,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;AACtB,CAAC,CAAA,EAAE,KAAK,CAAC,CAAA;AAET,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;IACvC,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAA;IAC3B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IAC/B,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IACnB,MAAM,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,CAAA;IACvB,MAAM,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAA;IACnB,MAAM,CAAC,EAAE,CAAC,CAAC,UAAU,EAAE,CAAA;AACzB,CAAC,CAAC,CAAA;AAEF,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;IACvC,MAAM,KAAK,GAAW,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAA;IAC9C,MAAM,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAA;IAC1B,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAA;IAChC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,CAAA;IAC/C,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;AACvC,CAAC,CAAC,CAAA","sourcesContent":["// use the compiled interfaces for intelisense\nimport 'reflect-metadata'\n\nimport { ToViews } from '../env/to-views'\nimport { IBatch } from '../../types/FIXML50SP2/set/batch'\n\nconst testFolder: string = 'examples/FIXML/cme/md/settle/'\nconst toViews: ToViews = new ToViews(testFolder)\n\nbeforeAll(async () => {\n  await toViews.load()\n}, 45000)\n\ntest('expect 2 views from fix msg', () => {\n  const views = toViews.views\n  expect(views.length).toEqual(2)\n  const v0 = views[0]\n  expect(v0).toBeTruthy()\n  const v1 = views[1]\n  expect(v1).toBeTruthy()\n})\n\ntest('expect 1 batch from fix msg', () => {\n  const batch: IBatch = toViews.batch.toObject()\n  expect(batch).toBeTruthy()\n  expect(batch.Batch).toBeTruthy()\n  expect(Array.isArray(batch.Batch)).toBeTruthy()\n  expect(batch.Batch.length).toEqual(2)\n})\n"]}