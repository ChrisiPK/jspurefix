{"version":3,"file":"msg-encoder.js","sourceRoot":"","sources":["../../src/buffer/msg-encoder.ts"],"names":[],"mappings":";;;AAGA,iCAAgC;AAEhC,MAAsB,UAAW,SAAQ,MAAM,CAAC,YAAY;IAC1D,YAAuC,WAA2B;QAChE,KAAK,EAAE,CAAA;QAD8B,gBAAW,GAAX,WAAW,CAAgB;IAElE,CAAC;IAEM,MAAM,CAAE,CAAe,EAAE,IAAY;QAC1C,MAAM,GAAG,GAAsB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;QACzG,IAAI,CAAC,GAAG,EAAE;YACR,OAAM;SACP;QACD,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;IACxB,CAAC;CAKF;AAhBD,gCAgBC","sourcesContent":["import { ILooseObject } from '../collections/collection'\nimport { FixDefinitions } from '../dictionary/definition'\nimport { ContainedFieldSet } from '../dictionary/contained'\nimport * as events from 'events'\n\nexport abstract class MsgEncoder extends events.EventEmitter {\n  protected constructor (public readonly definitions: FixDefinitions) {\n    super()\n  }\n\n  public encode (o: ILooseObject, name: string): void {\n    const set: ContainedFieldSet = this.definitions.message.get(name) || this.definitions.component.get(name)\n    if (!set) {\n      return\n    }\n    this.encodeSet(o, set)\n  }\n\n  public abstract reset (): void\n  public abstract trim (): Buffer\n  public abstract encodeSet (o: ILooseObject, set: ContainedFieldSet): void\n}\n"]}