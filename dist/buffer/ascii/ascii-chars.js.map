{"version":3,"file":"ascii-chars.js","sourceRoot":"","sources":["../../../src/buffer/ascii/ascii-chars.ts"],"names":[],"mappings":";;;AAAA,MAAsB,UAAU;IAsBvB,MAAM,CAAC,SAAS,CAAE,CAAS;QAChC,OAAO,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;IACxB,CAAC;;AAxBH,gCAyBC;AAvBwB,gBAAK,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AACjC,gBAAK,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AACjC,uBAAY,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AACxC,eAAI,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAChC,cAAG,GAAW,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAChC,gBAAK,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AACjC,iBAAM,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAClC,eAAI,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAChC,gBAAK,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AACjC,YAAC,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAC7B,YAAC,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAC7B,eAAI,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAChC,eAAI,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAChC,cAAG,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAC/B,aAAE,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAC9B,aAAE,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAC9B,gBAAK,GAAW,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AACjC,aAAE,GAAW,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA;AAC/B,cAAG,GAAW,GAAG,CAAA","sourcesContent":["export abstract class AsciiChars {\n\n  public static readonly Minus: number = '-'.charCodeAt(0)\n  public static readonly Equal: number = '='.charCodeAt(0)\n  public static readonly ForwardSlash: number = '/'.charCodeAt(0)\n  public static readonly Plus: number = '+'.charCodeAt(0)\n  public static readonly Tab: number = '\\t'.charCodeAt(0)\n  public static readonly Colon: number = ':'.charCodeAt(0)\n  public static readonly Hyphen: number = '-'.charCodeAt(0)\n  public static readonly Pipe: number = '|'.charCodeAt(0)\n  public static readonly Carat: number = '^'.charCodeAt(0)\n  public static readonly N: number = 'N'.charCodeAt(0)\n  public static readonly Y: number = 'Y'.charCodeAt(0)\n  public static readonly Zero: number = '0'.charCodeAt(0)\n  public static readonly Nine: number = '9'.charCodeAt(0)\n  public static readonly Dot: number = '.'.charCodeAt(0)\n  public static readonly Eq: number = '='.charCodeAt(0)\n  public static readonly Dq: number = '\"'.charCodeAt(0)\n  public static readonly Space: number = ' '.charCodeAt(0)\n  public static readonly Cr: number = '\\n'.charCodeAt(0)\n  public static readonly Soh: number = 0x1\n\n  public static firstChar (s: string): number {\n    return s.charCodeAt(0)\n  }\n}\n"]}