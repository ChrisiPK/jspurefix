{"version":3,"file":"time-formatter.js","sourceRoot":"","sources":["../../../src/buffer/ascii/time-formatter.ts"],"names":[],"mappings":"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","sourcesContent":["import { AsciiChars } from './ascii-chars'\nimport { ElasticBuffer } from '../elastic-buffer'\nimport { ITimeFormatter } from './itime-formatter'\n\nexport class TimeFormatter implements ITimeFormatter {\n  constructor (public readonly buffer: ElasticBuffer, public readonly adjustLocal: boolean = false) {\n  }\n\n  public writeLocalDate (v: Date): void {\n    const buffer = this.buffer\n    buffer.writeWholeNumber(v.getFullYear())\n    buffer.writePaddedTensUnits(v.getMonth() + 1)\n    buffer.writePaddedTensUnits(v.getDate())\n  }\n\n  public writeUtcDate (v: Date): void {\n    const buffer = this.buffer\n    buffer.writeWholeNumber(v.getUTCFullYear())\n    buffer.writePaddedTensUnits(v.getUTCMonth() + 1)\n    buffer.writePaddedTensUnits(v.getUTCDate())\n  }\n\n  public writeUtcTimestamp (v: Date): void {\n    this.writeUtcDate(v)\n    this.buffer.writeChar(AsciiChars.Hyphen)\n    this.writeUtcTime(v)\n  }\n\n  public writeLocalTimestamp (v: Date): void {\n    this.writeLocalDate(v)\n    this.buffer.writeChar(AsciiChars.Hyphen)\n    this.writeLocalTime(v)\n  }\n\n  public writeUtcTime (v: Date): void {\n    const buffer = this.buffer\n    buffer.writePaddedTensUnits(v.getUTCHours())\n    buffer.writeChar(AsciiChars.Colon)\n    buffer.writePaddedTensUnits(v.getUTCMinutes())\n    buffer.writeChar(AsciiChars.Colon)\n    buffer.writePaddedTensUnits(v.getUTCSeconds())\n    const ms: number = v.getUTCMilliseconds()\n    buffer.writeChar(AsciiChars.Dot)\n    buffer.writePaddedHundreds(ms)\n  }\n\n  public writeLocalTime (v: Date): void {\n    const buffer = this.buffer\n    buffer.writePaddedTensUnits(v.getHours())\n    buffer.writeChar(AsciiChars.Colon)\n    buffer.writePaddedTensUnits(v.getMinutes())\n    buffer.writeChar(AsciiChars.Colon)\n    buffer.writePaddedTensUnits(v.getSeconds())\n    const ms: number = v.getMilliseconds()\n    buffer.writeChar(AsciiChars.Dot)\n    buffer.writePaddedHundreds(ms)\n  }\n\n  public getLocalTime (start: number): Date {\n    return this.getTime(start, false)\n  }\n\n  public getUtcTime (start: number): Date {\n    return this.getTime(start, true)\n  }\n\n  public getUtcDate (start: number): Date {\n    return this.getDate(start, true)\n  }\n\n  public getLocalDate (start: number): Date {\n    return this.getDate(start, false)\n  }\n\n  public getUtcTimestamp (start: number, end: number): Date {\n    return this.getTimestamp(start, end,true)\n  }\n\n  public getLocalTimestamp (start: number, end: number): Date {\n    return this.getTimestamp(start, end,false)\n  }\n\n  private getTimestamp (start: number, end: number, useUtc: boolean): Date {\n    const buffer = this.buffer\n    const n: number = buffer.getWholeNumber(start, start + 7)\n    if (n == null) {\n      return null\n    }\n    const monthDay: number = n % 10000\n    const month: number = Math.round(monthDay / 100)\n    const day: number = monthDay % 100\n    const year: number = Math.round(n / 10000)\n    const len = end - start\n    if (len === 8) {\n      let t: Date\n      if (useUtc) {\n        t = new Date(Date.UTC(year, month - 1, day, 0, 0, 0, 0))\n      } else {\n        t = new Date(year, month - 1, day, 0, 0, 0, 0)\n      }\n      if (this.adjustLocal) {\n        t = new Date(t.getTime() - t.getTimezoneOffset() * -60000)\n      }\n      return t\n    }\n\n    let offset: number = 8\n    if (buffer.get(start + offset) !== AsciiChars.Hyphen) {\n      return null\n    }\n\n    if (len < 17) {\n      return null\n    }\n\n    offset += 1\n    const hh: number = buffer.getWholeNumber(start + offset, start + offset + 1)\n    offset += 2\n    if (buffer.get(start + offset) !== AsciiChars.Colon) {\n      return null\n    }\n    offset += 1\n    const mm: number = buffer.getWholeNumber(start + offset, start + offset + 1)\n    offset += 2\n    if (buffer.get(start + offset) !== AsciiChars.Colon) {\n      return null\n    }\n    offset += 1\n    const ss: number = buffer.getWholeNumber(start + offset, start + offset + 1)\n    offset += 2\n    let ms: number = 0\n    if (buffer.get(start + offset) === AsciiChars.Dot) {\n      offset += 1\n      ms = buffer.getWholeNumber(start + offset, start + offset + 2)\n    }\n    let t: Date\n    if (useUtc) {\n      t = new Date(Date.UTC(year, month - 1, day, hh, mm, ss, ms))\n    } else {\n      t = new Date(year, month - 1, day, hh, mm, ss, ms)\n      if (this.adjustLocal) {\n        t = new Date(t.getTime() - t.getTimezoneOffset() * -60000)\n      }\n    }\n    return t\n  }\n\n  private getTime (start: number, useUtc: boolean): Date {\n    const buffer = this.buffer\n    let offset = 0\n    const hh: number = buffer.getWholeNumber(start + offset, start + offset + 1)\n    offset += 2\n    if (buffer.get(start + offset) !== AsciiChars.Colon) {\n      return null\n    }\n    offset += 1\n    const mm: number = buffer.getWholeNumber(start + offset, start + offset + 1)\n    offset += 2\n    if (buffer.get(start + offset) !== AsciiChars.Colon) {\n      return null\n    }\n    offset += 1\n    const ss: number = buffer.getWholeNumber(start + offset, start + offset + 1)\n    offset += 2\n    let ms: number = 0\n    if (buffer.get(start + offset) === AsciiChars.Dot) {\n      offset += 1\n      ms = buffer.getWholeNumber(start + offset, start + offset + 2)\n    }\n    let t: Date\n    if (useUtc) {\n      t = new Date(Date.UTC(0, 0, 0, hh, mm, ss, ms))\n    } else {\n      t = new Date(0, 0, 0, hh, mm, ss, ms)\n      if (this.adjustLocal) {\n        t = new Date(t.getTime() - t.getTimezoneOffset() * -60000)\n      }\n    }\n    return t\n  }\n\n  private getDate (start: number, useUtc: boolean): Date {\n\n    // = 20150417\n\n    const n: number = this.buffer.getWholeNumber(start, start + 7)\n    if (n == null) {\n      return null\n    }\n    const monthDay: number = n % 10000\n    const month: number = Math.round(monthDay / 100)\n    const day: number = monthDay % 100\n    const year: number = Math.round(n / 10000)\n    let t: Date\n    if (useUtc) {\n      t = new Date(Date.UTC(year, month - 1, day, 0, 0, 0, 0))\n    } else {\n      t = new Date(year, month - 1, day, 0, 0, 0, 0)\n      if (this.adjustLocal) {\n        t = new Date(t.getTime() - t.getTimezoneOffset() * -60000)\n      }\n    }\n    return t\n  }\n}\n"]}