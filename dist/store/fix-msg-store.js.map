{"version":3,"file":"fix-msg-store.js","sourceRoot":"","sources":["../../src/store/fix-msg-store.ts"],"names":[],"mappings":"","sourcesContent":["/*\n a message store that represents a single entity which can be queried for recovery\n */\n\nimport { IFixMsgStoreRecord } from './fix-msg-store-record'\nimport { IFixMsgStoreState } from './fix-msg-store-state'\n\nexport interface IFixMsgStore {\n  clear (): Promise<IFixMsgStoreState>\n  getState (): Promise<IFixMsgStoreState>\n  put (record: IFixMsgStoreRecord): Promise<IFixMsgStoreState>\n  get (seq: number): Promise<IFixMsgStoreRecord>\n  exists (seq: number): Promise<boolean>\n  // if to = 0, then to the end of sequence\n  getSeqNumRange (from: number, to?: number): Promise<IFixMsgStoreRecord[]>\n  getMsgType (msgType: string): Promise<IFixMsgStoreRecord[]>\n}\n"]}