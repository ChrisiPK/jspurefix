{"version":3,"file":"app.js","sourceRoot":"","sources":["../../../../src/sample/tcp/skeleton/app.ts"],"names":[],"mappings":";;AAAA,4BAAyB;AAEzB,8CAAiE;AACjE,yDAAoD;AAGpD,MAAM,WAAY,SAAQ,yBAAe;IACvC;QACE,KAAK,CACH,kCAAkC,EAClC,iCAAiC,CAAC,CAAA;IACtC,CAAC;IAEkB,WAAW,CAAE,MAAoB;QAClD,OAAO;YACL,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,kCAAe,CAAC,MAAM,EAAE,EAAE,EAAC,KAAK,CAAC;SACxC,CAAA;IACpB,CAAC;CACF;AAED,MAAM,CAAC,GAAG,IAAI,WAAW,EAAE,CAAA;AAC3B,CAAC,CAAC,IAAI,EAAE,CAAA","sourcesContent":["import 'reflect-metadata'\n\nimport { SessionLauncher, EngineFactory } from '../../../runtime'\nimport { SkeletonSession } from './skeleton-session'\nimport { IJsFixConfig } from '../../../config'\n\nclass AppLauncher extends SessionLauncher {\n  public constructor () {\n    super(\n      'data/session/test-initiator.json',\n      'data/session/test-acceptor.json')\n  }\n\n  protected override makeFactory (config: IJsFixConfig): EngineFactory {\n    return {\n      makeSession: () => new SkeletonSession(config, 45,false)\n    } as EngineFactory\n  }\n}\n\nconst l = new AppLauncher()\nl.exec()\n"]}