{"version":3,"file":"app.js","sourceRoot":"","sources":["../../../../src/sample/tcp/qf-md/app.ts"],"names":[],"mappings":";;AAAA,4BAAyB;AAEzB,2CAAsC;AACtC,2CAAsC;AAEtC,8CAAiE;AAEjE,MAAM,WAAY,SAAQ,yBAAe;IACvC;QACE,KAAK,CACH,uCAAuC,EACvC,sCAAsC,CAAC,CAAA;IAC3C,CAAC;IAEkB,WAAW,CAAE,MAAoB;QAClD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,CAAA;QACxD,OAAO;YACL,WAAW,EAAE,GAAG,EAAE,CAAC,WAAW,CAAC,CAAC;gBAC9B,IAAI,oBAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;gBACtB,IAAI,oBAAQ,CAAC,MAAM,CAAC;SACN,CAAA;IACpB,CAAC;CACF;AAED,MAAM,CAAC,GAAG,IAAI,WAAW,EAAE,CAAA;AAC3B,CAAC,CAAC,IAAI,EAAE,CAAA","sourcesContent":["import 'reflect-metadata'\n\nimport { MDClient } from './md-client'\nimport { MDServer } from './md-server'\nimport { IJsFixConfig } from '../../../config'\nimport { EngineFactory, SessionLauncher } from '../../../runtime'\n\nclass AppLauncher extends SessionLauncher {\n  public constructor () {\n    super(\n      'data/session/test-qf44-initiator.json',\n      'data/session/test-qf44-acceptor.json')\n  }\n\n  protected override makeFactory (config: IJsFixConfig): EngineFactory {\n    const isInitiator = this.isInitiator(config.description)\n    return {\n      makeSession: () => isInitiator ?\n        new MDClient(config) :\n        new MDServer(config)\n    } as EngineFactory\n  }\n}\n\nconst l = new AppLauncher()\nl.exec()\n"]}