{"version":3,"file":"dict-parser.js","sourceRoot":"","sources":["../src/dict-parser.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path'\nimport { ILooseObject } from './collections/collection'\nimport { MessageGenerator, JsonHelper, getWords, DefinitionFactory } from './util'\nimport { MsgView, MsgParser, ElasticBuffer } from './buffer'\nimport { AsciiChars, AsciiParser, AsciiView } from './buffer/ascii'\nimport { FiXmlParser, FixmlEncoder } from './buffer/fixml'\nimport { ReadStream } from 'fs'\nimport { ISessionDescription, StringDuplex, MsgPayload } from './transport'\nimport { FixDefinitions } from './dictionary/definition'\nimport { MsgType } from './types'\nimport { JsFixWinstonLogFactory, JsFixConfig, WinstonLogger } from './config'\nimport { BusinessRejectReason, IBusinessMessageReject } from './types/FIXML50SP2'\nimport * as rp from 'request-promise-native'\nimport { EnumCompiler, ICompilerSettings, MsgCompiler } from './dictionary/compiler'\nimport { AsciiMsgTransmitter } from './transport/ascii/ascii-msg-transmitter'\n\nasync function testEncodeDecode (): Promise<any> {\n  const msgType: string = 'W'\n  const root: string = path.join(__dirname, '../')\n  const sessionDescription: ISessionDescription = require('../data/session/test-initiator.json')\n  const definitions = await new DefinitionFactory().getDefinitions(path.join(root, sessionDescription.application.dictionary))\n  const jh: JsonHelper = new JsonHelper(definitions)\n  const msg: ILooseObject = jh.fromJson(path.join(root, 'data/examples/FIXML/cme/tc/Initial Single Side Submission/fix.xml'), msgType)\n  const config = new JsFixConfig(null, definitions, sessionDescription, AsciiChars.Pipe)\n  const session: AsciiMsgTransmitter = new AsciiMsgTransmitter(config)\n  const payload: MsgPayload = new MsgPayload(msgType, msg)\n  const encoderStream = session.encodeStream\n  encoderStream.write(payload)\n  session.encodeMessage(msgType, msg)\n  const parser: MsgParser = new AsciiParser(config, encoderStream, new ElasticBuffer(160 * 1024))\n  const fix: string = session.buffer.toString()\n  console.log(fix)\n  return new Promise(async (resolve, reject) => {\n    parser.on('msg', (msgType: string, view: AsciiView) => {\n      resolve(view.toObject())\n    })\n    parser.on('error', (e: Error) => {\n      reject(e)\n    })\n  })\n}\n\nasync function testGenerator (): Promise<any> {\n  const root: string = path.join(__dirname, '../')\n  const sessionDescription: ISessionDescription = require('../data/session/test-initiator.json')\n  const definitions = await new DefinitionFactory().getDefinitions('C:/Users/Stephen/dev/ts/jsfix/data/fix_repo/FIX.4.4/Base')\n  const lipsum: string[] = await getWords(path.join(root, 'data/examples/lipsum.txt'))\n  const generator: MessageGenerator = new MessageGenerator(lipsum, definitions)\n  const msgType: string = MsgType.NewOrderSingle\n  const example: ILooseObject = generator.generate(msgType)\n  console.log(JSON.stringify(example, null, 4))\n  const config = new JsFixConfig(null, definitions, sessionDescription, AsciiChars.Pipe)\n  const session: AsciiMsgTransmitter = new AsciiMsgTransmitter(config)\n  session.encodeMessage(msgType, example)\n  const fix: string = session.buffer.toString()\n  const encoderStream = session.encodeStream\n  const payload: MsgPayload = new MsgPayload(msgType, example)\n  encoderStream.write(payload)\n  const parser: MsgParser = new AsciiParser(config, encoderStream, new ElasticBuffer(160 * 1024))\n  parser.on('msg', (mt: string, view: MsgView) => {\n    console.log(view.toString())\n  })\n  console.log(fix)\n}\n\n/*\nfix.xml\nClearing System Confirms Allocation to Executing Firm.xml\nClearing System Confirms Allocation to CME Executing Firm_Cross-exchange.xml\nClearing System Confirms Completed Reversal to Executing Firm.xml\nClearing System Notifies Allocation to the Claiming Firm.xml\nfix.xml\nClearing System Notifies Claiming Firm of Completed Reversal.xml\nClearing System Notifies Executing Firm of Alleged Reversal.xml\nExecuting Firm Un-completes Group-Average_Price.xml\nExecuting Firm Marks a Trade for Give-up.xml\n */\nasync function repository (): Promise<any> {\n  const root: string = path.join(__dirname, '../')\n  const definitions: FixDefinitions = await new DefinitionFactory().getDefinitions('repofixml')\n  // cme/alloc/Clearing System Notifies Allocation to the Claiming Firm - Cross-Exchange\n  // const file: string = path.join(root,'data/examples/FIXML/cme/alloc/Claiming Firm Requests Sub-allocation with Allocation Instructions/')\n  // const file: string = path.join(root,'data/examples/FIXML/cme/md/settle')\n  // const file: string = path.join(root, 'data/examples/FIXML/cme/alloc/Clearing System Notifies Allocation to the Claiming Firm - Cross-Exchange/')\n  const file: string = path.join(root,'data/examples/FIXML/cme/tc/Delivery Fixed Commodity Swap/')\n  // const file: string = path.join(root, 'data/examples/FIXML/cme/tc/Trading Firm Continued Subscription')\n  // const file: string = path.join(root,'data/examples/FIXML/cme/md/futures')\n  // const file: string = path.join(root, 'data/examples/FIXML/cme/tc/Delivery Fixed Commodity Swap')\n  // const file: string = path.join(root, 'data/examples/FIXML/cme/tc/Initial Single Side Submission/')\n  // const file: string = path.join(root, 'data/examples/FIXML/cme/tc/Accepted Unmatched')\n  // const file: string = path.join(root, 'data/examples/FIXML/cme/tc/Trading Firm Continued Subscription/')\n  // const file: string = path.join(root, 'data/examples/FIXML/om/nso/')\n  // const file: string = path.join(root, 'data/examples/FIXML/om/er/')\n  const so = definitions.message.get('ExecutionReport')\n  const t855 = definitions.simple.get('SecondaryTrdType')\n\n  const reject = {\n    Text: `no response`,\n    BusinessRejectReason: BusinessRejectReason.ApplicationNotAvailable\n  } as IBusinessMessageReject\n  const fe = new FixmlEncoder(new ElasticBuffer(), definitions)\n  fe.encode(reject, 'BusinessMessageReject')\n  const fixml: string = fe.buffer.toString()\n  // console.log(fixml)\n  const jh: JsonHelper = new JsonHelper(definitions)\n  const fs: any = require('fs')\n  let readStream: ReadStream = fs.createReadStream(`${file}/fix.xml`)\n  const sessionDescription: ISessionDescription = require('../data/session/test-initiator.json')\n  const config = new JsFixConfig(null, definitions, sessionDescription, AsciiChars.Pipe)\n  const xmlParser: MsgParser = new FiXmlParser(config, readStream)\n  xmlParser.on('batch', (msgType: string, v: MsgView) => {\n    console.log(`received message ${msgType}`)\n    const o: ILooseObject = v.toObject()\n    console.log(JSON.stringify(o, null, 4))\n    const fe = new FixmlEncoder(new ElasticBuffer(), definitions)\n    fe.encode(o, msgType)\n    const fixml: string = fe.buffer.toString()\n    console.log(fixml)\n    console.log(v.toString())\n  })\n  xmlParser.on('msg', (msgType: string, v: MsgView) => {\n    console.log(`received message ${msgType}`)\n    const o: ILooseObject = v.toObject()\n    console.log(JSON.stringify(o, null, 4))\n    console.log(v.toString())\n    const fe = new FixmlEncoder(new ElasticBuffer(), definitions)\n    fe.encode(o, msgType)\n    const fixml: string = fe.buffer.toString()\n    console.log(fixml)\n  })\n}\n\nasync function runTest (): Promise<any> {\n  return new Promise<any>(async (accept, reject) => {\n    try {\n      const res: any = await testGenerator()\n      accept(res)\n    } catch (e) {\n      console.log(e.message)\n      reject(e)\n    }\n  })\n}\n\nfunction streamExample () {\n  const fs: any = require('fs')\n  const root: string = path.join(__dirname, '../')\n  const file: string = path.join(root,'data/examples/FIXML/cme/Claiming Firm Requests Sub-allocation with Allocation Instructions/')\n  let readStream: ReadStream = fs.createReadStream(`${file}/fix.xml`)\n  const Writable = require('stream').Writable\n  const receiver = new Writable({\n    write: (data: Buffer, _: any, done: Function) => {\n      console.log('receive ' + data)\n      done()\n    }\n  })\n  readStream.pipe(receiver).on('finish', () => {\n    console.log('done')\n  })\n}\n\nasync function compileDefinitions (definitionPath: string, outputPath: string) {\n  const definitions = await new DefinitionFactory().getDefinitions(definitionPath)\n  const compilerSettings: ICompilerSettings = require('../data/compiler.json')\n  compilerSettings.output = outputPath\n  const msgCompiler: MsgCompiler = new MsgCompiler(definitions, compilerSettings)\n  await msgCompiler.generate()\n  const enumCompiler: EnumCompiler = new EnumCompiler(definitions, compilerSettings)\n  const writeFile = path.join(compilerSettings.output, './enum/all-enum.ts')\n  await enumCompiler.generate(writeFile)\n\n  const writeFileTypes = path.join(compilerSettings.output, './enum/msg-type.ts')\n  await enumCompiler.generate(writeFile)\n}\n\nasync function compiler () {\n  // 'C:/Users/Stephen/dev/js/jsfix/data/fix_repo/fixmlschema_FIX.5.0SP2_EP228'\n  // await compileDefinitions('data/fix_repo/FIX.4.4/Base', 'C:/Users/Stephen/dev/ts/jsfix/src/types/FIX4.4/repo')\n  // await compileDefinitions('data/FIX44.xml', 'C:/Users/Stephen/dev/ts/jsfix/src/types/FIX4.4/quickfix')\n  await compileDefinitions('data/fix_repo/fixmlschema_FIX.5.0SP2_EP228', 'C:/Users/Stephen/dev/ts/jsfix/src/types/FIXML50SP2')\n}\n\nasync function generateMessage () {\n  await testGenerator()\n}\n\nasync function decode (): Promise<any> {\n  const definitions: FixDefinitions = await new DefinitionFactory().getDefinitions('data/fix_repo/FIX.4.4/Base')\n  const txt = '8=FIX4.4|9=0001022|35=AE|49=init-comp|56=accept-comp|34=1|57=fix|52=20180909-14:22:09.841|571=Lorem|487=23513|856=1|568=ipsum|828=6|855=23619|830=dolor|150=F|748=17140|912=N|325=N|263=1|881=sit|818=amet,|820=consectetur|880=adipiscing|17=elit.|39=3|527=Nunc|570=N|423=8|55=odio|65=orci,|48=blandit|22=3|460=4|461=vel|167=MPT|762=semper|200=sed,|541=20180909|201=0|224=20180909|225=20180909|227=-8796.1|228=-23.537|255=bibendum|543=cursus|470=lectus.|471=Aenean|472=vel|240=20180909|202=891.7|947=-2928.1|231=5.7237|223=-1894.1|106=diam|348=9|349=6YYz0zu5s|350=8|351=TuH3tTNd|691=magna.|667=Aenean|875=99|876=et|873=20180909|874=20180909|913=viverra|914=leo,|915=20180909|916=20180909|919=0|898=0.5594|38=96682|152=19226|516=9.1251|854=0|235=PREVCLOSE|236=-2833.5|701=20180909|696=20180909|697=-6.095|698=26303|823=non|32=9253|31=2065.4|194=-73.233|30=iaculis|75=20180909|715=20180909|6=5.9279|218=0.0001953|221=neque.|222=Nullam|663=16216|699=arcu|761=lectus,|824=dignissim|63=3|64=20180909|573=0|574=M3|797=Y|852=Y|853=3|10=16|'\n  const startsAt: Date = new Date()\n  const sessionDescription: ISessionDescription = require('../data/session/test-initiator.json')\n  const config = new JsFixConfig(null, definitions, sessionDescription, AsciiChars.Pipe)\n  let i = 0\n  const repeats = 1\n  const asciiParser: MsgParser = new AsciiParser(config, new StringDuplex(txt.repeat(repeats)).readable, new ElasticBuffer(160 * 1024))\n  asciiParser.on('msg', (msgType: string, v: MsgView) => {\n    ++i\n    console.log(v.toJson())\n    if (i === repeats) {\n      const elapsed: number = new Date().getTime() - startsAt.getTime()\n      console.log(`elapsed ms ${elapsed} ${(elapsed / repeats) * 1000} micros per msg`)\n    }\n  })\n}\n\nasync function http (): Promise<any> {\n  const sessionDescription: ISessionDescription = require('../data/session/test-http-acceptor.json')\n  const definitions = await new DefinitionFactory().getDefinitions(sessionDescription.application.dictionary)\n  const logFactory = new JsFixWinstonLogFactory(WinstonLogger.consoleOptions('info'))\n  const config = new JsFixConfig(null, definitions, sessionDescription, AsciiChars.Pipe, logFactory)\n  // const acceptor = acceptor(config)\n  const xml = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n' +\n    '<FIXML v=\"5.0 SP2\" s=\"20090815\" xv=\"109\" cv=\"CME.0001\">\\n' +\n    '    <UserReq UserReqID=\"123456\" UserReqTyp=\"1\" Username=\"user123\" Password=\"User!Pass5\">\\n' +\n    '        <Hdr SID=\"BRKR\" SSub=\"user123\" TID=\"CME\" TSub=\"CPAPI\"/>\\n' +\n    '    </UserReq>\\n' +\n    '</FIXML>'\n  // acceptor.listen()\n  rp({\n    method: 'POST',\n    uri: 'http://localhost:2343/session',\n    body: {\n      fixml : xml\n    },\n    json: true // Automatically stringifies the body to JSON\n  }).then(function (parsedBody) {\n    console.log(parsedBody)\n    // POST succeeded...\n  })\n    .catch((err: Error) => {\n      console.log(err)\n      // POST failed...\n    })\n}\n\n// http()\n// decode()\n// generateMessage()\n// compiler()\n// stronglyTyped()\n// streamExample()\n// testEncodeDecode()\nrepository()\n// testEncodeDecode()\n// runTest();\n// testSocket()\n// testRead();\n"]}