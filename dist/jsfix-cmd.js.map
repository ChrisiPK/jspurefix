{"version":3,"file":"jsfix-cmd.js","sourceRoot":"","sources":["../src/jsfix-cmd.ts"],"names":[],"mappings":"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","sourcesContent":["import 'reflect-metadata'\n\nimport { ElasticBuffer, MsgView, MsgParser } from './buffer'\nimport { AsciiParser, AsciiView, AsciiChars } from './buffer/ascii'\nimport { ILooseObject } from './collections/collection'\nimport { SimpleFieldDefinition, FixDefinitions } from './dictionary/definition'\nimport { MessageGenerator, JsonHelper, getWords, DefinitionFactory } from './util'\nimport { ISessionDescription, FileDuplex, StringDuplex } from './transport'\n\nimport { MsgTag } from './types'\nimport { IJsFixConfig } from './config'\n\nimport * as util from 'util'\nconst fs = require('node-fs-extra')\nimport * as minimist from 'minimist'\nimport * as path from 'path'\nimport { MsgTransport } from './transport/factory'\nimport { EnumCompiler, ICompilerSettings, MsgCompiler } from './dictionary/compiler'\nimport { AsciiMsgTransmitter } from './transport/ascii/ascii-msg-transmitter'\nimport { SessionContainer } from './runtime'\nimport { DITokens } from './runtime/di-tokens'\n\nconst argv: any = minimist(process.argv.slice(2))\n\nenum PrintMode {\n  Structure = 1,\n  Object = 2,\n  Verbose = 3,\n  Stats = 4,\n  Token = 5,\n  Encoded = 6\n}\n\nenum Command {\n  Generate = 1,\n  Replay = 2,\n  Lookup = 3,\n  Encode = 4,\n  Benchmark = 5,\n  Compile = 6,\n  Unknown = 7\n}\n\nexport class JsfixCmd {\n  private readonly root: string = path.join(__dirname, '../')\n  private definitions: FixDefinitions\n  private jsonHelper: JsonHelper\n  private session: AsciiMsgTransmitter\n  private sessionDescription: ISessionDescription\n  private delimiter: number = AsciiChars.Soh\n  private stats: ILooseObject = {}\n  private filter: string = null\n  private messages: number = 0\n  private print: boolean = true\n\n  private static getCommand (): Command {\n    let command: Command = Command.Unknown\n    if (argv.compile) {\n      command = Command.Compile\n    } else if (argv.generate) {\n      command = Command.Generate\n    } else if (argv.fix) {\n      command = argv.benchmark ? Command.Benchmark : Command.Replay\n    } else if (argv.field) {\n      command = Command.Lookup\n    } else if (argv.json) {\n      command = Command.Encode\n    } else if (argv.msg) {\n      command = Command.Lookup\n    }\n    return command\n  }\n\n  private static getPrintMode (): PrintMode {\n    let mode: PrintMode = PrintMode.Stats\n    if (argv.tokens) {\n      mode = PrintMode.Token\n    } else if (argv.stats) {\n      mode = PrintMode.Stats\n    } else if (argv.objects) {\n      mode = PrintMode.Object\n    } else if (argv.verbose) {\n      mode = PrintMode.Verbose\n    } else if (argv.structures) {\n      mode = PrintMode.Structure\n    } else if (argv.encoded) {\n      mode = PrintMode.Encoded\n    }\n    return mode\n  }\n\n  private static async writeFile (name: string, api: string) {\n    const writer = util.promisify(fs.writeFile)\n    await writer(name, api, {\n      encoding: 'utf8'}\n    ).catch((e: Error) => {\n      throw e\n    })\n  }\n\n  public exec (): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      this.init().then(async () => {\n        let actioned: boolean = true\n        let command = JsfixCmd.getCommand()\n\n        switch (command) {\n          case Command.Generate: {\n            // produce a test message or a valid fix log of n messages\n            await this.generate()\n            break\n          }\n\n          case Command.Encode: {\n            // encode a json message back to fix\n            this.encode()\n            break\n          }\n\n          case Command.Replay: {\n            // parse a file into either objects, tokens, structures or stats\n            const repeats: number = !isNaN(argv.repeats) ? argv.repeats : 1\n            try {\n              for (let i: number = 0; i < repeats; ++i) {\n                await this.replay()\n              }\n            } catch (e) {\n              reject(e)\n            }\n            break\n          }\n\n          case Command.Benchmark: {\n            // time how long to parse 10000 repeats of contents of file\n            const repeats: number = !isNaN(argv.repeats) ? argv.repeats : 10000\n            try {\n              await this.benchmark(repeats)\n            } catch (e) {\n              reject(e)\n            }\n            break\n          }\n\n          case Command.Lookup: {\n            // lookup a field\n            if (argv.field) {\n              this.field()\n            } else {\n              this.msg()\n            }\n            break\n          }\n\n          case Command.Compile: {\n            await this.compile()\n            break\n          }\n\n          case Command.Unknown:\n          default: {\n            actioned = false\n          }\n        }\n        resolve(actioned)\n      }).catch((e) => {\n        reject(e)\n      })\n    })\n  }\n\n  private firstMessage (t: MsgTransport): Promise<MsgView> {\n    return new Promise<MsgView>((resolve, reject) => {\n      t.receiver.on('msg', (msgType: string, msgView: MsgView) => {\n        resolve(msgView.clone())\n      })\n      t.receiver.on('error', (e) => {\n        reject(e)\n      })\n    })\n  }\n\n  private async generate () {\n    const lipPath: string = path.join(this.root, 'data/examples/lipsum.txt')\n    const words: string[] = await getWords(lipPath)\n    const generator = new MessageGenerator(words, this.definitions)\n    let density = 1\n    if (argv.density) {\n      density = parseFloat(argv.density)\n    }\n    if (isNaN(density)) {\n      console.log('density must be numeric in range > 0 density <= 1.0')\n      return\n    }\n\n    if (argv.script) {\n      await this.script(generator, density)\n    } else {\n      await this.single(generator, density)\n    }\n  }\n\n  private async single (generator: MessageGenerator, density: number) {\n    if (!argv.type) {\n      console.log('specify type to generate e.g. --type = AE')\n      return\n    }\n    const msgType: string = `${argv.type}`\n    let makeGroups: boolean = true\n    if (argv.groups) {\n      makeGroups = argv.groups === 'true'\n    }\n    const obj: ILooseObject = generator.generate(msgType, density, makeGroups)\n    console.log(JSON.stringify(obj, null, 4))\n    const fix: string = this.encodeObject(msgType, obj)\n    const ft: MsgTransport = new MsgTransport(1, this.session.config, new StringDuplex(fix))\n    if (argv.unit) {\n      await this.unitTest(fix, obj, ft)\n    } else {\n      this.subscribe(ft)\n    }\n  }\n\n  private async script (generator: MessageGenerator, density: number) {\n    let buffer: ElasticBuffer = new ElasticBuffer()\n    const repeats: number = argv.repeats || 50\n    const key: string = MsgTag.MsgType.toString()\n    const sf = this.definitions.simple.get(key)\n    const session: AsciiMsgTransmitter = this.session\n    for (let i = 0; i < repeats; ++i) {\n      const msgType: string = MessageGenerator.getRandomEnum(sf).toString()\n      console.log(`i = ${i} ${msgType}`)\n      const obj: ILooseObject = generator.generate(msgType, density)\n      session.encodeMessage(msgType, obj)\n      buffer.writeBuffer(session.buffer.slice())\n      buffer.writeString(require('os').EOL)\n    }\n    await JsfixCmd.writeFile('./fix.txt', buffer.slice().toString('utf8'))\n  }\n\n  private async unitTest (fix: string, obj: ILooseObject, ft: MsgTransport) {\n    const view: MsgView = await this.firstMessage(ft)\n    const summary = view.structure.summary()\n\n    await JsfixCmd.writeFile('./fix.txt', fix)\n    await JsfixCmd.writeFile('./object.json', JSON.stringify(obj, null, 4))\n    await JsfixCmd.writeFile('./token.txt', view.toString())\n    await JsfixCmd.writeFile('./structure.json', JSON.stringify(summary, null, 4))\n  }\n\n  private encodeObject (msgType: string, object: ILooseObject): string {\n    const session: AsciiMsgTransmitter = this.session\n    session.encodeMessage(msgType, object)\n    return session.buffer.toString()\n  }\n\n  private msg (): void {\n    const definitions = this.definitions\n    const m = definitions.message.get(argv.msg)\n    if (m) {\n      console.log(m.toString())\n    }\n  }\n\n  private field (): void {\n    let sf: SimpleFieldDefinition\n    const tag: number = parseInt(argv.field, 10)\n    const definitions = this.definitions\n    if (!isNaN(tag)) {\n      sf = definitions.tagToSimple[tag]\n    } else {\n      sf = definitions.simple.get(argv.field)\n    }\n    if (sf) {\n      console.log(sf.toString())\n    }\n  }\n\n  ensureExists (path: string): Promise<any> {\n    return new Promise<any>((accept, reject) => {\n      fs.mkdirp(path, (err: Error) => {\n        if (err) {\n          reject(err)\n        } else {\n          accept(true)\n        }\n      })\n    })\n  }\n\n  private async compileDefinitions (outputPath: string) {\n    await this.ensureExists(path.join(outputPath, 'set'))\n    await this.ensureExists(path.join(outputPath, 'enum'))\n    const definitions = this.definitions\n    const compilerSettings: ICompilerSettings = require('../data/compiler.json')\n    compilerSettings.output = outputPath\n    const msgCompiler: MsgCompiler = new MsgCompiler(definitions, compilerSettings)\n    await msgCompiler.generate()\n    const enumCompiler: EnumCompiler = new EnumCompiler(definitions, compilerSettings)\n    const writeFile = path.join(compilerSettings.output, './enum/all-enum.ts')\n    await enumCompiler.generate(writeFile)\n  }\n\n  private async compile () {\n    let output = argv.output\n    const dp = new DefinitionFactory().getDictPath(argv.dict)\n    if (dp) {\n      output = dp.output\n    }\n    output = path.join(this.root, output)\n    await this.compileDefinitions(output)\n  }\n\n  sys: SessionContainer\n  config: IJsFixConfig\n\n  private async init (): Promise<any> {\n    let session: string = argv.session || 'data/session/test-initiator.json'\n    this.sys = new SessionContainer()\n    this.sys.registerGlobal('error')\n    session = this.norm(session)\n    this.sessionDescription = require(session)\n    const container = await this.sys.makeSystem(this.sessionDescription)\n    this.config = container.resolve<IJsFixConfig>(DITokens.IJsFixConfig)\n    this.definitions = this.config.definitions\n    let dict: string\n    if (argv.dict) {\n      dict = argv.dict\n      const df = await new DefinitionFactory().getDefinitions(dict)\n      this.config.definitions = df\n      this.definitions = df\n    }\n    const definitions = this.definitions\n    if (argv.delimiter) {\n      this.delimiter = AsciiChars.firstChar(argv.delimiter)\n      this.config.delimiter = this.delimiter\n    }\n    this.jsonHelper = new JsonHelper(definitions)\n    if (argv.session) {\n      this.session = container.resolve<AsciiMsgTransmitter>(DITokens.MsgTransmitter)\n    }\n  }\n\n  private async dispatch (ft: MsgTransport): Promise<any> {\n    if (argv.type != null) {\n      this.filter = argv.type.toString()\n    }\n    let time: boolean = false\n    if (argv.time || argv.stats) {\n      this.print = false\n      time = true\n    }\n    this.subscribe(ft)\n    const startsAt: Date = new Date()\n    await ft.wait()\n    const elapsed: number = new Date().getTime() - startsAt.getTime()\n    if (time) {\n      console.log(`messages ${this.messages} elapsed ms ${elapsed}`)\n    }\n    if (argv.stats) {\n      console.log(JSON.stringify(this.stats, null, 4))\n    }\n  }\n\n  private subscribe (ft: MsgTransport) {\n    this.messages = 0\n    this.stats = {}\n    const filter = this.filter\n    // the receiver is message parser which is piped from an input stream - file, socket\n    ft.receiver.on('msg', (msgType: string, m: AsciiView) => {\n\n      if (filter) {\n        if (msgType !== filter) {\n          return\n        }\n      }\n      ++this.messages\n      this.onMsg(msgType, m)\n    })\n  }\n\n  private onMsg (msgType: string, m: MsgView) {\n    const mode: PrintMode = JsfixCmd.getPrintMode()\n    const print = this.print\n    const stats = this.stats\n    switch (mode) {\n      case PrintMode.Stats: {\n        if (!stats[msgType]) {\n          stats[msgType] = 1\n        } else {\n          stats[msgType] = stats[msgType] + 1\n        }\n        break\n      }\n\n      case PrintMode.Verbose: {\n        const verbose = m.toVerbose()\n        if (verbose) {\n          console.log(verbose)\n        }\n        break\n      }\n\n      case PrintMode.Object: {\n        const asObject: ILooseObject = m.toObject()\n        if (print) {\n          const def = this.definitions.message.get(msgType)\n          console.log(`${msgType} [${def.name}] = ${JSON.stringify(asObject, null, 4)}`)\n          console.log()\n        }\n        break\n      }\n\n      case PrintMode.Structure: {\n        const summary = m.structure.summary()\n        if (print) {\n          console.log(JSON.stringify(summary, null, 4))\n        }\n        break\n      }\n\n      case PrintMode.Token: {\n        const tokens = m.toString()\n        if (print) {\n          console.log(tokens)\n        }\n        break\n      }\n\n      case PrintMode.Encoded: {\n        const fix: string = this.encodeObject(msgType, m.toObject())\n        console.log(fix)\n        break\n      }\n\n      default:\n        throw new Error(`unknown mode ${mode}`)\n    }\n  }\n\n  private async replay (): Promise<any> {\n    if (!argv.fix) {\n      console.log('provide a path to fix file i.e. --fix=data/examples/execution-report/fix.txt')\n      return\n    }\n    const fix: string = this.norm(argv.fix)\n    const config = this.config\n    const ft: MsgTransport = new MsgTransport(1, config, new FileDuplex(fix))\n    await this.dispatch(ft)\n  }\n\n  private async benchmark (repeats: number): Promise<any> {\n    if (!argv.fix) {\n      console.log('provide a path to fix file i.e. --fix=data/examples/execution-report/fix.txt')\n      return\n    }\n    return new Promise<any>((accept, reject) => {\n      const fix: string = this.norm(argv.fix)\n      const fs = require('fs')\n      fs.readFile(fix, 'utf8', async (err: Error, contents: string) => {\n        if (err) {\n          reject(err)\n        }\n        const toParse = new StringDuplex(contents.repeat(repeats), false)\n        const startsAt: Date = new Date()\n        let i = 0\n        const config = this.config\n        const buffer = config.sessionContainer.resolve<ElasticBuffer>(DITokens.ParseBuffer)\n        const asciiParser: MsgParser = new AsciiParser(config, toParse.readable, buffer)\n        asciiParser.on('msg', (msgType: string, v: MsgView) => {\n          ++i\n          if (i === repeats) {\n            const elapsed: number = new Date().getTime() - startsAt.getTime()\n            console.log(contents)\n            console.log(v.toString())\n            console.log(`[${msgType}]: repeats = ${repeats}, fields = ${v.structure.tags.nextTagPos}, length = ${contents.length} chars, elapsed ms ${elapsed}, ${(elapsed / repeats) * 1000} micros per msg`)\n            accept(true)\n          }\n        })\n      })\n    })\n  }\n\n  private encode (): void {\n    const session: AsciiMsgTransmitter = this.session\n    if (!session) {\n      console.log('provide a session json file e.g. --session=data/session/test-initiator.json')\n      return\n    }\n    if (!argv.type) {\n      console.log('provide a message type e.g. --type=8')\n      return\n    }\n    if (!argv.json) {\n      console.log('provide a json representation e.g. data/examples/execution-report/object.json')\n      return\n    }\n    const ts: string = argv.type.toString()\n    const msg: ILooseObject = this.jsonHelper.fromJson(path.join(this.root, argv.json), ts)\n    session.encodeMessage(ts, msg)\n    const fix: string = session.buffer.toString()\n    console.log(fix)\n  }\n\n  private norm (p: string): string {\n    let f: string = p\n    if (!path.isAbsolute(p)) {\n      f = path.join(this.root, f)\n    }\n    return f\n  }\n}\n\nfunction showHelp (): void {\n  console.log('this help page')\n  console.log('npm run cmd')\n  console.log('npm run cmd -- --help')\n  console.log()\n\n  console.log('token format i.e. [602] 687 (LegQty) = 33589')\n  console.log('jsfix-cmd --dict=data/FIX44.xml --fix=data/examples/quickfix/FIX.4.4/execution-report/fix.txt --delimiter=\"|\" --tokens')\n  console.log()\n\n  console.log('token format use fix repo dictionary')\n  console.log('jsfix-cmd --dict=data/fix_repo/FIX.4.4/Base --fix=data/examples/quickfix/FIX.4.4/execution-report/fix.txt'\n        + ' --delimiter=\"|\" --tokens')\n  console.log()\n\n  console.log('structure format i.e. show locations of components etc.')\n  console.log('jsfix-cmd --dict=data/FIX44.xml --fix=data/examples/FIX.4.4/quickfix/execution-report/fix.txt' +\n        ' --delimiter=\"|\" --tokens --structures')\n  console.log()\n\n  console.log('full JS object in JSON format.')\n  console.log('jsfix-cmd --dict=data/FIX44.xml --fix=data/examples/FIX.4.4/quickfix/execution-report/fix.txt' +\n        ' --delimiter=\"|\" --tokens --objects')\n  console.log()\n\n  console.log('full JS object in JSON format - filter only type messages.')\n  console.log('jsfix-cmd --dict=data/FIX44.xml --fix=data/examples/FIX.4.4/quickfix/execution-report/fix.txt' +\n        ' --delimiter=\"|\" --tokens --type=8 --objects')\n  console.log()\n\n  console.log('timing stats and message counts. Structured parsing of all messages.')\n  console.log('jsfix-cmd --dict=data/FIX44.xml --fix=data/examples/FIX.4.4/quickfix/execution-report/fix.txt --stats')\n  console.log()\n\n  console.log('encode a json object to fix format')\n  console.log('jsfix-cmd --json=data/examples/FIX.4.4/quickfix/execution-report/object.json' +\n        ' --session=data/session.json --type=8 --delimiter=\"|\"')\n  console.log()\n\n  console.log('display field definition')\n  console.log('jsfix-cmd --dict=data/FIX44.xml --field=MsgType|35')\n  console.log()\n\n  console.log('display field use fix repo dictionary e.g. 271 MDEntrySize QTY Quantity or volume represented by the Market Data Entry.')\n  console.log('jsfix-cmd --dict=data/fix_repo/FIX.4.4/Base --field=MsgType')\n  console.log('jsfix-cmd --dict=data/fix_repo/FIX.4.4/Base --field=35')\n  console.log()\n\n  console.log('script to describe field in repository version 4.4')\n  console.log('npm run repo44 -- --field=8')\n  console.log()\n\n  console.log('script to describe field in fixml')\n  console.log('npm run fixml -- --field=50')\n  console.log()\n\n  console.log('generate unit test set of files - i.e. randomly generate an object, encode to fix. density 1 is all fields')\n  console.log('jsfix-cmd --generate --type=AE --density=0.8 --unit --delimiter=\"|\" --session=data/session/test-initiator.json')\n  console.log('npm run repo44-unit -- --type=AE')\n  console.log('test script with no repeat groups')\n  console.log('npm run repo44-unit -- --type=AE --groups=false')\n  console.log()\n\n  console.log('generate a fix log of randomly generated but syntactically correct messages')\n  console.log('jsfix-cmd --generate --density=0.8 --repeats=50 --script --delimiter=\"|\" --session=data/session/test-initiator.json')\n  console.log('npm run repo44-script')\n  console.log('parse above generated script')\n  console.log('npm run repo44-repscr')\n  console.log()\n\n  console.log('replay example repo fix file of 50 messages.')\n  console.log('jsfix-cmd --session=data/session/test-initiator.json --fix=data/examples/FIX.4.4/fix.txt --delimiter=\"|\" --stats')\n  console.log('npm run repo44-replay -- --stats')\n  console.log('npm run repo44-replay -- --objects')\n  console.log('npm run repo44-replay -- --tokens')\n  console.log('npm run repo44-replay -- --structures')\n  console.log()\n\n  console.log('benchmark parse a message')\n  console.log('jsfix-cmd --delimiter=\"|\" --session=data/session/test-initiator.json --fix=data/examples/FIX.4.4/repo/trade-capture-no-groups/fix.txt --benchmark')\n  console.log('npm run repo44-bench -- --fix=data/examples/FIX.4.4/repo/trade-capture-no-groups/fix.txt')\n  console.log()\n\n  console.log('compile typescript interfaces - i.e. outputs to src/types/FIX4.4 - requires set and enum sub folders')\n  console.log('npm run cmd -- --dict=repo40 --compile')\n  console.log('npm run cmd -- --dict=repo41 --compile')\n  console.log('npm run cmd -- --dict=repo42 --compile')\n  console.log('npm run cmd -- --dict=repo43 --compile')\n  console.log('npm run cmd -- --dict=repo44 --compile')\n  console.log('npm run cmd -- --dict=repo50 --compile')\n  console.log('npm run cmd -- --dict=repo50sp1 --compile')\n  console.log('npm run cmd -- --dict=repo50sp2 --compile')\n  console.log('npm run cmd -- --dict=repofixml --compile')\n  console.log('npm run cmd -- --dict=qf44 --compile')\n  console.log('npm run cmd -- --dict=data/handmade.xml --compile --output=src/types/handmade')\n\n  console.log()\n}\n\nconst help: boolean = argv.h || argv.help\nif (help) {\n  showHelp()\n} else {\n  const cmd: JsfixCmd = new JsfixCmd()\n  cmd.exec().then((res: boolean) => {\n    if (!res) {\n      showHelp()\n    }\n  }).catch((e: Error) => {\n    console.log(`error ${e.message}`)\n  })\n}\n"]}