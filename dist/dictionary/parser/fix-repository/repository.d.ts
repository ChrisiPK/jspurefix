import { ILooseObject } from '../../../collections/collection';
import { FixDefinitions } from '../../definition';
import { FixVersion } from '../../fix-versions';
import { GetJsFixLogger } from '../../../config';
import { IRepositoryMessage } from './repository-message';
import { IRepositoryEnum } from './repository-enum';
import { IRepositoryDataType } from './repository-data-type';
import { IRepositoryComponent } from './repository-component';
import { IRepositoryField } from './repository-field';
import { IRepositoryAbbreviation } from './repository-abbreviation';
import { IRepositoryMsgContent } from './repository-msg-content';
export declare class Repository {
    readonly version: FixVersion;
    readonly getLogger: GetJsFixLogger;
    Enums: IRepositoryEnum[];
    Fields: IRepositoryField[];
    DataTypes: IRepositoryDataType[];
    Components: IRepositoryComponent[];
    Messages: IRepositoryMessage[];
    MsgContents: IRepositoryMsgContent[];
    Abbreviations: IRepositoryAbbreviation[];
    includesAbbreviations: boolean;
    readonly definitions: FixDefinitions;
    private readonly groupLookup;
    private contentLookup;
    private componentLookup;
    private dataTypeLookup;
    private readonly logger;
    constructor(version: FixVersion, getLogger: GetJsFixLogger);
    private static doesIncludeAbbreviations;
    assign(name: string, data: ILooseObject[]): void;
    private summarise;
    private toDefinitions;
    private complex;
    private header;
    private trailer;
    private static isNative;
    private static makeSimple;
    private getType;
    private fieldEnums;
    private fields;
    private contents;
    private resolveToFieldSet;
    private resolve;
    private message;
    private components;
    private types;
}
