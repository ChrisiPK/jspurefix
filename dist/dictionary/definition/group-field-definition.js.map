{"version":3,"file":"group-field-definition.js","sourceRoot":"","sources":["../../../src/dictionary/definition/group-field-definition.ts"],"names":[],"mappings":";;;AAAA,4CAAgD;AAEhD,8DAAwD;AAExD,MAAa,oBAAqB,SAAQ,6BAAiB;IACzD,YAA6B,IAAY,EACZ,YAAoB,EACpB,QAAgB,EAChB,SAAgC,EAChC,WAAmB;QAC9C,KAAK,CAAC,qCAAgB,CAAC,KAAK,EAAE,IAAI,EAAE,YAAY,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;QAL7C,SAAI,GAAJ,IAAI,CAAQ;QACZ,iBAAY,GAAZ,YAAY,CAAQ;QACpB,aAAQ,GAAR,QAAQ,CAAQ;QAChB,cAAS,GAAT,SAAS,CAAuB;QAChC,gBAAW,GAAX,WAAW,CAAQ;QAE9C,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,IAAI,CAAA;SAC7C;IACH,CAAC;IAEM,SAAS;QACd,OAAO,GAAG,CAAA;IACZ,CAAC;CACF;AAfD,oDAeC","sourcesContent":["import { ContainedFieldSet } from '../contained'\nimport { SimpleFieldDefinition } from './simple-field-definition'\nimport { ContainedSetType } from '../contained-set-type'\n\nexport class GroupFieldDefinition extends ContainedFieldSet {\n  constructor (public readonly name: string,\n               public readonly abbreviation: string,\n               public readonly category: string,\n               public readonly noOfField: SimpleFieldDefinition,\n               public readonly description: string) {\n    super(ContainedSetType.Group, name, abbreviation, category, description)\n    if (this.noOfField) {\n      this.containedTag[this.noOfField.tag] = true\n    }\n  }\n\n  public getPrefix (): string {\n    return `G`\n  }\n}\n"]}