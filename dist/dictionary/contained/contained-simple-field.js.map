{"version":3,"file":"contained-simple-field.js","sourceRoot":"","sources":["../../../src/dictionary/contained/contained-simple-field.ts"],"names":[],"mappings":";;;AAAA,uDAAkD;AAElD,iEAA2D;AAE3D,MAAa,oBAAqB,SAAQ,gCAAc;IACtD,YAA6B,UAAiC,EACjC,QAAgB,EAChB,QAAiB,EACjB,SAAkB,EAClB,QAAiB;QAC5C,KAAK,CAAC,QAAQ,IAAI,UAAU,CAAC,IAAI,EAAE,QAAQ,EAAE,yCAAkB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QALtD,eAAU,GAAV,UAAU,CAAuB;QACjC,aAAQ,GAAR,QAAQ,CAAQ;QAChB,aAAQ,GAAR,QAAQ,CAAS;QACjB,cAAS,GAAT,SAAS,CAAS;QAClB,aAAQ,GAAR,QAAQ,CAAS;IAE9C,CAAC;IAEM,QAAQ;QACb,OAAO,IAAI,IAAI,CAAC,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,IAAI,CAAC,IAAI,GAAG,CAAA;IACrE,CAAC;CACF;AAZD,oDAYC","sourcesContent":["import { ContainedField } from './contained-field'\nimport { SimpleFieldDefinition } from '../definition'\nimport { ContainedFieldType } from './contained-field-type'\n\nexport class ContainedSimpleField extends ContainedField {\n  constructor (public readonly definition: SimpleFieldDefinition,\n               public readonly position: number,\n               public readonly required: boolean,\n               public readonly attribute: boolean,\n               public readonly override?: string) {\n    super(override || definition.name, position, ContainedFieldType.Simple, required)\n  }\n\n  public toString (): string {\n    return `[${this.position}]=S.${this.definition.tag} (${this.name})`\n  }\n}\n"]}