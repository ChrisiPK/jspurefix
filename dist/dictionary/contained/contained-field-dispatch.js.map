{"version":3,"file":"contained-field-dispatch.js","sourceRoot":"","sources":["../../../src/dictionary/contained/contained-field-dispatch.ts"],"names":[],"mappings":";;;AAKA,iEAA2D;AAE3D,SAAgB,sBAAsB,CAAE,KAAqB,EAAE,UAAqC;IAClG,QAAQ,KAAK,CAAC,IAAI,EAAE;QAClB,KAAK,yCAAkB,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,UAAU,CAAC,KAAK,EAAE;gBACpB,UAAU,CAAC,KAAK,CAAC,KAA4B,CAAC,CAAA;aAC/C;YACD,MAAK;SACN;QAED,KAAK,yCAAkB,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAI,UAAU,CAAC,MAAM,EAAE;gBACrB,UAAU,CAAC,MAAM,CAAC,KAA6B,CAAC,CAAA;aACjD;YACD,MAAK;SACN;QAED,KAAK,yCAAkB,CAAC,SAAS,CAAC,CAAC;YACjC,IAAI,UAAU,CAAC,SAAS,EAAE;gBACxB,UAAU,CAAC,SAAS,CAAC,KAAgC,CAAC,CAAA;aACvD;YACD,MAAK;SACN;QAED;YACE,MAAM,IAAI,KAAK,CAAC,gBAAgB,KAAK,CAAC,IAAI,EAAE,CAAC,CAAA;KAChD;AACH,CAAC;AA1BD,wDA0BC","sourcesContent":["import { ContainedGroupField } from './contained-group-field'\nimport { ContainedSimpleField } from './contained-simple-field'\nimport { ContainedComponentField } from './contained-component-field'\nimport { ContainedField } from './contained-field'\nimport { IContainedFieldDispatcher } from './contained-field-dispatcher'\nimport { ContainedFieldType } from './contained-field-type'\n\nexport function dispatchContainedField (field: ContainedField, dispatcher: IContainedFieldDispatcher): void {\n  switch (field.type) {\n    case ContainedFieldType.Group: {\n      if (dispatcher.group) {\n        dispatcher.group(field as ContainedGroupField)\n      }\n      break\n    }\n\n    case ContainedFieldType.Simple: {\n      if (dispatcher.simple) {\n        dispatcher.simple(field as ContainedSimpleField)\n      }\n      break\n    }\n\n    case ContainedFieldType.Component: {\n      if (dispatcher.component) {\n        dispatcher.component(field as ContainedComponentField)\n      }\n      break\n    }\n\n    default:\n      throw new Error(`unknown type ${field.type}`)\n  }\n}\n"]}