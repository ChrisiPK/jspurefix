{"version":3,"file":"fixml-session.js","sourceRoot":"","sources":["../../../src/transport/fixml/fixml-session.ts"],"names":[],"mappings":";;;AAEA,uDAAoE;AACpE,uCAAoC;AACpC,wDAAmD;AACnD,4DAAuD;AAEvD,MAAsB,YAAa,SAAQ,wBAAU;IAEnD,YAAuC,MAAoB;QACzD,KAAK,CAAC,MAAM,CAAC,CAAA;QADwB,WAAM,GAAN,MAAM,CAAc;QAEzD,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAA;QAClC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAA;QACjC,IAAI,CAAC,iBAAiB,GAAG,SAAS,CAAA;IACpC,CAAC;IAES,KAAK,CAAE,OAAe,EAAE,IAAa;QAE7C,QAAQ,OAAO,EAAE;YACf,KAAK,SAAS,CAAC;YACf,KAAK,SAAS,CAAC,CAAC;gBACd,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;gBAChC,MAAK;aACN;YAED,OAAO,CAAC,CAAC;gBACP,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,IAAI,CAAC,CAAA;gBACnC,MAAK;aACN;SACF;IACH,CAAC;IAES,YAAY,CAAE,OAAe,EAAE,IAAa;QACpD,QAAQ,OAAO,EAAE;YACf,KAAK,SAAS,CAAC,CAAC;gBACd,MAAM,OAAO,GAAW,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;gBACnD,QAAQ,OAAO,EAAE;oBACf,KAAK,4BAAe,CAAC,SAAS,CAAC,CAAC;wBAC9B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;wBACpB,MAAK;qBACN;oBAED,KAAK,4BAAe,CAAC,UAAU,CAAC,CAAC;wBAC/B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;wBACrB,MAAK;qBACN;iBACF;gBACD,MAAK;aACN;YAED,KAAK,SAAS,CAAC,CAAC;gBACd,MAAM,UAAU,GAAW,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAA;gBACtD,QAAQ,UAAU,EAAE;oBAClB,KAAK,uBAAU,CAAC,QAAQ,CAAC,CAAC;wBACxB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAA;wBACpB,MAAK;qBACN;oBAED,KAAK,uBAAU,CAAC,WAAW,CAAC,CAAC;wBAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAA;wBACrB,MAAK;qBACN;iBACF;gBACD,MAAK;aACN;SACF;IACH,CAAC;IAEO,SAAS,CAAE,IAAa;QAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAA;QACjC,MAAM,KAAK,GAAG,IAAI,CAAC,YAAY,CAAA;QAC/B,KAAK,CAAC,KAAK,GAAG,4BAAY,CAAC,uBAAuB,CAAA;QAClD,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAM,CAAC,YAAY,CAAC,CAAA;QACrD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,KAAK,GAAW,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAA;YACjD,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAA;SAC7D;QACD,MAAM,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAA;QACvC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;IACpB,CAAC;CACF;AAzED,oCAyEC","sourcesContent":["import { MsgView } from '../../buffer'\nimport { IJsFixConfig } from '../../config'\nimport { UserRequestType, UserStatus } from '../../types/FIXML50SP2'\nimport { MsgTag } from '../../types'\nimport { FixSession } from '../session/fix-session'\nimport { SessionState } from '../session/session-state'\n\nexport abstract class FixmlSession extends FixSession {\n\n  protected constructor (public readonly config: IJsFixConfig) {\n    super(config)\n    this.requestLogoutType = 'UserReq'\n    this.requestLogonType = 'UserReq'\n    this.respondLogoutType = 'UserRsp'\n  }\n\n  protected onMsg (msgType: string, view: MsgView): void {\n\n    switch (msgType) {\n      case 'UserReq':\n      case 'UserRsp': {\n        this.onSessionMsg(msgType, view)\n        break\n      }\n\n      default: {\n        this.checkForwardMsg(msgType, view)\n        break\n      }\n    }\n  }\n\n  protected onSessionMsg (msgType: string, view: MsgView): void {\n    switch (msgType) {\n      case 'UserReq': {\n        const reqType: number = view.getTyped('UserReqTyp')\n        switch (reqType) {\n          case UserRequestType.LogOnUser: {\n            this.peerLogon(view)\n            break\n          }\n\n          case UserRequestType.LogOffUser: {\n            this.peerLogout(view)\n            break\n          }\n        }\n        break\n      }\n\n      case 'UserRsp': {\n        const userStatus: number = view.getTyped('UserStatus')\n        switch (userStatus) {\n          case UserStatus.LoggedIn: {\n            this.peerLogon(view)\n            break\n          }\n\n          case UserStatus.NotLoggedIn: {\n            this.peerLogout(view)\n            break\n          }\n        }\n        break\n      }\n    }\n  }\n\n  private peerLogon (view: MsgView) {\n    const logger = this.sessionLogger\n    const state = this.sessionState\n    state.state = SessionState.InitiationLogonReceived\n    state.peerCompId = view.getTyped(MsgTag.SenderCompID)\n    if (this.acceptor) {\n      const reqId: string = view.getString('UserReqID')\n      this.send('UserRsp', this.config.factory.logon(reqId, true))\n    }\n    logger.info(`system ready, inform app`)\n    this.onReady(view)\n  }\n}\n"]}