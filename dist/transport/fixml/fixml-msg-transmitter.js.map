{"version":3,"file":"fixml-msg-transmitter.js","sourceRoot":"","sources":["../../../src/transport/fixml/fixml-msg-transmitter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAEA,wDAAmD;AAEnD,uCAA6C;AAC7C,uDAAkD;AAI3C,IAAM,mBAAmB,GAAzB,MAAM,mBAAoB,SAAQ,gCAAc;IAGrD,YAA4D,MAAoB;QAC9E,KAAK,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAgB,oBAAQ,CAAC,cAAc,CAAC,EAAE,MAAM,CAAC,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC,CAAA;QAD5D,WAAM,GAAN,MAAM,CAAc;QAE9E,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAe,oBAAQ,CAAC,UAAU,CAAC,CAAA;IACnF,CAAC;IAEM,aAAa,CAAE,OAAe,EAAE,GAAiB;QACtD,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAA;QAChE,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;SAC9B;QACD,MAAM,EAAE,GAAG,IAAI,CAAC,OAAuB,CAAA;QACvC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAA;QACnC,GAAG,CAAC,cAAc,GAAG,OAAO,CAAC,MAAM,EAAE,CAAA;QACrC,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAA;IACzB,CAAC;CACF,CAAA;AAlBY,mBAAmB;IAD/B,IAAA,qBAAU,GAAE;IAIG,WAAA,IAAA,iBAAM,EAAC,oBAAQ,CAAC,YAAY,CAAC,CAAA;;GAHhC,mBAAmB,CAkB/B;AAlBY,kDAAmB","sourcesContent":["import { FixmlEncoder } from '../../buffer/fixml'\nimport { IJsFixConfig } from '../../config'\nimport { MsgTransmitter } from '../msg-transmitter'\nimport { ILooseObject } from '../../collections/collection'\nimport { inject, injectable } from 'tsyringe'\nimport { DITokens } from '../../runtime/di-tokens'\nimport { ElasticBuffer } from '../../buffer'\n\n@injectable()\nexport class FixmlMsgTransmitter extends MsgTransmitter {\n  public time: Date\n\n  constructor (@inject(DITokens.IJsFixConfig) public readonly config: IJsFixConfig) {\n    super(config.sessionContainer.resolve<ElasticBuffer>(DITokens.TransmitBuffer), config.definitions, config.description)\n    this.encoder = config.sessionContainer.resolve<FixmlEncoder>(DITokens.MsgEncoder)\n  }\n\n  public encodeMessage (msgType: string, obj: ILooseObject): void {\n    const adapter = this.config.description.application.http.adapter\n    if (adapter) {\n      adapter.beginMessage(msgType)\n    }\n    const fe = this.encoder as FixmlEncoder\n    const factory = this.config.factory\n    obj.StandardHeader = factory.header()\n    fe.encode(obj, msgType)\n  }\n}\n"]}