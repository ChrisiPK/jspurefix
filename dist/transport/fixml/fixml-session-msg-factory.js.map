{"version":3,"file":"fixml-session-msg-factory.js","sourceRoot":"","sources":["../../../src/transport/fixml/fixml-session-msg-factory.ts"],"names":[],"mappings":";;;AAEA,uCAAqC;AACrC,4EAAoF;AAEpF,uDAM+B;AAE/B,MAAa,sBAAuB,SAAQ,0CAAkB;IAE5D,YAAsB,WAAgC,EAAE,UAAyB,IAAI;QACnF,KAAK,CAAC,WAAW,EAAE,OAAO,CAAC,CAAA;QADP,gBAAW,GAAX,WAAW,CAAqB;IAEtD,CAAC;IAEM,KAAK,CAAE,gBAAwB,EAAE,EAAE,aAAsB,KAAK;QACnE,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,UAAU,CAAC,CAAA;IACnD,CAAC;IAEM,MAAM,CAAE,OAAe,EAAE,IAAY;QAC1C,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,KAAK,SAAS,CAAC,CAAA;IACzD,CAAC;IAEM,MAAM,CAAE,OAAe,EAAE,SAAiB,CAAC,EAAE,OAAa,IAAI,IAAI,EAAE,EAAE,YAAuC;QAClH,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAA;QACpC,MAAM,CAAC,GAAoB;YACzB,YAAY,EAAE,WAAW,CAAC,YAAY;YACtC,YAAY,EAAE,WAAW,CAAC,YAAY;YACtC,WAAW,EAAE,WAAW,CAAC,WAAW;YACpC,WAAW,EAAE,WAAW,CAAC,WAAW;SAClB,CAAA;QACpB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,gBAAgB,CAAC,CAAA;IACzC,CAAC;IAEO,UAAU,CAAE,aAAqB,EAAE,UAAmB;QAC5D,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAA;QACpC,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,CAAC,GAAiB;gBACtB,QAAQ,EAAE,WAAW,CAAC,QAAQ;gBAC9B,QAAQ,EAAE,WAAW,CAAC,QAAQ;gBAC9B,aAAa,EAAE,aAAa;gBAC5B,eAAe,EAAE,4BAAe,CAAC,SAAS;aAC3B,CAAA;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,eAAO,CAAC,KAAK,CAAC,CAAA;SACrC;aAAM;YACL,MAAM,CAAC,GAAkB;gBACvB,QAAQ,EAAE,WAAW,CAAC,QAAQ;gBAC9B,aAAa,EAAE,aAAa;gBAC5B,UAAU,EAAE,uBAAU,CAAC,QAAQ;aACf,CAAA;YAClB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,eAAO,CAAC,KAAK,CAAC,CAAA;SACrC;IACH,CAAC;IAEO,WAAW,CAAE,aAAqB,EAAE,UAAmB;QAC7D,IAAI,CAAC,UAAU,EAAE;YACf,MAAM,CAAC,GAAiB;gBACtB,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;gBACnC,aAAa,EAAE,aAAa;gBAC5B,eAAe,EAAE,4BAAe,CAAC,UAAU;aAC5B,CAAA;YACjB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,eAAO,CAAC,MAAM,CAAC,CAAA;SACtC;aAAM;YACL,MAAM,CAAC,GAAkB;gBACvB,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ;gBACnC,aAAa,EAAE,aAAa;gBAC5B,UAAU,EAAE,uBAAU,CAAC,WAAW;aAClB,CAAA;YAClB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,eAAO,CAAC,MAAM,CAAC,CAAA;SACtC;IACH,CAAC;CACF;AA9DD,wDA8DC","sourcesContent":["import { ISessionDescription } from '../session/session-description'\nimport { ILooseObject } from '../../collections/collection'\nimport { MsgType } from '../../types'\nimport { ASessionMsgFactory, ObjectMutator } from '../session/a-session-msg-factory'\n\nimport {\n  IStandardHeader,\n  IUserRequest,\n  IUserResponse,\n  UserRequestType,\n  UserStatus\n} from '../../types/FIXML50SP2'\n\nexport class FixmlSessionMsgFactory extends ASessionMsgFactory {\n\n  constructor (readonly description: ISessionDescription, mutator: ObjectMutator = null) {\n    super(description, mutator)\n  }\n\n  public logon (userRequestId: string = '', isResponse: boolean = false): ILooseObject {\n    return this.fixmlLogon(userRequestId, isResponse)\n  }\n\n  public logout (msgType: string, text: string): ILooseObject {\n    return this.fixmlLogout(msgType, msgType !== 'UserReq')\n  }\n\n  public header (msgType: string, seqNum: number = 0, time: Date = new Date(), overrideData?: Partial<IStandardHeader>): ILooseObject {\n    const description = this.description\n    const o: IStandardHeader = {\n      SenderCompID: description.SenderCompId,\n      TargetCompID: description.TargetCompID,\n      SenderSubID: description.SenderSubID,\n      TargetSubID: description.TargetSubID\n    } as IStandardHeader\n    return this.mutate(o, 'StandardHeader')\n  }\n\n  private fixmlLogon (userRequestId: string, isResponse: boolean): ILooseObject {\n    const description = this.description\n    if (!isResponse) {\n      const o: IUserRequest = {\n        Username: description.Username,\n        Password: description.Password,\n        UserRequestID: userRequestId,\n        UserRequestType: UserRequestType.LogOnUser\n      } as IUserRequest\n      return this.mutate(o, MsgType.Logon)\n    } else {\n      const o: IUserResponse = {\n        Username: description.Username,\n        UserRequestID: userRequestId,\n        UserStatus: UserStatus.LoggedIn\n      } as IUserResponse\n      return this.mutate(o, MsgType.Logon)\n    }\n  }\n\n  private fixmlLogout (userRequestId: string, isResponse: boolean): ILooseObject {\n    if (!isResponse) {\n      const o: IUserRequest = {\n        Username: this.description.Username,\n        UserRequestID: userRequestId,\n        UserRequestType: UserRequestType.LogOffUser\n      } as IUserRequest\n      return this.mutate(o, MsgType.Logout)\n    } else {\n      const o: IUserResponse = {\n        Username: this.description.Username,\n        UserRequestID: userRequestId,\n        UserStatus: UserStatus.NotLoggedIn\n      } as IUserResponse\n      return this.mutate(o, MsgType.Logout)\n    }\n  }\n}\n"]}