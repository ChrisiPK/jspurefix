{"version":3,"file":"http-acceptor-listener.js","sourceRoot":"","sources":["../../../src/transport/http/http-acceptor-listener.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAEA,mDAA8C;AAE9C,uCAA6C;AAC7C,uDAAkD;AAElD,8CAAyC;AAGlC,IAAM,oBAAoB,GAA1B,MAAM,oBAAqB,SAAQ,sBAAS;IACjD,YAA4D,MAAoB;QAC9E,KAAK,CAAC,MAAM,CAAC,CAAA;QAD6C,WAAM,GAAN,MAAM,CAAc;IAEhF,CAAC;IACD,KAAK;QACH,OAAO,IAAI,OAAO,CAAM,CAAO,MAAM,EAAE,MAAM,EAAE,EAAE;YAC/C,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,CAAA;YACxD,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAA;YACrD,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,oBAAQ,CAAC,UAAU,CAAC,EAAE;gBACvD,MAAM,CAAC,IAAI,KAAK,CAAC,yCAAyC,oBAAQ,CAAC,UAAU,oBAAoB,CAAC,CAAC,CAAA;aACpG;YACD,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;YACxB,MAAM,QAAQ,GAAgB,IAAI,4BAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;YAC3D,QAAQ,CAAC,EAAE,CAAC,WAAW,EAAE,CAAC,CAAe,EAAE,EAAE;gBAC3C,MAAM,CAAC,IAAI,CAAC,wCAAwC,oBAAQ,CAAC,UAAU,GAAG,CAAC,CAAA;gBAC3E,MAAM,eAAe,GAAG,gBAAgB,CAAC,OAAO,CAAa,oBAAQ,CAAC,UAAU,CAAC,CAAA;gBACjF,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBAC/B,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;oBACnB,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE;wBAClB,MAAM,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAA;wBAC/B,MAAM,CAAC,IAAI,CAAC,CAAA;oBACd,CAAC,CAAC,CAAA;gBACJ,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAQ,EAAE,EAAE;oBACpB,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;oBACf,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAA;oBACpB,MAAM,CAAC,CAAC,CAAC,CAAA;gBACX,CAAC,CAAC,CAAA;YACJ,CAAC,CAAC,CAAA;YACF,QAAQ,CAAC,MAAM,EAAE,CAAA;QACnB,CAAC,CAAA,CAAC,CAAA;IACJ,CAAC;CACF,CAAA;AA/BY,oBAAoB;IADhC,IAAA,qBAAU,GAAE;IAEG,WAAA,IAAA,iBAAM,EAAC,oBAAQ,CAAC,YAAY,CAAC,CAAA;;GADhC,oBAAoB,CA+BhC;AA/BY,oDAAoB","sourcesContent":["import { IJsFixConfig } from '../../config'\nimport { FixAcceptor } from '../fix-acceptor'\nimport { HttpAcceptor } from './http-acceptor'\nimport { MsgTransport } from '../factory'\nimport { inject, injectable } from 'tsyringe'\nimport { DITokens } from '../../runtime/di-tokens'\nimport { FixSession } from '../session/fix-session'\nimport { FixEntity } from '../fix-entity'\n\n@injectable()\nexport class HttpAcceptorListener extends FixEntity {\n  constructor (@inject(DITokens.IJsFixConfig) public readonly config: IJsFixConfig) {\n    super(config)\n  }\n  start (): Promise<any> {\n    return new Promise<any>(async (accept, reject) => {\n      const logger = this.config.logFactory.logger('acceptor')\n      const sessionContainer = this.config.sessionContainer\n      if (!sessionContainer.isRegistered(DITokens.FixSession)) {\n        reject(new Error(`application must register a DI token '${DITokens.FixSession}' - see src/sample`))\n      }\n      logger.info('starting.')\n      const acceptor: FixAcceptor = new HttpAcceptor(this.config)\n      acceptor.on('transport', (t: MsgTransport) => {\n        logger.info(`creates new transport using DI token ${DITokens.FixSession}.`)\n        const acceptorSession = sessionContainer.resolve<FixSession>(DITokens.FixSession)\n        acceptorSession.run(t).then(() => {\n          logger.info('ends')\n          acceptor.close(() => {\n            logger.info('acceptor closed.')\n            accept(true)\n          })\n        }).catch((e: Error) => {\n          logger.error(e)\n          logger.info(e.stack)\n          reject(e)\n        })\n      })\n      acceptor.listen()\n    })\n  }\n}\n"]}